/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

// Proxy for reference eSpace with name UserPermissions and key Cg5aHYi3pEeMPnN0bnq7Dw
using System;
using System.Data;
using System.Reflection;
using System.Collections;
using System.Runtime.Serialization;
using OutSystems.ObjectKeys;
using OutSystems.RuntimeCommon;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using System.Xml;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using System.Web.UI;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.RuntimePlatform.Web;
using ssCaseConferencing;
namespace ssCaseConferencing {
	/// <summary>
	/// Class: RsseSpaceUserPermissions
	/// </summary>
	public class RsseSpaceUserPermissions {
		protected static int _maxExtensionLogsPerRequest = OutSystems.HubEdition.RuntimePlatform.Settings.GetInt(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Log_MaxLogsPerRequest_Extension);
		public static void MssOnSessionStart(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssUserPermissions.Global.eSpaceId;
				if (RuntimePlatformUtils.TestAndSetProducerSession("UserPermissions")) {
					ssUserPermissions.Actions.ActionOnSessionStart(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}


		public static void MssUserCheck(HeContext heContext, int inParamUserId, int inParamApplicationSectionId, out int outParamPermissionType) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssUserPermissions.Global.eSpaceId;
				RsseSpaceUserPermissions.MssOnSessionStart(heContext);
				ssUserPermissions.Actions.ActionUserCheck(heContext, inParamUserId, inParamApplicationSectionId, out outParamPermissionType);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}


		public static void MssLDAPSearchforUsersandGroups(HeContext heContext, string inParamUserName) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssUserPermissions.Global.eSpaceId;
				RsseSpaceUserPermissions.MssOnSessionStart(heContext);
				ssUserPermissions.Actions.ActionLDAPSearchforUsersandGroups(heContext, inParamUserName);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}


		public sealed partial class ENPermissionTypeEntity {
			public static string ViewName(int? tenant, string locale) {
				return ssUserPermissions.ENPermissionTypeEntity.ViewName(tenant, locale);
			}
			public const int eSpaceId = ssUserPermissions.Global.eSpaceId;
		} // ENPermissionTypeEntity
		partial class ENPermissionTypeEntity {


			public static IRecord GetRecordById(int id) {
				IRecord rec = Factory.FactoryENPermissionTypeEntityRecordSingleton.CreateENPermissionTypeEntityRecord();
				rec.FillFromOther(ssUserPermissions.ENPermissionTypeEntity.GetRecordById(id));
				return rec;
			}

			public static IRecord GetRecordByName(string name) {
				IRecord rec = Factory.FactoryENPermissionTypeEntityRecordSingleton.CreateENPermissionTypeEntityRecord();
				rec.FillFromOther(ssUserPermissions.ENPermissionTypeEntity.GetRecordByName(name));
				return rec;
			}

			public static IRecord GetRecordByKey(ObjectKey key) {
				IRecord rec = Factory.FactoryENPermissionTypeEntityRecordSingleton.CreateENPermissionTypeEntityRecord();
				rec.FillFromOther(ssUserPermissions.ENPermissionTypeEntity.GetRecordByKey(key));
				return rec;
			}
		} // ENPermissionTypeEntity;

		public sealed partial class ENRolePermissionsEntity {
			public static string ViewName(int? tenant, string locale) {
				return ssUserPermissions.ENRolePermissionsEntity.ViewName(tenant, locale);
			}
			public const int eSpaceId = ssUserPermissions.Global.eSpaceId;
		} // ENRolePermissionsEntity
		public sealed partial class ENApplicationPermissionEntity {
			public static string ViewName(int? tenant, string locale) {
				return ssUserPermissions.ENApplicationPermissionEntity.ViewName(tenant, locale);
			}
			public const int eSpaceId = ssUserPermissions.Global.eSpaceId;
		} // ENApplicationPermissionEntity
		partial class ENApplicationPermissionEntity {


			public static IRecord GetRecordById(int id) {
				IRecord rec = Factory.FactoryENApplicationPermissionEntityRecordSingleton.CreateENApplicationPermissionEntityRecord();
				rec.FillFromOther(ssUserPermissions.ENApplicationPermissionEntity.GetRecordById(id));
				return rec;
			}

			public static IRecord GetRecordByName(string name) {
				IRecord rec = Factory.FactoryENApplicationPermissionEntityRecordSingleton.CreateENApplicationPermissionEntityRecord();
				rec.FillFromOther(ssUserPermissions.ENApplicationPermissionEntity.GetRecordByName(name));
				return rec;
			}

			public static IRecord GetRecordByKey(ObjectKey key) {
				IRecord rec = Factory.FactoryENApplicationPermissionEntityRecordSingleton.CreateENApplicationPermissionEntityRecord();
				rec.FillFromOther(ssUserPermissions.ENApplicationPermissionEntity.GetRecordByKey(key));
				return rec;
			}
		} // ENApplicationPermissionEntity;


		public interface IENPermissionTypeEntityRecordTypeFactory {
			IRecord CreateENPermissionTypeEntityRecord();
		}
		public interface IENApplicationPermissionEntityRecordTypeFactory {
			IRecord CreateENApplicationPermissionEntityRecord();
		}

		public class Factory {
			public static IENPermissionTypeEntityRecordTypeFactory FactoryENPermissionTypeEntityRecordSingleton;
			public static IENApplicationPermissionEntityRecordTypeFactory FactoryENApplicationPermissionEntityRecordSingleton;
		}
		public class DefaultValues {
			public static int ReferenceEntity_RolePermissions_ReferenceEntityAttribute_RoleId {
				get {
					return ssUserPermissions.DefaultValues.ReferenceEntity_RolePermissions_ReferenceEntityAttribute_RoleId; 
				}
			}
			public static int ReferenceEntity_RolePermissions_ReferenceEntityAttribute_ApplicationSection {
				get {
					return ssUserPermissions.DefaultValues.ReferenceEntity_RolePermissions_ReferenceEntityAttribute_ApplicationSection; 
				}
			}
			public static int ReferenceEntity_RolePermissions_ReferenceEntityAttribute_PermissionType {
				get {
					return ssUserPermissions.DefaultValues.ReferenceEntity_RolePermissions_ReferenceEntityAttribute_PermissionType; 
				}
			}
			public static int ReferenceEntity_RolePermissions_ReferenceEntityAttribute_CreatedBy {
				get {
					return ssUserPermissions.DefaultValues.ReferenceEntity_RolePermissions_ReferenceEntityAttribute_CreatedBy; 
				}
			}
			public static int ReferenceEntity_ApplicationPermission_ReferenceEntityAttribute_ParentId {
				get {
					return ssUserPermissions.DefaultValues.ReferenceEntity_ApplicationPermission_ReferenceEntityAttribute_ParentId; 
				}
			}
			public static int ReferenceActionFolder_CheckPermission_ReferenceActionInsideFolder_UserCheck_Variables_ReferenceGenericInputParameter_UserId {
				get {
					return ssUserPermissions.DefaultValues.ReferenceActionFolder_CheckPermission_ReferenceActionInsideFolder_UserCheck_Variables_ReferenceGenericInputParameter_UserId; 
				}
			}
			public static int ReferenceActionFolder_CheckPermission_ReferenceActionInsideFolder_UserCheck_Variables_ReferenceGenericInputParameter_ApplicationSectionId {
				get {
					return ssUserPermissions.DefaultValues.ReferenceActionFolder_CheckPermission_ReferenceActionInsideFolder_UserCheck_Variables_ReferenceGenericInputParameter_ApplicationSectionId; 
				}
			}
			public static int ReferenceActionFolder_CheckPermission_ReferenceActionInsideFolder_UserCheck_Variables_ReferenceGenericOutputParameter_PermissionType {
				get {
					return ssUserPermissions.DefaultValues.ReferenceActionFolder_CheckPermission_ReferenceActionInsideFolder_UserCheck_Variables_ReferenceGenericOutputParameter_PermissionType; 
				}
			}
		}
	}
}
