/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

// Proxy for reference eSpace with name ForSkillsConnector and key hud6ms9pl0ee40Ze_Sr8Xg
using System;
using System.Data;
using System.Reflection;
using System.Collections;
using System.Runtime.Serialization;
using OutSystems.ObjectKeys;
using OutSystems.RuntimeCommon;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using System.Xml;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using System.Web.UI;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.RuntimePlatform.Web;
using ssCaseConferencing;
namespace ssCaseConferencing {
	/// <summary>
	/// Class: RsseSpaceForSkillsConnector
	/// </summary>
	public class RsseSpaceForSkillsConnector {
		protected static int _maxExtensionLogsPerRequest = OutSystems.HubEdition.RuntimePlatform.Settings.GetInt(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Log_MaxLogsPerRequest_Extension);
		public static void MssGetForSkillsInitialAssessmentForLearner(HeContext heContext, string inParamStudentReference, out RecordList outParamForSkillsInitialAssessmentForLearner, out IRecord outParamForSkillsInitialAssessmentSummary) {
			outParamForSkillsInitialAssessmentForLearner = ssCaseConferencing.RsseSpaceForSkillsConnector.Factory.FactoryRLForSkillsInitialAssessmentRecordListSingleton.CreateRsseSpaceForSkillsConnectorRLForSkillsInitialAssessmentRecordList();
			ssForSkillsConnector.RLForSkillsInitialAssessmentRecordList _proxyoutParamForSkillsInitialAssessmentForLearner = new ssForSkillsConnector.RLForSkillsInitialAssessmentRecordList();
			outParamForSkillsInitialAssessmentSummary = ssCaseConferencing.RsseSpaceForSkillsConnector.Factory.FactoryRCForSkillsInitialAssessmentSummaryRecordSingleton.CreateRsseSpaceForSkillsConnectorRCForSkillsInitialAssessmentSummaryRecord();
			ssForSkillsConnector.RCForSkillsInitialAssessmentSummaryRecord _proxyoutParamForSkillsInitialAssessmentSummary = new ssForSkillsConnector.RCForSkillsInitialAssessmentSummaryRecord(null);
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssForSkillsConnector.Global.eSpaceId;
				RsseSpaceForSkillsConnector.MssOnSessionStart(heContext);
				ssForSkillsConnector.Actions.ActionGetForSkillsInitialAssessmentForLearner(heContext, inParamStudentReference, out _proxyoutParamForSkillsInitialAssessmentForLearner, out _proxyoutParamForSkillsInitialAssessmentSummary);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
			outParamForSkillsInitialAssessmentForLearner.FillFromOther(_proxyoutParamForSkillsInitialAssessmentForLearner);
			outParamForSkillsInitialAssessmentSummary.FillFromOther(_proxyoutParamForSkillsInitialAssessmentSummary);
		}


		public static void MssOnSessionStart(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssForSkillsConnector.Global.eSpaceId;
				if (RuntimePlatformUtils.TestAndSetProducerSession("ForSkillsConnector")) {
					ssForSkillsConnector.Actions.ActionOnSessionStart(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}


		public interface IRLForSkillsInitialAssessmentRecordListTypeFactory {
			RecordList CreateRsseSpaceForSkillsConnectorRLForSkillsInitialAssessmentRecordList();
		}
		public interface IRCForSkillsInitialAssessmentRecordTypeFactory {
			IRecord CreateRsseSpaceForSkillsConnectorRCForSkillsInitialAssessmentRecord();
		}
		public interface ISTForSkillsInitialAssessmentStructureTypeFactory {
			IRecord CreateRsseSpaceForSkillsConnectorSTForSkillsInitialAssessmentStructure();
		}
		public interface IRCForSkillsInitialAssessmentSummaryRecordTypeFactory {
			IRecord CreateRsseSpaceForSkillsConnectorRCForSkillsInitialAssessmentSummaryRecord();
		}
		public interface ISTForSkillsInitialAssessmentSummaryStructureTypeFactory {
			IRecord CreateRsseSpaceForSkillsConnectorSTForSkillsInitialAssessmentSummaryStructure();
		}


		public class Factory {
			public static ISTForSkillsInitialAssessmentStructureTypeFactory FactorySTForSkillsInitialAssessmentStructureSingleton;
			public static IRCForSkillsInitialAssessmentRecordTypeFactory FactoryRCForSkillsInitialAssessmentRecordSingleton;
			public static IRLForSkillsInitialAssessmentRecordListTypeFactory FactoryRLForSkillsInitialAssessmentRecordListSingleton;
			public static ISTForSkillsInitialAssessmentSummaryStructureTypeFactory FactorySTForSkillsInitialAssessmentSummaryStructureSingleton;
			public static IRCForSkillsInitialAssessmentSummaryRecordTypeFactory FactoryRCForSkillsInitialAssessmentSummaryRecordSingleton;
		}
		public class DefaultValues {
		}
	}
}
