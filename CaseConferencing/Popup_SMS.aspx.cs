/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.IO;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Runtime.Serialization;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Web.Caching;
using System.Text;
using System.Resources;

namespace ssCaseConferencing.Flows.FlowLearners {

	public class ScrnPopup_SMS: OSPageViewStateCompressed, IWebScreen, INegotiateTabIndexes, IBookmarkableURL {


		public ScrnPopup_SMS(): base(CaseConferencing_Properties.QuirksMode) {
		}


		/// <summary>
		/// Screen Input Parameter inParamStudentId. Description:
		/// </summary>
		public string inParamStudentId = "";
		/// <summary>
		/// Variable <code>varLcToNumber</code> that represents the Service Studio local variable
		///  <code>ToNumber</code> <p>Description: </p>
		/// </summary>
		string varLcToNumber = "";

		/// <summary>
		/// Variable <code>varLcText</code> that represents the Service Studio local variable <code>Text</code>
		///  <p>Description: </p>
		/// </summary>
		string varLcText = "";

		/// <summary>
		/// Variable <code>varLcSendToHome</code> that represents the Service Studio local variable
		///  <code>SendToHome</code> <p>Description: </p>
		/// </summary>
		bool varLcSendToHome = false;

		/// <summary>
		/// Variable <code>varLcSendToMobile</code> that represents the Service Studio local variable
		///  <code>SendToMobile</code> <p>Description: </p>
		/// </summary>
		bool varLcSendToMobile = false;

		/// <summary>
		/// Variable <code>varLcSendToNOK</code> that represents the Service Studio local variable
		///  <code>SendToNOK</code> <p>Description: </p>
		/// </summary>
		bool varLcSendToNOK = false;

		/// <summary>
		/// Variable <code>varLcSendToOther</code> that represents the Service Studio local variable
		///  <code>SendToOther</code> <p>Description: </p>
		/// </summary>
		bool varLcSendToOther = false;

		/// <summary>
		/// Variable <code>varLcOtherNumber</code> that represents the Service Studio local variable
		///  <code>OtherNumber</code> <p>Description: </p>
		/// </summary>
		string varLcOtherNumber = "";

		/// <summary>
		/// Variable wt_WebBlockInstance34
		/// </summary>
		protected ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout wt_WebBlockInstance34;
		/// <summary>
		/// Auxiliar Edit Record record variable
		/// </summary>
		RCStudentRecord ssStudentCareerAimEditRecord = new RCStudentRecord(null);

		/// <summary>
		/// Edit Record Valid Runtime Property
		/// </summary>
		public bool wtStudentCareerAimEdit_Valid() {
			bool res = true &&
			ValidationUtils.IsValid(this, "wt_CheckBox35") &&
			ValidationUtils.IsValid(this, "wt_CheckBox9") &&
			ValidationUtils.IsValid(this, "wt_CheckBox5") &&
			ValidationUtils.IsValid(this, "wt_CheckBox14") &&
			ValidationUtils.IsValid(this, "wt_Input17") &&
			ValidationUtils.IsValid(this, "wtStudentCareerAim_Notes");
			return res;
		}

		protected OutSystems.HubEdition.WebWidgets.Container wt_Container41;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container43;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container16;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container25;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container20;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container22;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container13;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_Input17ValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wt_Input17ValidatorType;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtStudentCareerAim_NotesValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtStudentCareerAim_NotesValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container46;
		/// <summary>
		/// Variable (wt_Link30) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link30;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container29;
		/// <summary>
		/// Variable (wt_Link26) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link26;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container37;


		protected override void GetBlocksCss(TextWriter writer, bool inline, HashSet<string> visited) {
			ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink.GetCss(writer, inline, visited);

		}

		protected override void GetWidgetsCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}







		protected override string GetInlineStyleSheetInclude() {
			throw new InvalidOperationException();
		}





		protected override bool PageAllowsCallbacks() {
			return true;
		}


		protected string GetRequestInfoJavaScript() {
			return GetRequestInfoJavaScript("eB3sWZvyt0SAsSPGwdYe_Q", "Popup_SMS");
		}

		protected string GetVisitCode() {
			SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
			if (session["osIsNewVisit"] != null && ((bool) session["osIsNewVisit"])
			// && !NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)
			&& RuntimePlatformUtils.IsValidRequestForVisit()) {
				return "<script type=\"text/javascript\">outsystems.internal.$.get(\"/CaseConferencing/_status.aspx\")</script>";
			}
			return "";
		}

		public string GetCallbackDebug() {
			if (Request.HttpMethod == "GET" && Request.QueryString["__CALLBACK_DEBUG"] != null && Request.QueryString["__CALLBACK_DEBUG"] != "") {
				if (Request.QueryString["__CALLBACK_DEBUG"] == OutSystems.HubEdition.RuntimePlatform.AppInfo.GetParameter(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Callback_Debug_Information_Key)) {
					return OutSystems.HubEdition.RuntimePlatform.AppInfo.GetAppInfo().GetCallbackDebugInformation();
				}
			}
			return "";
		}

		protected string GetHeadTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadTop, "eB3sWZvyt0SAsSPGwdYe_Q", "Popup_SMS");
		}

		protected string GetHeadBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadBottom, "eB3sWZvyt0SAsSPGwdYe_Q", "Popup_SMS");
		}

		protected string GetBodyTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyTop, "eB3sWZvyt0SAsSPGwdYe_Q", "Popup_SMS");
		}

		protected string GetBodyBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyBottom, "eB3sWZvyt0SAsSPGwdYe_Q", "Popup_SMS");
		}

		HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();



		static ScrnPopup_SMS() {
			htTabIndexGroups["wt_Text1"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container41"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_CheckBox35"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container2"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["RichWidgets_wt_WebBlockInstance15"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_InlineExpression27"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container43"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_CheckBox9"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container16"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["RichWidgets_wt_WebBlockInstance11"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_InlineExpression4"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container25"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_CheckBox5"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container20"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["RichWidgets_wt_WebBlockInstance8"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_InlineExpression7"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container22"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_CheckBox14"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container13"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["RichWidgets_wt_WebBlockInstance21"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Input17"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Text32"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wtStudentCareerAim_Notes"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container46"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["Hunspell_wt_WebBlockInstance18"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Link30"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container29"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["RichWidgets_wt_WebBlockInstance23"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Text12"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Link26"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container37"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Text39"] = "wtStudentCareerAimEdit-1";
		}


		RLStudentRecordList queryResGetStudentByStudentReference_outParamList = new RLStudentRecordList();
		int queryResGetStudentByStudentReference_outParamCount = 0;
		int resUserCheck_outParamPermissionType = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// UserCheck
			Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("S1Ew6xcAMkKJzXiUGmQuzQ")).ssId, out resUserCheck_outParamPermissionType);
			if ((resUserCheck_outParamPermissionType==BuiltInFunction.NullIdentifier())) {
				// Popup_Editor_Close2
				Actions.ActionPopup_Editor_Close(heContext);

			} else {
				// Query datasetGetStudentByStudentReference
				int datasetGetStudentByStudentReference_maxRecords = 0;
				queryResGetStudentByStudentReference_outParamList = FuncssPreparation.datasetGetStudentByStudentReference(heContext, datasetGetStudentByStudentReference_maxRecords, IterationMultiplicity.Never, out queryResGetStudentByStudentReference_outParamCount, inParamStudentId
				);
				varLcText = "From Cornwall College : "; // Text = "From Cornwall College : "

			}
		}


		protected override BaseAppUtils GetAppUtils() {
			return AppUtils.Instance;
		}

		protected override string OwnCssUrl {
			get {
				return ""; 
			}
		}

		protected override string OwnCssFile {
			get {
				return ""; 
			}
		}

		protected override string BasicCssUrl {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string BasicCssFile {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssUrl {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssFile {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssUrl {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssFile {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssUrl {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssFile {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssUrl {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssFile {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string ThemeCssUrl {
			get {
				return RsseSpaceThemeProvider.Themes.ThemeThemeProvider.ThemeCssUrl; 
			}
		}

		protected override string ThemeCssFile {
			get {
				return "ReferenceTheme.ThemeProvider.css"; 
			}
		}

		protected override string ThemeExtraCssUrl {
			get {
				return RsseSpaceRichWidgets.Themes.ThemeLondonFixed.ThemeExtraCssUrl; 
			}
		}

		protected override string ThemeExtraCssFile {
			get {
				return "ReferenceTheme.LondonFixed.extra.css"; 
			}
		}

		public override bool IsUsingMobileTheme {
			get {
				return false; 
			}
		}

		protected override string OwnJavascriptInclude {
			get {
				return ""; 
			}
		}

		public override string XUACompatibleOverride {
			get {
				return null; 
			}
		}

		protected void InitializeUrls() {
			Uri uri = new Uri((RuntimePlatformUtils.RequestIsSecure(Request) ? "https": "http") + Request.Url.ToString().Substring(Request.Url.Scheme.Length));
			string applicationUrl = AppUtils.Instance.getImagePath(/*internalAccess*/false,/*includeSessionIdIfNeeded*/ false);
			actionUrl = "";
			bookmarkableUrl = uri.GetLeftPart(UriPartial.Authority) + applicationUrl;
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			if ((inParamStudentId!= "")) {
				parameters.Add(new Pair<string, string>("StudentId", HttpUtility.UrlEncode(inParamStudentId, Request.ContentEncoding)));
			}
			if (Request.AppRelativeCurrentExecutionFilePath.IndexOf('/', 2) == -1) {
				AppInfo appInfo = AppInfo.GetAppInfo();
				if (appInfo != null) {
					string pageHeader = appInfo.OsContext.OsISAPIFilter.GetPage(Request);
					if (appInfo.OsContext.IsCookielessSession || (pageHeader != null && pageHeader.IndexOf('/', 1) != -1)) {
						actionUrl = applicationUrl;
					}
				}
				actionUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_SMS", parameters,/*useParamsOnlyIfNeededForRule*/ true);
			}
			bookmarkableUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_SMS", parameters,/*useParamsOnlyIfNeededForRule*/ false);

		}

		protected override void OnInit(EventArgs e) {
			HeContext heContext = AppInfo.GetAppInfo().OsContext;
			heContext.CurrentScreen = this;
			try {
				heContext.CurrentExecutionFileName = Path.GetFileName(Request.CurrentExecutionFilePath);
			} catch {}
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wt_WebBlockInstance34 = (ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout) FindControl("wt_WebBlockInstance34");
			wt_Container41 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container41");
			wt_Container2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container2");
			wt_Container43 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container43");
			wt_Container16 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container16");
			wt_Container25 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container25");
			wt_Container20 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container20");
			wt_Container22 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container22");
			wt_Container13 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container13");
			wt_Container46 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container46");
			wt_Link30 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link30");
			if (this.wt_Link30 != null) {
				this.wt_Link30.Click += new System.EventHandler(this.wt_Link30_Click);
			}
			wt_Container29 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container29");
			wt_Link26 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link26");
			if (this.wt_Link26 != null) {
				this.wt_Link26.Click += new System.EventHandler(this.wt_Link26_Click);
			}
			wt_Container37 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container37");
			Page.Error += new EventHandler(Page_Error);
			this.Load += new System.EventHandler(this.Page_Load);
			this.PreRender += new System.EventHandler(this.Page_PreRender);
		}

		public override Control FindControl(string id) {
			if (id == "wt_Text28") {
				return wt_WebBlockInstance34.wtTitle.FindControl("wt_Text28");
			}
			if (id == "wt_InlineExpression6") {
				return wt_WebBlockInstance34.wtTitle.FindControl("wt_InlineExpression6");
			}
			if (id == "wtStudentCareerAimEdit") {
				return wt_WebBlockInstance34.wtContent.FindControl("wtStudentCareerAimEdit");
			}
			if (id == "wt_EditRecordRow19") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_EditRecordRow19");
			}
			if (id == "wt_EditRecordCell38") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_EditRecordCell38");
			}
			if (id == "wt_Text1") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Text1");
			}
			if (id == "wt_EditRecordCell31") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_EditRecordCell31");
			}
			if (id == "wt_Container41") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Container41");
			}
			if (id == "wt_CheckBox35") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_CheckBox35");
			}
			if (id == "wt_Container2") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Container2");
			}
			if (id == "RichWidgets_wt_WebBlockInstance15") {
				return wt_WebBlockInstance34.wtContent.FindControl("RichWidgets_wt_WebBlockInstance15");
			}
			if (id == "wt_InlineExpression27") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_InlineExpression27");
			}
			if (id == "wt_Container43") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Container43");
			}
			if (id == "wt_CheckBox9") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_CheckBox9");
			}
			if (id == "wt_Container16") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Container16");
			}
			if (id == "RichWidgets_wt_WebBlockInstance11") {
				return wt_WebBlockInstance34.wtContent.FindControl("RichWidgets_wt_WebBlockInstance11");
			}
			if (id == "wt_InlineExpression4") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_InlineExpression4");
			}
			if (id == "wt_Container25") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Container25");
			}
			if (id == "wt_CheckBox5") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_CheckBox5");
			}
			if (id == "wt_Container20") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Container20");
			}
			if (id == "RichWidgets_wt_WebBlockInstance8") {
				return wt_WebBlockInstance34.wtContent.FindControl("RichWidgets_wt_WebBlockInstance8");
			}
			if (id == "wt_InlineExpression7") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_InlineExpression7");
			}
			if (id == "wt_Container22") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Container22");
			}
			if (id == "wt_CheckBox14") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_CheckBox14");
			}
			if (id == "wt_Container13") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Container13");
			}
			if (id == "RichWidgets_wt_WebBlockInstance21") {
				return wt_WebBlockInstance34.wtContent.FindControl("RichWidgets_wt_WebBlockInstance21");
			}
			if (id == "wt_Input17") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Input17");
			}
			if (id == "wt_EditRecordRow44") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_EditRecordRow44");
			}
			if (id == "wt_EditRecordCell36") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_EditRecordCell36");
			}
			if (id == "wt_Text32") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Text32");
			}
			if (id == "wt_EditRecordCell40") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_EditRecordCell40");
			}
			if (id == "wtStudentCareerAim_Notes") {
				return wt_WebBlockInstance34.wtContent.FindControl("wtStudentCareerAim_Notes");
			}
			if (id == "wt_EditRecordRow42") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_EditRecordRow42");
			}
			if (id == "wt_EditRecordCell24") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_EditRecordCell24");
			}
			if (id == "wt_EditRecordCell10") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_EditRecordCell10");
			}
			if (id == "wt_Container46") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Container46");
			}
			if (id == "Hunspell_wt_WebBlockInstance18") {
				return wt_WebBlockInstance34.wtContent.FindControl("Hunspell_wt_WebBlockInstance18");
			}
			if (id == "wt_Link30") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Link30");
			}
			if (id == "wt_Container29") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Container29");
			}
			if (id == "RichWidgets_wt_WebBlockInstance23") {
				return wt_WebBlockInstance34.wtContent.FindControl("RichWidgets_wt_WebBlockInstance23");
			}
			if (id == "wt_Text12") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Text12");
			}
			if (id == "wt_Link26") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Link26");
			}
			if (id == "wt_Container37") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Container37");
			}
			if (id == "wt_Text39") {
				return wt_WebBlockInstance34.wtContent.FindControl("wt_Text39");
			}

			return base.FindControl(id);
		}


		private void Page_Load(object sender, System.EventArgs e) {
			// init vars
			AppInfo appInfo = Global.App;
			if (appInfo != null) {
				heContext = appInfo.OsContext;
			}
			Response.ContentType = "text/html; charset=" + Response.ContentEncoding.WebName;
			OutSystems.HubEdition.RuntimePlatform.Web.JavaScriptManager.CheckRelativeJavaScriptPrefix(AppUtils.Instance.getImagePath());
			appInfo.IsLoadingScreen = !IsPostBack;
			if (!IsPostBack) {
				ArrayList screenParameters = (ArrayList) Global.App.OsContext.Session["CaseConferencing._ScreenParameters_Popup_SMS"];
				bool screenParametersInSession = false;
				object screenParametersKey = heContext.Session["_ScreenParametersKey"];
				if ((screenParametersKey == null || this.Key.Equals(ObjectKey.Parse(Convert.ToString(screenParametersKey)))) && screenParameters != null) {
					try {
						if (screenParameters.Count > 0) {
							object paramValue = screenParameters[0];
							if (paramValue != null) {
								inParamStudentId = (string) paramValue;
							}
						}
						screenParametersInSession = true;
					} catch (Exception parametersException) {
						ErrorLog.LogApplicationError("Failed to load Screen Input Parameters from session.", "ScreenParametersKey = " + screenParametersKey + ", Count = " + screenParameters.Count + "\r\n" + parametersException.StackTrace, heContext, "Global");
					} finally {
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_Popup_SMS"] = null;
						heContext.Session["_ScreenParametersKey"] = null;
					}
				}
				else if (Request.HttpMethod == "GET") {
					if (Request.QueryString["StudentId"] != null) {
						inParamStudentId = Request.QueryString["StudentId"];
					}
				}
				else if (Request.HttpMethod == "POST") {
					if (Request.Form["StudentId"] != null) {
						inParamStudentId = Request.Form["StudentId"];
					}
				}
			}
			if (!appInfo.IsApplicationEnabled) {
				ErrorLog.LogApplicationError(new Exception("eSpace " + appInfo.eSpaceName + " is disabled"), heContext, "Global");
				String contact = BuiltInFunction.EncodeUrl(RuntimePlatformUtils.GetAdministrationEmail());
				try {
					Server.Transfer("/customHandlers/app_offline.aspx?contact=" + contact + "&errorCode=APPLICATION_OFFLINE");
				}
				catch (System.Threading.ThreadAbortException) {}
				catch {
					Response.Redirect("/customHandlers/internalerror.aspx");
				}
			}
			InitializeUrls();
			Actions.ActionOnBeginWebRequest(heContext);
			if (!IsPostBack) {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				Preparation(heContext);
				bool bindEditRecords = !IsPostBack;
				if (bindEditRecords) {
					wtStudentCareerAimEdit_onDataBindingDataSource(this.FindControl("wtStudentCareerAimEdit"), null);
				}
				Title = "Popup SMS"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Popup_SMS", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} else {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				FetchViewState();
			}

		}

		private bool _negociateTabIndexesExecuted = false;

		private void Page_PreRender(object sender, System.EventArgs e) {
			ClientScript.RegisterArrayDeclaration("OsPage_Validators", "{}");
			if (!_negociateTabIndexesExecuted) {
				NegotiateTabIndexes();
				_negociateTabIndexesExecuted = true;
			}
			foreach(Control child in this.Controls) {
				DisableViewState(child);
			}
		}

		private void NegotiateTabIndexes() {
			short tabindex=1;
			tabindex = NegotiateTabIndexes(tabindex, true);
		}

		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}



		private void Page_Error(object sender, System.EventArgs e) {
			if (! new ssCaseConferencing.Flows.FlowLearners.ExceptionHandler(this, false).HandleException()) {
				DatabaseAccess.FreeupResources(false);
				Server.Transfer("_WebErrorPage.aspx");
			}
		}

		public override void ClearErrorHandler() {
			Error -= Page_Error;
		}

		public void CheckPermissions(HeContext heContext) {
			{
				bool check;
				ExtendedActions.CheckCaseConferencingUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportPractitionerRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSuperUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSafeGuardingLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckRegisteredRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckPLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingBackofficeRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportLeadRole(heContext, 0, out check);
				if (check) return;
			}
			throw new ExcptNotCaseConferencingUser("CaseConferencingUser role required");
		}


		public ObjectKey Key {
			get {
				return ObjectKey.Parse("eB3sWZvyt0SAsSPGwdYe_Q"); 
			}
		}

		public bool isSecure {
			get {
				return true; 
			}
		}


		public class lcvSend: VarsBag {
			/// <summary>
			/// Variable <code>varLcCommunication</code> that represents the Service Studio local variable
			///  <code>Communication</code> <p>Description: </p>
			/// </summary>
			public RCCommunicationRecord varLcCommunication = new RCCommunicationRecord(null);

			public int resCreateCommunication_outParamId = 0;

			public bool resTwilioSMS_outParamSuccess = false;
			public string resTwilioSMS_outParamErrorMessage = "";
			public string resTwilioSMS_outParamSmsId = "";

			public int resStudentLog_Create_outParamStudentLogId = 0;

			public lcvSend() {
			}
		}
		/// <summary>
		/// Action <code>CommandSend</code> that represents the Service Studio screen action <code>Send</code>
		///  <p> Description: </p>
		/// </summary>
		private bool CommandSend(HeContext heContext) {
			CheckPermissions(heContext);
			lcvSend localVars = new lcvSend();
			try {
				if ((varLcSendToOther&&(varLcOtherNumber== ""))) {
					// NoNumberFeedback
					Actions.ActionFeedback_Message(heContext, "Please enter a phone number in the \'Other\' box", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
					// Update Screen
					return true;

				} else {
					while (true) {
						if (varLcSendToHome) {
							varLcToNumber = ssStudentCareerAimEditRecord.ssENStudent.ssHomeTelephone; // ToNumber = StudentCareerAimEdit.Record.Student.HomeTelephone
							varLcSendToHome = false; // SendToHome = False

						} else {
							if (varLcSendToMobile) {
								varLcToNumber = ssStudentCareerAimEditRecord.ssENStudent.ssMobilePhone; // ToNumber = StudentCareerAimEdit.Record.Student.MobilePhone
								varLcSendToMobile = false; // SendToMobile = False

							} else {
								if (varLcSendToNOK) {
									varLcToNumber = ssStudentCareerAimEditRecord.ssENStudent.ssNextOfKinPhone; // ToNumber = StudentCareerAimEdit.Record.Student.NextOfKinPhone
									varLcSendToNOK = false; // SendToNOK = False

								} else {
									if (varLcSendToOther) {
										varLcToNumber = varLcOtherNumber; // ToNumber = OtherNumber
										varLcSendToOther = false; // SendToOther = False

									} else {
										break;

									}

								}

							}

						}
						// TwilioSMS
						Actions.ActionTwilioSMS(heContext, varLcToNumber, varLcText, Functions.rssextensionhttprequesthandler_ActionMakeAbsoluteURL(heContext, Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "TwilioCallBack", "CaseConferencing", "", "", "", "", "", "", "", "", "", "")), out localVars.resTwilioSMS_outParamSuccess, out localVars.resTwilioSMS_outParamErrorMessage, out localVars.resTwilioSMS_outParamSmsId);
						if (localVars.resTwilioSMS_outParamSuccess) {
							// Set Comm
							localVars.varLcCommunication.ssENCommunication.ssStudentId = inParamStudentId; // Communication.Communication.StudentId = StudentId
							localVars.varLcCommunication.ssENCommunication.ssTypeId = ENCommunicationTypeEntity.GetRecordByKey(ObjectKey.Parse("tsEsYi+2z0Sg3OtV7F+Jdg")).ssId; // Communication.Communication.TypeId = SMS
							localVars.varLcCommunication.ssENCommunication.ssTo = varLcToNumber; // Communication.Communication.To = ToNumber
							localVars.varLcCommunication.ssENCommunication.ssBody = varLcText; // Communication.Communication.Body = Text
							localVars.varLcCommunication.ssENCommunication.ssCreatedOn = BuiltInFunction.CurrDateTime(); // Communication.Communication.CreatedOn = CurrDateTime
							localVars.varLcCommunication.ssENCommunication.ssCreatedBy = ((int) Global.App.OsContext.Session["UserID"]); // Communication.Communication.CreatedBy = UserID
							localVars.varLcCommunication.ssENCommunication.ssMsgId = localVars.resTwilioSMS_outParamSmsId; // Communication.Communication.MsgId = TwilioSMS.SmsId
							// CreateCommunication
							ExtendedActions.CreateCommunication(heContext, localVars.varLcCommunication, out localVars.resCreateCommunication_outParamId);
							// StudentLog_Create
							Actions.ActionStudentLog_Create(heContext, inParamStudentId, ((int) Global.App.OsContext.Session["UserID"]), varLcText, ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("pK8b45qqpk6FbvMyj492lQ")).ssLogType, varLcText, BuiltInFunction.NullTextIdentifier(), false, 0, ("Text sent to " +varLcToNumber), "", 0, localVars.resCreateCommunication_outParamId, "", 0, out localVars.resStudentLog_Create_outParamStudentLogId);
							// Audit
							ExtendedActions.Audit(heContext, ((((varLcToNumber+ " - ") +localVars.resTwilioSMS_outParamSmsId) + " CB: ") +Functions.rssextensionhttprequesthandler_ActionMakeAbsoluteURL(heContext, Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "TwilioCallBack", "CaseConferencing", "", "", "", "", "", "", "", "", "", ""))), "SMSSent");

						} else {
							// ErrorFeedback
							Actions.ActionFeedback_Message(heContext, (((BuiltInFunction.Index(localVars.resTwilioSMS_outParamErrorMessage, "violates a blacklist rule", 0, false, true) >0)) ?("This person has requested not to receive any SMS messages. Message not sent."):(localVars.resTwilioSMS_outParamErrorMessage)), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
							// Update Screen
							return true;

						}
					}
					// Popup_Editor_Notify
					Actions.ActionPopup_Editor_Notify(heContext, "SMS");
					// Popup_Editor_Close
					Actions.ActionPopup_Editor_Close(heContext);
					// Update Screen
					return true;

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandClose</code> that represents the Service Studio screen action
		///  <code>Close</code> <p> Description: </p>
		/// </summary>
		private bool CommandClose(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Popup_Editor_Close
				Actions.ActionPopup_Editor_Close(heContext);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// wt_WebBlockInstance34 Functions
		/// </summary>
		public void webBlck_WebBlockInstance34_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout widget = (ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout) sender;
			widget.inParamWidth = 550;
		}
		/// <summary>
		/// wt_InlineExpression6 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = bLfxBjj3c0eeaPQRF3_+cQ) Expression:
		///  GetStudentByStudentReference.List.Current.Student.Forenames + " "
		/// + GetStudentByStudentReference.List.Current.Student.Surname
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression6() {
			return ((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssForenames+ " ") +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssSurname);
		}
		/// <summary>
		/// wtStudentCareerAimEdit Functions
		/// </summary>
		public void wtStudentCareerAimEdit_onDataBindingDataSource(object sender, System.EventArgs e) {
			if (!IsPostBack) {
				ssStudentCareerAimEditRecord = queryResGetStudentByStudentReference_outParamList.CurrentRec;
			}
		}
		/// <summary>
		/// wt_Container41 Functions
		/// </summary>
		public void cnt_Container41_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container41_setInlineAttributes(sender, e);
		}
		public string cnt_Container41_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container41_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container41)
		/// </summary>
		/// <returns>The Visible State of wt_Container41</returns>
		public bool cnt_Container41_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_CheckBox35 Functions
		/// </summary>
		/// <summary>
		/// Gets the "Checked" Value of the Check Box g0mY2dbF+kyjawvJ6fTpaA
		/// </summary>
		/// <returns>The Value of the Check Box g0mY2dbF+kyjawvJ6fTpaA</returns>
		public bool chk_CheckBox35_checked_value() {
			return varLcSendToHome;
		}
		public void chk_CheckBox35_checkbox_onCheckedChanged(object sender, EventArgs e) {
			try {
				varLcSendToHome = Convert.ToBoolean(((OutSystems.HubEdition.WebWidgets.CheckBox) sender).Checked);
			} catch (Exception) {
			}
		}
		/// <summary>
		/// Gets the enabled state of component (wt_CheckBox35)
		/// </summary>
		/// <returns>The Enabled State of wt_CheckBox35</returns>
		public bool chk_CheckBox35_isEnabled() {
			return (ssStudentCareerAimEditRecord.ssENStudent.ssHomeTelephone!= ""); 
		}
		/// <summary>
		/// Gets the visible state of component (wt_CheckBox35)
		/// </summary>
		/// <returns>The Visible State of wt_CheckBox35</returns>
		public bool chk_CheckBox35_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container2 Functions
		/// </summary>
		public void cnt_Container2_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container2_setInlineAttributes(sender, e);
		}
		public string cnt_Container2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left: 20px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container2)
		/// </summary>
		/// <returns>The Visible State of wt_Container2</returns>
		public bool cnt_Container2_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance15 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance15_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("cAxZk7J+AEu6LHunYrmadQ")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression27 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = PJK9lFvHfUSppqFE1e_xnA) Expression:
		///  StudentCareerAimEdit.Record.Student.HomeTelephone
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression27() {
			return ssStudentCareerAimEditRecord.ssENStudent.ssHomeTelephone;
		}
		/// <summary>
		/// wt_Container43 Functions
		/// </summary>
		public void cnt_Container43_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container43_setInlineAttributes(sender, e);
		}
		public string cnt_Container43_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container43_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container43)
		/// </summary>
		/// <returns>The Visible State of wt_Container43</returns>
		public bool cnt_Container43_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_CheckBox9 Functions
		/// </summary>
		/// <summary>
		/// Gets the "Checked" Value of the Check Box cnHtLhNkj0+DJ1BDklCiXQ
		/// </summary>
		/// <returns>The Value of the Check Box cnHtLhNkj0+DJ1BDklCiXQ</returns>
		public bool chk_CheckBox9_checked_value() {
			return varLcSendToMobile;
		}
		public void chk_CheckBox9_checkbox_onCheckedChanged(object sender, EventArgs e) {
			try {
				varLcSendToMobile = Convert.ToBoolean(((OutSystems.HubEdition.WebWidgets.CheckBox) sender).Checked);
			} catch (Exception) {
			}
		}
		/// <summary>
		/// Gets the enabled state of component (wt_CheckBox9)
		/// </summary>
		/// <returns>The Enabled State of wt_CheckBox9</returns>
		public bool chk_CheckBox9_isEnabled() {
			return (ssStudentCareerAimEditRecord.ssENStudent.ssMobilePhone!= ""); 
		}
		/// <summary>
		/// Gets the visible state of component (wt_CheckBox9)
		/// </summary>
		/// <returns>The Visible State of wt_CheckBox9</returns>
		public bool chk_CheckBox9_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container16 Functions
		/// </summary>
		public void cnt_Container16_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container16_setInlineAttributes(sender, e);
		}
		public string cnt_Container16_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left: 20px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container16_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container16)
		/// </summary>
		/// <returns>The Visible State of wt_Container16</returns>
		public bool cnt_Container16_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance11 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance11_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("CzktVEoQIUavNdPuJna99w")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression4 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 87iNBNSzUUuoHuX5cKO_pw) Expression:
		///  StudentCareerAimEdit.Record.Student.MobilePhone
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression4() {
			return ssStudentCareerAimEditRecord.ssENStudent.ssMobilePhone;
		}
		/// <summary>
		/// wt_Container25 Functions
		/// </summary>
		public void cnt_Container25_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container25_setInlineAttributes(sender, e);
		}
		public string cnt_Container25_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container25_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container25)
		/// </summary>
		/// <returns>The Visible State of wt_Container25</returns>
		public bool cnt_Container25_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_CheckBox5 Functions
		/// </summary>
		/// <summary>
		/// Gets the "Checked" Value of the Check Box IX50BhIY40CNGQFDDap27g
		/// </summary>
		/// <returns>The Value of the Check Box IX50BhIY40CNGQFDDap27g</returns>
		public bool chk_CheckBox5_checked_value() {
			return varLcSendToNOK;
		}
		public void chk_CheckBox5_checkbox_onCheckedChanged(object sender, EventArgs e) {
			try {
				varLcSendToNOK = Convert.ToBoolean(((OutSystems.HubEdition.WebWidgets.CheckBox) sender).Checked);
			} catch (Exception) {
			}
		}
		/// <summary>
		/// Gets the enabled state of component (wt_CheckBox5)
		/// </summary>
		/// <returns>The Enabled State of wt_CheckBox5</returns>
		public bool chk_CheckBox5_isEnabled() {
			return (ssStudentCareerAimEditRecord.ssENStudent.ssNextOfKinPhone!= ""); 
		}
		/// <summary>
		/// Gets the visible state of component (wt_CheckBox5)
		/// </summary>
		/// <returns>The Visible State of wt_CheckBox5</returns>
		public bool chk_CheckBox5_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container20 Functions
		/// </summary>
		public void cnt_Container20_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container20_setInlineAttributes(sender, e);
		}
		public string cnt_Container20_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left: 20px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container20_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container20)
		/// </summary>
		/// <returns>The Visible State of wt_Container20</returns>
		public bool cnt_Container20_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance8 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance8_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("F0OdMTnS+E63CzTzGXJvyg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression7 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = qlaiEfFyokigg_m5zTF0_Q) Expression:
		///  StudentCareerAimEdit.Record.Student.NextOfKinPhone
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression7() {
			return ssStudentCareerAimEditRecord.ssENStudent.ssNextOfKinPhone;
		}
		/// <summary>
		/// wt_Container22 Functions
		/// </summary>
		public void cnt_Container22_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container22_setInlineAttributes(sender, e);
		}
		public string cnt_Container22_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container22_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container22)
		/// </summary>
		/// <returns>The Visible State of wt_Container22</returns>
		public bool cnt_Container22_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_CheckBox14 Functions
		/// </summary>
		/// <summary>
		/// Gets the "Checked" Value of the Check Box PTYqSEKeqEWPhQQjE0j0Sw
		/// </summary>
		/// <returns>The Value of the Check Box PTYqSEKeqEWPhQQjE0j0Sw</returns>
		public bool chk_CheckBox14_checked_value() {
			return varLcSendToOther;
		}
		public void chk_CheckBox14_checkbox_onCheckedChanged(object sender, EventArgs e) {
			try {
				varLcSendToOther = Convert.ToBoolean(((OutSystems.HubEdition.WebWidgets.CheckBox) sender).Checked);
			} catch (Exception) {
			}
		}
		/// <summary>
		/// Gets the enabled state of component (wt_CheckBox14)
		/// </summary>
		/// <returns>The Enabled State of wt_CheckBox14</returns>
		public bool chk_CheckBox14_isEnabled() {
			return true; 
		}
		/// <summary>
		/// Gets the visible state of component (wt_CheckBox14)
		/// </summary>
		/// <returns>The Visible State of wt_CheckBox14</returns>
		public bool chk_CheckBox14_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container13 Functions
		/// </summary>
		public void cnt_Container13_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container13_setInlineAttributes(sender, e);
		}
		public string cnt_Container13_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container13_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container13)
		/// </summary>
		/// <returns>The Visible State of wt_Container13</returns>
		public bool cnt_Container13_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance21 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance21_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("b9v0DfN+QU6EplZq0ulC1g")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Input17 Functions
		/// </summary>
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwt_Input17_input_value() {
			if (("" !=varLcOtherNumber)) {
				return varLcOtherNumber;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wt_Input17");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return varLcOtherNumber;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwt_Input17_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					varLcOtherNumber = ""; 
				} else {
					varLcOtherNumber = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				varLcOtherNumber = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wt_Input17)
		/// </summary>
		/// <returns>The Visible State of wt_Input17</returns>
		public bool inputwt_Input17_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Input17)
		/// </summary>
		/// <returns>The Enabled State of wt_Input17</returns>
		public bool inputwt_Input17_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwt_Input17)
		/// </summary>
		/// <returns>The Mandatory Value of inputwt_Input17</returns>
		public bool inputwt_Input17_isMandatory() {
			return false;
		}

		/// <summary>
		/// Gets the prompt of the input (wt_Input17)
		/// </summary>
		/// <returns>Prompt of the Input (wt_Input17)</returns>
		public string inputwt_Input17_getPrompt() {
			return "Phone number";
		}
		/// <summary>
		/// wtStudentCareerAim_Notes Functions
		/// </summary>
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtStudentCareerAim_Notes_input_value() {
			if (("" !=varLcText)) {
				return varLcText;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtStudentCareerAim_Notes");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return varLcText;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtStudentCareerAim_Notes_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					varLcText = ""; 
				} else {
					varLcText = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				varLcText = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtStudentCareerAim_Notes)
		/// </summary>
		/// <returns>The Visible State of wtStudentCareerAim_Notes</returns>
		public bool inputwtStudentCareerAim_Notes_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtStudentCareerAim_Notes)
		/// </summary>
		/// <returns>The Enabled State of wtStudentCareerAim_Notes</returns>
		public bool inputwtStudentCareerAim_Notes_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtStudentCareerAim_Notes)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtStudentCareerAim_Notes</returns>
		public bool inputwtStudentCareerAim_Notes_isMandatory() {
			return true;
		}

		/// <summary>
		/// Gets the prompt of the input (wtStudentCareerAim_Notes)
		/// </summary>
		/// <returns>Prompt of the Input (wtStudentCareerAim_Notes)</returns>
		public string inputwtStudentCareerAim_Notes_getPrompt() {
			return "Message";
		}
		/// <summary>
		/// wt_Container46 Functions
		/// </summary>
		public void cnt_Container46_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container46_setInlineAttributes(sender, e);
		}
		public string cnt_Container46_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container46_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container46)
		/// </summary>
		/// <returns>The Visible State of wt_Container46</returns>
		public bool cnt_Container46_isVisible() {
			return true;
		}

		/// <summary>
		/// Hunspell_wt_WebBlockInstance18 Functions
		/// </summary>
		public void Hunspell_webBlck_WebBlockInstance18_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink widget = (proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink) sender;
			widget.inParamTextInputId = this.FindControl("wtStudentCareerAim_Notes").ClientID;
			widget.inParamExtraStyle = "";
			widget.inParamInPopupWindow = true;
		}
		/// <summary>
		/// wt_Link30 Functions
		/// </summary>
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link30_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), true);
			if (CommandSend(heContext)) {
				doRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link30)
		/// </summary>
		/// <returns>title of the Link (wt_Link30)</returns>
		public string
		lnk_Link30_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link30)
		/// </summary>
		/// <returns>The Visible State of wt_Link30</returns>
		public bool lnk_Link30_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link30)
		/// </summary>
		/// <returns>The Enabled State of wt_Link30</returns>
		public bool lnk_Link30_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container29 Functions
		/// </summary>
		public void cnt_Container29_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container29_setInlineAttributes(sender, e);
		}
		public string cnt_Container29_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container29_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container29)
		/// </summary>
		/// <returns>The Visible State of wt_Container29</returns>
		public bool cnt_Container29_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance23 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance23_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("Cpl3iVqzzUCZj6kMrYJG6g")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Link26 Functions
		/// </summary>
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link26_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandClose(heContext)) {
				doRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link26)
		/// </summary>
		/// <returns>title of the Link (wt_Link26)</returns>
		public string
		lnk_Link26_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link26)
		/// </summary>
		/// <returns>The Visible State of wt_Link26</returns>
		public bool lnk_Link26_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link26)
		/// </summary>
		/// <returns>The Enabled State of wt_Link26</returns>
		public bool lnk_Link26_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container37 Functions
		/// </summary>
		public void cnt_Container37_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container37_setInlineAttributes(sender, e);
		}
		public string cnt_Container37_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container37_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container37)
		/// </summary>
		/// <returns>The Visible State of wt_Container37</returns>
		public bool cnt_Container37_isVisible() {
			return true;
		}



		public static class FuncCommandSend {
		}
		public static class FuncCommandClose {
		}
		public static class FuncssPreparation {

			/// <summary>
			/// Query Function "GetStudentByStudentReference" of Action "Preparation"
			/// </summary>
			public static RLStudentRecordList datasetGetStudentByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENStudent.[FORENAMES] o2, ENStudent.[SURNAME] o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, ENStudent.[HOMETELEPHONE] o14, ENStudent.[MOBILEPHONE] o15, NULL o16, NULL o17, NULL o18, NULL o19, ENStudent.[NEXTOFKINPHONE] o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27");
				fromBuilder.Append(" FROM {Student} ENStudent");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudent.[STUDENTREFERENCE] = @qpstP) AND (ENStudent.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudent.[STUDENTREFERENCE] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentRecordList outParamList = new RLStudentRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					true, false, false, true, true, true, true, true, true, true, true, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentRecordList _tmp = new RLStudentRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learners.Popup_SMS.Preparation.GetStudentByStudentReference.List");
						outParamList = (RLStudentRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.Popup_SMS.Preparation.GetStudentByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentRecordList _tmp = new RLStudentRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learners.Popup_SMS.Preparation.GetStudentByStudentReference.List");
							outParamList = (RLStudentRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.Popup_SMS.Preparation.GetStudentByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}



		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}


		public LocalState PushStack() {
			return null;
		}

		public void doRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				Preparation(heContext);

				Title = "Popup SMS"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Popup_SMS", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// Perform the partial databind
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Popup_SMS", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Ajax", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}



		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();

			#region store queryResGetStudentByStudentReference_outParamList.

			int tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList = queryResGetStudentByStudentReference_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetStudentByStudentReference_outParamList = queryResGetStudentByStudentReference_outParamList.Eof;
			ArrayList storequeryResGetStudentByStudentReference_outParamList = new ArrayList();

			// Write the needed fields of queryResGetStudentByStudentReference_outParamList to the storequeryResGetStudentByStudentReference_outParamList
			if (!queryResGetStudentByStudentReference_outParamList.Empty) {
				try {
					queryResGetStudentByStudentReference_outParamList.StartIteration();

					while (!queryResGetStudentByStudentReference_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetStudentByStudentReference_outParamList = new ArrayList();
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssForenames == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssForenames);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssSurname == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssSurname);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeTelephone == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeTelephone);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssMobilePhone == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssMobilePhone);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinPhone == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinPhone);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ChangedAttributes, new BitArray(new bool[] {
							false, true, true, false, false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, true, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.OptimizedAttributes, new BitArray(new bool[] {
							true, false, false, true, true, true, true, true, true, true, true, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, true
						}
						))));
						storequeryResGetStudentByStudentReference_outParamList.Add(tmpFieldsqueryResGetStudentByStudentReference_outParamList);
						queryResGetStudentByStudentReference_outParamList.Advance();
					}
				} finally {
					queryResGetStudentByStudentReference_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetStudentByStudentReference_outParamList", storequeryResGetStudentByStudentReference_outParamList, null);

			#endregion


			#region store queryResGetStudentByStudentReference_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetStudentByStudentReference_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetStudentByStudentReference_outParamList_eof", tmpeofqueryResGetStudentByStudentReference_outParamList, false);
			queryResGetStudentByStudentReference_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList, tmpeofqueryResGetStudentByStudentReference_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("inParamStudentId", inParamStudentId, "");
			ViewStateAttributes.SetInViewState("varLcText", varLcText, "");
			ViewStateAttributes.SetInViewState("varLcSendToHome", varLcSendToHome, false);
			ViewStateAttributes.SetInViewState("varLcSendToMobile", varLcSendToMobile, false);
			ViewStateAttributes.SetInViewState("varLcSendToNOK", varLcSendToNOK, false);
			ViewStateAttributes.SetInViewState("varLcSendToOther", varLcSendToOther, false);
			ViewStateAttributes.SetInViewState("varLcOtherNumber", varLcOtherNumber, "");
			ViewStateAttributes.SetInViewState("wtStudentCareerAimEdit_record_ssENStudent_ssHomeTelephone", ssStudentCareerAimEditRecord.ssENStudent.ssHomeTelephone, "");
			ViewStateAttributes.SetInViewState("wtStudentCareerAimEdit_record_ssENStudent_ssMobilePhone", ssStudentCareerAimEditRecord.ssENStudent.ssMobilePhone, "");
			ViewStateAttributes.SetInViewState("wtStudentCareerAimEdit_record_ssENStudent_ssNextOfKinPhone", ssStudentCareerAimEditRecord.ssENStudent.ssNextOfKinPhone, "");
			ViewStateAttributes.SetInViewState("wtStudentCareerAimEdit_record_ssENStudent_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(ssStudentCareerAimEditRecord.ssENStudent.ChangedAttributes, new BitArray(new bool[] {
				false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, true, false, false, false, false, false, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("wtStudentCareerAimEdit_record_ssENStudent_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(ssStudentCareerAimEditRecord.ssENStudent.OptimizedAttributes, new BitArray(new bool[] {
				true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, true
			}
			)))), null);
			ViewStateAttributes.SetInViewState("wt_Input17_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wt_Input17")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtStudentCareerAim_Notes_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtStudentCareerAim_Notes")).Mandatory, false);
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			try {

				#region fetch queryResGetStudentByStudentReference_outParamList.

				// Read the needed fields of queryResGetStudentByStudentReference_outParamList from storequeryResGetStudentByStudentReference_outParamList
				queryResGetStudentByStudentReference_outParamList = new RLStudentRecordList();
				ArrayList storequeryResGetStudentByStudentReference_outParamList;
				storequeryResGetStudentByStudentReference_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetStudentByStudentReference_outParamList", null);
				if (storequeryResGetStudentByStudentReference_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetStudentByStudentReference_outParamList in storequeryResGetStudentByStudentReference_outParamList) {
						if (tmpFieldsqueryResGetStudentByStudentReference_outParamList != null) {
							// Aux current record variable
							RCStudentRecord tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList = new RCStudentRecord(null);
							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssForenames = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[0] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssSurname = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[1] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssHomeTelephone = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[2] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssMobilePhone = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[3] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[3]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssNextOfKinPhone = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[4] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[4]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentByStudentReference_outParamList[5]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentByStudentReference_outParamList[6]);

							queryResGetStudentByStudentReference_outParamList.Append(tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList);
						}
					}
				}
				queryResGetStudentByStudentReference_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetStudentByStudentReference_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList;
				tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetStudentByStudentReference_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetStudentByStudentReference_outParamList;
				tmpeofqueryResGetStudentByStudentReference_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetStudentByStudentReference_outParamList_eof", false);
				queryResGetStudentByStudentReference_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList, tmpeofqueryResGetStudentByStudentReference_outParamList);

				#endregion

				inParamStudentId = (string) ViewStateAttributes.GetFromViewState("inParamStudentId", "");
				varLcText = (string) ViewStateAttributes.GetFromViewState("varLcText", "");
				varLcSendToHome = (bool) ViewStateAttributes.GetFromViewState("varLcSendToHome", false);
				varLcSendToMobile = (bool) ViewStateAttributes.GetFromViewState("varLcSendToMobile", false);
				varLcSendToNOK = (bool) ViewStateAttributes.GetFromViewState("varLcSendToNOK", false);
				varLcSendToOther = (bool) ViewStateAttributes.GetFromViewState("varLcSendToOther", false);
				varLcOtherNumber = (string) ViewStateAttributes.GetFromViewState("varLcOtherNumber", "");
				ssStudentCareerAimEditRecord.ssENStudent.ssHomeTelephone = (string) ViewStateAttributes.GetFromViewState("wtStudentCareerAimEdit_record_ssENStudent_ssHomeTelephone", "");
				ssStudentCareerAimEditRecord.ssENStudent.ssMobilePhone = (string) ViewStateAttributes.GetFromViewState("wtStudentCareerAimEdit_record_ssENStudent_ssMobilePhone", "");
				ssStudentCareerAimEditRecord.ssENStudent.ssNextOfKinPhone = (string) ViewStateAttributes.GetFromViewState("wtStudentCareerAimEdit_record_ssENStudent_ssNextOfKinPhone", "");
				ssStudentCareerAimEditRecord.ssENStudent.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtStudentCareerAimEdit_record_ssENStudent_ChangedAttributes", null));
				ssStudentCareerAimEditRecord.ssENStudent.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtStudentCareerAimEdit_record_ssENStudent_OptimizedAttributes", null));
				((IWidgetRuntimeProperties) this.FindControl("wt_Input17")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wt_Input17_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtStudentCareerAim_Notes")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtStudentCareerAim_Notes_Mandatory", false);
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}


		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			ValidationUtils.ValidateInput(this, "wt_Input17", parentEditRecord, ValidationUtils.validateTrue, validate);
			ValidationUtils.ValidateInput(this, "wtStudentCareerAim_Notes", parentEditRecord, ValidationUtils.validateTrue, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}


		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}

		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			Page_Load(null, null); this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}


		public override void DataBind() {
			base.DataBind();
			StoreViewState();
			OutSystems.HubEdition.WebWidgets.Utils.addValidationScriptsToPage(this);
		}



	}




}
