/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.IO;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Runtime.Serialization;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Web.Caching;
using System.Text;
using System.Resources;

namespace ssCaseConferencing.Flows.FlowLearnerView {

	public class ScrnLearnerDetailsRewards: OSPageViewStateCompressed, IWebScreen, INegotiateTabIndexes, IBookmarkableURL {


		public ScrnLearnerDetailsRewards(): base(CaseConferencing_Properties.QuirksMode) {
		}


		/// <summary>
		/// Screen Input Parameter inParamStudentReference. Description:
		/// </summary>
		public string inParamStudentReference = "";
		/// <summary>
		/// Screen Input Parameter inParamSessionID. Description:
		/// </summary>
		public int inParamSessionID = 0;
		/// <summary>
		/// Screen Input Parameter inParamCourseCode. Description:
		/// </summary>
		public string inParamCourseCode = "";
		/// <summary>
		/// Screen Input Parameter inParamFromLearnerList. Description:
		/// </summary>
		public bool inParamFromLearnerList = false;
		/// <summary>
		/// Variable <code>varLcVisible</code> that represents the Service Studio local variable
		///  <code>Visible</code> <p>Description: </p>
		/// </summary>
		bool varLcVisible = false;

		/// <summary>
		/// Variable wt_WebBlockInstance22
		/// </summary>
		protected ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout wt_WebBlockInstance22;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container36;
		protected OutSystems.HubEdition.WebWidgets.Container wtRewards;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container97;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container56;
		/// <summary>
		/// Variable "True" if the Widget wt_If92
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If92T;

		/// <summary>
		/// Variable "True" if the Widget wt_If92
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If92F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container43;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container82;
		protected OutSystems.HubEdition.WebWidgets.Container wtEditRewards;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container47;
		protected OutSystems.HubEdition.WebWidgets.Container wtReason;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container83;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container103;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_ComboBox86ValidatorRequired;
		protected SelectRtWidget Rt_wt_ComboBox86 = new SelectRtWidget();
		RLRewardReasonRecordList Rt_wt_ComboBox86_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.Container wtResponsible2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container17;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtRewardInputValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtRewardInputValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wtWarapperSelectRAG;
		/// <summary>
		/// Variable "True" if the Widget wt_If59
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If59T;

		/// <summary>
		/// Variable "True" if the Widget wt_If59
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If59F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container78;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container41;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container63;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container42;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container32;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container14;
		/// <summary>
		/// Variable (wt_Link70) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link70;
		/// <summary>
		/// Auxiliar Edit Record record variable
		/// </summary>
		RCRewardRecord ssEditRecordRewardRecord = new RCRewardRecord(null);

		/// <summary>
		/// Edit Record Valid Runtime Property
		/// </summary>
		public bool wtEditRecordReward_Valid() {
			bool res = true;
			return res;
		}

		protected OutSystems.HubEdition.WebWidgets.Container wt_Container111;
		private RLStudentUserRewardRewardReasonRecordList _ssRAGLastChanges_ListList = new RLStudentUserRewardRewardReasonRecordList();
		public RLStudentUserRewardRewardReasonRecordList ssRAGLastChanges_ListList {
			get {
				return _ssRAGLastChanges_ListList; 
			}
			set {
				_ssRAGLastChanges_ListList = value;
				wtRAGLastChanges_List.DataSource = value;
				ssRAGLastChanges_ListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtRAGLastChanges_List;
		public ArrayList wtRAGLastChanges_List_storage = new ArrayList();
		protected bool ssRAGLastChanges_ListList_notUsedYet = true;
		protected bool ssRAGLastChanges_ListListDoDataBind;
		protected bool ssRAGLastChanges_ListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperList2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container45;
		/// <summary>
		/// Variable "True" if the Widget wt_If66
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If66T;

		/// <summary>
		/// Variable "True" if the Widget wt_If66
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If66F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container105;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container87;
		/// <summary>
		/// Variable (wt_Link74) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link74;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container33;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container57;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container101;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container4;
		protected OutSystems.HubEdition.WebWidgets.Container wtHistoricalRewards;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container46;
		protected OutSystems.HubEdition.WebWidgets.CustomWidget wt_CustomWidget76;
		private RLStudentUserRewardRewardReasonRecordList _ssHistoricalAwardsList = new RLStudentUserRewardRewardReasonRecordList();
		public RLStudentUserRewardRewardReasonRecordList ssHistoricalAwardsList {
			get {
				return _ssHistoricalAwardsList; 
			}
			set {
				_ssHistoricalAwardsList = value;
				wtHistoricalAwards.DataSource = value;
				ssHistoricalAwardsListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtHistoricalAwards;
		public ArrayList wtHistoricalAwards_storage = new ArrayList();
		protected bool ssHistoricalAwardsList_notUsedYet = true;
		protected bool ssHistoricalAwardsListDoDataBind;
		protected bool ssHistoricalAwardsListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperList3;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container106;
		/// <summary>
		/// Variable "True" if the Widget wt_If89
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If89T;

		/// <summary>
		/// Variable "True" if the Widget wt_If89
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If89F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container25;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container51;
		/// <summary>
		/// Variable (wt_Link95) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link95;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container10;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container44;


		protected override void GetBlocksCss(TextWriter writer, bool inline, HashSet<string> visited) {
			ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted.GetCss(writer, inline, visited);

		}

		protected override void GetWidgetsCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}







		protected override string GetInlineStyleSheetInclude() {
			throw new InvalidOperationException();
		}





		protected override bool PageAllowsCallbacks() {
			return true;
		}


		protected string GetRequestInfoJavaScript() {
			return GetRequestInfoJavaScript("P7pINiAh0EKJ+Z1YPDM69Q", "LearnerDetailsRewards");
		}

		protected string GetVisitCode() {
			SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
			if (session["osIsNewVisit"] != null && ((bool) session["osIsNewVisit"])
			// && !NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)
			&& RuntimePlatformUtils.IsValidRequestForVisit()) {
				return "<script type=\"text/javascript\">outsystems.internal.$.get(\"/CaseConferencing/_status.aspx\")</script>";
			}
			return "";
		}

		public string GetCallbackDebug() {
			if (Request.HttpMethod == "GET" && Request.QueryString["__CALLBACK_DEBUG"] != null && Request.QueryString["__CALLBACK_DEBUG"] != "") {
				if (Request.QueryString["__CALLBACK_DEBUG"] == OutSystems.HubEdition.RuntimePlatform.AppInfo.GetParameter(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Callback_Debug_Information_Key)) {
					return OutSystems.HubEdition.RuntimePlatform.AppInfo.GetAppInfo().GetCallbackDebugInformation();
				}
			}
			return "";
		}

		protected string GetHeadTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadTop, "P7pINiAh0EKJ+Z1YPDM69Q", "LearnerDetailsRewards");
		}

		protected string GetHeadBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadBottom, "P7pINiAh0EKJ+Z1YPDM69Q", "LearnerDetailsRewards");
		}

		protected string GetBodyTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyTop, "P7pINiAh0EKJ+Z1YPDM69Q", "LearnerDetailsRewards");
		}

		protected string GetBodyBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyBottom, "P7pINiAh0EKJ+Z1YPDM69Q", "LearnerDetailsRewards");
		}

		HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();



		static ScrnLearnerDetailsRewards() {
		}


		RLStudentUserRewardRewardReasonRecordList queryResGetRewardsForCurrentYear_outParamList = new RLStudentUserRewardRewardReasonRecordList();
		int queryResGetRewardsForCurrentYear_outParamCount = 0;
		RCAcademicYear2Record resGetAcademicYearValues2_outParamAcademicYear = new RCAcademicYear2Record(null);
		RLStudentUserRewardRewardReasonRecordList queryResGetRewardsHistorical_outParamList = new RLStudentUserRewardRewardReasonRecordList();
		int queryResGetRewardsHistorical_outParamCount = 0;
		int resUserCheck_outParamPermissionType = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// UserCheck
			Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("lKOCEf28DEau0pkIfBpw3A")).ssId, out resUserCheck_outParamPermissionType);
			// GetAcademicYearValues2
			Actions.ActionGetAcademicYearValues2(heContext, ENAcademicYearType2Entity.GetRecordByKey(ObjectKey.Parse("8ZDe8cEZhk2DF16FIzuk9A")).ssId, "", out resGetAcademicYearValues2_outParamAcademicYear);
			// Query datasetGetRewardsForCurrentYear
			int datasetGetRewardsForCurrentYear_maxRecords = Math.Max(wtRAGLastChanges_List.StartIndex + wtRAGLastChanges_List.LineCount + 1, 0);
			queryResGetRewardsForCurrentYear_outParamList = FuncssPreparation.datasetGetRewardsForCurrentYear(heContext, datasetGetRewardsForCurrentYear_maxRecords, IterationMultiplicity.Multiple, out queryResGetRewardsForCurrentYear_outParamCount, resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssDD_MMMM_YYYY
			, inParamStudentReference
			);
			// Query datasetGetRewardsHistorical
			int datasetGetRewardsHistorical_maxRecords = Math.Max(wtHistoricalAwards.StartIndex + wtHistoricalAwards.LineCount + 1, 0);
			queryResGetRewardsHistorical_outParamList = FuncssPreparation.datasetGetRewardsHistorical(heContext, datasetGetRewardsHistorical_maxRecords, IterationMultiplicity.Multiple, out queryResGetRewardsHistorical_outParamCount, resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssDD_MMMM_YYYY
			, inParamStudentReference
			);
		}


		protected override BaseAppUtils GetAppUtils() {
			return AppUtils.Instance;
		}

		protected override string OwnCssUrl {
			get {
				return "LearnerDetailsRewards.css"; 
			}
		}

		protected override string OwnCssFile {
			get {
				return "LearnerDetailsRewards.css"; 
			}
		}

		protected override string BasicCssUrl {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string BasicCssFile {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssUrl {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssFile {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssUrl {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssFile {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssUrl {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssFile {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssUrl {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssFile {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string ThemeCssUrl {
			get {
				return RsseSpaceThemeProvider.Themes.ThemeThemeProvider.ThemeCssUrl; 
			}
		}

		protected override string ThemeCssFile {
			get {
				return "ReferenceTheme.ThemeProvider.css"; 
			}
		}

		protected override string ThemeExtraCssUrl {
			get {
				return RsseSpaceRichWidgets.Themes.ThemeLondonFixed.ThemeExtraCssUrl; 
			}
		}

		protected override string ThemeExtraCssFile {
			get {
				return "ReferenceTheme.LondonFixed.extra.css"; 
			}
		}

		public override bool IsUsingMobileTheme {
			get {
				return false; 
			}
		}

		protected override string OwnJavascriptInclude {
			get {
				return ""; 
			}
		}

		public override string XUACompatibleOverride {
			get {
				return null; 
			}
		}

		protected void InitializeUrls() {
			Uri uri = new Uri((RuntimePlatformUtils.RequestIsSecure(Request) ? "https": "http") + Request.Url.ToString().Substring(Request.Url.Scheme.Length));
			string applicationUrl = AppUtils.Instance.getImagePath(/*internalAccess*/false,/*includeSessionIdIfNeeded*/ false);
			actionUrl = "";
			bookmarkableUrl = uri.GetLeftPart(UriPartial.Authority) + applicationUrl;
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			if ((inParamStudentReference!= "")) {
				parameters.Add(new Pair<string, string>("StudentReference", HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			}
			if ((inParamSessionID!=0)) {
				parameters.Add(new Pair<string, string>("SessionID", HttpUtility.UrlEncode(Convert.ToString(inParamSessionID), Request.ContentEncoding)));
			}
			if ((inParamCourseCode!= "")) {
				parameters.Add(new Pair<string, string>("CourseCode", HttpUtility.UrlEncode(inParamCourseCode, Request.ContentEncoding)));
			}
			if ((inParamFromLearnerList!=false)) {
				parameters.Add(new Pair<string, string>("FromLearnerList", HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList), Request.ContentEncoding)));
			}
			if (Request.AppRelativeCurrentExecutionFilePath.IndexOf('/', 2) == -1) {
				AppInfo appInfo = AppInfo.GetAppInfo();
				if (appInfo != null) {
					string pageHeader = appInfo.OsContext.OsISAPIFilter.GetPage(Request);
					if (appInfo.OsContext.IsCookielessSession || (pageHeader != null && pageHeader.IndexOf('/', 1) != -1)) {
						actionUrl = applicationUrl;
					}
				}
				actionUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsRewards", parameters,/*useParamsOnlyIfNeededForRule*/ true);
			}
			bookmarkableUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsRewards", parameters,/*useParamsOnlyIfNeededForRule*/ false);

		}

		protected override void OnInit(EventArgs e) {
			HeContext heContext = AppInfo.GetAppInfo().OsContext;
			heContext.CurrentScreen = this;
			try {
				heContext.CurrentExecutionFileName = Path.GetFileName(Request.CurrentExecutionFilePath);
			} catch {}
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wt_WebBlockInstance22 = (ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout) FindControl("wt_WebBlockInstance22");
			wt_Container36 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container36");
			wtRewards = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtRewards");
			wt_Container97 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container97");
			wt_Container56 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container56");
			wt_Container43 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container43");
			wt_Container82 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container82");
			wtEditRewards = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtEditRewards");
			wt_Container47 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container47");
			wtReason = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtReason");
			wt_Container83 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container83");
			wt_Container103 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container103");
			wtResponsible2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtResponsible2");
			wt_Container17 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container17");
			wtWarapperSelectRAG = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtWarapperSelectRAG");
			wt_Container78 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container78");
			wt_Container41 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container41");
			wt_Container63 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container63");
			wt_Container42 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container42");
			wt_Container32 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container32");
			wt_Container14 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container14");
			wt_Link70 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link70");
			if (this.wt_Link70 != null) {
				this.wt_Link70.Click += new System.EventHandler(this.wt_Link70_Click);
			}
			wt_Container111 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container111");
			wtRAGLastChanges_List = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtRAGLastChanges_List");
			wtRAGLastChanges_List.StartIndexExpression = () => 0;
			wtRAGLastChanges_List.LineCountExpression = () => 999;
			if (this.wt_Link74 != null) {
				this.wt_Link74.Click += new System.EventHandler(this.wt_Link74_Click);
			}
			wt_Container101 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container101");
			wt_Container4 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container4");
			wtHistoricalRewards = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtHistoricalRewards");
			wt_Container46 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container46");
			wt_CustomWidget76 = (CustomWidget) FindControl("wt_CustomWidget76");
			wt_CustomWidget76.AddBehavior(new OutSystems.Plugin.Widgets.Label());
			{
				OutSystems.Plugin.Widgets.Label behavior = wt_CustomWidget76.GetBehavior<OutSystems.Plugin.Widgets.Label>();
				behavior.Value = () => "Rewards granted previous to Academic Year";
			}
			wtHistoricalAwards = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtHistoricalAwards");
			wtHistoricalAwards.StartIndexExpression = () => 0;
			wtHistoricalAwards.LineCountExpression = () => 999;
			if (this.wt_Link95 != null) {
				this.wt_Link95.Click += new System.EventHandler(this.wt_Link95_Click);
			}
			Page.Error += new EventHandler(Page_Error);
			this.Load += new System.EventHandler(this.Page_Load);
			this.PreRender += new System.EventHandler(this.Page_PreRender);
		}

		public override Control FindControl(string id) {
			if (id == "wt_Container36") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container36");
			}
			if (id == "wtRewards") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wtRewards");
			}
			if (id == "wt_Container97") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container97");
			}
			if (id == "wt_Container56") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container56");
			}
			if (id == "wt_Text91") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Text91");
			}
			if (id == "wt_If92") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_If92");
			}
			if (id == "wt_If92T") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_If92T");
			}
			if (id == "wt_Container43") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container43");
			}
			if (id == "wt_Container82") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container82");
			}
			if (id == "RichWidgets_wt_WebBlockInstance11") {
				return wt_WebBlockInstance22.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance11");
			}
			if (id == "wt_Text3") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Text3");
			}
			if (id == "wt_If92F") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_If92F");
			}
			if (id == "wtEditRewards") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wtEditRewards");
			}
			if (id == "wt_Container47") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container47");
			}
			if (id == "wtReason") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wtReason");
			}
			if (id == "wt_Text7") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Text7");
			}
			if (id == "wt_Container83") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container83");
			}
			if (id == "wt_Container103") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container103");
			}
			if (id == "wt_ComboBox86") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_ComboBox86");
			}
			if (id == "wtResponsible2") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wtResponsible2");
			}
			if (id == "wt_Container17") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container17");
			}
			if (id == "wtRewardInput") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wtRewardInput");
			}
			if (id == "wtWarapperSelectRAG") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wtWarapperSelectRAG");
			}
			if (id == "wt_Table9") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Table9");
			}
			if (id == "wt_TableRow39") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_TableRow39");
			}
			if (id == "wt_TableCell69") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_TableCell69");
			}
			if (id == "wt_TableRow81") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_TableRow81");
			}
			if (id == "wt_TableCell99") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_TableCell99");
			}
			if (id == "wt_If59") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_If59");
			}
			if (id == "wt_If59T") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_If59T");
			}
			if (id == "wt_Container78") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container78");
			}
			if (id == "wt_Container41") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container41");
			}
			if (id == "Hunspell_wt_WebBlockInstance37") {
				return wt_WebBlockInstance22.wtRAG.FindControl("Hunspell_wt_WebBlockInstance37");
			}
			if (id == "wt_Container63") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container63");
			}
			if (id == "wt_WebBlockInstance107") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_WebBlockInstance107");
			}
			if (id == "wt_Container42") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container42");
			}
			if (id == "wt_Container32") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container32");
			}
			if (id == "RichWidgets_wt_WebBlockInstance23") {
				return wt_WebBlockInstance22.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance23");
			}
			if (id == "wt_Text49") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Text49");
			}
			if (id == "wt_Text77") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Text77");
			}
			if (id == "wt_Container14") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container14");
			}
			if (id == "wt_Link70") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Link70");
			}
			if (id == "wt_Text18") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Text18");
			}
			if (id == "wt_If59F") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_If59F");
			}
			if (id == "wtEditRecordReward") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wtEditRecordReward");
			}
			if (id == "wt_Container111") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container111");
			}
			if (id == "wtRAGLastChanges_List") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wtRAGLastChanges_List");
			}
			if (id == "wt_Container101") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container101");
			}
			if (id == "wt_Container4") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container4");
			}
			if (id == "wtHistoricalRewards") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wtHistoricalRewards");
			}
			if (id == "wt_Container46") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_Container46");
			}
			if (id == "wt_CustomWidget76") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wt_CustomWidget76");
			}
			if (id == "wtHistoricalAwards") {
				return wt_WebBlockInstance22.wtRAG.FindControl("wtHistoricalAwards");
			}

			return base.FindControl(id);
		}


		private void Page_Load(object sender, System.EventArgs e) {
			// init vars
			AppInfo appInfo = Global.App;
			if (appInfo != null) {
				heContext = appInfo.OsContext;
			}
			Response.ContentType = "text/html; charset=" + Response.ContentEncoding.WebName;
			OutSystems.HubEdition.RuntimePlatform.Web.JavaScriptManager.CheckRelativeJavaScriptPrefix(AppUtils.Instance.getImagePath());
			appInfo.IsLoadingScreen = !IsPostBack;
			((OSPageViewState) Page).EnableResetViewState();
			if (!IsPostBack) {
				ArrayList screenParameters = (ArrayList) Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsRewards"];
				bool screenParametersInSession = false;
				object screenParametersKey = heContext.Session["_ScreenParametersKey"];
				if ((screenParametersKey == null || this.Key.Equals(ObjectKey.Parse(Convert.ToString(screenParametersKey)))) && screenParameters != null) {
					try {
						if (screenParameters.Count > 0) {
							object paramValue = screenParameters[0];
							if (paramValue != null) {
								inParamStudentReference = (string) paramValue;
							}
						}
						if (screenParameters.Count > 1) {
							object paramValue = screenParameters[1];
							if (paramValue != null) {
								inParamSessionID = (int) paramValue;
							}
						}
						if (screenParameters.Count > 2) {
							object paramValue = screenParameters[2];
							if (paramValue != null) {
								inParamCourseCode = (string) paramValue;
							}
						}
						if (screenParameters.Count > 3) {
							object paramValue = screenParameters[3];
							if (paramValue != null) {
								inParamFromLearnerList = (bool) paramValue;
							}
						}
						screenParametersInSession = true;
					} catch (Exception parametersException) {
						ErrorLog.LogApplicationError("Failed to load Screen Input Parameters from session.", "ScreenParametersKey = " + screenParametersKey + ", Count = " + screenParameters.Count + "\r\n" + parametersException.StackTrace, heContext, "Global");
					} finally {
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsRewards"] = null;
						heContext.Session["_ScreenParametersKey"] = null;
					}
				}
				else if (Request.HttpMethod == "GET") {
					if (Request.QueryString["StudentReference"] != null) {
						inParamStudentReference = Request.QueryString["StudentReference"];
					}
					if (Request.QueryString["SessionID"] != null) {
						inParamSessionID = Convert.ToInt32(Request.QueryString["SessionID"]);
					}
					if (Request.QueryString["CourseCode"] != null) {
						inParamCourseCode = Request.QueryString["CourseCode"];
					}
					if (Request.QueryString["FromLearnerList"] != null) {
						inParamFromLearnerList = (Request.QueryString["FromLearnerList"]).ToLowerInvariant() == "true";
					}
				}
				else if (Request.HttpMethod == "POST") {
					if (Request.Form["StudentReference"] != null) {
						inParamStudentReference = Request.Form["StudentReference"];
					}
					if (Request.Form["SessionID"] != null) {
						inParamSessionID = Convert.ToInt32(Request.Form["SessionID"]);
					}
					if (Request.Form["CourseCode"] != null) {
						inParamCourseCode = Request.Form["CourseCode"];
					}
					if (Request.Form["FromLearnerList"] != null) {
						inParamFromLearnerList = (Request.Form["FromLearnerList"]).ToLowerInvariant() == "true";
					}
				}
			}
			if (!appInfo.IsApplicationEnabled) {
				ErrorLog.LogApplicationError(new Exception("eSpace " + appInfo.eSpaceName + " is disabled"), heContext, "Global");
				String contact = BuiltInFunction.EncodeUrl(RuntimePlatformUtils.GetAdministrationEmail());
				try {
					Server.Transfer("/customHandlers/app_offline.aspx?contact=" + contact + "&errorCode=APPLICATION_OFFLINE");
				}
				catch (System.Threading.ThreadAbortException) {}
				catch {
					Response.Redirect("/customHandlers/internalerror.aspx");
				}
			}
			InitializeUrls();
			Actions.ActionOnBeginWebRequest(heContext);
			if (!IsPostBack) {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				Preparation(heContext);
				bool bindEditRecords = !IsPostBack;
				if (bindEditRecords) {
					wtEditRecordReward_onDataBindingDataSource(this.FindControl("wtEditRecordReward"), null);
				}
				ssRAGLastChanges_ListListDoDataBind = true;
				ssHistoricalAwardsListDoDataBind = true;
				Title = "LearnerDetailsRewards"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerDetailsRewards", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} else {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				FetchViewState();
			}

		}

		private bool _negociateTabIndexesExecuted = false;

		private void Page_PreRender(object sender, System.EventArgs e) {
			ClientScript.RegisterArrayDeclaration("OsPage_Validators", "{}");
			if (!_negociateTabIndexesExecuted) {
				NegotiateTabIndexes();
				_negociateTabIndexesExecuted = true;
			}
			foreach(Control child in this.Controls) {
				DisableViewState(child);
			}
		}

		private void NegotiateTabIndexes() {
			short tabindex=1;
			tabindex = NegotiateTabIndexes(tabindex, true);
		}

		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}



		private void Page_Error(object sender, System.EventArgs e) {
			if (! new ssCaseConferencing.Flows.FlowLearnerView.ExceptionHandler(this, false).HandleException()) {
				DatabaseAccess.FreeupResources(false);
				Server.Transfer("_WebErrorPage.aspx");
			}
		}

		public override void ClearErrorHandler() {
			Error -= Page_Error;
		}

		public void CheckPermissions(HeContext heContext) {
			{
				bool check;
				ExtendedActions.CheckSuperUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingBackofficeRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportPractitionerRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSafeGuardingLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckPLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckRegisteredRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportLeadRole(heContext, 0, out check);
				if (check) return;
			}
			throw new ExcptNotSuperUser("SuperUser role required");
		}


		public ObjectKey Key {
			get {
				return ObjectKey.Parse("P7pINiAh0EKJ+Z1YPDM69Q"); 
			}
		}

		public bool isSecure {
			get {
				return true; 
			}
		}


		public class lcvDeleteReward: VarsBag {
			public int inParamRewardId;
			public lcvDeleteReward(int inParamRewardId) {
				this.inParamRewardId = inParamRewardId;
			}
		}
		/// <summary>
		/// Action <code>CommandDeleteReward</code> that represents the Service Studio screen action
		///  <code>DeleteReward</code> <p> Description: </p>
		/// </summary>
		private bool CommandDeleteReward(HeContext heContext, int inParamRewardId) {
			CheckPermissions(heContext);
			lcvDeleteReward localVars = new lcvDeleteReward(inParamRewardId);
			try {
				// DeleteReward
				ExtendedActions.DeleteReward(heContext, localVars.inParamRewardId);
				// Refresh Widget (wtRAGLastChanges_List)
				ssRAGLastChanges_ListListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtRAGLastChanges_List, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandCancel</code> that represents the Service Studio screen action
		///  <code>Cancel</code> <p> Description: </p>
		/// </summary>
		private bool CommandCancel(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				varLcVisible = false; // Visible = False
				// Refresh Widget (wtEditRewards)
				((OSPageViewState) Page).AjaxRefresh(wtEditRewards, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandOpenEditReward</code> that represents the Service Studio screen action
		///  <code>OpenEditReward</code> <p> Description: </p>
		/// </summary>
		private bool CommandOpenEditReward(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				varLcVisible = (!varLcVisible); // Visible = notVisible
				// Refresh Widget (wtEditRewards)
				((OSPageViewState) Page).AjaxRefresh(wtEditRewards, "VerticalSlide", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvSave: VarsBag {
			public Actions.lcoStudent_GetResponsible resStudent_GetResponsible = new Actions.lcoStudent_GetResponsible();
			public int resCreateOrUpdateReward_outParamId = 0;

			public RLRewardReasonRecordList queryResGetRewardReasons_outParamList = new RLRewardReasonRecordList();
			public int queryResGetRewardReasons_outParamCount = 0;

			public int resStudentLog_Create_outParamStudentLogId = 0;

			public int resEmail1_outParamEmailId = 0;
			public lcvSave() {
			}
		}
		/// <summary>
		/// Action <code>CommandSave</code> that represents the Service Studio screen action <code>Save</code>
		///  <p> Description: </p>
		/// </summary>
		private bool CommandSave(HeContext heContext) {
			CheckPermissions(heContext);
			lcvSave localVars = new lcvSave();
			try {
				if ((ssEditRecordRewardRecord.ssENReward.ssReasonId==BuiltInFunction.NullIdentifier())) {
					// Feedback_Message2
					Actions.ActionFeedback_Message(heContext, "Reward type field required", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
					// Update Screen
					return true;

				} else {
					if ((ssEditRecordRewardRecord.ssENReward.ssDescription== "")) {
						// Feedback_Message
						Actions.ActionFeedback_Message(heContext, "Description field required", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
						// Update Screen
						return true;

					} else {
						ssEditRecordRewardRecord.ssENReward.ssStudentReference = inParamStudentReference; // EditRecordReward.Record.Reward.StudentReference = StudentReference
						ssEditRecordRewardRecord.ssENReward.ssCreatedBy = ((int) Global.App.OsContext.Session["UserID"]); // EditRecordReward.Record.Reward.CreatedBy = UserID
						ssEditRecordRewardRecord.ssENReward.ssCreatedAt = BuiltInFunction.CurrDateTime(); // EditRecordReward.Record.Reward.CreatedAt = CurrDateTime
						ssEditRecordRewardRecord.ssENReward.ssType = true; // EditRecordReward.Record.Reward.Type = True
						// CreateOrUpdateReward
						ExtendedActions.CreateOrUpdateReward(heContext, ssEditRecordRewardRecord.ChangedAttributes, ssEditRecordRewardRecord, out localVars.resCreateOrUpdateReward_outParamId);
						// Query datasetGetRewardReasons
						int datasetGetRewardReasons_maxRecords = 0;
						localVars.queryResGetRewardReasons_outParamList = FuncCommandSave.datasetGetRewardReasons(heContext, datasetGetRewardReasons_maxRecords, IterationMultiplicity.Never, out localVars.queryResGetRewardReasons_outParamCount, ssEditRecordRewardRecord.ssENReward.ssReasonId
						);
						// StudentLog_Create
						Actions.ActionStudentLog_Create(heContext, inParamStudentReference, ((int) Global.App.OsContext.Session["UserID"]), "Grant Reward", ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("CzxnmqV2mUC2ijjBepbQ_Q")).ssLogType, ssEditRecordRewardRecord.ssENReward.ssDescription, BuiltInFunction.NullTextIdentifier(), ssEditRecordRewardRecord.ssENReward.ssType, 0, localVars.queryResGetRewardReasons_outParamList.CurrentRec.ssENRewardReason.ssReason, "", 0, 0, "", 0, out localVars.resStudentLog_Create_outParamStudentLogId);
						// Student_GetResponsible
						Actions.ActionStudent_GetResponsible(heContext, inParamStudentReference, out localVars.resStudent_GetResponsible.outParamResponsibleName, out localVars.resStudent_GetResponsible.outParamResponsibleEmail);
						// Send Email
						localVars.resEmail1_outParamEmailId = EmailProcessor.SendEmailRequest("http://" + Settings.Get(Settings.Configs.InternalAddress) + AppUtils.Instance.getImagePath(/*internalAccess*/true) + "Email1.aspx?" + "LogStudentId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(localVars.resStudentLog_Create_outParamStudentLogId)), "", localVars.resStudent_GetResponsible.outParamResponsibleEmail, "", "", 0, heContext.Session.TenantId, false, EmailProcessor.EmailType.Normal);
						// Feedback_Message3
						Actions.ActionFeedback_Message(heContext, "Message sent to Personal Tutor.", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("8xuePnp+TUO346Oyp3_dWQ")).ssId);
						if ((queryResGetRewardsForCurrentYear_outParamList.CurrentRowNumber==0)) {
							// Destination = LearnerDetailsRewards

							if (OSPage.IsAjaxRequest) {
								// go to target page
								{

									((OSPage) Page).ClearErrorHandler();
									// get parameters
									heContext.Session["_ScreenParametersKey"] = "P7pINiAh0EKJ+Z1YPDM69Q";
									ArrayList screenParameters = new ArrayList();
									screenParameters.Add(inParamStudentReference);
									screenParameters.Add(0);
									screenParameters.Add("");
									screenParameters.Add(false);
									Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsRewards"] = screenParameters;
									string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference);
									sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
									string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsRewards.aspx" + sURLQuery;
									((OSPageViewState) Page).RedirectLocation = sURL;
									return false;

								}
							} else {
								// go to target page
								{

									((OSPage) Page).ClearErrorHandler();
									// get parameters
									heContext.Session["_ScreenParametersKey"] = "P7pINiAh0EKJ+Z1YPDM69Q";
									ArrayList screenParameters = new ArrayList();
									screenParameters.Add(inParamStudentReference);
									screenParameters.Add(0);
									screenParameters.Add("");
									screenParameters.Add(false);
									Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsRewards"] = screenParameters;
									Server.Transfer("LearnerDetailsRewards.aspx");
									return false;

								}
							}

						} else {
							// Query datasetGetRewardsForCurrentYear
							{
								int datasetGetRewardsForCurrentYear_maxRecords = Math.Max(wtRAGLastChanges_List.StartIndex + wtRAGLastChanges_List.LineCount + 1, 0);
								queryResGetRewardsForCurrentYear_outParamList = FuncssPreparation.datasetGetRewardsForCurrentYear(heContext, datasetGetRewardsForCurrentYear_maxRecords, IterationMultiplicity.Multiple, out queryResGetRewardsForCurrentYear_outParamCount, resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssDD_MMMM_YYYY
								, inParamStudentReference
								);
							}
							// Invisible
							varLcVisible = false; // Visible = False
							// Refresh Widget (wtEditRewards)
							((OSPageViewState) Page).AjaxRefresh(wtEditRewards, "None", StoreViewState);
							// Refresh Widget (wtRAGLastChanges_List)
							ssRAGLastChanges_ListListDoDataBind = true;
							((OSPageViewState) Page).AjaxRefresh(wtRAGLastChanges_List, "None", StoreViewState);
							// Update Screen
							return true;

						}

					}

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// wt_WebBlockInstance22 Functions
		/// </summary>
		public void webBlck_WebBlockInstance22_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout widget = (ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout) sender;
			widget.inParamStudentReference = inParamStudentReference;
			widget.inParamCategoryId = BuiltInFunction.NullIdentifier();
			widget.inParamOfferingCode = "";
			widget.inParamShowUnit = false;
			widget.inParamShowTarget = false;
			widget.inParamActiveLearnerDetailMenu = ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("9G1BIwlQuU+bEOIJtOZmgg")).ssMenu;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamCourseCode = inParamCourseCode;
			widget.inParamFromLearnerList = inParamFromLearnerList;
			widget.inParamActiveTab = ENTabsEntity.GetRecordByKey(ObjectKey.Parse("avXIv1WG4UWcoRPTcOjaOw")).ssId;
		}
		/// <summary>
		/// wt_Container36 Functions
		/// </summary>
		public void cnt_Container36_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container36_setInlineAttributes(sender, e);
		}
		public string cnt_Container36_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container36_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container36)
		/// </summary>
		/// <returns>The Visible State of wt_Container36</returns>
		public bool cnt_Container36_isVisible() {
			return true;
		}

		/// <summary>
		/// wtRewards Functions
		/// </summary>
		public void cntRewards_onDataBinding(object sender, System.EventArgs e) {
			cntRewards_setInlineAttributes(sender, e);
		}
		public string cntRewards_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntRewards_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtRewards)
		/// </summary>
		/// <returns>The Visible State of wtRewards</returns>
		public bool cntRewards_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container97 Functions
		/// </summary>
		public void cnt_Container97_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container97_setInlineAttributes(sender, e);
		}
		public string cnt_Container97_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container97_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container97)
		/// </summary>
		/// <returns>The Visible State of wt_Container97</returns>
		public bool cnt_Container97_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container56 Functions
		/// </summary>
		public void cnt_Container56_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container56_setInlineAttributes(sender, e);
		}
		public string cnt_Container56_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container56_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container56)
		/// </summary>
		/// <returns>The Visible State of wt_Container56</returns>
		public bool cnt_Container56_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If92 Functions
		/// </summary>
		bool if_wt_If92_hasRun=false;
		bool if_wt_If92_evalResult;
		public bool if_wt_If92() {
			if (if_wt_If92_hasRun) {
				if_wt_If92_hasRun = false;
				return if_wt_If92_evalResult;
			}
			if_wt_If92_hasRun = true;
			if_wt_If92_evalResult = (resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId);
			return if_wt_If92_evalResult;
		}

		/// <summary>
		/// wt_Container43 Functions
		/// </summary>
		public void cnt_Container43_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container43_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container43_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "float:right;margin-top: -6px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container43_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container43
		/// </summary>
		public void cnt_Container43_AjaxClick(object sender, System.EventArgs e) {
			if (CommandOpenEditReward(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container43)
		/// </summary>
		/// <returns>The Visible State of wt_Container43</returns>
		public bool cnt_Container43_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container82 Functions
		/// </summary>
		public void cnt_Container82_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container82_setInlineAttributes(sender, e);
		}
		public string cnt_Container82_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container82_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container82)
		/// </summary>
		/// <returns>The Visible State of wt_Container82</returns>
		public bool cnt_Container82_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance11 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance11_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("0tmGCcCtR0uo4L4DM98c1w")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wtEditRewards Functions
		/// </summary>
		public void cntEditRewards_onDataBinding(object sender, System.EventArgs e) {
			cntEditRewards_setInlineAttributes(sender, e);
		}
		public string cntEditRewards_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin:21px;color:#757575;font-size: 12px;text-align: left;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntEditRewards_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtEditRewards)
		/// </summary>
		/// <returns>The Visible State of wtEditRewards</returns>
		public bool cntEditRewards_isVisible() {
			return varLcVisible;
		}

		/// <summary>
		/// wt_Container47 Functions
		/// </summary>
		public void cnt_Container47_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container47_setInlineAttributes(sender, e);
		}
		public string cnt_Container47_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container47_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container47)
		/// </summary>
		/// <returns>The Visible State of wt_Container47</returns>
		public bool cnt_Container47_isVisible() {
			return true;
		}

		/// <summary>
		/// wtReason Functions
		/// </summary>
		public void cntReason_onDataBinding(object sender, System.EventArgs e) {
			cntReason_setInlineAttributes(sender, e);
		}
		public string cntReason_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight: bold;width:300px;margin-left:5px;margin-top:0;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntReason_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtReason)
		/// </summary>
		/// <returns>The Visible State of wtReason</returns>
		public bool cntReason_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text7 Functions
		/// </summary>
		public void wt_Text7_onDataBinding(object sender, System.EventArgs e) {
			wt_Text7_setInlineAttributes(sender, e);
		}
		public string wt_Text7_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight: bold;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container83 Functions
		/// </summary>
		public void cnt_Container83_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container83_setInlineAttributes(sender, e);
		}
		public string cnt_Container83_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container83_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container83)
		/// </summary>
		/// <returns>The Visible State of wt_Container83</returns>
		public bool cnt_Container83_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container103 Functions
		/// </summary>
		public void cnt_Container103_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container103_setInlineAttributes(sender, e);
		}
		public string cnt_Container103_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container103_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container103)
		/// </summary>
		/// <returns>The Visible State of wt_Container103</returns>
		public bool cnt_Container103_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_ComboBox86 Functions
		/// </summary>
		public void sel_ComboBox86_onDataBinding(object sender, System.EventArgs e) {
			sel_ComboBox86_setInlineAttributes(sender, e);
			if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

			if (Rt_wt_ComboBox86_reclist == null) {
				using(Transaction wt_ComboBox86_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
					string wt_ComboBox86_sql = "SELECT [ID], [REASON] FROM " + ENRewardReasonEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " ORDER BY [REASON]";
					Command Rt_wt_ComboBox86_sqlCmd = wt_ComboBox86_trans.CreateCommand(wt_ComboBox86_sql);
					Rt_wt_ComboBox86_reclist = new RLRewardReasonRecordList();
					Rt_wt_ComboBox86_reclist.Transaction = wt_ComboBox86_trans;
					Rt_wt_ComboBox86_reclist.AllOptimizedAttributes = new BitArray[1] {
						new BitArray(2, false)
					}
					;
					DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wt_ComboBox86_sqlCmd, Rt_wt_ComboBox86_reclist, "WebSelectWidget load operation");
					Rt_wt_ComboBox86_reclist = (RLRewardReasonRecordList) Rt_wt_ComboBox86_reclist.Duplicate();
				}
			}
			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
			if (Rt_wt_ComboBox86.SpecialListVal == "0")
			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
			Rt_wt_ComboBox86_reclist.StartIteration();
			try {
				while (!Rt_wt_ComboBox86_reclist.Eof) {
					((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wt_ComboBox86_reclist.CurrentRec.ssENRewardReason.ssReason, Convert.ToString(Rt_wt_ComboBox86_reclist.CurrentRec.ssENRewardReason.ssId)));
					if (ssEditRecordRewardRecord.ssENReward.ssReasonId == Convert.ToInt32(Convert.ToString(Rt_wt_ComboBox86_reclist.CurrentRec.ssENRewardReason.ssId))) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
					}
					Rt_wt_ComboBox86_reclist.Advance();
				}
			} finally {
				Rt_wt_ComboBox86_reclist.EndIteration();
			}
		}
		public string sel_ComboBox86_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: #6F6A6A;font-size: 15px;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		public void sel_ComboBox86_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wt_ComboBox86.SpecialListVal = dropDown.SelectedValue.Substring(8);
				ssEditRecordRewardRecord.ssENReward.ssReasonId = 0;
			}
			else {
				Rt_wt_ComboBox86.SpecialListVal = "";
				try {
					ssEditRecordRewardRecord.ssENReward.ssReasonId = Convert.ToInt32(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_ComboBox86)
		/// </summary>
		/// <returns>The Visible State of wt_ComboBox86</returns>
		public bool sel_ComboBox86_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_ComboBox86)
		/// </summary>
		/// <returns>The Enabled State of wt_ComboBox86</returns>
		public bool sel_ComboBox86_isEnabled() {
			return (resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId); 
		}

		/// <summary>
		/// Gets the mandatory value of component (sel_ComboBox86)
		/// </summary>
		/// <returns>The Mandatory Value of sel_ComboBox86</returns>
		public bool sel_ComboBox86_isMandatory() {
			return true;
		}

		/// <summary>
		/// wtResponsible2 Functions
		/// </summary>
		public void cntResponsible2_onDataBinding(object sender, System.EventArgs e) {
			cntResponsible2_setInlineAttributes(sender, e);
		}
		public string cntResponsible2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding-top:5px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntResponsible2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtResponsible2)
		/// </summary>
		/// <returns>The Visible State of wtResponsible2</returns>
		public bool cntResponsible2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container17 Functions
		/// </summary>
		public void cnt_Container17_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container17_setInlineAttributes(sender, e);
		}
		public string cnt_Container17_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container17_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container17)
		/// </summary>
		/// <returns>The Visible State of wt_Container17</returns>
		public bool cnt_Container17_isVisible() {
			return true;
		}

		/// <summary>
		/// wtRewardInput Functions
		/// </summary>
		public void inputwtRewardInput_onDataBinding(object sender, System.EventArgs e) {
			inputwtRewardInput_setInlineAttributes(sender, e);
		}
		public string inputwtRewardInput_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: #6F6A6A;font-size: 15px;padding: 1px 6px;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtRewardInput_input_value() {
			if (("" !=ssEditRecordRewardRecord.ssENReward.ssDescription)) {
				return ssEditRecordRewardRecord.ssENReward.ssDescription;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtRewardInput");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return ssEditRecordRewardRecord.ssENReward.ssDescription;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtRewardInput_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					ssEditRecordRewardRecord.ssENReward.ssDescription = ""; 
				} else {
					ssEditRecordRewardRecord.ssENReward.ssDescription = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				ssEditRecordRewardRecord.ssENReward.ssDescription = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtRewardInput)
		/// </summary>
		/// <returns>The Visible State of wtRewardInput</returns>
		public bool inputwtRewardInput_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtRewardInput)
		/// </summary>
		/// <returns>The Enabled State of wtRewardInput</returns>
		public bool inputwtRewardInput_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtRewardInput)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtRewardInput</returns>
		public bool inputwtRewardInput_isMandatory() {
			return false;
		}

		/// <summary>
		/// wtWarapperSelectRAG Functions
		/// </summary>
		public void cntWarapperSelectRAG_onDataBinding(object sender, System.EventArgs e) {
			cntWarapperSelectRAG_setInlineAttributes(sender, e);
		}
		public string cntWarapperSelectRAG_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inlinemargin-top:15px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWarapperSelectRAG_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWarapperSelectRAG)
		/// </summary>
		/// <returns>The Visible State of wtWarapperSelectRAG</returns>
		public bool cntWarapperSelectRAG_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If59 Functions
		/// </summary>
		bool if_wt_If59_hasRun=false;
		bool if_wt_If59_evalResult;
		public bool if_wt_If59() {
			if (if_wt_If59_hasRun) {
				if_wt_If59_hasRun = false;
				return if_wt_If59_evalResult;
			}
			if_wt_If59_hasRun = true;
			if_wt_If59_evalResult = (resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId);
			return if_wt_If59_evalResult;
		}

		/// <summary>
		/// wt_Container78 Functions
		/// </summary>
		public void cnt_Container78_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container78_setInlineAttributes(sender, e);
		}
		public string cnt_Container78_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:375px;padding-top:5px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container78_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container78)
		/// </summary>
		/// <returns>The Visible State of wt_Container78</returns>
		public bool cnt_Container78_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container41 Functions
		/// </summary>
		public void cnt_Container41_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container41_setInlineAttributes(sender, e);
		}
		public string cnt_Container41_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container41_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container41)
		/// </summary>
		/// <returns>The Visible State of wt_Container41</returns>
		public bool cnt_Container41_isVisible() {
			return true;
		}

		/// <summary>
		/// Hunspell_wt_WebBlockInstance37 Functions
		/// </summary>
		public void Hunspell_webBlck_WebBlockInstance37_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink widget = (proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink) sender;
			widget.inParamTextInputId = this.FindControl("wtRewardInput").ClientID;
			widget.inParamExtraStyle = "";
			widget.inParamInPopupWindow = true;
		}
		/// <summary>
		/// wt_Container63 Functions
		/// </summary>
		public void cnt_Container63_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container63_setInlineAttributes(sender, e);
		}
		public string cnt_Container63_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container63_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container63)
		/// </summary>
		/// <returns>The Visible State of wt_Container63</returns>
		public bool cnt_Container63_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance107 Functions
		/// </summary>
		public void webBlck_WebBlockInstance107_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon widget = (ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon) sender;
			widget.inParamTextInputId = this.FindControl("wtRewardInput").ClientID;
			widget.inParamAutoCompleteType = ENAutoCompleteBankTypeEntity.GetRecordByKey(ObjectKey.Parse("IkNjt5nqn0iYlnCFFUcONg")).ssId;
		}
		/// <summary>
		/// wt_Container42 Functions
		/// </summary>
		public void cnt_Container42_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container42_setInlineAttributes(sender, e);
		}
		public string cnt_Container42_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container42_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container42)
		/// </summary>
		/// <returns>The Visible State of wt_Container42</returns>
		public bool cnt_Container42_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container32 Functions
		/// </summary>
		public void cnt_Container32_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container32_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container32_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container32_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container32
		/// </summary>
		public void cnt_Container32_AjaxClick(object sender, System.EventArgs e) {
			if (CommandSave(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container32)
		/// </summary>
		/// <returns>The Visible State of wt_Container32</returns>
		public bool cnt_Container32_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance23 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance23_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("0tmGCcCtR0uo4L4DM98c1w")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container14 Functions
		/// </summary>
		public void cnt_Container14_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container14_setInlineAttributes(sender, e);
		}
		public string cnt_Container14_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-top:7px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container14_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container14)
		/// </summary>
		/// <returns>The Visible State of wt_Container14</returns>
		public bool cnt_Container14_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link70 Functions
		/// </summary>
		public void lnk_Link70_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link70_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandCancel(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link70)
		/// </summary>
		/// <returns>title of the Link (wt_Link70)</returns>
		public string
		lnk_Link70_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link70)
		/// </summary>
		/// <returns>The Visible State of wt_Link70</returns>
		public bool lnk_Link70_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link70)
		/// </summary>
		/// <returns>The Enabled State of wt_Link70</returns>
		public bool lnk_Link70_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wtEditRecordReward Functions
		/// </summary>
		public void wtEditRecordReward_onDataBinding(object sender, System.EventArgs e) {
			wtEditRecordReward_setInlineAttributes(sender, e);
		}
		public string wtEditRecordReward_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:none;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		public void wtEditRecordReward_onDataBindingDataSource(object sender, System.EventArgs e) {
		}
		/// <summary>
		/// wt_Container111 Functions
		/// </summary>
		public void cnt_Container111_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container111_setInlineAttributes(sender, e);
		}
		public string cnt_Container111_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container111_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container111)
		/// </summary>
		/// <returns>The Visible State of wt_Container111</returns>
		public bool cnt_Container111_isVisible() {
			return (!queryResGetRewardsForCurrentYear_outParamList.Empty);
		}

		/// <summary>
		/// wtRAGLastChanges_List Functions
		/// </summary>
		public void recListRAGLastChanges_List_onDataBinding(object sender, System.EventArgs e) {
			// widget wtRAGLastChanges_List
			ssRAGLastChanges_ListList = queryResGetRewardsForCurrentYear_outParamList;
			ssRAGLastChanges_ListListDoDataBind = false;
			ssRAGLastChanges_ListListDataBound = true;
		}
		public void recListRAGLastChanges_List_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssRAGLastChanges_ListList.Length > 0) {
					ssRAGLastChanges_ListList.CurrentRec = ssRAGLastChanges_ListList[ssRAGLastChanges_ListList.CurrentRowNumber];
				}
				if (ssRAGLastChanges_ListList.Length > e.SelectedIndex) {
					ssRAGLastChanges_ListList.CurrentRec = ssRAGLastChanges_ListList[e.SelectedIndex];
					ssRAGLastChanges_ListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListRAGLastChanges_List_Store(object dataItem, int index) {
			RCStudentUserRewardRewardReasonRecord tmprec = (RCStudentUserRewardRewardReasonRecord) dataItem;
			ArrayList tmpFields = new ArrayList();
			tmpFields.Add(tmprec.ssENReward.ssId == 0?(object) null: tmprec.ssENReward.ssId);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENReward.ChangedAttributes, new BitArray(new bool[] {
				true, false, false, false, false, false, false
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENReward.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true, true, true, true, true
			}
			))));
			if (index < wtRAGLastChanges_List_storage.Count) {
				wtRAGLastChanges_List_storage[index] = tmpFields;
			} else {
				wtRAGLastChanges_List_storage.Add(tmpFields);
			}
			return "";
		}
		public void recListRAGLastChanges_List_Restore() {

			#region fetch ssRAGLastChanges_ListList.

			// Read the needed fields of ssRAGLastChanges_ListList from storewtRAGLastChanges_List_list
			ssRAGLastChanges_ListList = new RLStudentUserRewardRewardReasonRecordList();
			ArrayList storewtRAGLastChanges_List_list;
			storewtRAGLastChanges_List_list = (ArrayList) ViewStateAttributes.GetFromViewState("wtRAGLastChanges_List_list", null);
			if (storewtRAGLastChanges_List_list == null) {
				return;
			} else {

				foreach(ArrayList tmpFieldswtRAGLastChanges_List_list in storewtRAGLastChanges_List_list) {
					if (tmpFieldswtRAGLastChanges_List_list != null) {
						// Aux current record variable
						RCStudentUserRewardRewardReasonRecord tmpAuxCurrentRecordwtRAGLastChanges_List_list = new RCStudentUserRewardRewardReasonRecord(null);
						tmpAuxCurrentRecordwtRAGLastChanges_List_list.ssENReward.ssId = (int) (tmpFieldswtRAGLastChanges_List_list[0] == null ? 0: tmpFieldswtRAGLastChanges_List_list[0]);

						tmpAuxCurrentRecordwtRAGLastChanges_List_list.ssENReward.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtRAGLastChanges_List_list[1]);

						tmpAuxCurrentRecordwtRAGLastChanges_List_list.ssENReward.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtRAGLastChanges_List_list[2]);

						ssRAGLastChanges_ListList.Append(tmpAuxCurrentRecordwtRAGLastChanges_List_list);
					}
				}
			}
			ssRAGLastChanges_ListList.CurrentRowNumber = -1;
			#endregion


			#region fetch ssRAGLastChanges_ListList runtime properties state.


			if (storewtRAGLastChanges_List_list.Count > 0) {
				ssRAGLastChanges_ListList.RestoreRecordListState(storewtRAGLastChanges_List_list.Count - 1, false);
			} else {
				ssRAGLastChanges_ListList.CurrentRowNumber = 0;
			}

			#endregion

			wtRAGLastChanges_List_storage = storewtRAGLastChanges_List_list;
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListRAGLastChanges_List_Clear(object sender, EventArgs e) {
			wtRAGLastChanges_List_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListRAGLastChanges_List_Rebuild(int startIndex, int lineCount) {
			if (ssRAGLastChanges_ListList.Length != -1) {
				wtRAGLastChanges_List_storage.Clear();
				for (int i=startIndex; i<ssRAGLastChanges_ListList.Data.Count && i<startIndex+lineCount; i++) {
					recListRAGLastChanges_List_Store(ssRAGLastChanges_ListList.Data[i], wtRAGLastChanges_List_storage.Count);
				}
			}
		}
		public void recListRAGLastChanges_List_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtRAGLastChanges_List widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStudentUserRewardRewardReasonRecordList getWtRAGLastChanges_ListList() {
			if (ssRAGLastChanges_ListListDoDataBind) {
				recListRAGLastChanges_List_onDataBinding(this, null);
			}

			return ssRAGLastChanges_ListList;
		}
		/// <summary>
		/// wtWrapperList2 Functions
		/// </summary>
		public void cntWrapperList2_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperList2_setInlineAttributes(sender, e);
		}
		public string cntWrapperList2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ((((BuiltInFunction.Mod(getWtRAGLastChanges_ListList().CurrentRowNumber, 2M) ==0M)) ?("background-color:#F8F8F8;"):("")) + (((getWtRAGLastChanges_ListList().CurrentRowNumber==0)) ?("border-top: solid 1px #dadada;"):("")));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperList2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperList2)
		/// </summary>
		/// <returns>The Visible State of wtWrapperList2</returns>
		public bool cntWrapperList2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Table60 Functions
		/// </summary>
		public void wt_Table60_onDataBinding(object sender, System.EventArgs e) {
			wt_Table60_setInlineAttributes(sender, e);
		}
		public string wt_Table60_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin:2px;padding: 4px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_TableCell40 Functions
		/// </summary>
		public void wt_TableCell40_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell40_setInlineAttributes(sender, e);
		}
		public string wt_TableCell40_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container45 Functions
		/// </summary>
		public void cnt_Container45_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container45_setInlineAttributes(sender, e);
		}
		public string cnt_Container45_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container45_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container45)
		/// </summary>
		/// <returns>The Visible State of wt_Container45</returns>
		public bool cnt_Container45_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If66 Functions
		/// </summary>
		bool if_wt_If66_hasRun=false;
		bool if_wt_If66_evalResult;
		public bool if_wt_If66() {
			if (if_wt_If66_hasRun) {
				if_wt_If66_hasRun = false;
				return if_wt_If66_evalResult;
			}
			if_wt_If66_hasRun = true;
			if_wt_If66_evalResult = getWtRAGLastChanges_ListList().CurrentRec.ssENReward.ssType;
			return if_wt_If66_evalResult;
		}

		/// <summary>
		/// wt_Image31 Functions
		/// </summary>
		/// <summary>
		/// Gets the Width of the image (wt_Image31)
		/// </summary>
		/// <returns>Width of the Image (wt_Image31)</returns>
		public string img_Image31_actualWidth() {
			return HttpUtility.HtmlEncode("15");
		}
		/// <summary>
		/// wt_Image13 Functions
		/// </summary>
		/// <summary>
		/// Gets the Width of the image (wt_Image13)
		/// </summary>
		/// <returns>Width of the Image (wt_Image13)</returns>
		public string img_Image13_actualWidth() {
			return HttpUtility.HtmlEncode("15");
		}
		/// <summary>
		/// wt_TableCell35 Functions
		/// </summary>
		public void wt_TableCell35_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell35_setInlineAttributes(sender, e);
		}
		public string wt_TableCell35_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container105 Functions
		/// </summary>
		public void cnt_Container105_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container105_setInlineAttributes(sender, e);
		}
		public string cnt_Container105_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight:700;line-height:16px;font-size: 13px;color: #575555;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container105_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container105)
		/// </summary>
		/// <returns>The Visible State of wt_Container105</returns>
		public bool cnt_Container105_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression55 Functions
		/// </summary>
		public void expression_InlineExpression55_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression55_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression55_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "style";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = At3xfmiCL0S8hdx7CJznIw) Expression:
		///  RAGLastChanges_List.List.Current.RewardReason.Reason
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression55() {
			return getWtRAGLastChanges_ListList().CurrentRec.ssENRewardReason.ssReason;
		}
		/// <summary>
		/// wt_TableCell61 Functions
		/// </summary>
		public void wt_TableCell61_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell61_setInlineAttributes(sender, e);
		}
		public string wt_TableCell61_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container87 Functions
		/// </summary>
		public void cnt_Container87_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container87_setInlineAttributes(sender, e);
		}
		public string cnt_Container87_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight:500;line-height:16px;font-size: 13px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container87_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container87)
		/// </summary>
		/// <returns>The Visible State of wt_Container87</returns>
		public bool cnt_Container87_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression1 Functions
		/// </summary>
		public void expression_InlineExpression1_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression1_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression1_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: #6F6A6A;font-size: 13px;font-weight:600;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = a1deBMdba0mLW7lKd1wD6A) Expression:
		///  RAGLastChanges_List.List.Current.Reward.Description
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression1() {
			return getWtRAGLastChanges_ListList().CurrentRec.ssENReward.ssDescription;
		}
		/// <summary>
		/// wt_TableCell73 Functions
		/// </summary>
		public void wt_TableCell73_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell73_setInlineAttributes(sender, e);
		}
		public string wt_TableCell73_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Link74 Functions
		/// </summary>
		public void lnk_Link74_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link74_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandDeleteReward(heContext, getWtRAGLastChanges_ListList().CurrentRec.ssENReward.ssId)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link74)
		/// </summary>
		/// <returns>title of the Link (wt_Link74)</returns>
		public string
		lnk_Link74_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link74)
		/// </summary>
		/// <returns>The Visible State of wt_Link74</returns>
		public bool lnk_Link74_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link74)
		/// </summary>
		/// <returns>The Enabled State of wt_Link74</returns>
		public bool lnk_Link74_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance79 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance79_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("fKOPgP_OsE2Zi++YxmYxxA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_TableCell67 Functions
		/// </summary>
		public void wt_TableCell67_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell67_setInlineAttributes(sender, e);
		}
		public string wt_TableCell67_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "min-width: 200px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container33 Functions
		/// </summary>
		public void cnt_Container33_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container33_setInlineAttributes(sender, e);
		}
		public string cnt_Container33_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding-right: 15px;float:right;color:#C2C2C2;font-size: 12px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container33_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container33)
		/// </summary>
		/// <returns>The Visible State of wt_Container33</returns>
		public bool cnt_Container33_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression29 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 8VjsREB_KkWZkUwsBATsQA) Expression:
		///  RAGLastChanges_List.List.Current.User.Name
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression29() {
			return getWtRAGLastChanges_ListList().CurrentRec.ssENUser.ssName;
		}
		/// <summary>
		/// wt_Container57 Functions
		/// </summary>
		public void cnt_Container57_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container57_setInlineAttributes(sender, e);
		}
		public string cnt_Container57_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container57_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container57)
		/// </summary>
		/// <returns>The Visible State of wt_Container57</returns>
		public bool cnt_Container57_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression5 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = boYsCaA7jESvav3DwuVbAg) Expression: " on "
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression5() {
			return " on ";
		}
		/// <summary>
		/// wt_WebBlockInstance71 Functions
		/// </summary>
		public void webBlck_WebBlockInstance71_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
			widget.inParamDate = Convert.ToDateTime(getWtRAGLastChanges_ListList().CurrentRec.ssENReward.ssCreatedAt.ToString("yyyy-M-d"));
		}
		/// <summary>
		/// wt_Container101 Functions
		/// </summary>
		public void cnt_Container101_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container101_setInlineAttributes(sender, e);
		}
		public string cnt_Container101_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container101_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container101)
		/// </summary>
		/// <returns>The Visible State of wt_Container101</returns>
		public bool cnt_Container101_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container4 Functions
		/// </summary>
		public void cnt_Container4_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container4_setInlineAttributes(sender, e);
		}
		public string cnt_Container4_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container4)
		/// </summary>
		/// <returns>The Visible State of wt_Container4</returns>
		public bool cnt_Container4_isVisible() {
			return true;
		}

		/// <summary>
		/// wtHistoricalRewards Functions
		/// </summary>
		public void cntHistoricalRewards_onDataBinding(object sender, System.EventArgs e) {
			cntHistoricalRewards_setInlineAttributes(sender, e);
		}
		public string cntHistoricalRewards_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntHistoricalRewards_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtHistoricalRewards)
		/// </summary>
		/// <returns>The Visible State of wtHistoricalRewards</returns>
		public bool cntHistoricalRewards_isVisible() {
			return (!getWtHistoricalAwardsList().Empty);
		}

		/// <summary>
		/// wt_Container46 Functions
		/// </summary>
		public void cnt_Container46_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container46_setInlineAttributes(sender, e);
		}
		public string cnt_Container46_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container46_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container46)
		/// </summary>
		/// <returns>The Visible State of wt_Container46</returns>
		public bool cnt_Container46_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_CustomWidget76 Functions
		/// </summary>
		public void wt_CustomWidget76_onDataBinding(object sender, System.EventArgs e) {
			wt_CustomWidget76.GetBehavior<OutSystems.Plugin.Widgets.Label>().Data["ForInputIdMandatoryFunction"] = null;
			wt_CustomWidget76.GetBehavior<OutSystems.Plugin.Widgets.Label>().Data["ForInputId"] = null;
		}
		/// <summary>
		/// wtHistoricalAwards Functions
		/// </summary>
		public void recListHistoricalAwards_onDataBinding(object sender, System.EventArgs e) {
			// widget wtHistoricalAwards
			ssHistoricalAwardsList = queryResGetRewardsHistorical_outParamList;
			ssHistoricalAwardsListDoDataBind = false;
			ssHistoricalAwardsListDataBound = true;
		}
		public void recListHistoricalAwards_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssHistoricalAwardsList.Length > 0) {
					ssHistoricalAwardsList.CurrentRec = ssHistoricalAwardsList[ssHistoricalAwardsList.CurrentRowNumber];
				}
				if (ssHistoricalAwardsList.Length > e.SelectedIndex) {
					ssHistoricalAwardsList.CurrentRec = ssHistoricalAwardsList[e.SelectedIndex];
					ssHistoricalAwardsList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListHistoricalAwards_Store(object dataItem, int index) {
			RCStudentUserRewardRewardReasonRecord tmprec = (RCStudentUserRewardRewardReasonRecord) dataItem;
			ArrayList tmpFields = new ArrayList();
			tmpFields.Add(tmprec.ssENReward.ssId == 0?(object) null: tmprec.ssENReward.ssId);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENReward.ChangedAttributes, new BitArray(new bool[] {
				true, false, false, false, false, false, false
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENReward.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true, true, true, true, true
			}
			))));
			if (index < wtHistoricalAwards_storage.Count) {
				wtHistoricalAwards_storage[index] = tmpFields;
			} else {
				wtHistoricalAwards_storage.Add(tmpFields);
			}
			return "";
		}
		public void recListHistoricalAwards_Restore() {

			#region fetch ssHistoricalAwardsList.

			// Read the needed fields of ssHistoricalAwardsList from storewtHistoricalAwards_list
			ssHistoricalAwardsList = new RLStudentUserRewardRewardReasonRecordList();
			ArrayList storewtHistoricalAwards_list;
			storewtHistoricalAwards_list = (ArrayList) ViewStateAttributes.GetFromViewState("wtHistoricalAwards_list", null);
			if (storewtHistoricalAwards_list == null) {
				return;
			} else {

				foreach(ArrayList tmpFieldswtHistoricalAwards_list in storewtHistoricalAwards_list) {
					if (tmpFieldswtHistoricalAwards_list != null) {
						// Aux current record variable
						RCStudentUserRewardRewardReasonRecord tmpAuxCurrentRecordwtHistoricalAwards_list = new RCStudentUserRewardRewardReasonRecord(null);
						tmpAuxCurrentRecordwtHistoricalAwards_list.ssENReward.ssId = (int) (tmpFieldswtHistoricalAwards_list[0] == null ? 0: tmpFieldswtHistoricalAwards_list[0]);

						tmpAuxCurrentRecordwtHistoricalAwards_list.ssENReward.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtHistoricalAwards_list[1]);

						tmpAuxCurrentRecordwtHistoricalAwards_list.ssENReward.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtHistoricalAwards_list[2]);

						ssHistoricalAwardsList.Append(tmpAuxCurrentRecordwtHistoricalAwards_list);
					}
				}
			}
			ssHistoricalAwardsList.CurrentRowNumber = -1;
			#endregion


			#region fetch ssHistoricalAwardsList runtime properties state.


			if (storewtHistoricalAwards_list.Count > 0) {
				ssHistoricalAwardsList.RestoreRecordListState(storewtHistoricalAwards_list.Count - 1, false);
			} else {
				ssHistoricalAwardsList.CurrentRowNumber = 0;
			}

			#endregion

			wtHistoricalAwards_storage = storewtHistoricalAwards_list;
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListHistoricalAwards_Clear(object sender, EventArgs e) {
			wtHistoricalAwards_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListHistoricalAwards_Rebuild(int startIndex, int lineCount) {
			if (ssHistoricalAwardsList.Length != -1) {
				wtHistoricalAwards_storage.Clear();
				for (int i=startIndex; i<ssHistoricalAwardsList.Data.Count && i<startIndex+lineCount; i++) {
					recListHistoricalAwards_Store(ssHistoricalAwardsList.Data[i], wtHistoricalAwards_storage.Count);
				}
			}
		}
		public void recListHistoricalAwards_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtHistoricalAwards widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStudentUserRewardRewardReasonRecordList getWtHistoricalAwardsList() {
			if (ssHistoricalAwardsListDoDataBind) {
				recListHistoricalAwards_onDataBinding(this, null);
			}

			return ssHistoricalAwardsList;
		}
		/// <summary>
		/// wtWrapperList3 Functions
		/// </summary>
		public void cntWrapperList3_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperList3_setInlineAttributes(sender, e);
		}
		public string cntWrapperList3_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ((((BuiltInFunction.Mod(getWtHistoricalAwardsList().CurrentRowNumber, 2M) ==0M)) ?("background-color:#F8F8F8;"):("")) + (((getWtHistoricalAwardsList().CurrentRowNumber==0)) ?("border-top: solid 1px #dadada;"):("")));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperList3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperList3)
		/// </summary>
		/// <returns>The Visible State of wtWrapperList3</returns>
		public bool cntWrapperList3_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Table12 Functions
		/// </summary>
		public void wt_Table12_onDataBinding(object sender, System.EventArgs e) {
			wt_Table12_setInlineAttributes(sender, e);
		}
		public string wt_Table12_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin:2px;padding: 4px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_TableCell30 Functions
		/// </summary>
		public void wt_TableCell30_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell30_setInlineAttributes(sender, e);
		}
		public string wt_TableCell30_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container106 Functions
		/// </summary>
		public void cnt_Container106_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container106_setInlineAttributes(sender, e);
		}
		public string cnt_Container106_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container106_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container106)
		/// </summary>
		/// <returns>The Visible State of wt_Container106</returns>
		public bool cnt_Container106_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If89 Functions
		/// </summary>
		bool if_wt_If89_hasRun=false;
		bool if_wt_If89_evalResult;
		public bool if_wt_If89() {
			if (if_wt_If89_hasRun) {
				if_wt_If89_hasRun = false;
				return if_wt_If89_evalResult;
			}
			if_wt_If89_hasRun = true;
			if_wt_If89_evalResult = getWtHistoricalAwardsList().CurrentRec.ssENReward.ssType;
			return if_wt_If89_evalResult;
		}

		/// <summary>
		/// wt_Image104 Functions
		/// </summary>
		/// <summary>
		/// Gets the Width of the image (wt_Image104)
		/// </summary>
		/// <returns>Width of the Image (wt_Image104)</returns>
		public string img_Image104_actualWidth() {
			return HttpUtility.HtmlEncode("15");
		}
		/// <summary>
		/// wt_Image50 Functions
		/// </summary>
		/// <summary>
		/// Gets the Width of the image (wt_Image50)
		/// </summary>
		/// <returns>Width of the Image (wt_Image50)</returns>
		public string img_Image50_actualWidth() {
			return HttpUtility.HtmlEncode("15");
		}
		/// <summary>
		/// wt_TableCell2 Functions
		/// </summary>
		public void wt_TableCell2_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell2_setInlineAttributes(sender, e);
		}
		public string wt_TableCell2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container25 Functions
		/// </summary>
		public void cnt_Container25_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container25_setInlineAttributes(sender, e);
		}
		public string cnt_Container25_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight:700;line-height:16px;font-size: 13px;color: #575555;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container25_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container25)
		/// </summary>
		/// <returns>The Visible State of wt_Container25</returns>
		public bool cnt_Container25_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression93 Functions
		/// </summary>
		public void expression_InlineExpression93_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression93_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression93_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "style";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = EAL00mT+fkeSIO5wPAsaFQ) Expression:
		///  HistoricalAwards.List.Current.RewardReason.Reason
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression93() {
			return getWtHistoricalAwardsList().CurrentRec.ssENRewardReason.ssReason;
		}
		/// <summary>
		/// wt_TableCell16 Functions
		/// </summary>
		public void wt_TableCell16_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell16_setInlineAttributes(sender, e);
		}
		public string wt_TableCell16_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container51 Functions
		/// </summary>
		public void cnt_Container51_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container51_setInlineAttributes(sender, e);
		}
		public string cnt_Container51_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight:500;line-height:16px;font-size: 13px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container51_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container51)
		/// </summary>
		/// <returns>The Visible State of wt_Container51</returns>
		public bool cnt_Container51_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression58 Functions
		/// </summary>
		public void expression_InlineExpression58_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression58_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression58_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: #6F6A6A;font-size: 13px;font-weight:600;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = EwJqggC51Uq2wVOHPbSFzg) Expression:
		///  HistoricalAwards.List.Current.Reward.Description
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression58() {
			return getWtHistoricalAwardsList().CurrentRec.ssENReward.ssDescription;
		}
		/// <summary>
		/// wt_TableCell24 Functions
		/// </summary>
		public void wt_TableCell24_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell24_setInlineAttributes(sender, e);
		}
		public string wt_TableCell24_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Link95 Functions
		/// </summary>
		public void lnk_Link95_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link95_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandDeleteReward(heContext, getWtHistoricalAwardsList().CurrentRec.ssENReward.ssId)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link95)
		/// </summary>
		/// <returns>title of the Link (wt_Link95)</returns>
		public string
		lnk_Link95_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link95)
		/// </summary>
		/// <returns>The Visible State of wt_Link95</returns>
		public bool lnk_Link95_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link95)
		/// </summary>
		/// <returns>The Enabled State of wt_Link95</returns>
		public bool lnk_Link95_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance28 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance28_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("fKOPgP_OsE2Zi++YxmYxxA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_TableCell52 Functions
		/// </summary>
		public void wt_TableCell52_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell52_setInlineAttributes(sender, e);
		}
		public string wt_TableCell52_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "min-width: 200px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container10 Functions
		/// </summary>
		public void cnt_Container10_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container10_setInlineAttributes(sender, e);
		}
		public string cnt_Container10_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding-right: 15px;float:right;color:#C2C2C2;font-size: 12px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container10_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container10)
		/// </summary>
		/// <returns>The Visible State of wt_Container10</returns>
		public bool cnt_Container10_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression53 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = pgyte6qHY0+mJCO5bmmdkg) Expression:
		///  HistoricalAwards.List.Current.User.Name
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression53() {
			return getWtHistoricalAwardsList().CurrentRec.ssENUser.ssName;
		}
		/// <summary>
		/// wt_Container44 Functions
		/// </summary>
		public void cnt_Container44_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container44_setInlineAttributes(sender, e);
		}
		public string cnt_Container44_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container44_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container44)
		/// </summary>
		/// <returns>The Visible State of wt_Container44</returns>
		public bool cnt_Container44_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression64 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = SR7ukLdMjki+U8yIyIv2Bg) Expression: " on "
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression64() {
			return " on ";
		}
		/// <summary>
		/// wt_WebBlockInstance102 Functions
		/// </summary>
		public void webBlck_WebBlockInstance102_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
			widget.inParamDate = Convert.ToDateTime(getWtHistoricalAwardsList().CurrentRec.ssENReward.ssCreatedAt.ToString("yyyy-M-d"));
		}


		public static class FuncCommandDeleteReward {
		}
		public static class FuncCommandCancel {
		}
		public static class FuncCommandOpenEditReward {
		}
		public static class FuncCommandSave {

			/// <summary>
			/// Query Function "GetRewardReasons" of Action "Save"
			/// </summary>
			public static RLRewardReasonRecordList datasetGetRewardReasons(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENRewardReason.[REASON] o2");
				fromBuilder.Append(" FROM {RewardReason} ENRewardReason");
				whereBuilder.Append(" WHERE ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENRewardReason.[ID] = @qpinP) AND (ENRewardReason.[ID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENRewardReason.[ID] IS NULL)");
				}
				orderByBuilder.Append(" ORDER BY ENRewardReason.[REASON] ASC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLRewardReasonRecordList outParamList = new RLRewardReasonRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					true, false
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLRewardReasonRecordList _tmp = new RLRewardReasonRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsRewards.Save.GetRewardReasons.List");
						outParamList = (RLRewardReasonRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsRewards.Save.GetRewardReasons.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLRewardReasonRecordList _tmp = new RLRewardReasonRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsRewards.Save.GetRewardReasons.List");
							outParamList = (RLRewardReasonRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsRewards.Save.GetRewardReasons.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}
		public static class FuncssPreparation {

			private static void datasetGetRewardsForCurrentYearReadDB(ref RCStudentUserRewardRewardReasonRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENReward.Read(r, ref index);
				rec.ssENRewardReason.Read(r, ref index);
				rec.ssENStudent.Read(r, ref index);
				rec.ssENUser.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetRewardsForCurrentYear" of Action "Preparation"
			/// </summary>
			public static RLStudentUserRewardRewardReasonRecordList datasetGetRewardsForCurrentYear(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP, string qpstP1) {
				// Query Iterations: Multiple {RAGLastChanges_List}
				// Refresh Query G9+g4PDARU+UBgFcx4S+0Q Iterations: Multiple {RAGLastChanges_List}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("ENReward.[ID] o1, NULL o2, NULL o3, ENReward.[DESCRIPTION] o4, ENReward.[TYPE] o5, NULL o6, ENReward.[CREATEDAT] o7, NULL o8, ENRewardReason.[REASON] o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27, NULL o28, NULL o29, NULL o30, NULL o31, NULL o32, NULL o33, NULL o34, NULL o35, NULL o36, NULL o37, ENUser.[NAME] o38, NULL o39, NULL o40, NULL o41, NULL o42, NULL o43, NULL o44, NULL o45, NULL o46");
				fromBuilder.Append(" FROM ((({RewardReason} ENRewardReason Inner JOIN {Reward} ENReward ON (ENReward.[REASONID] = ENRewardReason.[ID]))  Inner JOIN {Student} ENStudent ON (ENReward.[STUDENTREFERENCE] = ENStudent.[STUDENTREFERENCE]))  Left JOIN {User} ENUser ON (ENReward.[CREATEDBY] = ENUser.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP1.Trim() != "") {
					whereBuilder.Append("((ENReward.[STUDENTREFERENCE] = @qpstP1) AND (ENReward.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP1", DbType.String, qpstP1);
				} else {
					whereBuilder.Append("(ENReward.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (ENReward.[CREATEDAT] >= (convert(datetime, @qpstP, 120)))");
				orderByBuilder.Append(" ORDER BY ENReward.[CREATEDAT] DESC ");
				sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentUserRewardRewardReasonRecordList outParamList = new RLStudentUserRewardRewardReasonRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetRewardsForCurrentYearReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[4];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					false, true, false, true, true, true, true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					false, true, true, false, false, true, false
				}
				);
				opt[3] = new BitArray(new bool[] {
					true, false
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentUserRewardRewardReasonRecordList _tmp = new RLStudentUserRewardRewardReasonRecordList();
					_tmp.AlternateReadDBMethod = datasetGetRewardsForCurrentYearReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsRewards.Preparation.GetRewardsForCurrentYear.List");
						outParamList = (RLStudentUserRewardRewardReasonRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsRewards.Preparation.GetRewardsForCurrentYear.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentUserRewardRewardReasonRecordList _tmp = new RLStudentUserRewardRewardReasonRecordList();
						_tmp.AlternateReadDBMethod = datasetGetRewardsForCurrentYearReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsRewards.Preparation.GetRewardsForCurrentYear.List");
							outParamList = (RLStudentUserRewardRewardReasonRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsRewards.Preparation.GetRewardsForCurrentYear.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetRewardsHistoricalReadDB(ref RCStudentUserRewardRewardReasonRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENReward.Read(r, ref index);
				rec.ssENRewardReason.Read(r, ref index);
				rec.ssENStudent.Read(r, ref index);
				rec.ssENUser.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetRewardsHistorical" of Action "Preparation"
			/// </summary>
			public static RLStudentUserRewardRewardReasonRecordList datasetGetRewardsHistorical(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP, string qpstP1) {
				// Query Iterations: Multiple {HistoricalAwards}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("ENReward.[ID] o1, NULL o2, NULL o3, ENReward.[DESCRIPTION] o4, ENReward.[TYPE] o5, NULL o6, ENReward.[CREATEDAT] o7, NULL o8, ENRewardReason.[REASON] o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27, NULL o28, NULL o29, NULL o30, NULL o31, NULL o32, NULL o33, NULL o34, NULL o35, NULL o36, NULL o37, ENUser.[NAME] o38, NULL o39, NULL o40, NULL o41, NULL o42, NULL o43, NULL o44, NULL o45, NULL o46");
				fromBuilder.Append(" FROM ((({RewardReason} ENRewardReason Inner JOIN {Reward} ENReward ON (ENReward.[REASONID] = ENRewardReason.[ID]))  Inner JOIN {Student} ENStudent ON (ENReward.[STUDENTREFERENCE] = ENStudent.[STUDENTREFERENCE]))  Left JOIN {User} ENUser ON (ENReward.[CREATEDBY] = ENUser.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP1.Trim() != "") {
					whereBuilder.Append("((ENReward.[STUDENTREFERENCE] = @qpstP1) AND (ENReward.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP1", DbType.String, qpstP1);
				} else {
					whereBuilder.Append("(ENReward.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (ENReward.[CREATEDAT] < (convert(datetime, @qpstP, 120)))");
				orderByBuilder.Append(" ORDER BY ENReward.[CREATEDAT] DESC ");
				sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentUserRewardRewardReasonRecordList outParamList = new RLStudentUserRewardRewardReasonRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetRewardsHistoricalReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[4];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					false, true, false, true, true, true, true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					false, true, true, false, false, true, false
				}
				);
				opt[3] = new BitArray(new bool[] {
					true, false
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentUserRewardRewardReasonRecordList _tmp = new RLStudentUserRewardRewardReasonRecordList();
					_tmp.AlternateReadDBMethod = datasetGetRewardsHistoricalReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsRewards.Preparation.GetRewardsHistorical.List");
						outParamList = (RLStudentUserRewardRewardReasonRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsRewards.Preparation.GetRewardsHistorical.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentUserRewardRewardReasonRecordList _tmp = new RLStudentUserRewardRewardReasonRecordList();
						_tmp.AlternateReadDBMethod = datasetGetRewardsHistoricalReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsRewards.Preparation.GetRewardsHistorical.List");
							outParamList = (RLStudentUserRewardRewardReasonRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsRewards.Preparation.GetRewardsHistorical.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}



		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}


		public LocalState PushStack() {
			return null;
		}

		public void doRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				Preparation(heContext);

				Title = "LearnerDetailsRewards"; ssRAGLastChanges_ListListDoDataBind = true;
				ssHistoricalAwardsListDoDataBind = true;
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerDetailsRewards", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// Perform the partial databind
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerDetailsRewards", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Ajax", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}



		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();

			#region store queryResGetRewardsForCurrentYear_outParamList.

			int tmpcurrentrownumberqueryResGetRewardsForCurrentYear_outParamList = queryResGetRewardsForCurrentYear_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetRewardsForCurrentYear_outParamList = queryResGetRewardsForCurrentYear_outParamList.Eof;
			ArrayList storequeryResGetRewardsForCurrentYear_outParamList = new ArrayList();

			// Write the needed fields of queryResGetRewardsForCurrentYear_outParamList to the storequeryResGetRewardsForCurrentYear_outParamList
			if (!queryResGetRewardsForCurrentYear_outParamList.Empty) {
				try {
					queryResGetRewardsForCurrentYear_outParamList.StartIteration();

					while (!queryResGetRewardsForCurrentYear_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetRewardsForCurrentYear_outParamList = new ArrayList();
						tmpFieldsqueryResGetRewardsForCurrentYear_outParamList.Add(queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENUser.ssName == "" ?(object) null: queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENUser.ssName);
						tmpFieldsqueryResGetRewardsForCurrentYear_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENUser.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetRewardsForCurrentYear_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENUser.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsqueryResGetRewardsForCurrentYear_outParamList.Add(queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENReward.ssId == 0?(object) null: queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENReward.ssId);
						tmpFieldsqueryResGetRewardsForCurrentYear_outParamList.Add(queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENReward.ssDescription == "" ?(object) null: queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENReward.ssDescription);
						tmpFieldsqueryResGetRewardsForCurrentYear_outParamList.Add(queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENReward.ssType == false?(object) null: queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENReward.ssType);
						tmpFieldsqueryResGetRewardsForCurrentYear_outParamList.Add(queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENReward.ssCreatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENReward.ssCreatedAt);
						tmpFieldsqueryResGetRewardsForCurrentYear_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENReward.ChangedAttributes, new BitArray(new bool[] {
							true, false, false, true, true, false, true
						}
						))));
						tmpFieldsqueryResGetRewardsForCurrentYear_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENReward.OptimizedAttributes, new BitArray(new bool[] {
							false, true, true, false, false, true, false
						}
						))));
						tmpFieldsqueryResGetRewardsForCurrentYear_outParamList.Add(queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENRewardReason.ssReason == "" ?(object) null: queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENRewardReason.ssReason);
						tmpFieldsqueryResGetRewardsForCurrentYear_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENRewardReason.ChangedAttributes, new BitArray(new bool[] {
							false, true
						}
						))));
						tmpFieldsqueryResGetRewardsForCurrentYear_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetRewardsForCurrentYear_outParamList.CurrentRec.ssENRewardReason.OptimizedAttributes, new BitArray(new bool[] {
							true, false
						}
						))));
						storequeryResGetRewardsForCurrentYear_outParamList.Add(tmpFieldsqueryResGetRewardsForCurrentYear_outParamList);
						queryResGetRewardsForCurrentYear_outParamList.Advance();
					}
				} finally {
					queryResGetRewardsForCurrentYear_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetRewardsForCurrentYear_outParamList", storequeryResGetRewardsForCurrentYear_outParamList, null);

			#endregion


			#region store queryResGetRewardsForCurrentYear_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetRewardsForCurrentYear_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetRewardsForCurrentYear_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetRewardsForCurrentYear_outParamList_eof", tmpeofqueryResGetRewardsForCurrentYear_outParamList, false);
			queryResGetRewardsForCurrentYear_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetRewardsForCurrentYear_outParamList, tmpeofqueryResGetRewardsForCurrentYear_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_ssDD_MMMM_YYYY", resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssDD_MMMM_YYYY, "");
			ViewStateAttributes.SetInViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ChangedAttributes, new BitArray(new bool[] {
				false, false, false, false, false, false, false, true, false, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.OptimizedAttributes, new BitArray(new bool[] {
				true, true, true, true, true, true, true, false, true, true, true
			}
			)))), null);

			#region store queryResGetRewardsHistorical_outParamList.

			int tmpcurrentrownumberqueryResGetRewardsHistorical_outParamList = queryResGetRewardsHistorical_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetRewardsHistorical_outParamList = queryResGetRewardsHistorical_outParamList.Eof;
			ArrayList storequeryResGetRewardsHistorical_outParamList = new ArrayList();

			// Write the needed fields of queryResGetRewardsHistorical_outParamList to the storequeryResGetRewardsHistorical_outParamList
			if (!queryResGetRewardsHistorical_outParamList.Empty) {
				try {
					queryResGetRewardsHistorical_outParamList.StartIteration();

					while (!queryResGetRewardsHistorical_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetRewardsHistorical_outParamList = new ArrayList();
						tmpFieldsqueryResGetRewardsHistorical_outParamList.Add(queryResGetRewardsHistorical_outParamList.CurrentRec.ssENUser.ssName == "" ?(object) null: queryResGetRewardsHistorical_outParamList.CurrentRec.ssENUser.ssName);
						tmpFieldsqueryResGetRewardsHistorical_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetRewardsHistorical_outParamList.CurrentRec.ssENUser.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetRewardsHistorical_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetRewardsHistorical_outParamList.CurrentRec.ssENUser.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsqueryResGetRewardsHistorical_outParamList.Add(queryResGetRewardsHistorical_outParamList.CurrentRec.ssENReward.ssId == 0?(object) null: queryResGetRewardsHistorical_outParamList.CurrentRec.ssENReward.ssId);
						tmpFieldsqueryResGetRewardsHistorical_outParamList.Add(queryResGetRewardsHistorical_outParamList.CurrentRec.ssENReward.ssDescription == "" ?(object) null: queryResGetRewardsHistorical_outParamList.CurrentRec.ssENReward.ssDescription);
						tmpFieldsqueryResGetRewardsHistorical_outParamList.Add(queryResGetRewardsHistorical_outParamList.CurrentRec.ssENReward.ssType == false?(object) null: queryResGetRewardsHistorical_outParamList.CurrentRec.ssENReward.ssType);
						tmpFieldsqueryResGetRewardsHistorical_outParamList.Add(queryResGetRewardsHistorical_outParamList.CurrentRec.ssENReward.ssCreatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: queryResGetRewardsHistorical_outParamList.CurrentRec.ssENReward.ssCreatedAt);
						tmpFieldsqueryResGetRewardsHistorical_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetRewardsHistorical_outParamList.CurrentRec.ssENReward.ChangedAttributes, new BitArray(new bool[] {
							true, false, false, true, true, false, true
						}
						))));
						tmpFieldsqueryResGetRewardsHistorical_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetRewardsHistorical_outParamList.CurrentRec.ssENReward.OptimizedAttributes, new BitArray(new bool[] {
							false, true, true, false, false, true, false
						}
						))));
						tmpFieldsqueryResGetRewardsHistorical_outParamList.Add(queryResGetRewardsHistorical_outParamList.CurrentRec.ssENRewardReason.ssReason == "" ?(object) null: queryResGetRewardsHistorical_outParamList.CurrentRec.ssENRewardReason.ssReason);
						tmpFieldsqueryResGetRewardsHistorical_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetRewardsHistorical_outParamList.CurrentRec.ssENRewardReason.ChangedAttributes, new BitArray(new bool[] {
							false, true
						}
						))));
						tmpFieldsqueryResGetRewardsHistorical_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetRewardsHistorical_outParamList.CurrentRec.ssENRewardReason.OptimizedAttributes, new BitArray(new bool[] {
							true, false
						}
						))));
						storequeryResGetRewardsHistorical_outParamList.Add(tmpFieldsqueryResGetRewardsHistorical_outParamList);
						queryResGetRewardsHistorical_outParamList.Advance();
					}
				} finally {
					queryResGetRewardsHistorical_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetRewardsHistorical_outParamList", storequeryResGetRewardsHistorical_outParamList, null);

			#endregion


			#region store queryResGetRewardsHistorical_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetRewardsHistorical_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetRewardsHistorical_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetRewardsHistorical_outParamList_eof", tmpeofqueryResGetRewardsHistorical_outParamList, false);
			queryResGetRewardsHistorical_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetRewardsHistorical_outParamList, tmpeofqueryResGetRewardsHistorical_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("resUserCheck_outParamPermissionType", resUserCheck_outParamPermissionType, 0);
			ViewStateAttributes.SetInViewState("inParamStudentReference", inParamStudentReference, "");
			ViewStateAttributes.SetInViewState("inParamSessionID", inParamSessionID, 0);
			ViewStateAttributes.SetInViewState("inParamCourseCode", inParamCourseCode, "");
			ViewStateAttributes.SetInViewState("inParamFromLearnerList", inParamFromLearnerList, false);
			ViewStateAttributes.SetInViewState("varLcVisible", varLcVisible, false);
			ViewStateAttributes.SetInViewState("wt_ComboBox86_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wt_ComboBox86")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtRewardInput_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtRewardInput")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtEditRecordReward_record_ssENReward_ssId", ssEditRecordRewardRecord.ssENReward.ssId, 0);
			ViewStateAttributes.SetInViewState("wtEditRecordReward_record_ssENReward_ssReasonId", ssEditRecordRewardRecord.ssENReward.ssReasonId, 0);
			ViewStateAttributes.SetInViewState("wtEditRecordReward_record_ssENReward_ssDescription", ssEditRecordRewardRecord.ssENReward.ssDescription, "");
			ViewStateAttributes.SetInViewState("wtEditRecordReward_record_ssENReward_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(ssEditRecordRewardRecord.ssENReward.ChangedAttributes, new BitArray(new bool[] {
				true, false, true, true, false, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("wtEditRecordReward_record_ssENReward_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(ssEditRecordRewardRecord.ssENReward.OptimizedAttributes, new BitArray(new bool[] {
				false, true, false, false, true, true, true
			}
			)))), null);
			if (IsAjaxRequest) {
				recListRAGLastChanges_List_Rebuild((ssRAGLastChanges_ListListDataBound ? wtRAGLastChanges_List.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtRAGLastChanges_List.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtRAGLastChanges_List_list", wtRAGLastChanges_List_storage, null);
			if (IsAjaxRequest) {
				recListHistoricalAwards_Rebuild((ssHistoricalAwardsListDataBound ? wtHistoricalAwards.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtHistoricalAwards.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtHistoricalAwards_list", wtHistoricalAwards_storage, null);
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			try {

				#region fetch queryResGetRewardsForCurrentYear_outParamList.

				// Read the needed fields of queryResGetRewardsForCurrentYear_outParamList from storequeryResGetRewardsForCurrentYear_outParamList
				queryResGetRewardsForCurrentYear_outParamList = new RLStudentUserRewardRewardReasonRecordList();
				ArrayList storequeryResGetRewardsForCurrentYear_outParamList;
				storequeryResGetRewardsForCurrentYear_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetRewardsForCurrentYear_outParamList", null);
				if (storequeryResGetRewardsForCurrentYear_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetRewardsForCurrentYear_outParamList in storequeryResGetRewardsForCurrentYear_outParamList) {
						if (tmpFieldsqueryResGetRewardsForCurrentYear_outParamList != null) {
							// Aux current record variable
							RCStudentUserRewardRewardReasonRecord tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList = new RCStudentUserRewardRewardReasonRecord(null);
							tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList.ssENUser.ssName = (string) (tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[0] == null ? "": tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList.ssENUser.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList.ssENUser.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList.ssENReward.ssId = (int) (tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[3] == null ? 0: tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[3]);

							tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList.ssENReward.ssDescription = (string) (tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[4] == null ? "": tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[4]);

							tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList.ssENReward.ssType = (bool) (tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[5] == null ? false: tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[5]);

							tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList.ssENReward.ssCreatedAt = (DateTime) (tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[6] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[6]);

							tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList.ssENReward.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[7]);

							tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList.ssENReward.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[8]);

							tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList.ssENRewardReason.ssReason = (string) (tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[9] == null ? "": tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[9]);

							tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList.ssENRewardReason.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[10]);

							tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList.ssENRewardReason.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetRewardsForCurrentYear_outParamList[11]);

							queryResGetRewardsForCurrentYear_outParamList.Append(tmpAuxCurrentRecordqueryResGetRewardsForCurrentYear_outParamList);
						}
					}
				}
				queryResGetRewardsForCurrentYear_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetRewardsForCurrentYear_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetRewardsForCurrentYear_outParamList;
				tmpcurrentrownumberqueryResGetRewardsForCurrentYear_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetRewardsForCurrentYear_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetRewardsForCurrentYear_outParamList;
				tmpeofqueryResGetRewardsForCurrentYear_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetRewardsForCurrentYear_outParamList_eof", false);
				queryResGetRewardsForCurrentYear_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetRewardsForCurrentYear_outParamList, tmpeofqueryResGetRewardsForCurrentYear_outParamList);

				#endregion

				resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssDD_MMMM_YYYY = (string) ViewStateAttributes.GetFromViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_ssDD_MMMM_YYYY", "");
				resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_ChangedAttributes", null));
				resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_OptimizedAttributes", null));

				#region fetch queryResGetRewardsHistorical_outParamList.

				// Read the needed fields of queryResGetRewardsHistorical_outParamList from storequeryResGetRewardsHistorical_outParamList
				queryResGetRewardsHistorical_outParamList = new RLStudentUserRewardRewardReasonRecordList();
				ArrayList storequeryResGetRewardsHistorical_outParamList;
				storequeryResGetRewardsHistorical_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetRewardsHistorical_outParamList", null);
				if (storequeryResGetRewardsHistorical_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetRewardsHistorical_outParamList in storequeryResGetRewardsHistorical_outParamList) {
						if (tmpFieldsqueryResGetRewardsHistorical_outParamList != null) {
							// Aux current record variable
							RCStudentUserRewardRewardReasonRecord tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList = new RCStudentUserRewardRewardReasonRecord(null);
							tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList.ssENUser.ssName = (string) (tmpFieldsqueryResGetRewardsHistorical_outParamList[0] == null ? "": tmpFieldsqueryResGetRewardsHistorical_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList.ssENUser.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetRewardsHistorical_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList.ssENUser.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetRewardsHistorical_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList.ssENReward.ssId = (int) (tmpFieldsqueryResGetRewardsHistorical_outParamList[3] == null ? 0: tmpFieldsqueryResGetRewardsHistorical_outParamList[3]);

							tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList.ssENReward.ssDescription = (string) (tmpFieldsqueryResGetRewardsHistorical_outParamList[4] == null ? "": tmpFieldsqueryResGetRewardsHistorical_outParamList[4]);

							tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList.ssENReward.ssType = (bool) (tmpFieldsqueryResGetRewardsHistorical_outParamList[5] == null ? false: tmpFieldsqueryResGetRewardsHistorical_outParamList[5]);

							tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList.ssENReward.ssCreatedAt = (DateTime) (tmpFieldsqueryResGetRewardsHistorical_outParamList[6] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsqueryResGetRewardsHistorical_outParamList[6]);

							tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList.ssENReward.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetRewardsHistorical_outParamList[7]);

							tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList.ssENReward.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetRewardsHistorical_outParamList[8]);

							tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList.ssENRewardReason.ssReason = (string) (tmpFieldsqueryResGetRewardsHistorical_outParamList[9] == null ? "": tmpFieldsqueryResGetRewardsHistorical_outParamList[9]);

							tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList.ssENRewardReason.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetRewardsHistorical_outParamList[10]);

							tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList.ssENRewardReason.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetRewardsHistorical_outParamList[11]);

							queryResGetRewardsHistorical_outParamList.Append(tmpAuxCurrentRecordqueryResGetRewardsHistorical_outParamList);
						}
					}
				}
				queryResGetRewardsHistorical_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetRewardsHistorical_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetRewardsHistorical_outParamList;
				tmpcurrentrownumberqueryResGetRewardsHistorical_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetRewardsHistorical_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetRewardsHistorical_outParamList;
				tmpeofqueryResGetRewardsHistorical_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetRewardsHistorical_outParamList_eof", false);
				queryResGetRewardsHistorical_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetRewardsHistorical_outParamList, tmpeofqueryResGetRewardsHistorical_outParamList);

				#endregion

				resUserCheck_outParamPermissionType = (int) ViewStateAttributes.GetFromViewState("resUserCheck_outParamPermissionType", 0);
				inParamStudentReference = (string) ViewStateAttributes.GetFromViewState("inParamStudentReference", "");
				inParamSessionID = (int) ViewStateAttributes.GetFromViewState("inParamSessionID", 0);
				inParamCourseCode = (string) ViewStateAttributes.GetFromViewState("inParamCourseCode", "");
				inParamFromLearnerList = (bool) ViewStateAttributes.GetFromViewState("inParamFromLearnerList", false);
				varLcVisible = (bool) ViewStateAttributes.GetFromViewState("varLcVisible", false);
				((IWidgetRuntimeProperties) this.FindControl("wt_ComboBox86")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wt_ComboBox86_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtRewardInput")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtRewardInput_Mandatory", false);
				ssEditRecordRewardRecord.ssENReward.ssId = (int) ViewStateAttributes.GetFromViewState("wtEditRecordReward_record_ssENReward_ssId", 0);
				ssEditRecordRewardRecord.ssENReward.ssReasonId = (int) ViewStateAttributes.GetFromViewState("wtEditRecordReward_record_ssENReward_ssReasonId", 0);
				ssEditRecordRewardRecord.ssENReward.ssDescription = (string) ViewStateAttributes.GetFromViewState("wtEditRecordReward_record_ssENReward_ssDescription", "");
				ssEditRecordRewardRecord.ssENReward.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecordReward_record_ssENReward_ChangedAttributes", null));
				ssEditRecordRewardRecord.ssENReward.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecordReward_record_ssENReward_OptimizedAttributes", null));
				recListRAGLastChanges_List_Restore();
				recListHistoricalAwards_Restore();
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}


		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			ValidationUtils.ValidateComboBox(this, "wt_ComboBox86", parentEditRecord, validate);
			ValidationUtils.ValidateInput(this, "wtRewardInput", parentEditRecord, ValidationUtils.validateTrue, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}


		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}

		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			Page_Load(null, null); this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}


		public override void DataBind() {
			base.DataBind();
			StoreViewState();
			OutSystems.HubEdition.WebWidgets.Utils.addValidationScriptsToPage(this);
		}



	}




}
