/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.IO;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Runtime.Serialization;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Web.Caching;
using System.Text;
using System.Resources;

namespace ssCaseConferencing.Flows.FlowLearners {

	public class ScrnLearnerList: OSPageViewStateCompressed, IWebScreen, INegotiateTabIndexes, IBookmarkableURL {


		public ScrnLearnerList(): base(CaseConferencing_Properties.QuirksMode) {
		}


		/// <summary>
		/// Screen Input Parameter inParamCourseCode. Description:
		/// </summary>
		public string inParamCourseCode = "";
		/// <summary>
		/// Variable <code>varLcLearnerKeywordSearch</code> that represents the Service Studio local variable
		///  <code>LearnerKeywordSearch</code> <p>Description: </p>
		/// </summary>
		string varLcLearnerKeywordSearch = "";

		/// <summary>
		/// Variable <code>varLcIsFavorite_Filter</code> that represents the Service Studio local variable
		///  <code>IsFavorite_Filter</code> <p>Description: </p>
		/// </summary>
		bool varLcIsFavorite_Filter = false;

		/// <summary>
		/// Variable <code>varLcSelected_StudentId</code> that represents the Service Studio local variable
		///  <code>Selected_StudentId</code> <p>Description: </p>
		/// </summary>
		string varLcSelected_StudentId = "";

		/// <summary>
		/// Variable <code>varLcStudentBirthDate</code> that represents the Service Studio local variable
		///  <code>StudentBirthDate</code> <p>Description: </p>
		/// </summary>
		DateTime varLcStudentBirthDate = new DateTime(1900, 1, 1, 0, 0, 0);

		/// <summary>
		/// Variable <code>varLcSafeguardingFilter</code> that represents the Service Studio local variable
		///  <code>SafeguardingFilter</code> <p>Description: </p>
		/// </summary>
		string varLcSafeguardingFilter = "";

		/// <summary>
		/// Variable <code>varLcURL</code> that represents the Service Studio local variable <code>URL</code>
		///  <p>Description: </p>
		/// </summary>
		string varLcURL = "";

		/// <summary>
		/// Variable ThemeProvider_wt_WebBlockInstance35
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main ThemeProvider_wt_WebBlockInstance35;
		/// <summary>
		/// Variable (wt_Button82) with Button component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.Button wt_Button82;
		protected OutSystems.HubEdition.WebWidgets.Container wtPopupTarget;
		protected OutSystems.HubEdition.WebWidgets.Container wtPopupSMS;
		/// <summary>
		/// Variable (wtPopupSMSLnk) with Button component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.Button wtPopupSMSLnk;
		protected OutSystems.HubEdition.WebWidgets.Container wtPopupEmail;
		/// <summary>
		/// Variable (wtPopupEmailLnk) with Button component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.Button wtPopupEmailLnk;
		protected OutSystems.HubEdition.WebWidgets.Container wtdummy;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container79;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_Input70ValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wt_Input70ValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container30;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtTarget_TargetDateValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtTarget_TargetDateValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container5;
		/// <summary>
		/// Variable "True" if the Widget wt_If62
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If62T;

		/// <summary>
		/// Variable "True" if the Widget wt_If62
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If62F;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtSafeguardingDDValidatorRequired;
		protected SelectRtWidget Rt_wtSafeguardingDD = new SelectRtWidget();
		RLSafeguardingIssueTypeRecordList Rt_wtSafeguardingDD_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.Container wtLearnerListWrapper;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container33;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container55;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentFavourite3;
		/// <summary>
		/// Variable "True" if the Widget wtFiltterVavorite
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wtFiltterVavoriteT;

		/// <summary>
		/// Variable "True" if the Widget wtFiltterVavorite
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wtFiltterVavoriteF;
		/// <summary>
		/// Variable (wt_Link97) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link97;
		/// <summary>
		/// Variable (wt_Link93) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link93;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container4;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container28;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container14;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container21;
		private RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList _ssLearnerListList = new RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList();
		public RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList ssLearnerListList {
			get {
				return _ssLearnerListList; 
			}
			set {
				_ssLearnerListList = value;
				wtLearnerList.DataSource = value;
				ssLearnerListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtLearnerList;
		public ArrayList wtLearnerList_storage = new ArrayList();
		protected bool ssLearnerListList_notUsedYet = true;
		protected bool ssLearnerListListDoDataBind;
		protected bool ssLearnerListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container19;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container87;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container15;
		/// <summary>
		/// Variable (wtListCourseClassEnrolments) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wtListCourseClassEnrolments;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container20;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container13;
		/// <summary>
		/// Variable "True" if the Widget wt_If61
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If61T;

		/// <summary>
		/// Variable "True" if the Widget wt_If61
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If61F;
		protected OutSystems.HubEdition.WebWidgets.Container wtSafeguardingWrapper2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container51;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container7;
		/// <summary>
		/// Variable "True" if the Widget wt_If2
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If2T;

		/// <summary>
		/// Variable "True" if the Widget wt_If2
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If2F;
		/// <summary>
		/// Variable (wt_Link83) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link83;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container96;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_ComboBox75ValidatorRequired;
		protected SelectRtWidget Rt_wt_ComboBox75 = new SelectRtWidget();
		RLActionItemRecordList Rt_wt_ComboBox75_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentFavourite2;
		/// <summary>
		/// Variable "True" if the Widget wt_If68
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If68T;

		/// <summary>
		/// Variable "True" if the Widget wt_If68
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If68F;
		/// <summary>
		/// Variable (wt_Link49) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link49;
		/// <summary>
		/// Variable (wt_Link42) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link42;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container37;


		protected override void GetBlocksCss(TextWriter writer, bool inline, HashSet<string> visited) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate.GetCss(writer, inline, visited);
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkInput_Calendar.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkList_Counter.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_InfoBalloon.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkList_Navigation.GetCss(writer, inline, visited);

		}

		protected override void GetWidgetsCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}







		protected override string GetInlineStyleSheetInclude() {
			throw new InvalidOperationException();
		}





		protected override bool PageAllowsCallbacks() {
			return true;
		}


		protected string GetRequestInfoJavaScript() {
			return GetRequestInfoJavaScript("ijmkL_iOQEuryYYknbKlDg", "LearnerList");
		}

		protected string GetVisitCode() {
			SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
			if (session["osIsNewVisit"] != null && ((bool) session["osIsNewVisit"])
			// && !NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)
			&& RuntimePlatformUtils.IsValidRequestForVisit()) {
				return "<script type=\"text/javascript\">outsystems.internal.$.get(\"/CaseConferencing/_status.aspx\")</script>";
			}
			return "";
		}

		public string GetCallbackDebug() {
			if (Request.HttpMethod == "GET" && Request.QueryString["__CALLBACK_DEBUG"] != null && Request.QueryString["__CALLBACK_DEBUG"] != "") {
				if (Request.QueryString["__CALLBACK_DEBUG"] == OutSystems.HubEdition.RuntimePlatform.AppInfo.GetParameter(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Callback_Debug_Information_Key)) {
					return OutSystems.HubEdition.RuntimePlatform.AppInfo.GetAppInfo().GetCallbackDebugInformation();
				}
			}
			return "";
		}

		protected string GetHeadTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadTop, "ijmkL_iOQEuryYYknbKlDg", "LearnerList");
		}

		protected string GetHeadBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadBottom, "ijmkL_iOQEuryYYknbKlDg", "LearnerList");
		}

		protected string GetBodyTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyTop, "ijmkL_iOQEuryYYknbKlDg", "LearnerList");
		}

		protected string GetBodyBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyBottom, "ijmkL_iOQEuryYYknbKlDg", "LearnerList");
		}

		HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();



		static ScrnLearnerList() {
		}


		RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList queryResGetStudents_outParamList = new RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList();
		int queryResGetStudents_outParamCount = 0;
		int resUserCheck_outParamPermissionType = 0;
		RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList queryResGetStudents2_outParamList = new RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList();
		int queryResGetStudents2_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// AddMetaTags
			Actions.ActionAddMetaTags(heContext);
			// UserCheck
			Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("_KYQXHHc8UGnRSwylLWQ0Q")).ssId, out resUserCheck_outParamPermissionType);
			if ((resUserCheck_outParamPermissionType==BuiltInFunction.NullIdentifier())) {
				// Destination = ExternalURL

				if (OSPage.IsAjaxRequest) {
					// go to target page
					{

						((OSPage) Page).ClearErrorHandler();
						if (OSPage.IsAjaxRequest) {
							string sURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "InvalidPermissions", "ThemeProvider", "", "", "", "", "", "", "", "", "", "");
							sURL = sURL.Replace("&amp;", "&");
							sURL = RuntimePlatformUtils.GetURL(sURL, AppUtils.Instance, Global.App.eSpaceName);
							((OSPageViewState) Page).RedirectLocation = sURL;
						} else {
							string sURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "InvalidPermissions", "ThemeProvider", "", "", "", "", "", "", "", "", "", "");
							sURL = sURL.Replace("&amp;", "&");
							sURL = RuntimePlatformUtils.GetURL(sURL, AppUtils.Instance, Global.App.eSpaceName);
							Response.BufferOutput = true;
							Response.Redirect(sURL, true);
						}
						return;

					}
				} else {
					// go to target page
					{

						((OSPage) Page).ClearErrorHandler();
						if (OSPage.IsAjaxRequest) {
							string sURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "InvalidPermissions", "ThemeProvider", "", "", "", "", "", "", "", "", "", "");
							sURL = sURL.Replace("&amp;", "&");
							sURL = RuntimePlatformUtils.GetURL(sURL, AppUtils.Instance, Global.App.eSpaceName);
							((OSPageViewState) Page).RedirectLocation = sURL;
						} else {
							string sURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "InvalidPermissions", "ThemeProvider", "", "", "", "", "", "", "", "", "", "");
							sURL = sURL.Replace("&amp;", "&");
							sURL = RuntimePlatformUtils.GetURL(sURL, AppUtils.Instance, Global.App.eSpaceName);
							Response.BufferOutput = true;
							Response.Redirect(sURL, true);
						}
						return;

					}
				}

			} else {
				varLcIsFavorite_Filter = (((inParamCourseCode!= "")) ?(false):(true)); // IsFavorite_Filter = internalIf
				if (((bool) Global.App.OsContext.Session["CaseConferencing.ClearLearnerPagination"])) {
					Global.App.OsContext.Session["CaseConferencing.ClearLearnerPagination"] = false; // ClearLearnerPagination = False
					// List_Navigation_ResetStartIndex2
					Actions.ActionList_Navigation_ResetStartIndex(heContext, wtLearnerList.ClientID);

				}
				// Query QueryGetStudents
				int QueryGetStudents_maxRecords = ((Functions.rssespacerichwidgets_ActionList_Navigation_GetStartIndex(heContext, wtLearnerList.ClientID, true, -1) +wtLearnerList.RtWidget.LineCount) +1);
				if (QueryGetStudents_maxRecords < 1) QueryGetStudents_maxRecords = 1;
				queryResGetStudents_outParamList = FuncssPreparation.QueryGetStudents(heContext, QueryGetStudents_maxRecords, IterationMultiplicity.Single, out queryResGetStudents_outParamCount, varLcLearnerKeywordSearch
				, ((int) Global.App.OsContext.Session["UserID"])
				, varLcIsFavorite_Filter
				, varLcStudentBirthDate
				, BuiltInFunction.NullDate()
				, varLcSafeguardingFilter
				, (Rt_wtSafeguardingDD.SpecialListVal== "1")
				, inParamCourseCode
				);
				if ((queryResGetStudents_outParamList.Empty&&(inParamCourseCode== ""))) {
					varLcIsFavorite_Filter = false; // IsFavorite_Filter = False
					// Query QueryGetStudents2
					int QueryGetStudents2_maxRecords = Math.Max(wtLearnerList.StartIndex + wtLearnerList.LineCount + 1, 0);
					queryResGetStudents2_outParamList = FuncssPreparation.QueryGetStudents2(heContext, QueryGetStudents2_maxRecords, IterationMultiplicity.Single, out queryResGetStudents2_outParamCount, varLcLearnerKeywordSearch
					, ((int) Global.App.OsContext.Session["UserID"])
					, varLcIsFavorite_Filter
					);
					queryResGetStudents_outParamList = queryResGetStudents2_outParamList; // GetStudents.List = GetStudents2.List
					queryResGetStudents_outParamCount = queryResGetStudents2_outParamCount; // GetStudents.Count = GetStudents2.Count

				}

			}
		}


		protected override BaseAppUtils GetAppUtils() {
			return AppUtils.Instance;
		}

		protected override string OwnCssUrl {
			get {
				return "LearnerList.css"; 
			}
		}

		protected override string OwnCssFile {
			get {
				return "LearnerList.css"; 
			}
		}

		protected override string BasicCssUrl {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string BasicCssFile {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssUrl {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssFile {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssUrl {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssFile {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssUrl {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssFile {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssUrl {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssFile {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string ThemeCssUrl {
			get {
				return RsseSpaceThemeProvider.Themes.ThemeThemeProvider.ThemeCssUrl; 
			}
		}

		protected override string ThemeCssFile {
			get {
				return "ReferenceTheme.ThemeProvider.css"; 
			}
		}

		protected override string ThemeExtraCssUrl {
			get {
				return RsseSpaceRichWidgets.Themes.ThemeLondonFixed.ThemeExtraCssUrl; 
			}
		}

		protected override string ThemeExtraCssFile {
			get {
				return "ReferenceTheme.LondonFixed.extra.css"; 
			}
		}

		public override bool IsUsingMobileTheme {
			get {
				return false; 
			}
		}

		protected override string OwnJavascriptInclude {
			get {
				return ""; 
			}
		}

		public override string XUACompatibleOverride {
			get {
				return null; 
			}
		}

		protected void InitializeUrls() {
			Uri uri = new Uri((RuntimePlatformUtils.RequestIsSecure(Request) ? "https": "http") + Request.Url.ToString().Substring(Request.Url.Scheme.Length));
			string applicationUrl = AppUtils.Instance.getImagePath(/*internalAccess*/false,/*includeSessionIdIfNeeded*/ false);
			actionUrl = "";
			bookmarkableUrl = uri.GetLeftPart(UriPartial.Authority) + applicationUrl;
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			if ((inParamCourseCode!= "")) {
				parameters.Add(new Pair<string, string>("CourseCode", HttpUtility.UrlEncode(inParamCourseCode, Request.ContentEncoding)));
			}
			if (Request.AppRelativeCurrentExecutionFilePath.IndexOf('/', 2) == -1) {
				AppInfo appInfo = AppInfo.GetAppInfo();
				if (appInfo != null) {
					string pageHeader = appInfo.OsContext.OsISAPIFilter.GetPage(Request);
					if (appInfo.OsContext.IsCookielessSession || (pageHeader != null && pageHeader.IndexOf('/', 1) != -1)) {
						actionUrl = applicationUrl;
					}
				}
				actionUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerList", parameters,/*useParamsOnlyIfNeededForRule*/ true);
			}
			bookmarkableUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerList", parameters,/*useParamsOnlyIfNeededForRule*/ false);

		}

		protected override void OnInit(EventArgs e) {
			HeContext heContext = AppInfo.GetAppInfo().OsContext;
			heContext.CurrentScreen = this;
			try {
				heContext.CurrentExecutionFileName = Path.GetFileName(Request.CurrentExecutionFilePath);
			} catch {}
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			ThemeProvider_wt_WebBlockInstance35 = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main) FindControl("ThemeProvider_wt_WebBlockInstance35");
			wt_Button82 = (OutSystems.HubEdition.WebWidgets.Button) FindControl("wt_Button82");
			if (this.wt_Button82 != null) {
				this.wt_Button82.Click += new System.EventHandler(this.wt_Button82_Click);
			}
			wtPopupTarget = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtPopupTarget");
			wtPopupSMS = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtPopupSMS");
			wtPopupSMSLnk = (OutSystems.HubEdition.WebWidgets.Button) FindControl("wtPopupSMSLnk");
			wtPopupEmail = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtPopupEmail");
			wtPopupEmailLnk = (OutSystems.HubEdition.WebWidgets.Button) FindControl("wtPopupEmailLnk");
			wtdummy = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtdummy");
			wt_Container79 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container79");
			wt_Container30 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container30");
			wt_Container5 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container5");
			wtLearnerListWrapper = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtLearnerListWrapper");
			wt_Container33 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container33");
			wt_Container55 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container55");
			wtStudentFavourite3 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtStudentFavourite3");
			wt_Link97 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link97");
			if (this.wt_Link97 != null) {
				this.wt_Link97.Click += new System.EventHandler(this.wt_Link97_Click);
			}
			wt_Link93 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link93");
			if (this.wt_Link93 != null) {
				this.wt_Link93.Click += new System.EventHandler(this.wt_Link93_Click);
			}
			wt_Container4 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container4");
			wt_Container28 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container28");
			wt_Container14 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container14");
			wt_Container21 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container21");
			wtLearnerList = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtLearnerList");
			wtLearnerList.StartIndexExpression = () => Functions.rssespacerichwidgets_ActionList_Navigation_GetStartIndex(heContext, wtLearnerList.ClientID, true, -1);
			wtLearnerList.LineCountExpression = () => 10;
			wtLearnerList.EmptyMessageExpression = () => "No items to show...";
			if (this.wt_Link49 != null) {
				this.wt_Link49.Click += new System.EventHandler(this.wt_Link49_Click);
			}
			if (this.wt_Link42 != null) {
				this.wt_Link42.Click += new System.EventHandler(this.wt_Link42_Click);
			}
			wt_Container37 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container37");
			Page.Error += new EventHandler(Page_Error);
			this.Load += new System.EventHandler(this.Page_Load);
			this.PreRender += new System.EventHandler(this.Page_PreRender);
		}

		public override Control FindControl(string id) {
			if (id == "wt_WebBlockInstance46") {
				return ThemeProvider_wt_WebBlockInstance35.wtHelpUpdate.FindControl("wt_WebBlockInstance46");
			}
			if (id == "ThemeProvider_wt_WebBlockInstance36") {
				return ThemeProvider_wt_WebBlockInstance35.wtHeaderActions.FindControl("ThemeProvider_wt_WebBlockInstance36");
			}
			if (id == "RichWidgets_wt_WebBlockInstance84") {
				return ThemeProvider_wt_WebBlockInstance35.wtTitle.FindControl("RichWidgets_wt_WebBlockInstance84");
			}
			if (id == "wt_InlineExpression23") {
				return ThemeProvider_wt_WebBlockInstance35.wtTitle.FindControl("wt_InlineExpression23");
			}
			if (id == "wt_Button82") {
				return ThemeProvider_wt_WebBlockInstance35.wtTitle.FindControl("wt_Button82");
			}
			if (id == "wtPopupTarget") {
				return ThemeProvider_wt_WebBlockInstance35.wtTitle.FindControl("wtPopupTarget");
			}
			if (id == "wtPopupSMS") {
				return ThemeProvider_wt_WebBlockInstance35.wtTitle.FindControl("wtPopupSMS");
			}
			if (id == "wtPopupSMSLnk") {
				return ThemeProvider_wt_WebBlockInstance35.wtTitle.FindControl("wtPopupSMSLnk");
			}
			if (id == "RichWidgets_wt_WebBlockInstance41") {
				return ThemeProvider_wt_WebBlockInstance35.wtTitle.FindControl("RichWidgets_wt_WebBlockInstance41");
			}
			if (id == "wtPopupEmail") {
				return ThemeProvider_wt_WebBlockInstance35.wtTitle.FindControl("wtPopupEmail");
			}
			if (id == "wtPopupEmailLnk") {
				return ThemeProvider_wt_WebBlockInstance35.wtTitle.FindControl("wtPopupEmailLnk");
			}
			if (id == "RichWidgets_wt_WebBlockInstance76") {
				return ThemeProvider_wt_WebBlockInstance35.wtTitle.FindControl("RichWidgets_wt_WebBlockInstance76");
			}
			if (id == "wtdummy") {
				return ThemeProvider_wt_WebBlockInstance35.wtTitle.FindControl("wtdummy");
			}
			if (id == "wt_Text11") {
				return ThemeProvider_wt_WebBlockInstance35.wtTitle.FindControl("wt_Text11");
			}
			if (id == "wt_Container79") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Container79");
			}
			if (id == "wt_Text44") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Text44");
			}
			if (id == "wt_Input70") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Input70");
			}
			if (id == "wt_Container30") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Container30");
			}
			if (id == "wt_InlineExpression67") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_InlineExpression67");
			}
			if (id == "wtTarget_TargetDate") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wtTarget_TargetDate");
			}
			if (id == "RichWidgets_wt_WebBlockInstance66") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("RichWidgets_wt_WebBlockInstance66");
			}
			if (id == "wt_Container5") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Container5");
			}
			if (id == "wt_If62") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_If62");
			}
			if (id == "wt_If62T") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_If62T");
			}
			if (id == "wt_InlineExpression91") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_InlineExpression91");
			}
			if (id == "wt_Text12") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Text12");
			}
			if (id == "wtSafeguardingDD") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wtSafeguardingDD");
			}
			if (id == "wt_If62F") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_If62F");
			}
			if (id == "wtLearnerListWrapper") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wtLearnerListWrapper");
			}
			if (id == "wt_Container33") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Container33");
			}
			if (id == "RichWidgets_wt_WebBlockInstance47") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("RichWidgets_wt_WebBlockInstance47");
			}
			if (id == "wt_Container55") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Container55");
			}
			if (id == "wtStudentFavourite3") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wtStudentFavourite3");
			}
			if (id == "wtFiltterVavorite") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wtFiltterVavorite");
			}
			if (id == "wtFiltterVavoriteT") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wtFiltterVavoriteT");
			}
			if (id == "wt_Link97") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Link97");
			}
			if (id == "RichWidgets_wt_WebBlockInstance58") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("RichWidgets_wt_WebBlockInstance58");
			}
			if (id == "wtFiltterVavoriteF") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wtFiltterVavoriteF");
			}
			if (id == "wt_Link93") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Link93");
			}
			if (id == "RichWidgets_wt_WebBlockInstance10") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("RichWidgets_wt_WebBlockInstance10");
			}
			if (id == "wt_Container4") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Container4");
			}
			if (id == "wt_Text73") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Text73");
			}
			if (id == "wt_Container28") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Container28");
			}
			if (id == "wt_Text71") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Text71");
			}
			if (id == "wt_Container14") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Container14");
			}
			if (id == "wt_Text80") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Text80");
			}
			if (id == "wt_Container21") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Container21");
			}
			if (id == "wtLearnerList") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wtLearnerList");
			}
			if (id == "wt_Container37") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("wt_Container37");
			}
			if (id == "RichWidgets_wt_WebBlockInstance17") {
				return ThemeProvider_wt_WebBlockInstance35.wtMainContent.FindControl("RichWidgets_wt_WebBlockInstance17");
			}

			return base.FindControl(id);
		}


		private void Page_Load(object sender, System.EventArgs e) {
			// init vars
			AppInfo appInfo = Global.App;
			if (appInfo != null) {
				heContext = appInfo.OsContext;
			}
			Response.ContentType = "text/html; charset=" + Response.ContentEncoding.WebName;
			OutSystems.HubEdition.RuntimePlatform.Web.JavaScriptManager.CheckRelativeJavaScriptPrefix(AppUtils.Instance.getImagePath());
			appInfo.IsLoadingScreen = !IsPostBack;
			((OSPageViewState) Page).EnableResetViewState();
			if (!IsPostBack) {
				ArrayList screenParameters = (ArrayList) Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerList"];
				bool screenParametersInSession = false;
				object screenParametersKey = heContext.Session["_ScreenParametersKey"];
				if ((screenParametersKey == null || this.Key.Equals(ObjectKey.Parse(Convert.ToString(screenParametersKey)))) && screenParameters != null) {
					try {
						if (screenParameters.Count > 0) {
							object paramValue = screenParameters[0];
							if (paramValue != null) {
								inParamCourseCode = (string) paramValue;
							}
						}
						screenParametersInSession = true;
					} catch (Exception parametersException) {
						ErrorLog.LogApplicationError("Failed to load Screen Input Parameters from session.", "ScreenParametersKey = " + screenParametersKey + ", Count = " + screenParameters.Count + "\r\n" + parametersException.StackTrace, heContext, "Global");
					} finally {
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerList"] = null;
						heContext.Session["_ScreenParametersKey"] = null;
					}
				}
				else if (Request.HttpMethod == "GET") {
					if (Request.QueryString["CourseCode"] != null) {
						inParamCourseCode = Request.QueryString["CourseCode"];
					}
				}
				else if (Request.HttpMethod == "POST") {
					if (Request.Form["CourseCode"] != null) {
						inParamCourseCode = Request.Form["CourseCode"];
					}
				}
			}
			if (!appInfo.IsApplicationEnabled) {
				ErrorLog.LogApplicationError(new Exception("eSpace " + appInfo.eSpaceName + " is disabled"), heContext, "Global");
				String contact = BuiltInFunction.EncodeUrl(RuntimePlatformUtils.GetAdministrationEmail());
				try {
					Server.Transfer("/customHandlers/app_offline.aspx?contact=" + contact + "&errorCode=APPLICATION_OFFLINE");
				}
				catch (System.Threading.ThreadAbortException) {}
				catch {
					Response.Redirect("/customHandlers/internalerror.aspx");
				}
			}
			InitializeUrls();
			Actions.ActionOnBeginWebRequest(heContext);
			if (!IsPostBack) {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				Preparation(heContext);
				bool bindEditRecords = !IsPostBack;
				ssLearnerListListDoDataBind = true;
				Title = "LearnerList"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerList", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} else {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				FetchViewState();
			}

		}

		private bool _negociateTabIndexesExecuted = false;

		private void Page_PreRender(object sender, System.EventArgs e) {
			ClientScript.RegisterArrayDeclaration("OsPage_Validators", "{}");
			if (!_negociateTabIndexesExecuted) {
				NegotiateTabIndexes();
				_negociateTabIndexesExecuted = true;
			}
			foreach(Control child in this.Controls) {
				DisableViewState(child);
			}
		}

		private void NegotiateTabIndexes() {
			short tabindex=1;
			tabindex = NegotiateTabIndexes(tabindex, true);
		}

		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {
			try {
				wt_Button82 = wt_Button82 ??(OutSystems.HubEdition.WebWidgets.Button) rootCtrl.FindControl("wt_Button82");
			} catch {}
			string jsString = (wt_Button82 != null) ? "return OsEnterKey('" +wt_Button82.ClientID + "', arguments[0] || window.event)": "";

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {
						string onkeydown = ctrl.Attributes["onkeydown"];
						if (onkeydown == null)
						onkeydown = "";
						ctrl.Attributes.Add("onkeydown", onkeydown + jsString);

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}



		private void Page_Error(object sender, System.EventArgs e) {
			if (! new ssCaseConferencing.Flows.FlowLearners.ExceptionHandler(this, false).HandleException()) {
				DatabaseAccess.FreeupResources(false);
				Server.Transfer("_WebErrorPage.aspx");
			}
		}

		public override void ClearErrorHandler() {
			Error -= Page_Error;
		}

		public void CheckPermissions(HeContext heContext) {
			{
				bool check;
				ExtendedActions.CheckCaseConferencingBackofficeRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckPLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckRegisteredRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSuperUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSafeGuardingLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportPractitionerRole(heContext, 0, out check);
				if (check) return;
			}
			throw new ExcptNotCaseConferencingBackoffice("CaseConferencingBackoffice role required");
		}


		public ObjectKey Key {
			get {
				return ObjectKey.Parse("ijmkL_iOQEuryYYknbKlDg"); 
			}
		}

		public bool isSecure {
			get {
				return true; 
			}
		}


		/// <summary>
		/// Action <code>CommandOnLearnerClick</code> that represents the Service Studio screen action
		///  <code>OnLearnerClick</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnLearnerClick(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Destination = LearnerDetailsOverview

				if (OSPage.IsAjaxRequest) {
					// go to target page
					{

						((OSPage) Page).ClearErrorHandler();
						// get parameters
						heContext.Session["_ScreenParametersKey"] = "Ll6e8OlyEUirEGk6MODdUA";
						ArrayList screenParameters = new ArrayList();
						screenParameters.Add(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference);
						screenParameters.Add(0);
						screenParameters.Add("");
						screenParameters.Add(true);
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"] = screenParameters;
						string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference) + "&" +
						 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode("True");
						sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
						string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsOverview.aspx" + sURLQuery;
						((OSPageViewState) Page).RedirectLocation = sURL;
						return false;

					}
				} else {
					// go to target page
					{

						((OSPage) Page).ClearErrorHandler();
						// get parameters
						heContext.Session["_ScreenParametersKey"] = "Ll6e8OlyEUirEGk6MODdUA";
						ArrayList screenParameters = new ArrayList();
						screenParameters.Add(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference);
						screenParameters.Add(0);
						screenParameters.Add("");
						screenParameters.Add(true);
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"] = screenParameters;
						Server.Transfer("LearnerDetailsOverview.aspx");
						return false;

					}
				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvSearch: VarsBag {
			public bool inParamIsFavorite;
			public lcvSearch(bool inParamIsFavorite) {
				this.inParamIsFavorite = inParamIsFavorite;
			}
		}
		/// <summary>
		/// Action <code>CommandSearch</code> that represents the Service Studio screen action
		///  <code>Search</code> <p> Description: </p>
		/// </summary>
		private bool CommandSearch(HeContext heContext, bool inParamIsFavorite) {
			CheckPermissions(heContext);
			lcvSearch localVars = new lcvSearch(inParamIsFavorite);
			try {
				if (localVars.inParamIsFavorite) {
					// List_Navigation_ResetStartIndex
					Actions.ActionList_Navigation_ResetStartIndex(heContext, wtLearnerList.ClientID);
					varLcIsFavorite_Filter = (!varLcIsFavorite_Filter); // IsFavorite_Filter = notIsFavorite_Filter

				}
				// Query QueryGetStudents
				{
					int QueryGetStudents_maxRecords = ((Functions.rssespacerichwidgets_ActionList_Navigation_GetStartIndex(heContext, wtLearnerList.ClientID, true, -1) +wtLearnerList.RtWidget.LineCount) +1);
					if (QueryGetStudents_maxRecords < 1) QueryGetStudents_maxRecords = 1;
					queryResGetStudents_outParamList = FuncssPreparation.QueryGetStudents(heContext, QueryGetStudents_maxRecords, IterationMultiplicity.Multiple, out queryResGetStudents_outParamCount, varLcLearnerKeywordSearch
					, ((int) Global.App.OsContext.Session["UserID"])
					, varLcIsFavorite_Filter
					, varLcStudentBirthDate
					, BuiltInFunction.NullDate()
					, varLcSafeguardingFilter
					, (Rt_wtSafeguardingDD.SpecialListVal== "1")
					, inParamCourseCode
					);
				}
				if ((wtLearnerList.RtWidget.StartIndex>queryResGetStudents_outParamList.Length)) {
					// List_Navigation_ResetStartIndex3
					Actions.ActionList_Navigation_ResetStartIndex(heContext, wtLearnerList.ClientID);

				}
				// Refresh Widget (wtLearnerListWrapper)
				ssLearnerListListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtLearnerListWrapper, "None", StoreViewState);
				// Refresh Widget (wtFiltterVavorite)
				((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtFiltterVavorite"), "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvExecAction: VarsBag {
			public string resGetStudentCertificateURL_outParamURL = "";
			public string resGetStudentCertificateURL_outParamSID = "";

			public lcvExecAction() {
			}
		}
		/// <summary>
		/// Action <code>CommandExecAction</code> that represents the Service Studio screen action
		///  <code>ExecAction</code> <p> Description: </p>
		/// </summary>
		private bool CommandExecAction(HeContext heContext) {
			CheckPermissions(heContext);
			lcvExecAction localVars = new lcvExecAction();
			try {
				if ((getWtLearnerListList().CurrentRec.ssSTSelectAction.ssSelectAction== "SelectAction")) {
					// Update Screen
					return true;

				} else {
					if ((getWtLearnerListList().CurrentRec.ssSTSelectAction.ssSelectAction== "ViewLearnerDetails")) {
						// Destination = LearnerDetailsOverview

						if (OSPage.IsAjaxRequest) {
							// go to target page
							{

								((OSPage) Page).ClearErrorHandler();
								// get parameters
								heContext.Session["_ScreenParametersKey"] = "Ll6e8OlyEUirEGk6MODdUA";
								ArrayList screenParameters = new ArrayList();
								screenParameters.Add(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference);
								screenParameters.Add(0);
								screenParameters.Add("");
								screenParameters.Add(true);
								Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"] = screenParameters;
								string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference) + "&" +
								 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode("True");
								sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
								string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsOverview.aspx" + sURLQuery;
								((OSPageViewState) Page).RedirectLocation = sURL;
								return false;

							}
						} else {
							// go to target page
							{

								((OSPage) Page).ClearErrorHandler();
								// get parameters
								heContext.Session["_ScreenParametersKey"] = "Ll6e8OlyEUirEGk6MODdUA";
								ArrayList screenParameters = new ArrayList();
								screenParameters.Add(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference);
								screenParameters.Add(0);
								screenParameters.Add("");
								screenParameters.Add(true);
								Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"] = screenParameters;
								Server.Transfer("LearnerDetailsOverview.aspx");
								return false;

							}
						}

					} else {
						if ((getWtLearnerListList().CurrentRec.ssSTSelectAction.ssSelectAction== "SendEmail")) {
							varLcSelected_StudentId = getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference; // Selected_StudentId = LearnerList.List.Current.Student.StudentReference
							// Refresh Widget (wtPopupEmail)
							((OSPageViewState) Page).AjaxRefresh(wtPopupEmail, "None", StoreViewState);
							// RunJavaScript3
							Actions.ActionRunJavaScript(heContext, (("document.getElementById(\'" +wtPopupEmailLnk.ClientID) + "\').click();"));

						} else {
							if ((getWtLearnerListList().CurrentRec.ssSTSelectAction.ssSelectAction== "SendText")) {
								varLcSelected_StudentId = getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference; // Selected_StudentId = LearnerList.List.Current.Student.StudentReference
								// Refresh Widget (wtPopupSMS)
								((OSPageViewState) Page).AjaxRefresh(wtPopupSMS, "None", StoreViewState);
								// RunJavaScript2
								Actions.ActionRunJavaScript(heContext, (("document.getElementById(\'" +wtPopupSMSLnk.ClientID) + "\').click();"));

							} else {
								if ((getWtLearnerListList().CurrentRec.ssSTSelectAction.ssSelectAction== "SetTargets")) {
									// Destination = LearnerDetailsTabs

									if (OSPage.IsAjaxRequest) {
										// go to target page
										{

											((OSPage) Page).ClearErrorHandler();
											// get parameters
											heContext.Session["_ScreenParametersKey"] = "D63wS0IcrU6RmCO_pzVF0w";
											ArrayList screenParameters = new ArrayList();
											screenParameters.Add(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference);
											screenParameters.Add(0);
											screenParameters.Add("");
											screenParameters.Add(true);
											screenParameters.Add(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("G2Uii45UX0ShwQzIkCqqYw")).ssId);
											Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsTabs"] = screenParameters;
											string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference) + "&" +
											 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode("True") + "&" +
											 "ActiveTabId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("G2Uii45UX0ShwQzIkCqqYw")).ssId));
											sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
											string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsTabs.aspx" + sURLQuery;
											((OSPageViewState) Page).RedirectLocation = sURL;
											return false;

										}
									} else {
										// go to target page
										{

											((OSPage) Page).ClearErrorHandler();
											// get parameters
											heContext.Session["_ScreenParametersKey"] = "D63wS0IcrU6RmCO_pzVF0w";
											ArrayList screenParameters = new ArrayList();
											screenParameters.Add(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference);
											screenParameters.Add(0);
											screenParameters.Add("");
											screenParameters.Add(true);
											screenParameters.Add(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("G2Uii45UX0ShwQzIkCqqYw")).ssId);
											Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsTabs"] = screenParameters;
											Server.Transfer("LearnerDetailsTabs.aspx");
											return false;

										}
									}

								} else {
									if ((getWtLearnerListList().CurrentRec.ssSTSelectAction.ssSelectAction== "SetSafeguarding")) {
										// Destination = LearnerDetailsTabs

										if (OSPage.IsAjaxRequest) {
											// go to target page
											{

												((OSPage) Page).ClearErrorHandler();
												// get parameters
												heContext.Session["_ScreenParametersKey"] = "D63wS0IcrU6RmCO_pzVF0w";
												ArrayList screenParameters = new ArrayList();
												screenParameters.Add(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference);
												screenParameters.Add(0);
												screenParameters.Add("");
												screenParameters.Add(true);
												screenParameters.Add(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId);
												Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsTabs"] = screenParameters;
												string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference) + "&" +
												 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode("True") + "&" +
												 "ActiveTabId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId));
												sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
												string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsTabs.aspx" + sURLQuery;
												((OSPageViewState) Page).RedirectLocation = sURL;
												return false;

											}
										} else {
											// go to target page
											{

												((OSPage) Page).ClearErrorHandler();
												// get parameters
												heContext.Session["_ScreenParametersKey"] = "D63wS0IcrU6RmCO_pzVF0w";
												ArrayList screenParameters = new ArrayList();
												screenParameters.Add(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference);
												screenParameters.Add(0);
												screenParameters.Add("");
												screenParameters.Add(true);
												screenParameters.Add(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId);
												Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsTabs"] = screenParameters;
												Server.Transfer("LearnerDetailsTabs.aspx");
												return false;

											}
										}

									} else {
										if ((getWtLearnerListList().CurrentRec.ssSTSelectAction.ssSelectAction== "RequestTransferForm")) {
											varLcURL = BuiltInFunction.EncodeUrl(("https://reports.cornwall.ac.uk/ReportServer/Pages/ReportViewer.aspx?%2fStudent+Records%2fEarlyLeavers%2fTransfers&StudentReference=" +getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference)); // URL = EncodeUrl

										} else {
											if ((getWtLearnerListList().CurrentRec.ssSTSelectAction.ssSelectAction== "RequestWithdrawalForm")) {
												varLcURL = BuiltInFunction.EncodeUrl(("https://reports.cornwall.ac.uk/ReportServer/Pages/ReportViewer.aspx?%2fStudent+Records%2fEarlyLeavers%2fEarly+Leavers+Form&StudentReference=" +getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference)); // URL = EncodeUrl

											} else {
												if ((getWtLearnerListList().CurrentRec.ssSTSelectAction.ssSelectAction== "StudentInformationForm")) {
													varLcURL = BuiltInFunction.EncodeUrl(("https://reports.cornwall.ac.uk/ReportServer/Pages/ReportViewer.aspx?/StudentContactManagerReports/SIF&StudentReference=" +getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference)); // URL = EncodeUrl

												} else {
													if ((getWtLearnerListList().CurrentRec.ssSTSelectAction.ssSelectAction== "StudentCertificate")) {
														// GetStudentCertificateURL
														Actions.ActionGetStudentCertificateURL(heContext, getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference, out localVars.resGetStudentCertificateURL_outParamURL, out localVars.resGetStudentCertificateURL_outParamSID);
														varLcURL = BuiltInFunction.EncodeUrl(localVars.resGetStudentCertificateURL_outParamURL); // URL = EncodeUrl

													} else {
														// Update Screen
														return true;

													}

												}

											}

										}
										// Refresh Widget (wtdummy)
										((OSPageViewState) Page).AjaxRefresh(wtdummy, "None", StoreViewState);
										// RunJavaScript7
										Actions.ActionRunJavaScript(heContext, (("document.getElementById(\'" +wtdummy.ClientID) + "\').click()"));
										// Update Screen
										return true;

									}

								}

							}

						}
						// Update Screen
						return true;

					}

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvSafeGuardClick: VarsBag {
			public int resUserCheck2_outParamPermissionType = 0;

			public lcvSafeGuardClick() {
			}
		}
		/// <summary>
		/// Action <code>CommandSafeGuardClick</code> that represents the Service Studio screen action
		///  <code>SafeGuardClick</code> <p> Description: </p>
		/// </summary>
		private bool CommandSafeGuardClick(HeContext heContext) {
			CheckPermissions(heContext);
			lcvSafeGuardClick localVars = new lcvSafeGuardClick();
			try {
				// UserCheck2
				Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("58QulFjuCkeyZloWLgduIw")).ssId, out localVars.resUserCheck2_outParamPermissionType);
				// Check Permissions
				if ((localVars.resUserCheck2_outParamPermissionType!=BuiltInFunction.NullIdentifier())) {
					// Destination = LearnerDetailsTabs

					if (OSPage.IsAjaxRequest) {
						// go to target page
						{

							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "D63wS0IcrU6RmCO_pzVF0w";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference);
							screenParameters.Add(0);
							screenParameters.Add("");
							screenParameters.Add(false);
							screenParameters.Add(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsTabs"] = screenParameters;
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference) + "&" +
							 "ActiveTabId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsTabs.aspx" + sURLQuery;
							((OSPageViewState) Page).RedirectLocation = sURL;
							return false;

						}
					} else {
						// go to target page
						{

							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "D63wS0IcrU6RmCO_pzVF0w";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference);
							screenParameters.Add(0);
							screenParameters.Add("");
							screenParameters.Add(false);
							screenParameters.Add(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsTabs"] = screenParameters;
							Server.Transfer("LearnerDetailsTabs.aspx");
							return false;

						}
					}

				} else {
					// Update Screen
					return true;

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOnNotify: VarsBag {
			public string resNotifyWidgetGetMessage_outParamMessage = "";

			public lcvOnNotify() {
			}
		}
		/// <summary>
		/// Action <code>CommandOnNotify</code> that represents the Service Studio screen action
		///  <code>OnNotify</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnNotify(HeContext heContext) {
			CheckPermissions(heContext);
			lcvOnNotify localVars = new lcvOnNotify();
			try {
				// NotifyWidgetGetMessage
				ExtendedActions.NotifyWidgetGetMessage(heContext, out localVars.resNotifyWidgetGetMessage_outParamMessage);
				if ((localVars.resNotifyWidgetGetMessage_outParamMessage== "OK")) {
					// ProgressReport
					Actions.ActionFeedback_Message(heContext, "Progress Report edited with success.", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("8xuePnp+TUO346Oyp3_dWQ")).ssId);

				} else {
					if ((localVars.resNotifyWidgetGetMessage_outParamMessage== "SMS")) {
						// SMS
						Actions.ActionFeedback_Message(heContext, "Text message sent.", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("8xuePnp+TUO346Oyp3_dWQ")).ssId);

					} else {
						if ((localVars.resNotifyWidgetGetMessage_outParamMessage== "EMAIL")) {
							// Email
							Actions.ActionFeedback_Message(heContext, "Email message sent.", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("8xuePnp+TUO346Oyp3_dWQ")).ssId);

						} else {
							// Update Screen
							return true;

						}

					}

				}
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvToogleFavourite: VarsBag {
			public int resCreateOrUpdateStaffStudentFavourite_outParamId = 0;

			public lcvToogleFavourite() {
			}
		}
		/// <summary>
		/// Action <code>CommandToogleFavourite</code> that represents the Service Studio screen action
		///  <code>ToogleFavourite</code> <p> Description: </p>
		/// </summary>
		private bool CommandToogleFavourite(HeContext heContext) {
			CheckPermissions(heContext);
			lcvToogleFavourite localVars = new lcvToogleFavourite();
			try {
				if ((getWtLearnerListList().CurrentRec.ssENStaffStudentFavourite.ssId==BuiltInFunction.NullIdentifier())) {
					getWtLearnerListList().CurrentRec.ssENStaffStudentFavourite.ssStudentReference = getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference; // LearnerList.List.Current.StaffStudentFavourite.StudentReference = LearnerList.List.Current.Student.StudentReference
					getWtLearnerListList().CurrentRec.ssENStaffStudentFavourite.ssUserId = ((int) Global.App.OsContext.Session["UserID"]); // LearnerList.List.Current.StaffStudentFavourite.UserId = UserID
					// CreateOrUpdateStaffStudentFavourite
					ExtendedActions.CreateOrUpdateStaffStudentFavourite(heContext, getWtLearnerListList().CurrentRec.ssENStaffStudentFavourite.ChangedAttributes, ((RCStaffStudentFavouriteRecord) getWtLearnerListList().CurrentRec.ssENStaffStudentFavourite), out localVars.resCreateOrUpdateStaffStudentFavourite_outParamId);

				} else {
					// DeleteStaffStudentFavourite
					ExtendedActions.DeleteStaffStudentFavourite(heContext, getWtLearnerListList().CurrentRec.ssENStaffStudentFavourite.ssId);

				}
				// Query QueryGetStudents
				{
					int QueryGetStudents_maxRecords = Math.Max(wtLearnerList.StartIndex + wtLearnerList.LineCount + 1, 0);
					queryResGetStudents_outParamList = FuncssPreparation.QueryGetStudents(heContext, QueryGetStudents_maxRecords, IterationMultiplicity.Single, out queryResGetStudents_outParamCount, varLcLearnerKeywordSearch
					, ((int) Global.App.OsContext.Session["UserID"])
					, varLcIsFavorite_Filter
					, varLcStudentBirthDate
					, BuiltInFunction.NullDate()
					, varLcSafeguardingFilter
					, (Rt_wtSafeguardingDD.SpecialListVal== "1")
					, inParamCourseCode
					);
				}
				// Refresh Widget (wtLearnerList)
				ssLearnerListListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtLearnerList, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance35 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance35_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main) sender;
		}
		/// <summary>
		/// wt_WebBlockInstance46 Functions
		/// </summary>
		public void webBlck_WebBlockInstance46_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate widget = (ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate) sender;
		}
		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance36 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance36_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main) sender;
			widget.inParamActiveMenuItem = ENMenuItem2Entity.GetRecordByKey(ObjectKey.Parse("Zf1l6h4nhEKi9bGDu571Zw")).ssId;
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance84 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance84_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("F0OdMTnS+E63CzTzGXJvyg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression23 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = rFvUNagCG0yAxV4JLUqThQ) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression23() {
			return (((inParamCourseCode!= "")) ?(("Learner List for " +inParamCourseCode)):("Learner List"));
		}
		/// <summary>
		/// wt_Button82 Functions
		/// </summary>
		public void btn_Button82_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Button submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Button82_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), true);
			if (CommandSearch(heContext, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the label of the button (wt_Button82)
		/// </summary>
		/// <returns>Label of the Button (wt_Button82)</returns>
		public string
		btn_Button82_getLabel() {
			return "Ok";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Button82)
		/// </summary>
		/// <returns>The Visible State of wt_Button82</returns>
		public bool btn_Button82_isVisible() {
			return false;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Button82)
		/// </summary>
		/// <returns>The Enabled State of wt_Button82</returns>
		public bool btn_Button82_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wtPopupTarget Functions
		/// </summary>
		public void cntPopupTarget_onDataBinding(object sender, System.EventArgs e) {
			cntPopupTarget_setInlineAttributes(sender, e);
		}
		public string cntPopupTarget_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntPopupTarget_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtPopupTarget)
		/// </summary>
		/// <returns>The Visible State of wtPopupTarget</returns>
		public bool cntPopupTarget_isVisible() {
			return true;
		}

		/// <summary>
		/// wtPopupSMS Functions
		/// </summary>
		public void cntPopupSMS_onDataBinding(object sender, System.EventArgs e) {
			cntPopupSMS_setInlineAttributes(sender, e);
		}
		public string cntPopupSMS_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntPopupSMS_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtPopupSMS)
		/// </summary>
		/// <returns>The Visible State of wtPopupSMS</returns>
		public bool cntPopupSMS_isVisible() {
			return true;
		}

		/// <summary>
		/// wtPopupSMSLnk Functions
		/// </summary>
		public void btnPopupSMSLnk_onDataBinding(object sender, System.EventArgs e) {
			btnPopupSMSLnk_setInlineAttributes(sender, e);
		}
		public string btnPopupSMSLnk_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:none";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wtPopupSMSLnk)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wtPopupSMSLnk)</returns>
		public string btnPopupSMSLnk_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentId", System.Web.HttpUtility.UrlEncode(varLcSelected_StudentId, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_SMS", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the label of the button (wtPopupSMSLnk)
		/// </summary>
		/// <returns>Label of the Button (wtPopupSMSLnk)</returns>
		public string
		btnPopupSMSLnk_getLabel() {
			return "SMS";
		}
		/// <summary>
		/// Gets the visible state of component (wtPopupSMSLnk)
		/// </summary>
		/// <returns>The Visible State of wtPopupSMSLnk</returns>
		public bool btnPopupSMSLnk_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtPopupSMSLnk)
		/// </summary>
		/// <returns>The Enabled State of wtPopupSMSLnk</returns>
		public bool btnPopupSMSLnk_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance41 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance41_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor) sender;
			widget.inParamLinkOrButtonWidgetId = wtPopupSMSLnk.ClientID;
			widget.inParamTitle = " ";
			widget.inParamWidthPx = -1;
			widget.inParamHeightPx = -1;
			widget.inParamAutoResize = true;
			widget.inParamRecenterOnResize = true;
			widget.inParamHideCloseButton = false;
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance41
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance41_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOnNotify(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wtPopupEmail Functions
		/// </summary>
		public void cntPopupEmail_onDataBinding(object sender, System.EventArgs e) {
			cntPopupEmail_setInlineAttributes(sender, e);
		}
		public string cntPopupEmail_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntPopupEmail_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtPopupEmail)
		/// </summary>
		/// <returns>The Visible State of wtPopupEmail</returns>
		public bool cntPopupEmail_isVisible() {
			return true;
		}

		/// <summary>
		/// wtPopupEmailLnk Functions
		/// </summary>
		public void btnPopupEmailLnk_onDataBinding(object sender, System.EventArgs e) {
			btnPopupEmailLnk_setInlineAttributes(sender, e);
		}
		public string btnPopupEmailLnk_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:none";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wtPopupEmailLnk)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wtPopupEmailLnk)</returns>
		public string btnPopupEmailLnk_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("CommunicationId", System.Web.HttpUtility.UrlEncode(Convert.ToString(BuiltInFunction.NullIdentifier()), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("StudentId", System.Web.HttpUtility.UrlEncode(varLcSelected_StudentId, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_Email", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the label of the button (wtPopupEmailLnk)
		/// </summary>
		/// <returns>Label of the Button (wtPopupEmailLnk)</returns>
		public string
		btnPopupEmailLnk_getLabel() {
			return "Email";
		}
		/// <summary>
		/// Gets the visible state of component (wtPopupEmailLnk)
		/// </summary>
		/// <returns>The Visible State of wtPopupEmailLnk</returns>
		public bool btnPopupEmailLnk_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtPopupEmailLnk)
		/// </summary>
		/// <returns>The Enabled State of wtPopupEmailLnk</returns>
		public bool btnPopupEmailLnk_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance76 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance76_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor) sender;
			widget.inParamLinkOrButtonWidgetId = wtPopupEmailLnk.ClientID;
			widget.inParamTitle = " ";
			widget.inParamWidthPx = -1;
			widget.inParamHeightPx = -1;
			widget.inParamAutoResize = true;
			widget.inParamRecenterOnResize = true;
			widget.inParamHideCloseButton = false;
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance76
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance76_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOnNotify(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wtdummy Functions
		/// </summary>
		public void cntdummy_onDataBinding(object sender, System.EventArgs e) {
			cntdummy_setInlineAttributes(sender, e);
		}
		public string cntdummy_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("onclick", (("window.open(unescape(\'" +varLcURL) + "\'), \'_blank\',\'left=20,top=20\')").ToString());
			if (!cntdummy_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtdummy)
		/// </summary>
		/// <returns>The Visible State of wtdummy</returns>
		public bool cntdummy_isVisible() {
			return false;
		}

		/// <summary>
		/// wt_Container79 Functions
		/// </summary>
		public void cnt_Container79_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container79_setInlineAttributes(sender, e);
		}
		public string cnt_Container79_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container79_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container79)
		/// </summary>
		/// <returns>The Visible State of wt_Container79</returns>
		public bool cnt_Container79_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text44 Functions
		/// </summary>
		public void wt_Text44_onDataBinding(object sender, System.EventArgs e) {
			wt_Text44_setInlineAttributes(sender, e);
		}
		public string wt_Text44_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight:bold";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Input70 Functions
		/// </summary>
		public void inputwt_Input70_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
		}
		/// <summary>
		/// AjaxChange event handler for widget wt_Input70
		/// </summary>
		public void inputwt_Input70_AjaxChange(object sender, System.EventArgs e) {
			if (CommandSearch(heContext
			, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwt_Input70_input_value() {
			if (("" !=varLcLearnerKeywordSearch)) {
				return varLcLearnerKeywordSearch;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wt_Input70");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return varLcLearnerKeywordSearch;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwt_Input70_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					varLcLearnerKeywordSearch = ""; 
				} else {
					varLcLearnerKeywordSearch = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				varLcLearnerKeywordSearch = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wt_Input70)
		/// </summary>
		/// <returns>The Visible State of wt_Input70</returns>
		public bool inputwt_Input70_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Input70)
		/// </summary>
		/// <returns>The Enabled State of wt_Input70</returns>
		public bool inputwt_Input70_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwt_Input70)
		/// </summary>
		/// <returns>The Mandatory Value of inputwt_Input70</returns>
		public bool inputwt_Input70_isMandatory() {
			return false;
		}

		/// <summary>
		/// Gets the prompt of the input (wt_Input70)
		/// </summary>
		/// <returns>Prompt of the Input (wt_Input70)</returns>
		public string inputwt_Input70_getPrompt() {
			return "Enter name or learner ref...";
		}
		/// <summary>
		/// wt_Container30 Functions
		/// </summary>
		public void cnt_Container30_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container30_setInlineAttributes(sender, e);
		}
		public string cnt_Container30_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container30_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container30)
		/// </summary>
		/// <returns>The Visible State of wt_Container30</returns>
		public bool cnt_Container30_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression67 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = aV_ZshT6Dk+URB4V8CgJCA) Expression: "Date of Birth"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression67() {
			return "Date of Birth";
		}
		/// <summary>
		/// wtTarget_TargetDate Functions
		/// </summary>
		public void inputwtTarget_TargetDate_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
		}
		/// <summary>
		/// AjaxChange event handler for widget wtTarget_TargetDate
		/// </summary>
		public void inputwtTarget_TargetDate_AjaxChange(object sender, System.EventArgs e) {
			if (CommandSearch(heContext
			, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtTarget_TargetDate_input_value() {
			if (((new DateTime(1900, 1, 1, 0, 0, 0)) !=varLcStudentBirthDate)) {
				return varLcStudentBirthDate.ToString(FormatInfo.GetOutputDateFormatString(), FormatInfo.defaultHeCultureInfo);
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtTarget_TargetDate");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDateValidate, validate)) {

					if (((new DateTime(1900, 1, 1, 0, 0, 0)) ==varLcStudentBirthDate)) {
						return "";
					}
					return varLcStudentBirthDate.ToString(FormatInfo.GetOutputDateFormatString(), FormatInfo.defaultHeCultureInfo);
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtTarget_TargetDate_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					varLcStudentBirthDate = (new DateTime(1900, 1, 1, 0, 0, 0)); 
				} else {
					varLcStudentBirthDate = OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDate(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				varLcStudentBirthDate = (new DateTime(1900, 1, 1, 0, 0, 0)); 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtTarget_TargetDate)
		/// </summary>
		/// <returns>The Visible State of wtTarget_TargetDate</returns>
		public bool inputwtTarget_TargetDate_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtTarget_TargetDate)
		/// </summary>
		/// <returns>The Enabled State of wtTarget_TargetDate</returns>
		public bool inputwtTarget_TargetDate_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtTarget_TargetDate)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtTarget_TargetDate</returns>
		public bool inputwtTarget_TargetDate_isMandatory() {
			return false;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance66 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance66_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkInput_Calendar widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkInput_Calendar) sender;
			widget.inParamInputWidgetId = this.FindControl("wtTarget_TargetDate").ClientID;
			widget.inParamMinYear = -1;
			widget.inParamMaxYear = -1;
			widget.inParamAlign = "Bl";
			widget.inParamSingleClick = true;
			widget.inParamShowWeekNumbers = false;
			widget.inParamUpdateOnCloseOnly = false;
			widget.inParamShowOthers = false;
			widget.inParamFirstDay = 0;
			widget.inParamShowTime = false;
			widget.inParamShow24HourFormat = true;
			widget.inParamReuseCalendarObject = false;
			widget.inParamInitialDate = new DateTime(1900, 1, 1, 0, 0, 0);
			widget.inParamDateFormat = "";
			widget.inParamSpecialDays = "";
			widget.inParamOnUpdate = "";
			widget.inParamFlatStyle = false;
			widget.inParamButtonWidgetId = "";
			widget.inParamYearStep = 2;
		}
		/// <summary>
		/// wt_Container5 Functions
		/// </summary>
		public void cnt_Container5_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container5_setInlineAttributes(sender, e);
		}
		public string cnt_Container5_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container5_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container5)
		/// </summary>
		/// <returns>The Visible State of wt_Container5</returns>
		public bool cnt_Container5_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If62 Functions
		/// </summary>
		bool if_wt_If62_hasRun=false;
		bool if_wt_If62_evalResult;
		public bool if_wt_If62() {
			if (if_wt_If62_hasRun) {
				if_wt_If62_hasRun = false;
				return if_wt_If62_evalResult;
			}
			if_wt_If62_hasRun = true;
			if_wt_If62_evalResult = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("58QulFjuCkeyZloWLgduIw")).ssId) !=BuiltInFunction.NullIdentifier());
			return if_wt_If62_evalResult;
		}

		/// <summary>
		/// wt_InlineExpression91 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = pkno8jU1CECxI8ke01AFKw) Expression: "Safeguarding"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression91() {
			return "Safeguarding";
		}
		/// <summary>
		/// wtSafeguardingDD Functions
		/// </summary>
		public void selSafeguardingDD_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
			if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

			if (Rt_wtSafeguardingDD_reclist == null) {
				using(Transaction wtSafeguardingDD_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
					string wtSafeguardingDD_sql = "SELECT [ID], [LABEL], NULL, NULL FROM " + ENSafeguardingIssueTypeEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " WHERE [IS_ACTIVE] <> 0 OR [ID] = @Selection  ORDER BY [ORDER], [LABEL]";
					Command Rt_wtSafeguardingDD_sqlCmd = wtSafeguardingDD_trans.CreateCommand(wtSafeguardingDD_sql);
					Rt_wtSafeguardingDD_sqlCmd.CreateParameter("@Selection", varLcSafeguardingFilter);
					Rt_wtSafeguardingDD_sqlCmd.TransformParametersSyntax();
					Rt_wtSafeguardingDD_reclist = new RLSafeguardingIssueTypeRecordList();
					Rt_wtSafeguardingDD_reclist.Transaction = wtSafeguardingDD_trans;
					Rt_wtSafeguardingDD_reclist.AllOptimizedAttributes = new BitArray[1] {
						new BitArray(4, false)
					}
					;
					DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wtSafeguardingDD_sqlCmd, Rt_wtSafeguardingDD_reclist, "WebSelectWidget load operation");
					Rt_wtSafeguardingDD_reclist = (RLSafeguardingIssueTypeRecordList) Rt_wtSafeguardingDD_reclist.Duplicate();
				}
			}
			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
			if (Rt_wtSafeguardingDD.SpecialListVal == "0")
			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("All", "__ossli_1"));
			if (Rt_wtSafeguardingDD.SpecialListVal == "1")
			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
			Rt_wtSafeguardingDD_reclist.StartIteration();
			try {
				while (!Rt_wtSafeguardingDD_reclist.Eof) {
					((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wtSafeguardingDD_reclist.CurrentRec.ssENSafeguardingIssueType.ssLabel, Rt_wtSafeguardingDD_reclist.CurrentRec.ssENSafeguardingIssueType.ssId));
					if (varLcSafeguardingFilter == Convert.ToString(Rt_wtSafeguardingDD_reclist.CurrentRec.ssENSafeguardingIssueType.ssId)) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
					}
					Rt_wtSafeguardingDD_reclist.Advance();
				}
			} finally {
				Rt_wtSafeguardingDD_reclist.EndIteration();
			}
		}
		/// <summary>
		/// AjaxChange event handler for widget wtSafeguardingDD
		/// </summary>
		public void selSafeguardingDD_AjaxChange(object sender, System.EventArgs e) {
			if (CommandSearch(heContext
			, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		public void selSafeguardingDD_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wtSafeguardingDD.SpecialListVal = dropDown.SelectedValue.Substring(8);
				varLcSafeguardingFilter = "";
			}
			else {
				Rt_wtSafeguardingDD.SpecialListVal = "";
				try {
					varLcSafeguardingFilter = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtSafeguardingDD)
		/// </summary>
		/// <returns>The Visible State of wtSafeguardingDD</returns>
		public bool selSafeguardingDD_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtSafeguardingDD)
		/// </summary>
		/// <returns>The Enabled State of wtSafeguardingDD</returns>
		public bool selSafeguardingDD_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (selSafeguardingDD)
		/// </summary>
		/// <returns>The Mandatory Value of selSafeguardingDD</returns>
		public bool selSafeguardingDD_isMandatory() {
			return false;
		}

		/// <summary>
		/// wtLearnerListWrapper Functions
		/// </summary>
		public void cntLearnerListWrapper_onDataBinding(object sender, System.EventArgs e) {
			cntLearnerListWrapper_setInlineAttributes(sender, e);
		}
		public string cntLearnerListWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntLearnerListWrapper_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtLearnerListWrapper)
		/// </summary>
		/// <returns>The Visible State of wtLearnerListWrapper</returns>
		public bool cntLearnerListWrapper_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container33 Functions
		/// </summary>
		public void cnt_Container33_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container33_setInlineAttributes(sender, e);
		}
		public string cnt_Container33_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container33_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container33)
		/// </summary>
		/// <returns>The Visible State of wt_Container33</returns>
		public bool cnt_Container33_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance47 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance47_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkList_Counter widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkList_Counter) sender;
			widget.inParamStartIndex = Functions.rssespacerichwidgets_ActionList_Navigation_GetStartIndex(heContext, wtLearnerList.ClientID, true, -1);
			widget.inParamTotalRowCount = queryResGetStudents_outParamCount;
			widget.inParamLineCount = wtLearnerList.RtWidget.LineCount;
		}
		/// <summary>
		/// wt_Container55 Functions
		/// </summary>
		public void cnt_Container55_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container55_setInlineAttributes(sender, e);
		}
		public string cnt_Container55_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container55_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container55)
		/// </summary>
		/// <returns>The Visible State of wt_Container55</returns>
		public bool cnt_Container55_isVisible() {
			return true;
		}

		/// <summary>
		/// wtStudentFavourite3 Functions
		/// </summary>
		public void cntStudentFavourite3_onDataBinding(object sender, System.EventArgs e) {
			cntStudentFavourite3_setInlineAttributes(sender, e);
		}
		public string cntStudentFavourite3_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-top:-10px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntStudentFavourite3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentFavourite3)
		/// </summary>
		/// <returns>The Visible State of wtStudentFavourite3</returns>
		public bool cntStudentFavourite3_isVisible() {
			return true;
		}

		/// <summary>
		/// wtFiltterVavorite Functions
		/// </summary>
		bool if_wtFiltterVavorite_hasRun=false;
		bool if_wtFiltterVavorite_evalResult;
		public bool if_wtFiltterVavorite() {
			if (if_wtFiltterVavorite_hasRun) {
				if_wtFiltterVavorite_hasRun = false;
				return if_wtFiltterVavorite_evalResult;
			}
			if_wtFiltterVavorite_hasRun = true;
			if_wtFiltterVavorite_evalResult = varLcIsFavorite_Filter;
			return if_wtFiltterVavorite_evalResult;
		}

		/// <summary>
		/// wt_Link97 Functions
		/// </summary>
		public void lnk_Link97_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link97_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link97_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#FFD700;padding-right: 6px;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link97_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandSearch(heContext, true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link97)
		/// </summary>
		/// <returns>title of the Link (wt_Link97)</returns>
		public string
		lnk_Link97_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link97)
		/// </summary>
		/// <returns>The Visible State of wt_Link97</returns>
		public bool lnk_Link97_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link97)
		/// </summary>
		/// <returns>The Enabled State of wt_Link97</returns>
		public bool lnk_Link97_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance58 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance58_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("qKwz4ZaPnkmbJYnyFjRtFg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Link93 Functions
		/// </summary>
		public void lnk_Link93_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link93_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link93_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#DADADA;padding-right: 6px;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link93_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandSearch(heContext, true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link93)
		/// </summary>
		/// <returns>title of the Link (wt_Link93)</returns>
		public string
		lnk_Link93_getTitle() {
			return "Filter Favorite";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link93)
		/// </summary>
		/// <returns>The Visible State of wt_Link93</returns>
		public bool lnk_Link93_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link93)
		/// </summary>
		/// <returns>The Enabled State of wt_Link93</returns>
		public bool lnk_Link93_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance10 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance10_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("ycc7nxlWj0WSykMfq37k4A")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container4 Functions
		/// </summary>
		public void cnt_Container4_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container4_setInlineAttributes(sender, e);
		}
		public string cnt_Container4_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container4)
		/// </summary>
		/// <returns>The Visible State of wt_Container4</returns>
		public bool cnt_Container4_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container28 Functions
		/// </summary>
		public void cnt_Container28_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container28_setInlineAttributes(sender, e);
		}
		public string cnt_Container28_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container28_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container28)
		/// </summary>
		/// <returns>The Visible State of wt_Container28</returns>
		public bool cnt_Container28_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container14 Functions
		/// </summary>
		public void cnt_Container14_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container14_setInlineAttributes(sender, e);
		}
		public string cnt_Container14_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container14_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container14)
		/// </summary>
		/// <returns>The Visible State of wt_Container14</returns>
		public bool cnt_Container14_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container21 Functions
		/// </summary>
		public void cnt_Container21_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container21_setInlineAttributes(sender, e);
		}
		public string cnt_Container21_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container21_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container21)
		/// </summary>
		/// <returns>The Visible State of wt_Container21</returns>
		public bool cnt_Container21_isVisible() {
			return true;
		}

		/// <summary>
		/// wtLearnerList Functions
		/// </summary>
		public void recListLearnerList_onDataBinding(object sender, System.EventArgs e) {
			// widget wtLearnerList
			ssLearnerListList = queryResGetStudents_outParamList;
			ssLearnerListListDoDataBind = false;
			ssLearnerListListDataBound = true;
		}
		public void recListLearnerList_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssLearnerListList.Length > 0) {
					ssLearnerListList.CurrentRec = ssLearnerListList[ssLearnerListList.CurrentRowNumber];
				}
				if (ssLearnerListList.Length > e.SelectedIndex) {
					ssLearnerListList.CurrentRec = ssLearnerListList[e.SelectedIndex];
					ssLearnerListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListLearnerList_Store(object dataItem, int index) {
			RCStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecord tmprec = (RCStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecord) dataItem;
			ArrayList tmpFields = new ArrayList();
			tmpFields.Add(tmprec.ssENStudent.ssStudentReference == "" ?(object) null: tmprec.ssENStudent.ssStudentReference);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENStudent.ChangedAttributes, new BitArray(new bool[] {
				true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENStudent.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
			}
			))));
			tmpFields.Add(tmprec.ssSTSelectAction.ssSelectAction == "" ?(object) null: tmprec.ssSTSelectAction.ssSelectAction);
			tmpFields.Add(tmprec.ssENStaffStudentFavourite.ssId == 0?(object) null: tmprec.ssENStaffStudentFavourite.ssId);
			tmpFields.Add(tmprec.ssENStaffStudentFavourite.ssStudentReference == "" ?(object) null: tmprec.ssENStaffStudentFavourite.ssStudentReference);
			tmpFields.Add(tmprec.ssENStaffStudentFavourite.ssUserId == 0?(object) null: tmprec.ssENStaffStudentFavourite.ssUserId);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENStaffStudentFavourite.ChangedAttributes, new BitArray(new bool[] {
				true, true, true
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENStaffStudentFavourite.OptimizedAttributes, new BitArray(new bool[] {
				false, false, false
			}
			))));
			if (index < wtLearnerList_storage.Count) {
				wtLearnerList_storage[index] = tmpFields;
			} else {
				wtLearnerList_storage.Add(tmpFields);
			}
			return "";
		}
		public void recListLearnerList_Restore() {

			#region fetch ssLearnerListList.

			// Read the needed fields of ssLearnerListList from storewtLearnerList_list
			ssLearnerListList = new RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList();
			ArrayList storewtLearnerList_list;
			storewtLearnerList_list = (ArrayList) ViewStateAttributes.GetFromViewState("wtLearnerList_list", null);
			if (storewtLearnerList_list == null) {
				return;
			} else {

				foreach(ArrayList tmpFieldswtLearnerList_list in storewtLearnerList_list) {
					if (tmpFieldswtLearnerList_list != null) {
						// Aux current record variable
						RCStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecord tmpAuxCurrentRecordwtLearnerList_list = new RCStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecord(null);
						tmpAuxCurrentRecordwtLearnerList_list.ssENStudent.ssStudentReference = (string) (tmpFieldswtLearnerList_list[0] == null ? "": tmpFieldswtLearnerList_list[0]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStudent.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtLearnerList_list[1]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStudent.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtLearnerList_list[2]);

						tmpAuxCurrentRecordwtLearnerList_list.ssSTSelectAction.ssSelectAction = (string) (tmpFieldswtLearnerList_list[3] == null ? "": tmpFieldswtLearnerList_list[3]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStaffStudentFavourite.ssId = (int) (tmpFieldswtLearnerList_list[4] == null ? 0: tmpFieldswtLearnerList_list[4]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStaffStudentFavourite.ssStudentReference = (string) (tmpFieldswtLearnerList_list[5] == null ? "": tmpFieldswtLearnerList_list[5]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStaffStudentFavourite.ssUserId = (int) (tmpFieldswtLearnerList_list[6] == null ? 0: tmpFieldswtLearnerList_list[6]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStaffStudentFavourite.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtLearnerList_list[7]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStaffStudentFavourite.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtLearnerList_list[8]);

						ssLearnerListList.Append(tmpAuxCurrentRecordwtLearnerList_list);
					}
				}
			}
			ssLearnerListList.CurrentRowNumber = -1;
			#endregion


			#region fetch ssLearnerListList runtime properties state.


			if (storewtLearnerList_list.Count > 0) {
				ssLearnerListList.RestoreRecordListState(storewtLearnerList_list.Count - 1, false);
			} else {
				ssLearnerListList.CurrentRowNumber = 0;
			}

			#endregion

			wtLearnerList_storage = storewtLearnerList_list;
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListLearnerList_Clear(object sender, EventArgs e) {
			wtLearnerList_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListLearnerList_Rebuild(int startIndex, int lineCount) {
			if (ssLearnerListList.Length != -1) {
				wtLearnerList_storage.Clear();
				for (int i=startIndex; i<ssLearnerListList.Data.Count && i<startIndex+lineCount; i++) {
					recListLearnerList_Store(ssLearnerListList.Data[i], wtLearnerList_storage.Count);
				}
			}
		}
		public void recListLearnerList_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtLearnerList widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList getWtLearnerListList() {
			if (ssLearnerListListDoDataBind) {
				recListLearnerList_onDataBinding(this, null);
			}

			return ssLearnerListList;
		}
		/// <summary>
		/// wt_Container19 Functions
		/// </summary>
		public void cnt_Container19_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container19_setInlineAttributes(sender, e);
		}
		public string cnt_Container19_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = (("border-color:" + ((getWtLearnerListList().CurrentRec.ssENStudent.ssHasCurrentActiveEnrolment) ?((((getWtLearnerListList().CurrentRec.ssENStudentRAG.ssRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("#84AA19"):((((getWtLearnerListList().CurrentRec.ssENStudentRAG.ssRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("#F5A623"):((((getWtLearnerListList().CurrentRec.ssENStudentRAG.ssRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("#D0021B"):("#1F3D60"))))))):("#DADADA"))) + ";position:relative");
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container19_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container19)
		/// </summary>
		/// <returns>The Visible State of wt_Container19</returns>
		public bool cnt_Container19_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container87 Functions
		/// </summary>
		public void cnt_Container87_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container87_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container87_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container87_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container87
		/// </summary>
		public void cnt_Container87_AjaxClick(object sender, System.EventArgs e) {
			if (CommandOnLearnerClick(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container87)
		/// </summary>
		/// <returns>The Visible State of wt_Container87</returns>
		public bool cnt_Container87_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container15 Functions
		/// </summary>
		public void cnt_Container15_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container15_setInlineAttributes(sender, e);
		}
		public string cnt_Container15_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container15_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container15)
		/// </summary>
		/// <returns>The Visible State of wt_Container15</returns>
		public bool cnt_Container15_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Image78 Functions
		/// </summary>
		public void img_Image78_onDataBinding(object sender, System.EventArgs e) {
			img_Image78_setInlineAttributes(sender, e);
		}
		public string img_Image78_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("onerror", "this.src=\'img/missingphoto.png\';" .ToString());
			((WebControl) sender).CssClass = ((getWtLearnerListList().CurrentRec.ssENStudent.ssHasCurrentActiveEnrolment) ?("StudentPhoto SilverBorder"):("StudentPhoto SilverBorder BlackAndWhiteFilter"));
			return "";
		}

		/// <summary>
		/// Gets the URL of the image (wt_Image78)
		/// </summary>
		/// <returns>URL of the Image (wt_Image78)</returns>
		public string img_Image78_getURL() {
			string url = getWtLearnerListList().CurrentRec.ssENStudent.ssStudentPhotoURL;
			url = url.Replace("&amp;", "&");
			return url; 
		}
		/// <summary>
		/// wtListCourseClassEnrolments Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wtListCourseClassEnrolments)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wtListCourseClassEnrolments)</returns>
		public string lnkListCourseClassEnrolments_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "EnrolmentToolTip", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wtListCourseClassEnrolments)
		/// </summary>
		/// <returns>title of the Link (wtListCourseClassEnrolments)</returns>
		public string
		lnkListCourseClassEnrolments_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtListCourseClassEnrolments)
		/// </summary>
		/// <returns>The Visible State of wtListCourseClassEnrolments</returns>
		public bool lnkListCourseClassEnrolments_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtListCourseClassEnrolments)
		/// </summary>
		/// <returns>The Enabled State of wtListCourseClassEnrolments</returns>
		public bool lnkListCourseClassEnrolments_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container20 Functions
		/// </summary>
		public void cnt_Container20_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container20_setInlineAttributes(sender, e);
		}
		public string cnt_Container20_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding-left:10px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container20_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container20)
		/// </summary>
		/// <returns>The Visible State of wt_Container20</returns>
		public bool cnt_Container20_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container13 Functions
		/// </summary>
		public void cnt_Container13_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container13_setInlineAttributes(sender, e);
		}
		public string cnt_Container13_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container13_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container13)
		/// </summary>
		/// <returns>The Visible State of wt_Container13</returns>
		public bool cnt_Container13_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression29 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = eiTVQn8Tl0qzVIeaDoXFGw) Expression: ToUpper + ", " +
		///  LearnerList.List.Current.Student.Forenames + "("
		/// + LearnerList.List.Current.Student.StudentReference + ")"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression29() {
			return (((((BuiltInFunction.ToUpper(getWtLearnerListList().CurrentRec.ssENStudent.ssSurname) + ", ") +getWtLearnerListList().CurrentRec.ssENStudent.ssForenames) + "(") +getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference) + ")");
		}
		/// <summary>
		/// wt_If61 Functions
		/// </summary>
		bool if_wt_If61_hasRun=false;
		bool if_wt_If61_evalResult;
		public bool if_wt_If61() {
			if (if_wt_If61_hasRun) {
				if_wt_If61_hasRun = false;
				return if_wt_If61_evalResult;
			}
			if_wt_If61_hasRun = true;
			if_wt_If61_evalResult = getWtLearnerListList().CurrentRec.ssSTBoolean.ssValue;
			return if_wt_If61_evalResult;
		}

		/// <summary>
		/// wtSafeguardingWrapper2 Functions
		/// </summary>
		public void cntSafeguardingWrapper2_onDataBinding(object sender, System.EventArgs e) {
			cntSafeguardingWrapper2_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cntSafeguardingWrapper2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-size:10px;cursor:pointer;color:blue;float:right;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((IAttributeAccessor) sender).SetAttribute("title", "Safeguarding Issue" .ToString());
			if (!cntSafeguardingWrapper2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wtSafeguardingWrapper2
		/// </summary>
		public void cntSafeguardingWrapper2_AjaxClick(object sender, System.EventArgs e) {
			if (CommandSafeGuardClick(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtSafeguardingWrapper2)
		/// </summary>
		/// <returns>The Visible State of wtSafeguardingWrapper2</returns>
		public bool cntSafeguardingWrapper2_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance92 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance92_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("TdLOWtVwZUaoIuVq+LcKbQ")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container51 Functions
		/// </summary>
		public void cnt_Container51_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container51_setInlineAttributes(sender, e);
		}
		public string cnt_Container51_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container51_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container51)
		/// </summary>
		/// <returns>The Visible State of wt_Container51</returns>
		public bool cnt_Container51_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression56 Functions
		/// </summary>
		public void expression_InlineExpression56_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression56_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression56_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ((getWtLearnerListList().CurrentRec.ssENStudent.ssHasCurrentActiveEnrolment) ?("height:45px;display:block;"):("height:45px;display:block;color:red"));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = uI00lOyOPUSB+IrMNPWgbw) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression56() {
			return ((getWtLearnerListList().CurrentRec.ssENStudent.ssHasCurrentActiveEnrolment) ?((((getWtLearnerListList().CurrentRec.ssENStudent.ssMainOfferingName+ " [") +getWtLearnerListList().CurrentRec.ssENStudent.ssMainOfferingCode) + "]")):("Learner has no active enrolments"));
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance57 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance57_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_InfoBalloon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_InfoBalloon) sender;
			widget.inParamLinkId = Utils.getControlInRecordWidget(wtLearnerList, "wtListCourseClassEnrolments").ClientID;
			widget.inParamWidthPx = 500;
			widget.inParamHeightPx = -1;
		}
		/// <summary>
		/// wt_Container7 Functions
		/// </summary>
		public void cnt_Container7_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container7_setInlineAttributes(sender, e);
		}
		public string cnt_Container7_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container7_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container7)
		/// </summary>
		/// <returns>The Visible State of wt_Container7</returns>
		public bool cnt_Container7_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance32 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance32_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("CzktVEoQIUavNdPuJna99w")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression38 Functions
		/// </summary>
		public void expression_InlineExpression38_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression38_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression38_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left:4px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = fDOzVTBPpkCPLF0vsmY2NA) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression38() {
			return (((getWtLearnerListList().CurrentRec.ssENStudent.ssHomeTelephone!= "")) ?(getWtLearnerListList().CurrentRec.ssENStudent.ssHomeTelephone):("(no telephone)"));
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance16 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance16_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("cAxZk7J+AEu6LHunYrmadQ")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression95 Functions
		/// </summary>
		public void expression_InlineExpression95_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression95_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression95_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left:4px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = EesC+nyOZk25VrSMEvHnmg) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression95() {
			return (((getWtLearnerListList().CurrentRec.ssENStudent.ssMobilePhone!= "")) ?(getWtLearnerListList().CurrentRec.ssENStudent.ssMobilePhone):("(no mobile)"));
		}
		/// <summary>
		/// wt_If2 Functions
		/// </summary>
		bool if_wt_If2_hasRun=false;
		bool if_wt_If2_evalResult;
		public bool if_wt_If2() {
			if (if_wt_If2_hasRun) {
				if_wt_If2_hasRun = false;
				return if_wt_If2_evalResult;
			}
			if_wt_If2_hasRun = true;
			if_wt_If2_evalResult = (getWtLearnerListList().CurrentRec.ssENStudent.ssEmailAddress!= "");
			return if_wt_If2_evalResult;
		}

		/// <summary>
		/// wt_Link83 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link83)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link83)</returns>
		public string lnk_Link83_NavigateUrl() {
			String varLcinParamURL = "";
			varLcinParamURL = ("mailto:" +getWtLearnerListList().CurrentRec.ssENStudent.ssEmailAddress);
			string sURL = varLcinParamURL;
			sURL = sURL.Replace("&amp;", "&");
			if (AppUtils.UrlAttributeMustBeEncoded(Request)) {
				sURL = sURL.Replace("&", "&amp;");
			}
			return sURL;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link83)
		/// </summary>
		/// <returns>title of the Link (wt_Link83)</returns>
		public string
		lnk_Link83_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link83)
		/// </summary>
		/// <returns>The Visible State of wt_Link83</returns>
		public bool lnk_Link83_isVisible() {
			return (getWtLearnerListList().CurrentRec.ssENStudent.ssEmailAddress!= "");
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link83)
		/// </summary>
		/// <returns>The Enabled State of wt_Link83</returns>
		public bool lnk_Link83_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_InlineExpression24 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = k7ZONhMnikiwj5jnLNn1yQ) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression24() {
			return (((getWtLearnerListList().CurrentRec.ssENStudent.ssEmailAddress== "")) ?("(no email)"):(getWtLearnerListList().CurrentRec.ssENStudent.ssEmailAddress));
		}
		/// <summary>
		/// wt_Text59 Functions
		/// </summary>
		public void wt_Text59_onDataBinding(object sender, System.EventArgs e) {
			wt_Text59_setInlineAttributes(sender, e);
		}
		public string wt_Text59_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left:4px;color:#666;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container96 Functions
		/// </summary>
		public void cnt_Container96_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container96_setInlineAttributes(sender, e);
		}
		public string cnt_Container96_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container96_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container96)
		/// </summary>
		/// <returns>The Visible State of wt_Container96</returns>
		public bool cnt_Container96_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_ComboBox75 Functions
		/// </summary>
		public void sel_ComboBox75_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
			if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

			RLActionItemRecordList Rt_wt_ComboBox75_reclist = Functions.ActionLearnerList_GetActionsByRole(heContext, ((int) Global.App.OsContext.Session["UserID"]));
			Rt_wt_ComboBox75_reclist.StartIteration();
			try {
				while (!Rt_wt_ComboBox75_reclist.Eof) {
					((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wt_ComboBox75_reclist.CurrentRec.ssSTActionItem.ssText, Rt_wt_ComboBox75_reclist.CurrentRec.ssSTActionItem.ssValue));
					if (getWtLearnerListList().CurrentRec.ssSTSelectAction.ssSelectAction == Convert.ToString(Rt_wt_ComboBox75_reclist.CurrentRec.ssSTActionItem.ssValue)) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
					}
					Rt_wt_ComboBox75_reclist.Advance();
				}
			} finally {
				Rt_wt_ComboBox75_reclist.EndIteration();
			}
		}
		/// <summary>
		/// AjaxChange event handler for widget wt_ComboBox75
		/// </summary>
		public void sel_ComboBox75_AjaxChange(object sender, System.EventArgs e) {
			if (CommandExecAction(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		public void sel_ComboBox75_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			Control parentControl = (Control) sender;
			while (parentControl != null) {
				if (parentControl is IIteratorItem)break;
				parentControl = parentControl.Parent;
			}
			int parentControlIndex = ((IIteratorItem) parentControl).ItemIndex;
			if (ssLearnerListList.Length > parentControlIndex && parentControlIndex > -1) {
				ssLearnerListList.SetPosition(parentControlIndex);
			} else {
				return;
			}
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				getWtLearnerListList().CurrentRec.ssSTSelectAction.ssSelectAction = "";
			}
			else {
				try {
					getWtLearnerListList().CurrentRec.ssSTSelectAction.ssSelectAction = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_ComboBox75)
		/// </summary>
		/// <returns>The Visible State of wt_ComboBox75</returns>
		public bool sel_ComboBox75_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_ComboBox75)
		/// </summary>
		/// <returns>The Enabled State of wt_ComboBox75</returns>
		public bool sel_ComboBox75_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (sel_ComboBox75)
		/// </summary>
		/// <returns>The Mandatory Value of sel_ComboBox75</returns>
		public bool sel_ComboBox75_isMandatory() {
			return false;
		}

		/// <summary>
		/// wtStudentFavourite2 Functions
		/// </summary>
		public void cntStudentFavourite2_onDataBinding(object sender, System.EventArgs e) {
			cntStudentFavourite2_setInlineAttributes(sender, e);
		}
		public string cntStudentFavourite2_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntStudentFavourite2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentFavourite2)
		/// </summary>
		/// <returns>The Visible State of wtStudentFavourite2</returns>
		public bool cntStudentFavourite2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If68 Functions
		/// </summary>
		bool if_wt_If68_hasRun=false;
		bool if_wt_If68_evalResult;
		public bool if_wt_If68() {
			if (if_wt_If68_hasRun) {
				if_wt_If68_hasRun = false;
				return if_wt_If68_evalResult;
			}
			if_wt_If68_hasRun = true;
			if_wt_If68_evalResult = (getWtLearnerListList().CurrentRec.ssENStaffStudentFavourite.ssId!=BuiltInFunction.NullIdentifier());
			return if_wt_If68_evalResult;
		}

		/// <summary>
		/// wt_Link49 Functions
		/// </summary>
		public void lnk_Link49_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link49_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link49_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#FFD700;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link49_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandToogleFavourite(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link49)
		/// </summary>
		/// <returns>title of the Link (wt_Link49)</returns>
		public string
		lnk_Link49_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link49)
		/// </summary>
		/// <returns>The Visible State of wt_Link49</returns>
		public bool lnk_Link49_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link49)
		/// </summary>
		/// <returns>The Enabled State of wt_Link49</returns>
		public bool lnk_Link49_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance3 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance3_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("qKwz4ZaPnkmbJYnyFjRtFg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Link42 Functions
		/// </summary>
		public void lnk_Link42_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link42_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link42_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#DADADA;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link42_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandToogleFavourite(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link42)
		/// </summary>
		/// <returns>title of the Link (wt_Link42)</returns>
		public string
		lnk_Link42_getTitle() {
			return "set as favourite";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link42)
		/// </summary>
		/// <returns>The Visible State of wt_Link42</returns>
		public bool lnk_Link42_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link42)
		/// </summary>
		/// <returns>The Enabled State of wt_Link42</returns>
		public bool lnk_Link42_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance60 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance60_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("ycc7nxlWj0WSykMfq37k4A")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container37 Functions
		/// </summary>
		public void cnt_Container37_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container37_setInlineAttributes(sender, e);
		}
		public string cnt_Container37_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container37_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container37)
		/// </summary>
		/// <returns>The Visible State of wt_Container37</returns>
		public bool cnt_Container37_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance17 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance17_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkList_Navigation widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkList_Navigation) sender;
			widget.inParamListWidgetId = wtLearnerList.ClientID;
			widget.inParamLineCount = wtLearnerList.RtWidget.LineCount;
			widget.inParamTotalRowCount = queryResGetStudents_outParamCount;
			widget.inParamMaxPageNumbers = 3;
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance17
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance17_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandSearch(heContext
			, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}


		public static class FuncCommandOnLearnerClick {
		}
		public static class FuncCommandSearch {
		}
		public static class FuncCommandExecAction {
		}
		public static class FuncCommandSafeGuardClick {
		}
		public static class FuncCommandOnNotify {
		}
		public static class FuncCommandToogleFavourite {
		}
		public static class FuncssPreparation {

			private static void QueryGetStudentsReadDB(ref RCStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENStudent.Read(r, ref index);
				rec.ssENStaffStudentFavourite.Read(r, ref index);
				rec.ssSTSelectAction.Read(r, ref index);
				rec.ssSTBoolean.Read(r, ref index);
				rec.ssENStudentRAG.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetStudents" of Action "Preparation"
			/// </summary>
			public static RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList QueryGetStudents(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstKeywordSearch, int qpinUseRId, bool qpboIsFavorite, DateTime qpdaBirthDate, DateTime qpdaNullDate, string qpstSafeguardingTypeId, bool qpboIsAll, string qpstCourseCode) {
				// Query Iterations: Single {LearnerList}
				// Refresh Query P5+5wTnLNkywnk9PQAy8aQ Iterations: Multiple {LearnerList}
				// Refresh Query Ku+xdneP2kOo7pY2IH2T7g Iterations: Single {LearnerList}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords == 1));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				Command sqlCountCmd = trans.CreateCommand();
				sqlCmd.CreateParameter("@qpinUseRId", DbType.Int32, qpinUseRId);
				sqlCountCmd.CreateParameter("@qpinUseRId", DbType.Int32, qpinUseRId);
				sqlCmd.CreateParameter("@qpstKeywordSearch", DbType.String, qpstKeywordSearch);
				sqlCountCmd.CreateParameter("@qpstKeywordSearch", DbType.String, qpstKeywordSearch);
				sqlCmd.CreateParameter("@qpboIsFavorite", DbType.Boolean, qpboIsFavorite);
				sqlCountCmd.CreateParameter("@qpboIsFavorite", DbType.Boolean, qpboIsFavorite);
				sqlCmd.CreateParameter("@qpdaBirthDate", DbType.DateTime, qpdaBirthDate);
				sqlCountCmd.CreateParameter("@qpdaBirthDate", DbType.DateTime, qpdaBirthDate);
				sqlCmd.CreateParameter("@qpdaNullDate", DbType.DateTime, qpdaNullDate);
				sqlCountCmd.CreateParameter("@qpdaNullDate", DbType.DateTime, qpdaNullDate);
				sqlCmd.CreateParameter("@qpstSafeguardingTypeId", DbType.String, qpstSafeguardingTypeId);
				sqlCountCmd.CreateParameter("@qpstSafeguardingTypeId", DbType.String, qpstSafeguardingTypeId);
				sqlCmd.CreateParameter("@qpboIsAll", DbType.Boolean, qpboIsAll);
				sqlCountCmd.CreateParameter("@qpboIsAll", DbType.Boolean, qpboIsAll);
				sqlCmd.CreateParameter("@qpstCourseCode", DbType.String, qpstCourseCode);
				sqlCountCmd.CreateParameter("@qpstCourseCode", DbType.String, qpstCourseCode);
				string advSql = "SELECT   " +
				 " {Student}.[STUDENTREFERENCE], {Student}.[FORENAMES], {Student}.[SURNAME], {Student}.[DATEOFBIRTH], {Student}.[GENDER], {Student}.[MAINOFFERINGCODE], {Student}.[MAINOFFERINGNAME], {Student}.[STUDENTPHOTOURL], {Student}.[HOMEADDRESS], {Student}.[HOMEADDRESSPOSTCODE], {Student}.[CURRENTADDRESS], {Student}.[CURRENTADDRESSPOSTCODE], {Student}.[EMAILADDRESS], {Student}.[HOMETELEPHONE], {Student}.[MOBILEPHONE], {Student}.[NEXTOFKINNAME], {Student}.[NEXTOFKINRELATIONSHIP], {Student}.[NEXTOFKINADDRESS], {Student}.[NEXTOFKINPOSTCODE], {Student}.[NEXTOFKINPHONE], {Student}.[PERSONALTUTOR], {Student}.[NEXTOFKINEMAIL], {Student}.[HASCURRENTACTIVEENROLMENT], {Student}.[NETWORKLOGIN], {Student}.[NINUMBER], {Student}.[RESIDENTIALSTATUS], {Student}.[PREVIOUSSCHOOL], {StaffStudentFavourite}.[ID], {StaffStudentFavourite}.[STUDENTREFERENCE], {StaffStudentFavourite}.[USERID], '',  " +
				 "(SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END FROM  {SafeguardingIssue} WHERE  {SafeguardingIssue}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE]) SF_ISSUES,  " +
				 " {StudentRAG}.[STUDENTREFERENCE], {StudentRAG}.[RAG], {StudentRAG}.[DESCRIPTION], {StudentRAG}.[UPDATEDBY], {StudentRAG}.[UPDATEDAT]  " +
				 "FROM  {Student}  " +
				 "LEFT JOIN  {StaffStudentFavourite} ON ( {Student}.[STUDENTREFERENCE] =  {StaffStudentFavourite}.[STUDENTREFERENCE] AND  {StaffStudentFavourite}.[USERID] = @qpinUseRId )  " +
				 "LEFT JOIN  {StudentRAG} ON  {Student}.[STUDENTREFERENCE] =  {StudentRAG}.[STUDENTREFERENCE]  " +
				 "WHERE  " +
				 "    ( {Student}.[STUDENTREFERENCE] like '%'+@qpstKeywordSearch +'%' OR   " +
				 "         {Student}.[FORENAMES] + ' ' +  {Student}.[SURNAME] like '%'+@qpstKeywordSearch +'%' OR   " +
				 "         {Student}.[SURNAME] + ' ' +  {Student}.[FORENAMES]  like '%'+@qpstKeywordSearch +'%'   " +
				 "     )  " +
				 "    AND (@qpboIsFavorite = 0 OR  {StaffStudentFavourite}.[USERID] = @qpinUseRId)  " +
				 "    AND (@qpdaBirthDate = @qpdaNullDate OR  {Student}.[DATEOFBIRTH] = @qpdaBirthDate )  " +
				 "    AND ( @qpstSafeguardingTypeId = '' OR EXISTS (SELECT  {SafeguardingIssue}.[ID] FROM  {SafeguardingIssue} WHERE  {SafeguardingIssue}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE] AND  {SafeguardingIssue}.[SAFEGUARDINGISSUETYPE] = @qpstSafeguardingTypeId ))  " +
				 "    AND ( @qpboIsAll = 0 OR EXISTS (SELECT  {SafeguardingIssue}.[ID] FROM  {SafeguardingIssue} WHERE  {SafeguardingIssue}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE]))  " +
				 "    AND (@qpstCourseCode ='' OR EXISTS (   " +
				 "                                        SELECT  {Student_Group}.[ID] FROM  {Student_Group}   " +
				 "                                                    INNER JOIN  {Group} ON  {Student_Group}.[GROUPID] =  {Group}.[ID]   " +
				 "                                                    AND  {Student_Group}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE]  " +
				 "                                                    AND  {Student_Group}.[ENROLMENTSTATUS] LIKE 'Active'  " +
				 "                                                    WHERE  {Group}.[GROUPNAME] = @qpstCourseCode   " +
				 "                                         )  " +
				 "    )     " +
				 "ORDER BY     {Student}.[HASCURRENTACTIVEENROLMENT] DESC,  " +
				 "             {Student}.[SURNAME],  " +
				 "             {Student}.[FORENAMES]";
				string sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				AppUtils.Instance.CheckReadOnlyEntityReferences(advSql);
				AppUtils.Instance.CheckForSelectStatement(sql);
				string sqlCount = "DECLARE @CountCursor CURSOR; SET @CountCursor = CURSOR STATIC READ_ONLY FOR ";
				sqlCount += sql;
				sqlCount += "; OPEN @CountCursor; SELECT @@CURSOR_ROWS; CLOSE @CountCursor; DEALLOCATE @CountCursor; ";
				sqlCmd.CommandText = sql;
				sqlCountCmd.CommandText = sqlCount;
				try {
					RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList outParamList = new RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList();
					if (multiplicity != IterationMultiplicity.Multiple) {
						outParamList.AlternateReadDBMethod = QueryGetStudentsReadDB;
					}
					outParamList.Transaction = trans;
					BitArray[] opt = new BitArray[5];
					opt[0] = new BitArray(new bool[] {
						false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
					}
					);
					opt[1] = new BitArray(new bool[] {
						false
					}
					);
					opt[2] = new BitArray(new bool[] {
						false
					}
					);
					opt[3] = new BitArray(new bool[] {
						false, false, false, false, false
					}
					);
					opt[4] = new BitArray(new bool[] {
						false, false, false
					}
					);
					outParamList.AllOptimizedAttributes = opt;
					if (multiplicity == IterationMultiplicity.Multiple) {
						RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList _tmp = new RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList();
						_tmp.AlternateReadDBMethod = QueryGetStudentsReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						_tmp.MaxRecords = maxRecords;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learners.LearnerList.Preparation.GetStudents.List");
							outParamList = (RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList) _tmp.Duplicate();
							_tmp.CloseDataReader();
							if (maxRecords > 0 && outParamList.Length == maxRecords)
							outParamCount = Convert.ToInt32(sqlCountCmd.ExecuteScalarWithoutTransformParametersSyntax("Query Learners.LearnerList.Preparation.GetStudents.Count", false));
							else
							outParamCount = outParamList.Length;
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else if (multiplicity == IterationMultiplicity.Never) {
						try {
							outParamCount = Convert.ToInt32(sqlCountCmd.ExecuteScalarWithoutTransformParametersSyntax("Query Learners.LearnerList.Preparation.GetStudents.Count", false));
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.LearnerList.Preparation.GetStudents.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							outParamList.CloseDataReader();
						}
					} else {
						try {
							outParamCount = Convert.ToInt32(sqlCountCmd.ExecuteScalarWithoutTransformParametersSyntax("Query Learners.LearnerList.Preparation.GetStudents.Count", false));
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.LearnerList.Preparation.GetStudents.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				} catch (System.InvalidOperationException aqExcep) {
					if (aqExcep.Message.StartsWith("Command parameter[")) {
						throw new DataBaseException("Problems accessing parameters in advanced query GetStudents in Preparation in LearnerList in Learners in CaseConferencing (SELECT   {Student}.*,{StaffStudentFavourite}.*, '',  (SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END FROM {SafeguardingIssue} WHERE {SafeguardingIssue}.[StudentReference] = {Student}.[StudentReference]) SF_ISSUES,  {StudentRAG}.*  FROM {Student}  LEFT JOIN {StaffStudentFavourite} ON ({Student}.[StudentReference] = {StaffStudentFavourite}.[StudentReference] AND {StaffStudentFavourite}.[UserId] = @UseRId )  LEFT JOIN {StudentRAG} ON {Student}.[StudentReference] = {StudentRAG}.[StudentReference]  WHERE      ({Student}.[StudentReference] like '%'+@KeywordSearch +'%' OR           {Student}.[Forenames] + ' ' + {Student}.[Surname] like '%'+@KeywordSearch +'%' OR           {Student}.[Surname] + ' ' + {Student}.[Forenames]  like '%'+@KeywordSearch +'%'        )      AND (@IsFavorite = 0 OR {StaffStudentFavourite}.[UserId] = @UseRId)      AND (@BirthDate = @NullDate OR {Student}.[DateOfBirth] = @BirthDate )      AND ( @SafeguardingTypeId = '' OR EXISTS (SELECT {SafeguardingIssue}.[Id] FROM {Saf ...): " + aqExcep.Message);
					}
					throw new DataBaseException("Error in advanced query GetStudents in Preparation in LearnerList in Learners in CaseConferencing (SELECT   {Student}.*,{StaffStudentFavourite}.*, '',  (SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END FROM {SafeguardingIssue} WHERE {SafeguardingIssue}.[StudentReference] = {Student}.[StudentReference]) SF_ISSUES,  {StudentRAG}.*  FROM {Student}  LEFT JOIN {StaffStudentFavourite} ON ({Student}.[StudentReference] = {StaffStudentFavourite}.[StudentReference] AND {StaffStudentFavourite}.[UserId] = @UseRId )  LEFT JOIN {StudentRAG} ON {Student}.[StudentReference] = {StudentRAG}.[StudentReference]  WHERE      ({Student}.[StudentReference] like '%'+@KeywordSearch +'%' OR           {Student}.[Forenames] + ' ' + {Student}.[Surname] like '%'+@KeywordSearch +'%' OR           {Student}.[Surname] + ' ' + {Student}.[Forenames]  like '%'+@KeywordSearch +'%'        )      AND (@IsFavorite = 0 OR {StaffStudentFavourite}.[UserId] = @UseRId)      AND (@BirthDate = @NullDate OR {Student}.[DateOfBirth] = @BirthDate )      AND ( @SafeguardingTypeId = '' OR EXISTS (SELECT {SafeguardingIssue}.[Id] FROM {Saf ...): " + aqExcep.Message);
				} catch (Exception aqExcep) {
					throw new DataBaseException("Error in advanced query GetStudents in Preparation in LearnerList in Learners in CaseConferencing (SELECT   {Student}.*,{StaffStudentFavourite}.*, '',  (SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END FROM {SafeguardingIssue} WHERE {SafeguardingIssue}.[StudentReference] = {Student}.[StudentReference]) SF_ISSUES,  {StudentRAG}.*  FROM {Student}  LEFT JOIN {StaffStudentFavourite} ON ({Student}.[StudentReference] = {StaffStudentFavourite}.[StudentReference] AND {StaffStudentFavourite}.[UserId] = @UseRId )  LEFT JOIN {StudentRAG} ON {Student}.[StudentReference] = {StudentRAG}.[StudentReference]  WHERE      ({Student}.[StudentReference] like '%'+@KeywordSearch +'%' OR           {Student}.[Forenames] + ' ' + {Student}.[Surname] like '%'+@KeywordSearch +'%' OR           {Student}.[Surname] + ' ' + {Student}.[Forenames]  like '%'+@KeywordSearch +'%'        )      AND (@IsFavorite = 0 OR {StaffStudentFavourite}.[UserId] = @UseRId)      AND (@BirthDate = @NullDate OR {Student}.[DateOfBirth] = @BirthDate )      AND ( @SafeguardingTypeId = '' OR EXISTS (SELECT {SafeguardingIssue}.[Id] FROM {Saf ...): " + aqExcep.Message);
				}
			}

			private static void QueryGetStudents2ReadDB(ref RCStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENStudent.Read(r, ref index);
				rec.ssENStaffStudentFavourite.Read(r, ref index);
				rec.ssSTSelectAction.Read(r, ref index);
				rec.ssSTBoolean.Read(r, ref index);
				rec.ssENStudentRAG.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetStudents2" of Action "Preparation"
			/// </summary>
			public static RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList QueryGetStudents2(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstKeywordSearch, int qpinUseRId, bool qpboIsFavorite) {
				// Query Iterations: Single {LearnerList}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords == 1));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				Command sqlCountCmd = trans.CreateCommand();
				sqlCmd.CreateParameter("@qpinUseRId", DbType.Int32, qpinUseRId);
				sqlCountCmd.CreateParameter("@qpinUseRId", DbType.Int32, qpinUseRId);
				sqlCmd.CreateParameter("@qpstKeywordSearch", DbType.String, qpstKeywordSearch);
				sqlCountCmd.CreateParameter("@qpstKeywordSearch", DbType.String, qpstKeywordSearch);
				sqlCmd.CreateParameter("@qpboIsFavorite", DbType.Boolean, qpboIsFavorite);
				sqlCountCmd.CreateParameter("@qpboIsFavorite", DbType.Boolean, qpboIsFavorite);
				string advSql = "SELECT  {Student}.[STUDENTREFERENCE], {Student}.[FORENAMES], {Student}.[SURNAME], {Student}.[DATEOFBIRTH], {Student}.[GENDER], {Student}.[MAINOFFERINGCODE], {Student}.[MAINOFFERINGNAME], {Student}.[STUDENTPHOTOURL], {Student}.[HOMEADDRESS], {Student}.[HOMEADDRESSPOSTCODE], {Student}.[CURRENTADDRESS], {Student}.[CURRENTADDRESSPOSTCODE], {Student}.[EMAILADDRESS], {Student}.[HOMETELEPHONE], {Student}.[MOBILEPHONE], {Student}.[NEXTOFKINNAME], {Student}.[NEXTOFKINRELATIONSHIP], {Student}.[NEXTOFKINADDRESS], {Student}.[NEXTOFKINPOSTCODE], {Student}.[NEXTOFKINPHONE], {Student}.[PERSONALTUTOR], {Student}.[NEXTOFKINEMAIL], {Student}.[HASCURRENTACTIVEENROLMENT], {Student}.[NETWORKLOGIN], {Student}.[NINUMBER], {Student}.[RESIDENTIALSTATUS], {Student}.[PREVIOUSSCHOOL], {StaffStudentFavourite}.[ID], {StaffStudentFavourite}.[STUDENTREFERENCE], {StaffStudentFavourite}.[USERID], '',  " +
				 "(SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END FROM  {SafeguardingIssue} WHERE  {SafeguardingIssue}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE]) SF_ISSUES,  " +
				 " {StudentRAG}.[STUDENTREFERENCE], {StudentRAG}.[RAG], {StudentRAG}.[DESCRIPTION], {StudentRAG}.[UPDATEDBY], {StudentRAG}.[UPDATEDAT]  " +
				 "  FROM  {Student}  " +
				 "LEFT JOIN  {StaffStudentFavourite} ON ( {Student}.[STUDENTREFERENCE] =  {StaffStudentFavourite}.[STUDENTREFERENCE] AND  {StaffStudentFavourite}.[USERID] = @qpinUseRId )  " +
				 "LEFT JOIN  {StudentRAG} ON  {Student}.[STUDENTREFERENCE] =  {StudentRAG}.[STUDENTREFERENCE]  " +
				 "WHERE  " +
				 "    (  " +
				 "     {Student}.[STUDENTREFERENCE] like '%'+@qpstKeywordSearch +'%' OR   " +
				 "     {Student}.[FORENAMES] + ' ' +  {Student}.[SURNAME] like '%'+@qpstKeywordSearch +'%' OR   " +
				 "     {Student}.[SURNAME] + ' ' +  {Student}.[FORENAMES]  like '%'+@qpstKeywordSearch +'%'   " +
				 "    )  " +
				 "    AND (@qpboIsFavorite = 0 OR  {StaffStudentFavourite}.[USERID] = @qpinUseRId)  " +
				 "ORDER BY   " +
				 "         {Student}.[HASCURRENTACTIVEENROLMENT] DESC,  " +
				 "         {Student}.[SURNAME],  " +
				 "          {Student}.[FORENAMES]";
				string sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				AppUtils.Instance.CheckReadOnlyEntityReferences(advSql);
				AppUtils.Instance.CheckForSelectStatement(sql);
				string sqlCount = "DECLARE @CountCursor CURSOR; SET @CountCursor = CURSOR STATIC READ_ONLY FOR ";
				sqlCount += sql;
				sqlCount += "; OPEN @CountCursor; SELECT @@CURSOR_ROWS; CLOSE @CountCursor; DEALLOCATE @CountCursor; ";
				sqlCmd.CommandText = sql;
				sqlCountCmd.CommandText = sqlCount;
				try {
					RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList outParamList = new RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList();
					if (multiplicity != IterationMultiplicity.Multiple) {
						outParamList.AlternateReadDBMethod = QueryGetStudents2ReadDB;
					}
					outParamList.Transaction = trans;
					BitArray[] opt = new BitArray[5];
					opt[0] = new BitArray(new bool[] {
						false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
					}
					);
					opt[1] = new BitArray(new bool[] {
						false
					}
					);
					opt[2] = new BitArray(new bool[] {
						false
					}
					);
					opt[3] = new BitArray(new bool[] {
						false, false, false, false, false
					}
					);
					opt[4] = new BitArray(new bool[] {
						false, false, false
					}
					);
					outParamList.AllOptimizedAttributes = opt;
					if (multiplicity == IterationMultiplicity.Multiple) {
						RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList _tmp = new RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList();
						_tmp.AlternateReadDBMethod = QueryGetStudents2ReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						_tmp.MaxRecords = maxRecords;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learners.LearnerList.Preparation.GetStudents2.List");
							outParamList = (RLStudentSelectActionBooleanStudentRAGStaffStudentFavouriteRecordList) _tmp.Duplicate();
							_tmp.CloseDataReader();
							if (maxRecords > 0 && outParamList.Length == maxRecords)
							outParamCount = Convert.ToInt32(sqlCountCmd.ExecuteScalarWithoutTransformParametersSyntax("Query Learners.LearnerList.Preparation.GetStudents2.Count", false));
							else
							outParamCount = outParamList.Length;
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else if (multiplicity == IterationMultiplicity.Never) {
						try {
							outParamCount = Convert.ToInt32(sqlCountCmd.ExecuteScalarWithoutTransformParametersSyntax("Query Learners.LearnerList.Preparation.GetStudents2.Count", false));
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.LearnerList.Preparation.GetStudents2.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							outParamList.CloseDataReader();
						}
					} else {
						try {
							outParamCount = Convert.ToInt32(sqlCountCmd.ExecuteScalarWithoutTransformParametersSyntax("Query Learners.LearnerList.Preparation.GetStudents2.Count", false));
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.LearnerList.Preparation.GetStudents2.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				} catch (System.InvalidOperationException aqExcep) {
					if (aqExcep.Message.StartsWith("Command parameter[")) {
						throw new DataBaseException("Problems accessing parameters in advanced query GetStudents2 in Preparation in LearnerList in Learners in CaseConferencing (SELECT {Student}.*,{StaffStudentFavourite}.*, '',  (SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END FROM {SafeguardingIssue} WHERE {SafeguardingIssue}.[StudentReference] = {Student}.[StudentReference]) SF_ISSUES,  {StudentRAG}.*    FROM {Student}  LEFT JOIN {StaffStudentFavourite} ON ({Student}.[StudentReference] = {StaffStudentFavourite}.[StudentReference] AND {StaffStudentFavourite}.[UserId] = @UseRId )  LEFT JOIN {StudentRAG} ON {Student}.[StudentReference] = {StudentRAG}.[StudentReference]  WHERE      (      {Student}.[StudentReference] like '%'+@KeywordSearch +'%' OR       {Student}.[Forenames] + ' ' + {Student}.[Surname] like '%'+@KeywordSearch +'%' OR       {Student}.[Surname] + ' ' + {Student}.[Forenames]  like '%'+@KeywordSearch +'%'       )      AND (@IsFavorite = 0 OR {StaffStudentFavourite}.[UserId] = @UseRId)  ORDER BY           {Student}.[HasCurrentActiveEnrolment] DESC,          {Student}.[Surname],           {Student}.[Forenames]): " + aqExcep.Message);
					}
					throw new DataBaseException("Error in advanced query GetStudents2 in Preparation in LearnerList in Learners in CaseConferencing (SELECT {Student}.*,{StaffStudentFavourite}.*, '',  (SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END FROM {SafeguardingIssue} WHERE {SafeguardingIssue}.[StudentReference] = {Student}.[StudentReference]) SF_ISSUES,  {StudentRAG}.*    FROM {Student}  LEFT JOIN {StaffStudentFavourite} ON ({Student}.[StudentReference] = {StaffStudentFavourite}.[StudentReference] AND {StaffStudentFavourite}.[UserId] = @UseRId )  LEFT JOIN {StudentRAG} ON {Student}.[StudentReference] = {StudentRAG}.[StudentReference]  WHERE      (      {Student}.[StudentReference] like '%'+@KeywordSearch +'%' OR       {Student}.[Forenames] + ' ' + {Student}.[Surname] like '%'+@KeywordSearch +'%' OR       {Student}.[Surname] + ' ' + {Student}.[Forenames]  like '%'+@KeywordSearch +'%'       )      AND (@IsFavorite = 0 OR {StaffStudentFavourite}.[UserId] = @UseRId)  ORDER BY           {Student}.[HasCurrentActiveEnrolment] DESC,          {Student}.[Surname],           {Student}.[Forenames]): " + aqExcep.Message);
				} catch (Exception aqExcep) {
					throw new DataBaseException("Error in advanced query GetStudents2 in Preparation in LearnerList in Learners in CaseConferencing (SELECT {Student}.*,{StaffStudentFavourite}.*, '',  (SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END FROM {SafeguardingIssue} WHERE {SafeguardingIssue}.[StudentReference] = {Student}.[StudentReference]) SF_ISSUES,  {StudentRAG}.*    FROM {Student}  LEFT JOIN {StaffStudentFavourite} ON ({Student}.[StudentReference] = {StaffStudentFavourite}.[StudentReference] AND {StaffStudentFavourite}.[UserId] = @UseRId )  LEFT JOIN {StudentRAG} ON {Student}.[StudentReference] = {StudentRAG}.[StudentReference]  WHERE      (      {Student}.[StudentReference] like '%'+@KeywordSearch +'%' OR       {Student}.[Forenames] + ' ' + {Student}.[Surname] like '%'+@KeywordSearch +'%' OR       {Student}.[Surname] + ' ' + {Student}.[Forenames]  like '%'+@KeywordSearch +'%'       )      AND (@IsFavorite = 0 OR {StaffStudentFavourite}.[UserId] = @UseRId)  ORDER BY           {Student}.[HasCurrentActiveEnrolment] DESC,          {Student}.[Surname],           {Student}.[Forenames]): " + aqExcep.Message);
				}
			}
		}



		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}


		public LocalState PushStack() {
			return null;
		}

		public void doRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				Preparation(heContext);

				Title = "LearnerList"; ssLearnerListListDoDataBind = true;
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerList", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// Perform the partial databind
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerList", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Ajax", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}



		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();
			ViewStateAttributes.SetInViewState("inParamCourseCode", inParamCourseCode, "");
			ViewStateAttributes.SetInViewState("varLcLearnerKeywordSearch", varLcLearnerKeywordSearch, "");
			ViewStateAttributes.SetInViewState("varLcIsFavorite_Filter", varLcIsFavorite_Filter, false);
			ViewStateAttributes.SetInViewState("varLcSelected_StudentId", varLcSelected_StudentId, "");
			ViewStateAttributes.SetInViewState("varLcStudentBirthDate", varLcStudentBirthDate, new DateTime(1900, 1, 1, 0, 0, 0));
			ViewStateAttributes.SetInViewState("varLcSafeguardingFilter", varLcSafeguardingFilter, "");
			ViewStateAttributes.SetInViewState("varLcURL", varLcURL, "");
			ViewStateAttributes.SetInViewState("wt_Input70_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wt_Input70")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtTarget_TargetDate_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtTarget_TargetDate")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtSafeguardingDD_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtSafeguardingDD")).Mandatory, false);
			if (IsAjaxRequest) {
				recListLearnerList_Rebuild((ssLearnerListListDataBound ? wtLearnerList.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtLearnerList.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtLearnerList_list", wtLearnerList_storage, null);
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			try {
				inParamCourseCode = (string) ViewStateAttributes.GetFromViewState("inParamCourseCode", "");
				varLcLearnerKeywordSearch = (string) ViewStateAttributes.GetFromViewState("varLcLearnerKeywordSearch", "");
				varLcIsFavorite_Filter = (bool) ViewStateAttributes.GetFromViewState("varLcIsFavorite_Filter", false);
				varLcSelected_StudentId = (string) ViewStateAttributes.GetFromViewState("varLcSelected_StudentId", "");
				varLcStudentBirthDate = (DateTime) ViewStateAttributes.GetFromViewState("varLcStudentBirthDate", new DateTime(1900, 1, 1, 0, 0, 0));
				varLcSafeguardingFilter = (string) ViewStateAttributes.GetFromViewState("varLcSafeguardingFilter", "");
				varLcURL = (string) ViewStateAttributes.GetFromViewState("varLcURL", "");
				((IWidgetRuntimeProperties) this.FindControl("wt_Input70")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wt_Input70_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtTarget_TargetDate")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtTarget_TargetDate_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtSafeguardingDD")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtSafeguardingDD_Mandatory", false);
				recListLearnerList_Restore();
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}


		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			ValidationUtils.ValidateInput(this, "wt_Input70", parentEditRecord, ValidationUtils.validateTrue, validate);
			ValidationUtils.ValidateInput(this, "wtTarget_TargetDate", parentEditRecord, OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDateValidate, validate);
			ValidationUtils.ValidateComboBox(this, "wtSafeguardingDD", parentEditRecord, validate);
			ValidationUtils.ValidateComboBox(FindControl("wtLearnerList"), "wt_ComboBox75", parentEditRecord, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}


		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}

		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			Page_Load(null, null); this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}


		public override void DataBind() {
			base.DataBind();
			StoreViewState();
			OutSystems.HubEdition.WebWidgets.Utils.addValidationScriptsToPage(this);
		}



	}




}
