/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.IO;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Runtime.Serialization;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Web.Caching;
using System.Text;
using System.Resources;

namespace ssCaseConferencing.Flows.FlowReporting {

	public class ScrnPopup_UpdateRAG: OSPageViewStateCompressed, IWebScreen, INegotiateTabIndexes, IBookmarkableURL {


		public ScrnPopup_UpdateRAG(): base(CaseConferencing_Properties.QuirksMode) {
		}


		/// <summary>
		/// Screen Input Parameter inParamStudentReference. Description:
		/// </summary>
		public string inParamStudentReference = "";
		/// <summary>
		/// Variable <code>varLcCurrentSelectRAG</code> that represents the Service Studio local variable
		///  <code>CurrentSelectRAG</code> <p>Description: </p>
		/// </summary>
		string varLcCurrentSelectRAG = "";

		/// <summary>
		/// Variable wt_WebBlockInstance37
		/// </summary>
		protected ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout wt_WebBlockInstance37;
		protected OutSystems.HubEdition.WebWidgets.Container wtOverviewShortTerm2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container8;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container36;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container33;
		protected OutSystems.HubEdition.WebWidgets.Container wtOverviewDescriptionShortTerm3;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container11;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtStudentRAGDescriptionInputValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtStudentRAGDescriptionInputValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wtWarapperShortTermRAG;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container1;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container34;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container21;
		/// <summary>
		/// Auxiliar Edit Record record variable
		/// </summary>
		RCStudentUserRAGStatusStudentRAGRecord ssEditRecordRAGRecord = new RCStudentUserRAGStatusStudentRAGRecord(null);

		/// <summary>
		/// Edit Record Valid Runtime Property
		/// </summary>
		public bool wtEditRecordRAG_Valid() {
			bool res = true;
			return res;
		}

		protected OutSystems.HubEdition.WebWidgets.Container wt_Container27;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container14;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container43;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container24;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container44;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container28;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container16;
		/// <summary>
		/// Variable (wt_Link46) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link46;


		protected override void GetBlocksCss(TextWriter writer, bool inline, HashSet<string> visited) {
			ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon.GetCss(writer, inline, visited);

		}

		protected override void GetWidgetsCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}







		protected override string GetInlineStyleSheetInclude() {
			throw new InvalidOperationException();
		}





		protected override bool PageAllowsCallbacks() {
			return true;
		}


		protected string GetRequestInfoJavaScript() {
			return GetRequestInfoJavaScript("T5JSf6OKhEiVJ4ghIR2fVg", "Popup_UpdateRAG");
		}

		protected string GetVisitCode() {
			SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
			if (session["osIsNewVisit"] != null && ((bool) session["osIsNewVisit"])
			// && !NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)
			&& RuntimePlatformUtils.IsValidRequestForVisit()) {
				return "<script type=\"text/javascript\">outsystems.internal.$.get(\"/CaseConferencing/_status.aspx\")</script>";
			}
			return "";
		}

		public string GetCallbackDebug() {
			if (Request.HttpMethod == "GET" && Request.QueryString["__CALLBACK_DEBUG"] != null && Request.QueryString["__CALLBACK_DEBUG"] != "") {
				if (Request.QueryString["__CALLBACK_DEBUG"] == OutSystems.HubEdition.RuntimePlatform.AppInfo.GetParameter(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Callback_Debug_Information_Key)) {
					return OutSystems.HubEdition.RuntimePlatform.AppInfo.GetAppInfo().GetCallbackDebugInformation();
				}
			}
			return "";
		}

		protected string GetHeadTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadTop, "T5JSf6OKhEiVJ4ghIR2fVg", "Popup_UpdateRAG");
		}

		protected string GetHeadBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadBottom, "T5JSf6OKhEiVJ4ghIR2fVg", "Popup_UpdateRAG");
		}

		protected string GetBodyTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyTop, "T5JSf6OKhEiVJ4ghIR2fVg", "Popup_UpdateRAG");
		}

		protected string GetBodyBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyBottom, "T5JSf6OKhEiVJ4ghIR2fVg", "Popup_UpdateRAG");
		}

		HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();



		static ScrnPopup_UpdateRAG() {
		}


		RLStudentUserRAGStatusStudentRAGRecordList queryResGetStudentRAGByStudent_outParamList = new RLStudentUserRAGStatusStudentRAGRecordList();
		int queryResGetStudentRAGByStudent_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// Query datasetGetStudentRAGByStudent
			int datasetGetStudentRAGByStudent_maxRecords = 0;
			queryResGetStudentRAGByStudent_outParamList = FuncssPreparation.datasetGetStudentRAGByStudent(heContext, datasetGetStudentRAGByStudent_maxRecords, IterationMultiplicity.Never, out queryResGetStudentRAGByStudent_outParamCount, inParamStudentReference
			);
		}


		protected override BaseAppUtils GetAppUtils() {
			return AppUtils.Instance;
		}

		protected override string OwnCssUrl {
			get {
				return ""; 
			}
		}

		protected override string OwnCssFile {
			get {
				return ""; 
			}
		}

		protected override string BasicCssUrl {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string BasicCssFile {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssUrl {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssFile {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssUrl {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssFile {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssUrl {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssFile {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssUrl {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssFile {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string ThemeCssUrl {
			get {
				return RsseSpaceThemeProvider.Themes.ThemeThemeProvider.ThemeCssUrl; 
			}
		}

		protected override string ThemeCssFile {
			get {
				return "ReferenceTheme.ThemeProvider.css"; 
			}
		}

		protected override string ThemeExtraCssUrl {
			get {
				return RsseSpaceRichWidgets.Themes.ThemeLondonFixed.ThemeExtraCssUrl; 
			}
		}

		protected override string ThemeExtraCssFile {
			get {
				return "ReferenceTheme.LondonFixed.extra.css"; 
			}
		}

		public override bool IsUsingMobileTheme {
			get {
				return false; 
			}
		}

		protected override string OwnJavascriptInclude {
			get {
				return ""; 
			}
		}

		public override string XUACompatibleOverride {
			get {
				return null; 
			}
		}

		protected void InitializeUrls() {
			Uri uri = new Uri((RuntimePlatformUtils.RequestIsSecure(Request) ? "https": "http") + Request.Url.ToString().Substring(Request.Url.Scheme.Length));
			string applicationUrl = AppUtils.Instance.getImagePath(/*internalAccess*/false,/*includeSessionIdIfNeeded*/ false);
			actionUrl = "";
			bookmarkableUrl = uri.GetLeftPart(UriPartial.Authority) + applicationUrl;
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			if ((inParamStudentReference!= "")) {
				parameters.Add(new Pair<string, string>("StudentReference", HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			}
			if (Request.AppRelativeCurrentExecutionFilePath.IndexOf('/', 2) == -1) {
				AppInfo appInfo = AppInfo.GetAppInfo();
				if (appInfo != null) {
					string pageHeader = appInfo.OsContext.OsISAPIFilter.GetPage(Request);
					if (appInfo.OsContext.IsCookielessSession || (pageHeader != null && pageHeader.IndexOf('/', 1) != -1)) {
						actionUrl = applicationUrl;
					}
				}
				actionUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_UpdateRAG", parameters,/*useParamsOnlyIfNeededForRule*/ true);
			}
			bookmarkableUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_UpdateRAG", parameters,/*useParamsOnlyIfNeededForRule*/ false);

		}

		protected override void OnInit(EventArgs e) {
			HeContext heContext = AppInfo.GetAppInfo().OsContext;
			heContext.CurrentScreen = this;
			try {
				heContext.CurrentExecutionFileName = Path.GetFileName(Request.CurrentExecutionFilePath);
			} catch {}
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wt_WebBlockInstance37 = (ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout) FindControl("wt_WebBlockInstance37");
			wtOverviewShortTerm2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtOverviewShortTerm2");
			wt_Container8 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container8");
			wt_Container36 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container36");
			wt_Container33 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container33");
			wtOverviewDescriptionShortTerm3 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtOverviewDescriptionShortTerm3");
			wt_Container11 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container11");
			wtWarapperShortTermRAG = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtWarapperShortTermRAG");
			wt_Container1 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container1");
			wt_Container34 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container34");
			wt_Container21 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container21");
			wt_Container27 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container27");
			wt_Container14 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container14");
			wt_Container2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container2");
			wt_Container43 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container43");
			wt_Container24 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container24");
			wt_Container44 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container44");
			wt_Container28 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container28");
			wt_Container16 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container16");
			wt_Link46 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link46");
			if (this.wt_Link46 != null) {
				this.wt_Link46.Click += new System.EventHandler(this.wt_Link46_Click);
			}
			Page.Error += new EventHandler(Page_Error);
			this.Load += new System.EventHandler(this.Page_Load);
			this.PreRender += new System.EventHandler(this.Page_PreRender);
		}

		public override Control FindControl(string id) {
			if (id == "wt_InlineExpression7") {
				return wt_WebBlockInstance37.wtTitle.FindControl("wt_InlineExpression7");
			}
			if (id == "wtOverviewShortTerm2") {
				return wt_WebBlockInstance37.wtContent.FindControl("wtOverviewShortTerm2");
			}
			if (id == "wt_Container8") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container8");
			}
			if (id == "wt_Container36") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container36");
			}
			if (id == "wt_Container33") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container33");
			}
			if (id == "wt_InlineExpression35") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_InlineExpression35");
			}
			if (id == "wt_Text6") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Text6");
			}
			if (id == "wtOverviewDescriptionShortTerm3") {
				return wt_WebBlockInstance37.wtContent.FindControl("wtOverviewDescriptionShortTerm3");
			}
			if (id == "wt_Container11") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container11");
			}
			if (id == "wtStudentRAGDescriptionInput") {
				return wt_WebBlockInstance37.wtContent.FindControl("wtStudentRAGDescriptionInput");
			}
			if (id == "wtStudentRAGDescriptionInputAjaxRfrsh") {
				return wt_WebBlockInstance37.wtContent.FindControl("wtStudentRAGDescriptionInputAjaxRfrsh");
			}
			if (id == "wtWarapperShortTermRAG") {
				return wt_WebBlockInstance37.wtContent.FindControl("wtWarapperShortTermRAG");
			}
			if (id == "wt_Table17") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Table17");
			}
			if (id == "wt_TableRow25") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_TableRow25");
			}
			if (id == "wt_TableCell18") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_TableCell18");
			}
			if (id == "wt_Container1") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container1");
			}
			if (id == "RichWidgets_wt_WebBlockInstance42") {
				return wt_WebBlockInstance37.wtContent.FindControl("RichWidgets_wt_WebBlockInstance42");
			}
			if (id == "wt_Text32") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Text32");
			}
			if (id == "wt_TableRow10") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_TableRow10");
			}
			if (id == "wt_TableCell30") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_TableCell30");
			}
			if (id == "wt_Container34") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container34");
			}
			if (id == "RichWidgets_wt_WebBlockInstance31") {
				return wt_WebBlockInstance37.wtContent.FindControl("RichWidgets_wt_WebBlockInstance31");
			}
			if (id == "wt_InlineExpression4") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_InlineExpression4");
			}
			if (id == "wt_TableRow26") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_TableRow26");
			}
			if (id == "wt_TableCell20") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_TableCell20");
			}
			if (id == "wt_Container21") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container21");
			}
			if (id == "RichWidgets_wt_WebBlockInstance38") {
				return wt_WebBlockInstance37.wtContent.FindControl("RichWidgets_wt_WebBlockInstance38");
			}
			if (id == "wt_InlineExpression39") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_InlineExpression39");
			}
			if (id == "wtEditRecordRAG") {
				return wt_WebBlockInstance37.wtContent.FindControl("wtEditRecordRAG");
			}
			if (id == "wt_Container27") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container27");
			}
			if (id == "wt_Container14") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container14");
			}
			if (id == "wt_Container2") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container2");
			}
			if (id == "wt_Container43") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container43");
			}
			if (id == "Hunspell_wt_WebBlockInstance3") {
				return wt_WebBlockInstance37.wtContent.FindControl("Hunspell_wt_WebBlockInstance3");
			}
			if (id == "wt_Container24") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container24");
			}
			if (id == "wt_WebBlockInstance40") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_WebBlockInstance40");
			}
			if (id == "wt_Container44") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container44");
			}
			if (id == "wt_Container28") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container28");
			}
			if (id == "RichWidgets_wt_WebBlockInstance23") {
				return wt_WebBlockInstance37.wtContent.FindControl("RichWidgets_wt_WebBlockInstance23");
			}
			if (id == "wt_Text29") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Text29");
			}
			if (id == "wt_Text5") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Text5");
			}
			if (id == "wt_Container16") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Container16");
			}
			if (id == "wt_Link46") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Link46");
			}
			if (id == "wt_Text41") {
				return wt_WebBlockInstance37.wtContent.FindControl("wt_Text41");
			}

			return base.FindControl(id);
		}


		private void Page_Load(object sender, System.EventArgs e) {
			// init vars
			AppInfo appInfo = Global.App;
			if (appInfo != null) {
				heContext = appInfo.OsContext;
			}
			Response.ContentType = "text/html; charset=" + Response.ContentEncoding.WebName;
			OutSystems.HubEdition.RuntimePlatform.Web.JavaScriptManager.CheckRelativeJavaScriptPrefix(AppUtils.Instance.getImagePath());
			appInfo.IsLoadingScreen = !IsPostBack;
			((OSPageViewState) Page).EnableResetViewState();
			if (!IsPostBack) {
				ArrayList screenParameters = (ArrayList) Global.App.OsContext.Session["CaseConferencing._ScreenParameters_Popup_UpdateRAG"];
				bool screenParametersInSession = false;
				object screenParametersKey = heContext.Session["_ScreenParametersKey"];
				if ((screenParametersKey == null || this.Key.Equals(ObjectKey.Parse(Convert.ToString(screenParametersKey)))) && screenParameters != null) {
					try {
						if (screenParameters.Count > 0) {
							object paramValue = screenParameters[0];
							if (paramValue != null) {
								inParamStudentReference = (string) paramValue;
							}
						}
						screenParametersInSession = true;
					} catch (Exception parametersException) {
						ErrorLog.LogApplicationError("Failed to load Screen Input Parameters from session.", "ScreenParametersKey = " + screenParametersKey + ", Count = " + screenParameters.Count + "\r\n" + parametersException.StackTrace, heContext, "Global");
					} finally {
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_Popup_UpdateRAG"] = null;
						heContext.Session["_ScreenParametersKey"] = null;
					}
				}
				else if (Request.HttpMethod == "GET") {
					if (Request.QueryString["StudentReference"] != null) {
						inParamStudentReference = Request.QueryString["StudentReference"];
					}
				}
				else if (Request.HttpMethod == "POST") {
					if (Request.Form["StudentReference"] != null) {
						inParamStudentReference = Request.Form["StudentReference"];
					}
				}
			}
			if (!appInfo.IsApplicationEnabled) {
				ErrorLog.LogApplicationError(new Exception("eSpace " + appInfo.eSpaceName + " is disabled"), heContext, "Global");
				String contact = BuiltInFunction.EncodeUrl(RuntimePlatformUtils.GetAdministrationEmail());
				try {
					Server.Transfer("/customHandlers/app_offline.aspx?contact=" + contact + "&errorCode=APPLICATION_OFFLINE");
				}
				catch (System.Threading.ThreadAbortException) {}
				catch {
					Response.Redirect("/customHandlers/internalerror.aspx");
				}
			}
			InitializeUrls();
			Actions.ActionOnBeginWebRequest(heContext);
			if (!IsPostBack) {
				Preparation(heContext);
				bool bindEditRecords = !IsPostBack;
				if (bindEditRecords) {
					wtEditRecordRAG_onDataBindingDataSource(this.FindControl("wtEditRecordRAG"), null);
				}
				Title = "Popup UpdateRAG"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Popup_UpdateRAG", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} else {
				FetchViewState();
			}

		}

		private bool _negociateTabIndexesExecuted = false;

		private void Page_PreRender(object sender, System.EventArgs e) {
			ClientScript.RegisterArrayDeclaration("OsPage_Validators", "{}");
			if (!_negociateTabIndexesExecuted) {
				NegotiateTabIndexes();
				_negociateTabIndexesExecuted = true;
			}
			foreach(Control child in this.Controls) {
				DisableViewState(child);
			}
		}

		private void NegotiateTabIndexes() {
			short tabindex=1;
			tabindex = NegotiateTabIndexes(tabindex, true);
		}

		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}



		private void Page_Error(object sender, System.EventArgs e) {
			if (! new ssCaseConferencing.Flows.FlowReporting.ExceptionHandler(this, false).HandleException()) {
				DatabaseAccess.FreeupResources(false);
				Server.Transfer("_WebErrorPage.aspx");
			}
		}

		public override void ClearErrorHandler() {
			Error -= Page_Error;
		}

		public void CheckPermissions(HeContext heContext) {
			{
				bool check;
				ExtendedActions.CheckLearningSupportPractitionerRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckPLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingBackofficeRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckRegisteredRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSafeGuardingLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSuperUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingUserRole(heContext, 0, out check);
				if (check) return;
			}
			throw new ExcptNotLearningSupportPractitioner("LearningSupportPractitioner role required");
		}


		public ObjectKey Key {
			get {
				return ObjectKey.Parse("T5JSf6OKhEiVJ4ghIR2fVg"); 
			}
		}

		public bool isSecure {
			get {
				return false; 
			}
		}


		public class lcvChangeRAG: VarsBag {
			public Actions.lcoStudent_GetResponsible resStudent_GetResponsible = new Actions.lcoStudent_GetResponsible();
			public string resCreateOrUpdateStudentRAG_outParamId = "";

			public int resEmail1_outParamEmailId = 0;
			public int resStudentLog_Create_outParamStudentLogId = 0;

			public lcvChangeRAG() {
			}
		}
		/// <summary>
		/// Action <code>CommandChangeRAG</code> that represents the Service Studio screen action
		///  <code>ChangeRAG</code> <p> Description: </p>
		/// </summary>
		private bool CommandChangeRAG(HeContext heContext) {
			CheckPermissions(heContext);
			lcvChangeRAG localVars = new lcvChangeRAG();
			try {
				if ((BuiltInFunction.Trim(ssEditRecordRAGRecord.ssENStudentRAG.ssDescription) == "")) {
					// ExceptionFeedbackMessage3
					Actions.ActionFeedback_Message(heContext, "Description Field Required!", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
					// Update Screen
					return true;

				} else {
					// AssignShortTerms
					ssEditRecordRAGRecord.ssENStudentRAG.ssUpdatedBy = ((int) Global.App.OsContext.Session["UserID"]); // EditRecordRAG.Record.StudentRAG.UpdatedBy = UserID
					ssEditRecordRAGRecord.ssENStudentRAG.ssUpdatedAt = BuiltInFunction.CurrDateTime(); // EditRecordRAG.Record.StudentRAG.UpdatedAt = CurrDateTime
					ssEditRecordRAGRecord.ssENStudentRAG.ssRAG = varLcCurrentSelectRAG; // EditRecordRAG.Record.StudentRAG.RAG = CurrentSelectRAG
					ssEditRecordRAGRecord.ssENStudentRAG.ssStudentReference = inParamStudentReference; // EditRecordRAG.Record.StudentRAG.StudentReference = StudentReference
					// CreateOrUpdateStudentRAG
					ExtendedActions.CreateOrUpdateStudentRAG(heContext, ssEditRecordRAGRecord.ssENStudentRAG.ChangedAttributes, ((RCStudentRAGRecord) ssEditRecordRAGRecord.ssENStudentRAG), out localVars.resCreateOrUpdateStudentRAG_outParamId);
					// StudentLog_Create
					Actions.ActionStudentLog_Create(heContext, inParamStudentReference, ((int) Global.App.OsContext.Session["UserID"]), "Changed Learner RAG", ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("OvSWJ8Xk3UO89FkRkmpfCg")).ssLogType, ssEditRecordRAGRecord.ssENStudentRAG.ssDescription, ssEditRecordRAGRecord.ssENStudentRAG.ssRAG, false, 0, "Learner RAG", "", 0, 0, "", 0, out localVars.resStudentLog_Create_outParamStudentLogId);
					// Student_GetResponsible
					Actions.ActionStudent_GetResponsible(heContext, inParamStudentReference, out localVars.resStudent_GetResponsible.outParamResponsibleName, out localVars.resStudent_GetResponsible.outParamResponsibleEmail);
					// Send Email
					localVars.resEmail1_outParamEmailId = EmailProcessor.SendEmailRequest("http://" + Settings.Get(Settings.Configs.InternalAddress) + AppUtils.Instance.getImagePath(/*internalAccess*/true) + "Email1.aspx?" + "LogStudentId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(localVars.resStudentLog_Create_outParamStudentLogId)), "", localVars.resStudent_GetResponsible.outParamResponsibleEmail, "", "", 0, heContext.Session.TenantId, false, EmailProcessor.EmailType.Normal);
					// Feedback_Message3
					Actions.ActionFeedback_Message(heContext, "Message sent to Personal Tutor.", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("8xuePnp+TUO346Oyp3_dWQ")).ssId);
					// Popup_Editor_Notify
					Actions.ActionPopup_Editor_Notify(heContext, "Saved");
					// Popup_Editor_Close
					Actions.ActionPopup_Editor_Close(heContext);
					// Update Screen
					return true;

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandCancel</code> that represents the Service Studio screen action
		///  <code>Cancel</code> <p> Description: </p>
		/// </summary>
		private bool CommandCancel(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Popup_Editor_Close
				Actions.ActionPopup_Editor_Close(heContext);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, BuiltInFunction.EncodeHtml(((string) Global.App.OsContext.Session["ExceptionMessage"])), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvChangeSelectedRAG: VarsBag {
			public bool inParamIsShortTerm;
			public string inParamNewRAGStatusId;
			public lcvChangeSelectedRAG(bool inParamIsShortTerm, string inParamNewRAGStatusId) {
				this.inParamIsShortTerm = inParamIsShortTerm;
				this.inParamNewRAGStatusId = inParamNewRAGStatusId;
			}
		}
		/// <summary>
		/// Action <code>CommandChangeSelectedRAG</code> that represents the Service Studio screen action
		///  <code>ChangeSelectedRAG</code> <p> Description: </p>
		/// </summary>
		private bool CommandChangeSelectedRAG(HeContext heContext, bool inParamIsShortTerm, string inParamNewRAGStatusId) {
			CheckPermissions(heContext);
			lcvChangeSelectedRAG localVars = new lcvChangeSelectedRAG(inParamIsShortTerm, inParamNewRAGStatusId);
			try {
				varLcCurrentSelectRAG = localVars.inParamNewRAGStatusId; // CurrentSelectRAG = NewRAGStatusId
				ssEditRecordRAGRecord.ssENStudentRAG.ssDescription = ""; // EditRecordRAG.Record.StudentRAG.Description = ""
				// Refresh Widget (wtWarapperShortTermRAG)
				((OSPageViewState) Page).AjaxRefresh(wtWarapperShortTermRAG, "None", StoreViewState);
				// Refresh Widget (wtStudentRAGDescriptionInput)
				((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtStudentRAGDescriptionInputAjaxRfrsh"), "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// wt_WebBlockInstance37 Functions
		/// </summary>
		public void webBlck_WebBlockInstance37_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout widget = (ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout) sender;
			widget.inParamWidth = 550;
		}
		/// <summary>
		/// wt_InlineExpression7 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = XBx7H3Fu5kumfm_eUeKcPQ) Expression: "Update Overall RAG for "
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression7() {
			return "Update Overall RAG for ";
		}
		/// <summary>
		/// wtOverviewShortTerm2 Functions
		/// </summary>
		public void cntOverviewShortTerm2_onDataBinding(object sender, System.EventArgs e) {
			cntOverviewShortTerm2_setInlineAttributes(sender, e);
		}
		public string cntOverviewShortTerm2_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntOverviewShortTerm2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtOverviewShortTerm2)
		/// </summary>
		/// <returns>The Visible State of wtOverviewShortTerm2</returns>
		public bool cntOverviewShortTerm2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container8 Functions
		/// </summary>
		public void cnt_Container8_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container8_setInlineAttributes(sender, e);
		}
		public string cnt_Container8_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding-top:10px;padding-bottom:10px; font-size:18px;text-shadow: 0px 1px 2px #dadada;color:#757575;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container8_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container8)
		/// </summary>
		/// <returns>The Visible State of wt_Container8</returns>
		public bool cnt_Container8_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container36 Functions
		/// </summary>
		public void cnt_Container36_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container36_setInlineAttributes(sender, e);
		}
		public string cnt_Container36_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "border: solid 1px #FFF;font-size:15px;margin-left:0px;padding-left:0px;width:11px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((queryResGetStudentRAGByStudent_outParamList.CurrentRec.ssENStudentRAG.ssRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("IndicatorRedCategoryCircle"):((((queryResGetStudentRAGByStudent_outParamList.CurrentRec.ssENStudentRAG.ssRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("IndicatorAmberCategoryCircle"):((((queryResGetStudentRAGByStudent_outParamList.CurrentRec.ssENStudentRAG.ssRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("IndicatorGreenCategoryCircle"):("IndicatorBlueCategoryCircle"))))));
			if (!cnt_Container36_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container36)
		/// </summary>
		/// <returns>The Visible State of wt_Container36</returns>
		public bool cnt_Container36_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container33 Functions
		/// </summary>
		public void cnt_Container33_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container33_setInlineAttributes(sender, e);
		}
		public string cnt_Container33_setInlineAttributes(object sender, System.EventArgs e) {
			((WebControl) sender).CssClass = (((queryResGetStudentRAGByStudent_outParamList.CurrentRec.ssENStudentRAG.ssRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("REDRAGList"):((((queryResGetStudentRAGByStudent_outParamList.CurrentRec.ssENStudentRAG.ssRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("AmberRAGList"):("GreenRAG_List")))) + " OSInline";
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-top:-3px;text-shadow: none;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container33_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container33)
		/// </summary>
		/// <returns>The Visible State of wt_Container33</returns>
		public bool cnt_Container33_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression35 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = F0P8qALfZEuQOQffyuYLhw) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression35() {
			return (((queryResGetStudentRAGByStudent_outParamList.CurrentRec.ssENStudentRAG.ssRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("A"):((((queryResGetStudentRAGByStudent_outParamList.CurrentRec.ssENStudentRAG.ssRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("R"):("G"))));
		}
		/// <summary>
		/// wt_Text6 Functions
		/// </summary>
		public void wt_Text6_onDataBinding(object sender, System.EventArgs e) {
			wt_Text6_setInlineAttributes(sender, e);
		}
		public string wt_Text6_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left:5px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wtOverviewDescriptionShortTerm3 Functions
		/// </summary>
		public void cntOverviewDescriptionShortTerm3_onDataBinding(object sender, System.EventArgs e) {
			cntOverviewDescriptionShortTerm3_setInlineAttributes(sender, e);
		}
		public string cntOverviewDescriptionShortTerm3_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntOverviewDescriptionShortTerm3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtOverviewDescriptionShortTerm3)
		/// </summary>
		/// <returns>The Visible State of wtOverviewDescriptionShortTerm3</returns>
		public bool cntOverviewDescriptionShortTerm3_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container11 Functions
		/// </summary>
		public void cnt_Container11_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container11_setInlineAttributes(sender, e);
		}
		public string cnt_Container11_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "style";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container11_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container11)
		/// </summary>
		/// <returns>The Visible State of wt_Container11</returns>
		public bool cnt_Container11_isVisible() {
			return true;
		}

		/// <summary>
		/// wtStudentRAGDescriptionInput Functions
		/// </summary>
		public void inputwtStudentRAGDescriptionInput_onDataBinding(object sender, System.EventArgs e) {
			inputwtStudentRAGDescriptionInput_setInlineAttributes(sender, e);
		}
		public string inputwtStudentRAGDescriptionInput_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-family: \'Source Sans Pro\', sans-serif; padding: 1px 6px;border: 1px solid #E8E8E8;color: #6F6A6A;font-size: 15px;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtStudentRAGDescriptionInput_input_value() {
			if (("" !=ssEditRecordRAGRecord.ssENStudentRAG.ssDescription)) {
				return ssEditRecordRAGRecord.ssENStudentRAG.ssDescription;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtStudentRAGDescriptionInput");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return ssEditRecordRAGRecord.ssENStudentRAG.ssDescription;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtStudentRAGDescriptionInput_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					ssEditRecordRAGRecord.ssENStudentRAG.ssDescription = ""; 
				} else {
					ssEditRecordRAGRecord.ssENStudentRAG.ssDescription = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				ssEditRecordRAGRecord.ssENStudentRAG.ssDescription = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtStudentRAGDescriptionInput)
		/// </summary>
		/// <returns>The Visible State of wtStudentRAGDescriptionInput</returns>
		public bool inputwtStudentRAGDescriptionInput_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtStudentRAGDescriptionInput)
		/// </summary>
		/// <returns>The Enabled State of wtStudentRAGDescriptionInput</returns>
		public bool inputwtStudentRAGDescriptionInput_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtStudentRAGDescriptionInput)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtStudentRAGDescriptionInput</returns>
		public bool inputwtStudentRAGDescriptionInput_isMandatory() {
			return true;
		}

		/// <summary>
		/// wtWarapperShortTermRAG Functions
		/// </summary>
		public void cntWarapperShortTermRAG_onDataBinding(object sender, System.EventArgs e) {
			cntWarapperShortTermRAG_setInlineAttributes(sender, e);
		}
		public string cntWarapperShortTermRAG_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inlinemargin-top:15px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWarapperShortTermRAG_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWarapperShortTermRAG)
		/// </summary>
		/// <returns>The Visible State of wtWarapperShortTermRAG</returns>
		public bool cntWarapperShortTermRAG_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container1 Functions
		/// </summary>
		public void cnt_Container1_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container1_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container1_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 58px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("RAGSelectRed"):("RAG_RedUnselect"));
			if (!cnt_Container1_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container1
		/// </summary>
		public void cnt_Container1_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedRAG(heContext
			, true, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container1)
		/// </summary>
		/// <returns>The Visible State of wt_Container1</returns>
		public bool cnt_Container1_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance42 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance42_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container34 Functions
		/// </summary>
		public void cnt_Container34_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container34_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container34_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 58px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("RAGSelectAmber"):("RAG_AmberUnselect"));
			if (!cnt_Container34_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container34
		/// </summary>
		public void cnt_Container34_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedRAG(heContext
			, true, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container34)
		/// </summary>
		/// <returns>The Visible State of wt_Container34</returns>
		public bool cnt_Container34_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance31 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance31_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression4 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = _OZLFqlj2ki0TLBS356PzQ) Expression: "Amber"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression4() {
			return "Amber";
		}
		/// <summary>
		/// wt_Container21 Functions
		/// </summary>
		public void cnt_Container21_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container21_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container21_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 58px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("RAGSelectGreen"):("RAG_GreenUnselect"));
			if (!cnt_Container21_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container21
		/// </summary>
		public void cnt_Container21_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedRAG(heContext
			, true, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container21)
		/// </summary>
		/// <returns>The Visible State of wt_Container21</returns>
		public bool cnt_Container21_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance38 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance38_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression39 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = lM7wuvnB7US1H7u_lznkbw) Expression: "Green"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression39() {
			return "Green";
		}
		/// <summary>
		/// wtEditRecordRAG Functions
		/// </summary>
		public void wtEditRecordRAG_onDataBinding(object sender, System.EventArgs e) {
			wtEditRecordRAG_setInlineAttributes(sender, e);
		}
		public string wtEditRecordRAG_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:none;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		public void wtEditRecordRAG_onDataBindingDataSource(object sender, System.EventArgs e) {
			if (!IsPostBack) {
				ssEditRecordRAGRecord = queryResGetStudentRAGByStudent_outParamList.CurrentRec;
			}
		}
		/// <summary>
		/// wt_Container27 Functions
		/// </summary>
		public void cnt_Container27_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container27_setInlineAttributes(sender, e);
		}
		public string cnt_Container27_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container27_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container27)
		/// </summary>
		/// <returns>The Visible State of wt_Container27</returns>
		public bool cnt_Container27_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container14 Functions
		/// </summary>
		public void cnt_Container14_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container14_setInlineAttributes(sender, e);
		}
		public string cnt_Container14_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:360px;font-size: 12px;vertical-align:middle;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container14_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container14)
		/// </summary>
		/// <returns>The Visible State of wt_Container14</returns>
		public bool cnt_Container14_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container2 Functions
		/// </summary>
		public void cnt_Container2_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container2_setInlineAttributes(sender, e);
		}
		public string cnt_Container2_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container2)
		/// </summary>
		/// <returns>The Visible State of wt_Container2</returns>
		public bool cnt_Container2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container43 Functions
		/// </summary>
		public void cnt_Container43_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container43_setInlineAttributes(sender, e);
		}
		public string cnt_Container43_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container43_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container43)
		/// </summary>
		/// <returns>The Visible State of wt_Container43</returns>
		public bool cnt_Container43_isVisible() {
			return true;
		}

		/// <summary>
		/// Hunspell_wt_WebBlockInstance3 Functions
		/// </summary>
		public void Hunspell_webBlck_WebBlockInstance3_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink widget = (proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink) sender;
			widget.inParamTextInputId = this.FindControl("wtStudentRAGDescriptionInput").ClientID;
			widget.inParamExtraStyle = "";
			widget.inParamInPopupWindow = true;
		}
		/// <summary>
		/// wt_Container24 Functions
		/// </summary>
		public void cnt_Container24_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container24_setInlineAttributes(sender, e);
		}
		public string cnt_Container24_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container24_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container24)
		/// </summary>
		/// <returns>The Visible State of wt_Container24</returns>
		public bool cnt_Container24_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance40 Functions
		/// </summary>
		public void webBlck_WebBlockInstance40_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon widget = (ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon) sender;
			widget.inParamTextInputId = this.FindControl("wtStudentRAGDescriptionInput").ClientID;
			widget.inParamAutoCompleteType = ENAutoCompleteBankTypeEntity.GetRecordByKey(ObjectKey.Parse("apsW5543pUe_DM6hVxuBdA")).ssId;
		}
		/// <summary>
		/// wt_Container44 Functions
		/// </summary>
		public void cnt_Container44_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container44_setInlineAttributes(sender, e);
		}
		public string cnt_Container44_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container44_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container44)
		/// </summary>
		/// <returns>The Visible State of wt_Container44</returns>
		public bool cnt_Container44_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container28 Functions
		/// </summary>
		public void cnt_Container28_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container28_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container28_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left:10px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container28_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container28
		/// </summary>
		public void cnt_Container28_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeRAG(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container28)
		/// </summary>
		/// <returns>The Visible State of wt_Container28</returns>
		public bool cnt_Container28_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance23 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance23_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("jA5F7R9HAUWaOlj0y8fkDA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container16 Functions
		/// </summary>
		public void cnt_Container16_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container16_setInlineAttributes(sender, e);
		}
		public string cnt_Container16_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-top:7px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container16_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container16)
		/// </summary>
		/// <returns>The Visible State of wt_Container16</returns>
		public bool cnt_Container16_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link46 Functions
		/// </summary>
		public void lnk_Link46_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link46_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link46_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color:#666;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link46_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandCancel(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link46)
		/// </summary>
		/// <returns>title of the Link (wt_Link46)</returns>
		public string
		lnk_Link46_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link46)
		/// </summary>
		/// <returns>The Visible State of wt_Link46</returns>
		public bool lnk_Link46_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link46)
		/// </summary>
		/// <returns>The Enabled State of wt_Link46</returns>
		public bool lnk_Link46_isEnabled() {
			return true; 
		}


		public static class FuncCommandChangeRAG {
		}
		public static class FuncCommandCancel {
		}
		public static class FuncCommandChangeSelectedRAG {
		}
		public static class FuncssPreparation {

			private static void datasetGetStudentRAGByStudentReadDB(ref RCStudentUserRAGStatusStudentRAGRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENRAGStatus.Read(r, ref index);
				rec.ssENStudent.Read(r, ref index);
				rec.ssENStudentRAG.Read(r, ref index);
				rec.ssENUser.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetStudentRAGByStudent" of Action "Preparation"
			/// </summary>
			public static RLStudentUserRAGStatusStudentRAGRecordList datasetGetStudentRAGByStudent(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27, NULL o28, NULL o29, NULL o30, NULL o31, NULL o32, NULL o33, ENStudentRAG.[RAG] o34, ENStudentRAG.[DESCRIPTION] o35, NULL o36, NULL o37, NULL o38, NULL o39, NULL o40, NULL o41, NULL o42, NULL o43, NULL o44, NULL o45, NULL o46, NULL o47");
				fromBuilder.Append(" FROM ((({Student} ENStudent Inner JOIN {StudentRAG} ENStudentRAG ON (ENStudentRAG.[STUDENTREFERENCE] = ENStudent.[STUDENTREFERENCE]))  Inner JOIN {User} ENUser ON (ENStudentRAG.[UPDATEDBY] = ENUser.[ID]))  Inner JOIN {RAGStatus} ENRAGStatus ON (ENStudentRAG.[RAG] = ENRAGStatus.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudentRAG.[STUDENTREFERENCE] = @qpstP) AND (ENStudentRAG.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudentRAG.[STUDENTREFERENCE] IS NULL)");
				}
				orderByBuilder.Append(" ORDER BY ENStudentRAG.[UPDATEDAT] DESC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentUserRAGStatusStudentRAGRecordList outParamList = new RLStudentUserRAGStatusStudentRAGRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetStudentRAGByStudentReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[4];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					false, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, true, true, true, true
				}
				);
				opt[3] = new BitArray(new bool[] {
					true, false, false, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentUserRAGStatusStudentRAGRecordList _tmp = new RLStudentUserRAGStatusStudentRAGRecordList();
					_tmp.AlternateReadDBMethod = datasetGetStudentRAGByStudentReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Reporting.Popup_UpdateRAG.Preparation.GetStudentRAGByStudent.List");
						outParamList = (RLStudentUserRAGStatusStudentRAGRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Reporting.Popup_UpdateRAG.Preparation.GetStudentRAGByStudent.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentUserRAGStatusStudentRAGRecordList _tmp = new RLStudentUserRAGStatusStudentRAGRecordList();
						_tmp.AlternateReadDBMethod = datasetGetStudentRAGByStudentReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Reporting.Popup_UpdateRAG.Preparation.GetStudentRAGByStudent.List");
							outParamList = (RLStudentUserRAGStatusStudentRAGRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Reporting.Popup_UpdateRAG.Preparation.GetStudentRAGByStudent.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}



		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}


		public LocalState PushStack() {
			return null;
		}

		public void doRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				Preparation(heContext);

				Title = "Popup UpdateRAG"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Popup_UpdateRAG", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// Perform the partial databind
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Popup_UpdateRAG", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Ajax", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}



		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();
			ViewStateAttributes.SetInViewState("inParamStudentReference", inParamStudentReference, "");
			ViewStateAttributes.SetInViewState("varLcCurrentSelectRAG", varLcCurrentSelectRAG, "");
			ViewStateAttributes.SetInViewState("wtStudentRAGDescriptionInput_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtStudentRAGDescriptionInput")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtEditRecordRAG_record_ssENStudentRAG_ssDescription", ssEditRecordRAGRecord.ssENStudentRAG.ssDescription, "");
			ViewStateAttributes.SetInViewState("wtEditRecordRAG_record_ssENStudentRAG_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(ssEditRecordRAGRecord.ssENStudentRAG.ChangedAttributes, new BitArray(new bool[] {
				false, false, true, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("wtEditRecordRAG_record_ssENStudentRAG_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(ssEditRecordRAGRecord.ssENStudentRAG.OptimizedAttributes, new BitArray(new bool[] {
				true, true, false, true, true
			}
			)))), null);
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			try {
				inParamStudentReference = (string) ViewStateAttributes.GetFromViewState("inParamStudentReference", "");
				varLcCurrentSelectRAG = (string) ViewStateAttributes.GetFromViewState("varLcCurrentSelectRAG", "");
				((IWidgetRuntimeProperties) this.FindControl("wtStudentRAGDescriptionInput")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtStudentRAGDescriptionInput_Mandatory", false);
				ssEditRecordRAGRecord.ssENStudentRAG.ssDescription = (string) ViewStateAttributes.GetFromViewState("wtEditRecordRAG_record_ssENStudentRAG_ssDescription", "");
				ssEditRecordRAGRecord.ssENStudentRAG.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecordRAG_record_ssENStudentRAG_ChangedAttributes", null));
				ssEditRecordRAGRecord.ssENStudentRAG.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecordRAG_record_ssENStudentRAG_OptimizedAttributes", null));
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}


		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			ValidationUtils.ValidateInput(this, "wtStudentRAGDescriptionInput", parentEditRecord, ValidationUtils.validateTrue, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}


		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}

		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			Page_Load(null, null); this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}


		public override void DataBind() {
			base.DataBind();
			StoreViewState();
			OutSystems.HubEdition.WebWidgets.Utils.addValidationScriptsToPage(this);
		}



	}




}
