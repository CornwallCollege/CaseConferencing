/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Text.RegularExpressions;
using System.Web;
using System.Web.Caching;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using System.Collections.Generic;

namespace ssCaseConferencing {
	public class HandleDownload : System.Web.UI.Page {
		static HandleDownload() {
		}

		private void Page_Load(object sender, System.EventArgs e) {
			HttpContext current = HttpContext.Current;
			HttpRequest request = current.Request;
			HttpResponse response = current.Response;
            string parameters = request.PathInfo.Substring(1);
            string dwldhash = parameters.Split('/')[0];
            string filename = parameters.Split('/')[1];

			if ((Session["AndroidDownloads"] == null) || ((Hashtable)Session["AndroidDownloads"])[dwldhash] == null) {
				response.Clear();
				response.Status = "404 Not Found";
				response.StatusCode = 404;
				response.StatusDescription = "Not Found";
				response.Write("Bad Request");
				response.End();
			}

            System.Web.UI.Triplet file_info = (System.Web.UI.Triplet)((Hashtable)Session["AndroidDownloads"])[dwldhash];
            string mimeType = (string)file_info.First;
            byte[] buffer = (byte[])file_info.Second;

            // Delete download files - next call after a 5 min wait
            if (Session["AndroidDownloads_Delete"] == null) {
                Session["AndroidDownloads_Delete"] = DateTime.Now.AddMinutes(5);
            }

            if (Session["AndroidDownloads_Delete"] != null && 
               ((DateTime)Session["AndroidDownloads_Delete"]).CompareTo(DateTime.Now) < 0) {

                List<string> toDelete = new List<string>();

                foreach (string key in ((Hashtable)Session["AndroidDownloads"]).Keys) {
                    DateTime dt = (DateTime)((System.Web.UI.Triplet)((Hashtable)Session["AndroidDownloads"])[key]).Third;
                    System.TimeSpan diff = DateTime.Now.Subtract(dt);
                    if (diff.Minutes > 4)
                        toDelete.Add(key);
                }

                foreach (string key in toDelete) {
                    ((Hashtable)Session["AndroidDownloads"]).Remove(key);
                }

                Session["AndroidDownloads_Delete"] = null;
            }

			response.Clear();
			response.Status = "200 OK";
			response.StatusCode = 200;
			response.StatusDescription = "OK";
			response.ContentType = mimeType;
			response.AppendHeader("Cache-Control", "private");
			if (filename != String.Empty) {
				response.AppendHeader("Content-Disposition", "attachment; filename="+filename);
			}
			
			if (buffer.Length > 0) {
				response.BinaryWrite(buffer);
			}
			
			response.End();
		}
		
		#region Web Form Designer generated code
		override protected void OnInit(EventArgs e) {
			InitializeComponent();
			base.OnInit(e);
		}
		
		protected override object LoadPageStateFromPersistenceMedium() {
			return null;
		}

		private void InitializeComponent() {    
			this.Load += new System.EventHandler(this.Page_Load);
		}
		#endregion
	}
}