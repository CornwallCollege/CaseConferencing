/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;
using System.Web;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.SMS;

namespace ssCaseConferencing {
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Web.Services.WebServiceBindingAttribute(Name="iSmsNotificationHandlerSoap", Namespace="http://tempuri.org/")]
	public class iSmsNotificationHandlerClient : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
		public iSmsNotificationHandlerClient() {
		}

		public void SetupInteractiveSmsHandling(string origin, string destination, int nTenant, string patterns) {
			this.Url = "http://127.0.0.1/SmsHandler/" + SmsUtils.BuildSession(origin, destination) + "/iSmsNotificationHandler.asmx";
			// To make sure the session is not blocked, make an assynchronous request
			BeginSetupiSmsHandling (nTenant, patterns, new AsyncCallback (SetupiSmsHandlingResult), null);
		}

		public void SetupiSmsHandlingResult(IAsyncResult target) {
			EndSetupiSmsHandling (target);
		}

		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetupiSmsHandling", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void SetupiSmsHandling(int nTenant, string patterns) {
			this.Invoke("SetupiSmsHandling", new object[] {
															  nTenant,
															  patterns});
		}
    
		public System.IAsyncResult BeginSetupiSmsHandling(int nTenant, string patterns, System.AsyncCallback callback, object asyncState) {
			return this.BeginInvoke("SetupiSmsHandling", new object[] {
																		  nTenant,
																		  patterns}, callback, asyncState);
		}
    
		public void EndSetupiSmsHandling(System.IAsyncResult asyncResult) {
			this.EndInvoke(asyncResult);
		}
	}
}
