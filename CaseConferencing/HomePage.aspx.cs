/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.IO;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Runtime.Serialization;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Web.Caching;
using System.Text;
using System.Resources;

namespace ssCaseConferencing.Flows.FlowMainFlow2 {

	public class ScrnHomePage: OSPageViewStateCompressed, IWebScreen, INegotiateTabIndexes, IBookmarkableURL {


		public ScrnHomePage(): base(CaseConferencing_Properties.QuirksMode) {
		}


		/// <summary>
		/// Variable ThemeProvider_wt_WebBlockInstance49
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main ThemeProvider_wt_WebBlockInstance49;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container20;
		/// <summary>
		/// Variable (wt_Link45) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link45;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container8;
		/// <summary>
		/// Variable ThemeProvider_wt_WebBlockInstance17
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon ThemeProvider_wt_WebBlockInstance17;
		/// <summary>
		/// Variable (wt_Link23) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link23;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container29;
		/// <summary>
		/// Variable ThemeProvider_wt_WebBlockInstance48
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon ThemeProvider_wt_WebBlockInstance48;
		/// <summary>
		/// Variable (wt_Link52) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link52;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container7;
		/// <summary>
		/// Variable ThemeProvider_wt_WebBlockInstance16
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon ThemeProvider_wt_WebBlockInstance16;
		/// <summary>
		/// Variable (wt_Link50) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link50;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container12;
		/// <summary>
		/// Variable ThemeProvider_wt_WebBlockInstance32
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon ThemeProvider_wt_WebBlockInstance32;
		/// <summary>
		/// Variable (wt_Link35) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link35;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container51;
		/// <summary>
		/// Variable ThemeProvider_wt_WebBlockInstance33
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon ThemeProvider_wt_WebBlockInstance33;
		/// <summary>
		/// Variable (wt_Link26) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link26;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container13;
		/// <summary>
		/// Variable ThemeProvider_wt_WebBlockInstance30
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon ThemeProvider_wt_WebBlockInstance30;


		protected override void GetBlocksCss(TextWriter writer, bool inline, HashSet<string> visited) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate.GetCss(writer, inline, visited);
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main.GetCss(writer, inline, visited);
			proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon.GetCss(writer, inline, visited);

		}

		protected override void GetWidgetsCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}







		protected override string GetInlineStyleSheetInclude() {
			throw new InvalidOperationException();
		}





		protected override bool PageAllowsCallbacks() {
			return true;
		}


		protected string GetRequestInfoJavaScript() {
			return GetRequestInfoJavaScript("WKSQ_Cis+0SQKUbKih54NA", "HomePage");
		}

		protected string GetVisitCode() {
			SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
			if (session["osIsNewVisit"] != null && ((bool) session["osIsNewVisit"])
			// && !NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)
			&& RuntimePlatformUtils.IsValidRequestForVisit()) {
				return "<script type=\"text/javascript\">outsystems.internal.$.get(\"/CaseConferencing/_status.aspx\")</script>";
			}
			return "";
		}

		public string GetCallbackDebug() {
			if (Request.HttpMethod == "GET" && Request.QueryString["__CALLBACK_DEBUG"] != null && Request.QueryString["__CALLBACK_DEBUG"] != "") {
				if (Request.QueryString["__CALLBACK_DEBUG"] == OutSystems.HubEdition.RuntimePlatform.AppInfo.GetParameter(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Callback_Debug_Information_Key)) {
					return OutSystems.HubEdition.RuntimePlatform.AppInfo.GetAppInfo().GetCallbackDebugInformation();
				}
			}
			return "";
		}

		protected string GetHeadTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadTop, "WKSQ_Cis+0SQKUbKih54NA", "HomePage");
		}

		protected string GetHeadBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadBottom, "WKSQ_Cis+0SQKUbKih54NA", "HomePage");
		}

		protected string GetBodyTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyTop, "WKSQ_Cis+0SQKUbKih54NA", "HomePage");
		}

		protected string GetBodyBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyBottom, "WKSQ_Cis+0SQKUbKih54NA", "HomePage");
		}

		HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();



		static ScrnHomePage() {
		}


		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			if (((bool) Global.SiteProperties["TakeSiteDown"])) {
				// Destination = UnderMaintenance

				if (OSPage.IsAjaxRequest) {
					// go to target page
					{

						((OSPage) Page).ClearErrorHandler();
						// get parameters
						heContext.Session["_ScreenParametersKey"] = "xU1gsQDOwEinYZPDjkCDTw";
						ArrayList screenParameters = new ArrayList();
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_UnderMaintenance"] = screenParameters;
						if (OSPage.IsAjaxRequest) {
							string sURLQuery = null;
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "UnderMaintenance.aspx" + sURLQuery;
							((OSPageViewState) Page).RedirectLocation = sURL;
						} else {
							Server.Transfer("UnderMaintenance.aspx");
						}
						return;

					}
				} else {
					// go to target page
					{

						((OSPage) Page).ClearErrorHandler();
						// get parameters
						heContext.Session["_ScreenParametersKey"] = "xU1gsQDOwEinYZPDjkCDTw";
						ArrayList screenParameters = new ArrayList();
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_UnderMaintenance"] = screenParameters;
						if (OSPage.IsAjaxRequest) {
							string sURLQuery = null;
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "UnderMaintenance.aspx" + sURLQuery;
							((OSPageViewState) Page).RedirectLocation = sURL;
						} else {
							Server.Transfer("UnderMaintenance.aspx");
						}
						return;

					}
				}

			} else {
				if ((((int) Global.App.OsContext.Session["UserID"]) ==BuiltInFunction.NullIdentifier())) {
					// Destination = Login

					if (OSPage.IsAjaxRequest) {
						// go to target page
						{

							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "SV9KNOjVAUOS7pfFlW6SKA";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add("");
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_Login"] = screenParameters;
							if (OSPage.IsAjaxRequest) {
								string sURLQuery = null;
								sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
								string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "Login.aspx" + sURLQuery;
								((OSPageViewState) Page).RedirectLocation = sURL;
							} else {
								Server.Transfer("Login.aspx");
							}
							return;

						}
					} else {
						// go to target page
						{

							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "SV9KNOjVAUOS7pfFlW6SKA";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add("");
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_Login"] = screenParameters;
							if (OSPage.IsAjaxRequest) {
								string sURLQuery = null;
								sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
								string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "Login.aspx" + sURLQuery;
								((OSPageViewState) Page).RedirectLocation = sURL;
							} else {
								Server.Transfer("Login.aspx");
							}
							return;

						}
					}

				}

			}
		}


		protected override BaseAppUtils GetAppUtils() {
			return AppUtils.Instance;
		}

		protected override string OwnCssUrl {
			get {
				return "HomePage.css"; 
			}
		}

		protected override string OwnCssFile {
			get {
				return "HomePage.css"; 
			}
		}

		protected override string BasicCssUrl {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string BasicCssFile {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssUrl {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssFile {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssUrl {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssFile {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssUrl {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssFile {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssUrl {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssFile {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string ThemeCssUrl {
			get {
				return RsseSpaceThemeProvider.Themes.ThemeThemeProvider.ThemeCssUrl; 
			}
		}

		protected override string ThemeCssFile {
			get {
				return "ReferenceTheme.ThemeProvider.css"; 
			}
		}

		protected override string ThemeExtraCssUrl {
			get {
				return RsseSpaceRichWidgets.Themes.ThemeLondonFixed.ThemeExtraCssUrl; 
			}
		}

		protected override string ThemeExtraCssFile {
			get {
				return "ReferenceTheme.LondonFixed.extra.css"; 
			}
		}

		public override bool IsUsingMobileTheme {
			get {
				return false; 
			}
		}

		protected override string OwnJavascriptInclude {
			get {
				return ""; 
			}
		}

		public override string XUACompatibleOverride {
			get {
				return null; 
			}
		}

		protected void InitializeUrls() {
			Uri uri = new Uri((RuntimePlatformUtils.RequestIsSecure(Request) ? "https": "http") + Request.Url.ToString().Substring(Request.Url.Scheme.Length));
			string applicationUrl = AppUtils.Instance.getImagePath(/*internalAccess*/false,/*includeSessionIdIfNeeded*/ false);
			actionUrl = "";
			bookmarkableUrl = uri.GetLeftPart(UriPartial.Authority) + applicationUrl;
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			if (Request.AppRelativeCurrentExecutionFilePath.IndexOf('/', 2) == -1) {
				AppInfo appInfo = AppInfo.GetAppInfo();
				if (appInfo != null) {
					string pageHeader = appInfo.OsContext.OsISAPIFilter.GetPage(Request);
					if (appInfo.OsContext.IsCookielessSession || (pageHeader != null && pageHeader.IndexOf('/', 1) != -1)) {
						actionUrl = applicationUrl;
					}
				}
				actionUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "HomePage", parameters,/*useParamsOnlyIfNeededForRule*/ true);
			}
			bookmarkableUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "HomePage", parameters,/*useParamsOnlyIfNeededForRule*/ false);

		}

		protected override void OnInit(EventArgs e) {
			HeContext heContext = AppInfo.GetAppInfo().OsContext;
			heContext.CurrentScreen = this;
			try {
				heContext.CurrentExecutionFileName = Path.GetFileName(Request.CurrentExecutionFilePath);
			} catch {}
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			ThemeProvider_wt_WebBlockInstance49 = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main) FindControl("ThemeProvider_wt_WebBlockInstance49");
			wt_Container20 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container20");
			wt_Link45 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link45");
			wt_Container8 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container8");
			ThemeProvider_wt_WebBlockInstance17 = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon) FindControl("ThemeProvider_wt_WebBlockInstance17");
			wt_Link23 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link23");
			wt_Container29 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container29");
			ThemeProvider_wt_WebBlockInstance48 = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon) FindControl("ThemeProvider_wt_WebBlockInstance48");
			wt_Link52 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link52");
			wt_Container7 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container7");
			ThemeProvider_wt_WebBlockInstance16 = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon) FindControl("ThemeProvider_wt_WebBlockInstance16");
			wt_Link50 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link50");
			wt_Container12 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container12");
			ThemeProvider_wt_WebBlockInstance32 = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon) FindControl("ThemeProvider_wt_WebBlockInstance32");
			wt_Link35 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link35");
			wt_Container51 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container51");
			ThemeProvider_wt_WebBlockInstance33 = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon) FindControl("ThemeProvider_wt_WebBlockInstance33");
			wt_Link26 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link26");
			wt_Container13 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container13");
			ThemeProvider_wt_WebBlockInstance30 = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon) FindControl("ThemeProvider_wt_WebBlockInstance30");
			Page.Error += new EventHandler(Page_Error);
			this.Load += new System.EventHandler(this.Page_Load);
			this.PreRender += new System.EventHandler(this.Page_PreRender);
		}

		public override Control FindControl(string id) {
			if (id == "wt_WebBlockInstance21") {
				return ThemeProvider_wt_WebBlockInstance49.wtHelpUpdate.FindControl("wt_WebBlockInstance21");
			}
			if (id == "ThemeProvider_wt_WebBlockInstance47") {
				return ThemeProvider_wt_WebBlockInstance49.wtHeaderActions.FindControl("ThemeProvider_wt_WebBlockInstance47");
			}
			if (id == "wt_Container20") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Container20");
			}
			if (id == "wt_Link45") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Link45");
			}
			if (id == "wt_Container8") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Container8");
			}
			if (id == "ThemeProvider_wt_WebBlockInstance17") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("ThemeProvider_wt_WebBlockInstance17");
			}
			if (id == "wt_Text37") {
				return ThemeProvider_wt_WebBlockInstance17.wtText.FindControl("wt_Text37");
			}
			if (id == "wt_Text42") {
				return ThemeProvider_wt_WebBlockInstance17.wtNotes.FindControl("wt_Text42");
			}
			if (id == "wt_Link23") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Link23");
			}
			if (id == "wt_Container29") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Container29");
			}
			if (id == "ThemeProvider_wt_WebBlockInstance48") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("ThemeProvider_wt_WebBlockInstance48");
			}
			if (id == "wt_Text28") {
				return ThemeProvider_wt_WebBlockInstance48.wtText.FindControl("wt_Text28");
			}
			if (id == "wt_Text1") {
				return ThemeProvider_wt_WebBlockInstance48.wtNotes.FindControl("wt_Text1");
			}
			if (id == "wt_Text44") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Text44");
			}
			if (id == "wt_Link52") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Link52");
			}
			if (id == "wt_Container7") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Container7");
			}
			if (id == "ThemeProvider_wt_WebBlockInstance16") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("ThemeProvider_wt_WebBlockInstance16");
			}
			if (id == "wt_Text25") {
				return ThemeProvider_wt_WebBlockInstance16.wtText.FindControl("wt_Text25");
			}
			if (id == "wt_Text27") {
				return ThemeProvider_wt_WebBlockInstance16.wtNotes.FindControl("wt_Text27");
			}
			if (id == "wt_Link50") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Link50");
			}
			if (id == "wt_Container12") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Container12");
			}
			if (id == "ThemeProvider_wt_WebBlockInstance32") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("ThemeProvider_wt_WebBlockInstance32");
			}
			if (id == "wt_Text9") {
				return ThemeProvider_wt_WebBlockInstance32.wtText.FindControl("wt_Text9");
			}
			if (id == "wt_Text5") {
				return ThemeProvider_wt_WebBlockInstance32.wtNotes.FindControl("wt_Text5");
			}
			if (id == "wt_Link35") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Link35");
			}
			if (id == "wt_Container51") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Container51");
			}
			if (id == "ThemeProvider_wt_WebBlockInstance33") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("ThemeProvider_wt_WebBlockInstance33");
			}
			if (id == "wt_Text15") {
				return ThemeProvider_wt_WebBlockInstance33.wtText.FindControl("wt_Text15");
			}
			if (id == "wt_Text18") {
				return ThemeProvider_wt_WebBlockInstance33.wtNotes.FindControl("wt_Text18");
			}
			if (id == "wt_Link26") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Link26");
			}
			if (id == "wt_Container13") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("wt_Container13");
			}
			if (id == "ThemeProvider_wt_WebBlockInstance30") {
				return ThemeProvider_wt_WebBlockInstance49.wtMainContent.FindControl("ThemeProvider_wt_WebBlockInstance30");
			}
			if (id == "wt_Text41") {
				return ThemeProvider_wt_WebBlockInstance30.wtText.FindControl("wt_Text41");
			}
			if (id == "wt_Text19") {
				return ThemeProvider_wt_WebBlockInstance30.wtNotes.FindControl("wt_Text19");
			}

			return base.FindControl(id);
		}


		private void Page_Load(object sender, System.EventArgs e) {
			// init vars
			AppInfo appInfo = Global.App;
			if (appInfo != null) {
				heContext = appInfo.OsContext;
			}
			Response.ContentType = "text/html; charset=" + Response.ContentEncoding.WebName;
			OutSystems.HubEdition.RuntimePlatform.Web.JavaScriptManager.CheckRelativeJavaScriptPrefix(AppUtils.Instance.getImagePath());
			appInfo.IsLoadingScreen = !IsPostBack;
			if (!IsPostBack) {
				ArrayList screenParameters = (ArrayList) Global.App.OsContext.Session["CaseConferencing._ScreenParameters_HomePage"];
				bool screenParametersInSession = false;
				object screenParametersKey = heContext.Session["_ScreenParametersKey"];
				if ((screenParametersKey == null || this.Key.Equals(ObjectKey.Parse(Convert.ToString(screenParametersKey)))) && screenParameters != null) {
					try {
						screenParametersInSession = true;
					} catch (Exception parametersException) {
						ErrorLog.LogApplicationError("Failed to load Screen Input Parameters from session.", "ScreenParametersKey = " + screenParametersKey + ", Count = " + screenParameters.Count + "\r\n" + parametersException.StackTrace, heContext, "Global");
					} finally {
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_HomePage"] = null;
						heContext.Session["_ScreenParametersKey"] = null;
					}
				}
				else if (Request.HttpMethod == "GET") {
				}
				else if (Request.HttpMethod == "POST") {
				}
			}
			if (!appInfo.IsApplicationEnabled) {
				ErrorLog.LogApplicationError(new Exception("eSpace " + appInfo.eSpaceName + " is disabled"), heContext, "Global");
				String contact = BuiltInFunction.EncodeUrl(RuntimePlatformUtils.GetAdministrationEmail());
				try {
					Server.Transfer("/customHandlers/app_offline.aspx?contact=" + contact + "&errorCode=APPLICATION_OFFLINE");
				}
				catch (System.Threading.ThreadAbortException) {}
				catch {
					Response.Redirect("/customHandlers/internalerror.aspx");
				}
			}
			InitializeUrls();
			Actions.ActionOnBeginWebRequest(heContext);
			if (!IsPostBack) {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				Preparation(heContext);
				bool bindEditRecords = !IsPostBack;
				Title = "HomePage"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "HomePage", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} else {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				FetchViewState();
			}

		}

		private bool _negociateTabIndexesExecuted = false;

		private void Page_PreRender(object sender, System.EventArgs e) {
			ClientScript.RegisterArrayDeclaration("OsPage_Validators", "{}");
			if (!_negociateTabIndexesExecuted) {
				NegotiateTabIndexes();
				_negociateTabIndexesExecuted = true;
			}
			foreach(Control child in this.Controls) {
				DisableViewState(child);
			}
		}

		private void NegotiateTabIndexes() {
			short tabindex=1;
			tabindex = NegotiateTabIndexes(tabindex, true);
		}

		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}



		private void Page_Error(object sender, System.EventArgs e) {
			if (! new ssCaseConferencing.Flows.FlowMainFlow2.ExceptionHandler(this, false).HandleException()) {
				DatabaseAccess.FreeupResources(false);
				Server.Transfer("_WebErrorPage.aspx");
			}
		}

		public override void ClearErrorHandler() {
			Error -= Page_Error;
		}

		public void CheckPermissions(HeContext heContext) {
			return;
		}


		public ObjectKey Key {
			get {
				return ObjectKey.Parse("WKSQ_Cis+0SQKUbKih54NA"); 
			}
		}

		public bool isSecure {
			get {
				return true; 
			}
		}


		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance49 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance49_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main) sender;
		}
		/// <summary>
		/// wt_WebBlockInstance21 Functions
		/// </summary>
		public void webBlck_WebBlockInstance21_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate widget = (ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate) sender;
		}
		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance47 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance47_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main) sender;
			widget.inParamActiveMenuItem = ENMenuItem2Entity.GetRecordByKey(ObjectKey.Parse("93sKLG6OI0CIFm9Wk9POjA")).ssId;
		}
		/// <summary>
		/// wt_Container20 Functions
		/// </summary>
		public void cnt_Container20_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container20_setInlineAttributes(sender, e);
		}
		public string cnt_Container20_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container20_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container20)
		/// </summary>
		/// <returns>The Visible State of wt_Container20</returns>
		public bool cnt_Container20_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link45 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link45)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link45)</returns>
		public string lnk_Link45_NavigateUrl() {
			String varLcinParamURL = "";
			varLcinParamURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "Learners", "CaseConferencing", "", "", "", "", "", "", "", "", "", "");
			string sURL = varLcinParamURL;
			sURL = sURL.Replace("&amp;", "&");
			if (AppUtils.UrlAttributeMustBeEncoded(Request)) {
				sURL = sURL.Replace("&", "&amp;");
			}
			return sURL;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link45)
		/// </summary>
		/// <returns>title of the Link (wt_Link45)</returns>
		public string
		lnk_Link45_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link45)
		/// </summary>
		/// <returns>The Visible State of wt_Link45</returns>
		public bool lnk_Link45_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link45)
		/// </summary>
		/// <returns>The Enabled State of wt_Link45</returns>
		public bool lnk_Link45_isEnabled() {
			return ((Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("_KYQXHHc8UGnRSwylLWQ0Q")).ssId) ==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("oTzyT6KcpkiqqPUl9hzCfA")).ssId) || (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("_KYQXHHc8UGnRSwylLWQ0Q")).ssId) ==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId)); 
		}
		/// <summary>
		/// wt_Container8 Functions
		/// </summary>
		public void cnt_Container8_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container8_setInlineAttributes(sender, e);
		}
		public string cnt_Container8_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container8_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container8)
		/// </summary>
		/// <returns>The Visible State of wt_Container8</returns>
		public bool cnt_Container8_isVisible() {
			return true;
		}

		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance17 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance17_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon) sender;
			widget.inParamBackgroundColor = ENColorEntity.GetRecordByKey(ObjectKey.Parse("CFH_zjP8hki_xKiuBVZGIw")).ssBackground;
			widget.inParamIcon = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("F0OdMTnS+E63CzTzGXJvyg")).ssClass;
			widget.inParamTooltipText = "";
			widget.inParamSize = ENTileSizeEntity.GetRecordByKey(ObjectKey.Parse("nLSj6U4wI0yx9DyWHWxhqw")).ssType;
			widget.inParamIsDisabled = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("_KYQXHHc8UGnRSwylLWQ0Q")).ssId) ==BuiltInFunction.NullIdentifier());
		}
		/// <summary>
		/// wt_Link23 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link23)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link23)</returns>
		public string lnk_Link23_NavigateUrl() {
			String varLcinParamURL = "";
			varLcinParamURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "Courses", "CaseConferencing", "", "", "", "", "", "", "", "", "", "");
			string sURL = varLcinParamURL;
			sURL = sURL.Replace("&amp;", "&");
			if (AppUtils.UrlAttributeMustBeEncoded(Request)) {
				sURL = sURL.Replace("&", "&amp;");
			}
			return sURL;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link23)
		/// </summary>
		/// <returns>title of the Link (wt_Link23)</returns>
		public string
		lnk_Link23_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link23)
		/// </summary>
		/// <returns>The Visible State of wt_Link23</returns>
		public bool lnk_Link23_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link23)
		/// </summary>
		/// <returns>The Enabled State of wt_Link23</returns>
		public bool lnk_Link23_isEnabled() {
			return ((Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("e8IvgrC3vUalgVZjfMF0iA")).ssId) ==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("oTzyT6KcpkiqqPUl9hzCfA")).ssId) || (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("e8IvgrC3vUalgVZjfMF0iA")).ssId) ==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId)); 
		}
		/// <summary>
		/// wt_Container29 Functions
		/// </summary>
		public void cnt_Container29_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container29_setInlineAttributes(sender, e);
		}
		public string cnt_Container29_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container29_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container29)
		/// </summary>
		/// <returns>The Visible State of wt_Container29</returns>
		public bool cnt_Container29_isVisible() {
			return true;
		}

		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance48 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance48_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon) sender;
			widget.inParamBackgroundColor = ENColorEntity.GetRecordByKey(ObjectKey.Parse("k_DH+VBfH0SPztZ2M3D3gw")).ssBackground;
			widget.inParamIcon = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("BDbvGpjWkkirEM_ATP7B6Q")).ssClass;
			widget.inParamTooltipText = "";
			widget.inParamSize = ENTileSizeEntity.GetRecordByKey(ObjectKey.Parse("nLSj6U4wI0yx9DyWHWxhqw")).ssType;
			widget.inParamIsDisabled = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("e8IvgrC3vUalgVZjfMF0iA")).ssId) ==BuiltInFunction.NullIdentifier());
		}
		/// <summary>
		/// wt_Link52 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link52)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link52)</returns>
		public string lnk_Link52_NavigateUrl() {
			String varLcinParamURL = "";
			varLcinParamURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "Default", "CaseConferencing", "", "", "", "", "", "", "", "", "", "");
			string sURL = varLcinParamURL;
			sURL = sURL.Replace("&amp;", "&");
			if (AppUtils.UrlAttributeMustBeEncoded(Request)) {
				sURL = sURL.Replace("&", "&amp;");
			}
			return sURL;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link52)
		/// </summary>
		/// <returns>title of the Link (wt_Link52)</returns>
		public string
		lnk_Link52_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link52)
		/// </summary>
		/// <returns>The Visible State of wt_Link52</returns>
		public bool lnk_Link52_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link52)
		/// </summary>
		/// <returns>The Enabled State of wt_Link52</returns>
		public bool lnk_Link52_isEnabled() {
			return ((Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("GROqSKyUPUq3TwhHOucRIg")).ssId) ==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("oTzyT6KcpkiqqPUl9hzCfA")).ssId) || (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("GROqSKyUPUq3TwhHOucRIg")).ssId) ==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId)); 
		}
		/// <summary>
		/// wt_Container7 Functions
		/// </summary>
		public void cnt_Container7_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container7_setInlineAttributes(sender, e);
		}
		public string cnt_Container7_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container7_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container7)
		/// </summary>
		/// <returns>The Visible State of wt_Container7</returns>
		public bool cnt_Container7_isVisible() {
			return true;
		}

		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance16 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance16_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon) sender;
			widget.inParamBackgroundColor = ENColorEntity.GetRecordByKey(ObjectKey.Parse("Vb6gNZNDuUOJ6xRCMAbHDA")).ssBackground;
			widget.inParamIcon = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("tuqsB0w_c0i6HbPDdmyy9w")).ssClass;
			widget.inParamTooltipText = "";
			widget.inParamSize = ENTileSizeEntity.GetRecordByKey(ObjectKey.Parse("nLSj6U4wI0yx9DyWHWxhqw")).ssType;
			widget.inParamIsDisabled = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("GROqSKyUPUq3TwhHOucRIg")).ssId) ==BuiltInFunction.NullIdentifier());
		}
		/// <summary>
		/// wt_Link50 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link50)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link50)</returns>
		public string lnk_Link50_NavigateUrl() {
			String varLcinParamURL = "";
			varLcinParamURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "Session", "CaseConferencing", "", "", "", "", "", "", "", "", "", "");
			string sURL = varLcinParamURL;
			sURL = sURL.Replace("&amp;", "&");
			if (AppUtils.UrlAttributeMustBeEncoded(Request)) {
				sURL = sURL.Replace("&", "&amp;");
			}
			return sURL;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link50)
		/// </summary>
		/// <returns>title of the Link (wt_Link50)</returns>
		public string
		lnk_Link50_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link50)
		/// </summary>
		/// <returns>The Visible State of wt_Link50</returns>
		public bool lnk_Link50_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link50)
		/// </summary>
		/// <returns>The Enabled State of wt_Link50</returns>
		public bool lnk_Link50_isEnabled() {
			return ((Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("tAo+Eq5dL0aZHIgxzvoqww")).ssId) ==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("oTzyT6KcpkiqqPUl9hzCfA")).ssId) || (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("tAo+Eq5dL0aZHIgxzvoqww")).ssId) ==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId)); 
		}
		/// <summary>
		/// wt_Container12 Functions
		/// </summary>
		public void cnt_Container12_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container12_setInlineAttributes(sender, e);
		}
		public string cnt_Container12_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container12_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container12)
		/// </summary>
		/// <returns>The Visible State of wt_Container12</returns>
		public bool cnt_Container12_isVisible() {
			return true;
		}

		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance32 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance32_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon) sender;
			widget.inParamBackgroundColor = ENColorEntity.GetRecordByKey(ObjectKey.Parse("ABZq+r_6aUaUgZk08PA6Jg")).ssBackground;
			widget.inParamIcon = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("cmAzrjaBh0qFvctSMz9ufw")).ssClass;
			widget.inParamTooltipText = "";
			widget.inParamSize = ENTileSizeEntity.GetRecordByKey(ObjectKey.Parse("nLSj6U4wI0yx9DyWHWxhqw")).ssType;
			widget.inParamIsDisabled = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("tAo+Eq5dL0aZHIgxzvoqww")).ssId) ==BuiltInFunction.NullIdentifier());
		}
		/// <summary>
		/// wt_Link35 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link35)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link35)</returns>
		public string lnk_Link35_NavigateUrl() {
			String varLcinParamURL = "";
			varLcinParamURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "Dashboard", "CaseConferencing", "", "", "", "", "", "", "", "", "", "");
			string sURL = varLcinParamURL;
			sURL = sURL.Replace("&amp;", "&");
			if (AppUtils.UrlAttributeMustBeEncoded(Request)) {
				sURL = sURL.Replace("&", "&amp;");
			}
			return sURL;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link35)
		/// </summary>
		/// <returns>title of the Link (wt_Link35)</returns>
		public string
		lnk_Link35_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link35)
		/// </summary>
		/// <returns>The Visible State of wt_Link35</returns>
		public bool lnk_Link35_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link35)
		/// </summary>
		/// <returns>The Enabled State of wt_Link35</returns>
		public bool lnk_Link35_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container51 Functions
		/// </summary>
		public void cnt_Container51_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container51_setInlineAttributes(sender, e);
		}
		public string cnt_Container51_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container51_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container51)
		/// </summary>
		/// <returns>The Visible State of wt_Container51</returns>
		public bool cnt_Container51_isVisible() {
			return true;
		}

		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance33 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance33_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon) sender;
			widget.inParamBackgroundColor = ENColorEntity.GetRecordByKey(ObjectKey.Parse("i6Vcss1uzUq67EXj6zMozw")).ssBackground;
			widget.inParamIcon = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("SHGWXTeBF0KBH+qqjgz5eA")).ssClass;
			widget.inParamTooltipText = "";
			widget.inParamSize = ENTileSizeEntity.GetRecordByKey(ObjectKey.Parse("nLSj6U4wI0yx9DyWHWxhqw")).ssType;
			widget.inParamIsDisabled = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("e8IvgrC3vUalgVZjfMF0iA")).ssId) ==BuiltInFunction.NullIdentifier());
		}
		/// <summary>
		/// wt_Link26 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link26)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link26)</returns>
		public string lnk_Link26_NavigateUrl() {
			String varLcinParamURL = "";
			varLcinParamURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "Applicants", "CaseConferencing", "", "", "", "", "", "", "", "", "", "");
			string sURL = varLcinParamURL;
			sURL = sURL.Replace("&amp;", "&");
			if (AppUtils.UrlAttributeMustBeEncoded(Request)) {
				sURL = sURL.Replace("&", "&amp;");
			}
			return sURL;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link26)
		/// </summary>
		/// <returns>title of the Link (wt_Link26)</returns>
		public string
		lnk_Link26_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link26)
		/// </summary>
		/// <returns>The Visible State of wt_Link26</returns>
		public bool lnk_Link26_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link26)
		/// </summary>
		/// <returns>The Enabled State of wt_Link26</returns>
		public bool lnk_Link26_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container13 Functions
		/// </summary>
		public void cnt_Container13_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container13_setInlineAttributes(sender, e);
		}
		public string cnt_Container13_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container13_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container13)
		/// </summary>
		/// <returns>The Visible State of wt_Container13</returns>
		public bool cnt_Container13_isVisible() {
			return false;
		}

		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance30 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance30_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTileIcon) sender;
			widget.inParamBackgroundColor = ENColorEntity.GetRecordByKey(ObjectKey.Parse("aXfeyxM78E6ynjYKymjrcg")).ssBackground;
			widget.inParamIcon = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("We5gG7w870+aa1LEEfRVKQ")).ssClass;
			widget.inParamTooltipText = "";
			widget.inParamSize = ENTileSizeEntity.GetRecordByKey(ObjectKey.Parse("nLSj6U4wI0yx9DyWHWxhqw")).ssType;
			widget.inParamIsDisabled = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("e8IvgrC3vUalgVZjfMF0iA")).ssId) ==BuiltInFunction.NullIdentifier());
		}


		public static class FuncssPreparation {
		}



		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}


		public LocalState PushStack() {
			return null;
		}

		public void doRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				Preparation(heContext);

				Title = "HomePage"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "HomePage", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// Perform the partial databind
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "HomePage", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Ajax", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}



		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			try {
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}


		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}


		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}

		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			Page_Load(null, null); this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}


		public override void DataBind() {
			base.DataBind();
			StoreViewState();
			OutSystems.HubEdition.WebWidgets.Utils.addValidationScriptsToPage(this);
		}



	}




}
