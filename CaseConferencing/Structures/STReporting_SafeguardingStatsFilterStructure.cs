/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Data;
using System.Runtime.Serialization;
using System.Reflection;
using System.Xml;
using OutSystems.ObjectKeys;
using OutSystems.RuntimeCommon;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using System.Xml.Serialization;
using System.Collections;

namespace ssCaseConferencing {
	/// <summary>
	/// Structure <code>STReporting_SafeguardingStatsFilterStructure</code> that represents the Service
	///  Studio structure <code>Reporting_SafeguardingStatsFilter</code> <p> Description: </p>
	/// </summary>
	[Serializable()]
	public partial struct STReporting_SafeguardingStatsFilterStructure: ISerializable, ITypedRecord<STReporting_SafeguardingStatsFilterStructure>, ISimpleRecord {
		private static readonly GlobalObjectKey IdType = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*ogr8ILX2aUmlm1snmAYNTA");
		private static readonly GlobalObjectKey IdIssueFilterOn = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*0S3o3ZcZkEKAbZv8M360SA");
		private static readonly GlobalObjectKey IdIssueFilterName = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*jQr9aJjE7EWcWET+e6ThfQ");
		private static readonly GlobalObjectKey IdGenderFilterOn = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*lTdAfmv+Kke9JkIn51eVMg");
		private static readonly GlobalObjectKey IdGenderFilter = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*+jGT4Iq2AkCevc2FUAXwyA");
		private static readonly GlobalObjectKey IdAgeFilterOn = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*KKtNeV5ozkeUquIu+bit_w");
		private static readonly GlobalObjectKey IdAgeFilterType = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*qL6KhR6bI0e8xPX9_PyuXA");
		private static readonly GlobalObjectKey IdExternalAgencyFilterOn = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*39PiyMmOb0Gq+7+wBDH3bg");
		private static readonly GlobalObjectKey IdExternalAgencyFilterName = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*L6DW_4pZ60mZM2GHweFEgg");
		private static readonly GlobalObjectKey IdSafeguardingLead = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*W_de6oFKJUKMDaD1MTS2nw");

		public static void EnsureInitialized() {}
		[System.Xml.Serialization.XmlElement("Type")]
		public string ssType;

		[System.Xml.Serialization.XmlElement("IssueFilterOn")]
		public bool ssIssueFilterOn;

		[System.Xml.Serialization.XmlElement("IssueFilterName")]
		public string ssIssueFilterName;

		[System.Xml.Serialization.XmlElement("GenderFilterOn")]
		public bool ssGenderFilterOn;

		[System.Xml.Serialization.XmlElement("GenderFilter")]
		public string ssGenderFilter;

		[System.Xml.Serialization.XmlElement("AgeFilterOn")]
		public bool ssAgeFilterOn;

		[System.Xml.Serialization.XmlElement("AgeFilterType")]
		public string ssAgeFilterType;

		[System.Xml.Serialization.XmlElement("ExternalAgencyFilterOn")]
		public bool ssExternalAgencyFilterOn;

		[System.Xml.Serialization.XmlElement("ExternalAgencyFilterName")]
		public string ssExternalAgencyFilterName;

		[System.Xml.Serialization.XmlElement("SafeguardingLead")]
		public int ssSafeguardingLead;


		public BitArray OptimizedAttributes;

		public STReporting_SafeguardingStatsFilterStructure(params string[] dummy) {
			OptimizedAttributes = null;
			ssType = "Referrals";
			ssIssueFilterOn = false;
			ssIssueFilterName = "";
			ssGenderFilterOn = false;
			ssGenderFilter = "";
			ssAgeFilterOn = false;
			ssAgeFilterType = "";
			ssExternalAgencyFilterOn = false;
			ssExternalAgencyFilterName = "";
			ssSafeguardingLead = 0;
		}

		public BitArray[] GetDefaultOptimizedValues() {
			BitArray[] all = new BitArray[0];
			return all;
		}

		public BitArray[] AllOptimizedAttributes {
			set {
				if (value == null) {
				} else {
				}
			}
			get {
				BitArray[] all = new BitArray[0];
				return all;
			}
		}

		/// <summary>
		/// Read a record from database
		/// </summary>
		/// <param name="r"> Data base reader</param>
		/// <param name="index"> index</param>
		public void Read(IDataReader r, ref int index) {
			ssType = r.ReadText(index++, "Reporting_SafeguardingStatsFilter.Type", "");
			ssIssueFilterOn = r.ReadBoolean(index++, "Reporting_SafeguardingStatsFilter.IssueFilterOn", false);
			ssIssueFilterName = r.ReadText(index++, "Reporting_SafeguardingStatsFilter.IssueFilterName", "");
			ssGenderFilterOn = r.ReadBoolean(index++, "Reporting_SafeguardingStatsFilter.GenderFilterOn", false);
			ssGenderFilter = r.ReadText(index++, "Reporting_SafeguardingStatsFilter.GenderFilter", "");
			ssAgeFilterOn = r.ReadBoolean(index++, "Reporting_SafeguardingStatsFilter.AgeFilterOn", false);
			ssAgeFilterType = r.ReadText(index++, "Reporting_SafeguardingStatsFilter.AgeFilterType", "");
			ssExternalAgencyFilterOn = r.ReadBoolean(index++, "Reporting_SafeguardingStatsFilter.ExternalAgencyFilterOn", false);
			ssExternalAgencyFilterName = r.ReadText(index++, "Reporting_SafeguardingStatsFilter.ExternalAgencyFilterName", "");
			ssSafeguardingLead = r.ReadEntityReference(index++, "Reporting_SafeguardingStatsFilter.SafeguardingLead", 0);
		}
		/// <summary>
		/// Read from database
		/// </summary>
		/// <param name="r"> Data reader</param>
		public void ReadDB(IDataReader r) {
			int index = 0;
			Read(r, ref index);
		}

		/// <summary>
		/// Read from record
		/// </summary>
		/// <param name="r"> Record</param>
		public void ReadIM(STReporting_SafeguardingStatsFilterStructure r) {
			this = r;
		}


		public static bool operator == (STReporting_SafeguardingStatsFilterStructure a, STReporting_SafeguardingStatsFilterStructure b) {
			if (a.ssType != b.ssType) return false;
			if (a.ssIssueFilterOn != b.ssIssueFilterOn) return false;
			if (a.ssIssueFilterName != b.ssIssueFilterName) return false;
			if (a.ssGenderFilterOn != b.ssGenderFilterOn) return false;
			if (a.ssGenderFilter != b.ssGenderFilter) return false;
			if (a.ssAgeFilterOn != b.ssAgeFilterOn) return false;
			if (a.ssAgeFilterType != b.ssAgeFilterType) return false;
			if (a.ssExternalAgencyFilterOn != b.ssExternalAgencyFilterOn) return false;
			if (a.ssExternalAgencyFilterName != b.ssExternalAgencyFilterName) return false;
			if (a.ssSafeguardingLead != b.ssSafeguardingLead) return false;
			return true;
		}

		public static bool operator != (STReporting_SafeguardingStatsFilterStructure a, STReporting_SafeguardingStatsFilterStructure b) {
			return !(a==b);
		}

		public override bool Equals(object o) {
			if (o.GetType() != typeof(STReporting_SafeguardingStatsFilterStructure)) return false;
			return (this == (STReporting_SafeguardingStatsFilterStructure) o);
		}

		public override int GetHashCode() {
			try {
				return base.GetHashCode()
				^ ssType.GetHashCode()
				^ ssIssueFilterOn.GetHashCode()
				^ ssIssueFilterName.GetHashCode()
				^ ssGenderFilterOn.GetHashCode()
				^ ssGenderFilter.GetHashCode()
				^ ssAgeFilterOn.GetHashCode()
				^ ssAgeFilterType.GetHashCode()
				^ ssExternalAgencyFilterOn.GetHashCode()
				^ ssExternalAgencyFilterName.GetHashCode()
				^ ssSafeguardingLead.GetHashCode()
				;
			} catch {
				return base.GetHashCode();
			}
		}

		public void GetObjectData(SerializationInfo info, StreamingContext context) {
			Type objInfo = this.GetType();
			FieldInfo[] fields;
			fields = objInfo.GetFields(BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public);
			for (int i = 0; i < fields.Length; i++)
			if (fields[i] .FieldType.IsSerializable)
			info.AddValue(fields[i] .Name, fields[i] .GetValue(this));
		}

		public STReporting_SafeguardingStatsFilterStructure(SerializationInfo info, StreamingContext context) {
			OptimizedAttributes = null;
			ssType = "Referrals";
			ssIssueFilterOn = false;
			ssIssueFilterName = "";
			ssGenderFilterOn = false;
			ssGenderFilter = "";
			ssAgeFilterOn = false;
			ssAgeFilterType = "";
			ssExternalAgencyFilterOn = false;
			ssExternalAgencyFilterName = "";
			ssSafeguardingLead = 0;
			Type objInfo = this.GetType();
			FieldInfo[] fields;
			fields = objInfo.GetFields(BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public);
			if (fields[0] .FieldType.IsSerializable)
			ssType = (string) info.GetValue(fields[0] .Name, fields[0] .FieldType);
			if (fields[1] .FieldType.IsSerializable)
			ssIssueFilterOn = (bool) info.GetValue(fields[1] .Name, fields[1] .FieldType);
			if (fields[2] .FieldType.IsSerializable)
			ssIssueFilterName = (string) info.GetValue(fields[2] .Name, fields[2] .FieldType);
			if (fields[3] .FieldType.IsSerializable)
			ssGenderFilterOn = (bool) info.GetValue(fields[3] .Name, fields[3] .FieldType);
			if (fields[4] .FieldType.IsSerializable)
			ssGenderFilter = (string) info.GetValue(fields[4] .Name, fields[4] .FieldType);
			if (fields[5] .FieldType.IsSerializable)
			ssAgeFilterOn = (bool) info.GetValue(fields[5] .Name, fields[5] .FieldType);
			if (fields[6] .FieldType.IsSerializable)
			ssAgeFilterType = (string) info.GetValue(fields[6] .Name, fields[6] .FieldType);
			if (fields[7] .FieldType.IsSerializable)
			ssExternalAgencyFilterOn = (bool) info.GetValue(fields[7] .Name, fields[7] .FieldType);
			if (fields[8] .FieldType.IsSerializable)
			ssExternalAgencyFilterName = (string) info.GetValue(fields[8] .Name, fields[8] .FieldType);
			if (fields[9] .FieldType.IsSerializable)
			ssSafeguardingLead = (int) info.GetValue(fields[9] .Name, fields[9] .FieldType);
		}

		public void RecursiveReset() {
		}

		public void InternalRecursiveSave() {
		}


		public STReporting_SafeguardingStatsFilterStructure Duplicate() {
			STReporting_SafeguardingStatsFilterStructure t;
			t.ssType = this.ssType;
			t.ssIssueFilterOn = this.ssIssueFilterOn;
			t.ssIssueFilterName = this.ssIssueFilterName;
			t.ssGenderFilterOn = this.ssGenderFilterOn;
			t.ssGenderFilter = this.ssGenderFilter;
			t.ssAgeFilterOn = this.ssAgeFilterOn;
			t.ssAgeFilterType = this.ssAgeFilterType;
			t.ssExternalAgencyFilterOn = this.ssExternalAgencyFilterOn;
			t.ssExternalAgencyFilterName = this.ssExternalAgencyFilterName;
			t.ssSafeguardingLead = this.ssSafeguardingLead;
			t.OptimizedAttributes = null;
			return t;
		}

		IRecord IRecord.Duplicate() {
			return Duplicate();
		}

		public void ToXml(Object parent, System.Xml.XmlElement baseElem, String fieldName, int detailLevel) {
			System.Xml.XmlElement recordElem = VarValue.AppendChild(baseElem, "Structure");
			if (fieldName != null) {
				VarValue.AppendAttribute(recordElem, "debug.field", fieldName);
				fieldName = fieldName.ToLowerInvariant();
			}
			if (detailLevel > 0) {
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".Type")) VarValue.AppendAttribute(recordElem, "Type", ssType, detailLevel, TypeKind.Text); else VarValue.AppendOptimizedAttribute(recordElem, "Type");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".IssueFilterOn")) VarValue.AppendAttribute(recordElem, "IssueFilterOn", ssIssueFilterOn, detailLevel, TypeKind.Boolean); else VarValue.AppendOptimizedAttribute(recordElem, "IssueFilterOn");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".IssueFilterName")) VarValue.AppendAttribute(recordElem, "IssueFilterName", ssIssueFilterName, detailLevel, TypeKind.Text); else VarValue.AppendOptimizedAttribute(recordElem, "IssueFilterName");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".GenderFilterOn")) VarValue.AppendAttribute(recordElem, "GenderFilterOn", ssGenderFilterOn, detailLevel, TypeKind.Boolean); else VarValue.AppendOptimizedAttribute(recordElem, "GenderFilterOn");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".GenderFilter")) VarValue.AppendAttribute(recordElem, "GenderFilter", ssGenderFilter, detailLevel, TypeKind.Text); else VarValue.AppendOptimizedAttribute(recordElem, "GenderFilter");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".AgeFilterOn")) VarValue.AppendAttribute(recordElem, "AgeFilterOn", ssAgeFilterOn, detailLevel, TypeKind.Boolean); else VarValue.AppendOptimizedAttribute(recordElem, "AgeFilterOn");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".AgeFilterType")) VarValue.AppendAttribute(recordElem, "AgeFilterType", ssAgeFilterType, detailLevel, TypeKind.Text); else VarValue.AppendOptimizedAttribute(recordElem, "AgeFilterType");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".ExternalAgencyFilterOn")) VarValue.AppendAttribute(recordElem, "ExternalAgencyFilterOn", ssExternalAgencyFilterOn, detailLevel, TypeKind.Boolean); else VarValue.AppendOptimizedAttribute(recordElem, "ExternalAgencyFilterOn");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".ExternalAgencyFilterName")) VarValue.AppendAttribute(recordElem, "ExternalAgencyFilterName", ssExternalAgencyFilterName, detailLevel, TypeKind.Text); else VarValue.AppendOptimizedAttribute(recordElem, "ExternalAgencyFilterName");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".SafeguardingLead")) VarValue.AppendAttribute(recordElem, "SafeguardingLead", ssSafeguardingLead, detailLevel, TypeKind.EntityReference); else VarValue.AppendOptimizedAttribute(recordElem, "SafeguardingLead");
			} else {
				VarValue.AppendDeferredEvaluationElement(recordElem);
			}
		}

		public void EvaluateFields(VarValue variable, Object parent, String baseName, String fields) {
			String head = VarValue.GetHead(fields);
			String tail = VarValue.GetTail(fields);
			variable.Found = false;
			if (head == "type") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".Type")) variable.Value = ssType; else variable.Optimized = true;
			} else if (head == "issuefilteron") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".IssueFilterOn")) variable.Value = ssIssueFilterOn; else variable.Optimized = true;
			} else if (head == "issuefiltername") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".IssueFilterName")) variable.Value = ssIssueFilterName; else variable.Optimized = true;
			} else if (head == "genderfilteron") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".GenderFilterOn")) variable.Value = ssGenderFilterOn; else variable.Optimized = true;
			} else if (head == "genderfilter") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".GenderFilter")) variable.Value = ssGenderFilter; else variable.Optimized = true;
			} else if (head == "agefilteron") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".AgeFilterOn")) variable.Value = ssAgeFilterOn; else variable.Optimized = true;
			} else if (head == "agefiltertype") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".AgeFilterType")) variable.Value = ssAgeFilterType; else variable.Optimized = true;
			} else if (head == "externalagencyfilteron") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".ExternalAgencyFilterOn")) variable.Value = ssExternalAgencyFilterOn; else variable.Optimized = true;
			} else if (head == "externalagencyfiltername") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".ExternalAgencyFilterName")) variable.Value = ssExternalAgencyFilterName; else variable.Optimized = true;
			} else if (head == "safeguardinglead") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".SafeguardingLead")) variable.Value = ssSafeguardingLead; else variable.Optimized = true;
			}
			if (variable.Found && tail != null) variable.EvaluateFields(this, head, tail);
		}

		public bool ChangedAttributeGet(GlobalObjectKey key) {
			throw new Exception("Method not Supported");
		}

		public bool OptimizedAttributeGet(GlobalObjectKey key) {
			throw new Exception("Method not Supported");
		}

		public object AttributeGet(GlobalObjectKey key) {
			if (key == IdType) {
				return ssType;
			} else if (key == IdIssueFilterOn) {
				return ssIssueFilterOn;
			} else if (key == IdIssueFilterName) {
				return ssIssueFilterName;
			} else if (key == IdGenderFilterOn) {
				return ssGenderFilterOn;
			} else if (key == IdGenderFilter) {
				return ssGenderFilter;
			} else if (key == IdAgeFilterOn) {
				return ssAgeFilterOn;
			} else if (key == IdAgeFilterType) {
				return ssAgeFilterType;
			} else if (key == IdExternalAgencyFilterOn) {
				return ssExternalAgencyFilterOn;
			} else if (key == IdExternalAgencyFilterName) {
				return ssExternalAgencyFilterName;
			} else if (key == IdSafeguardingLead) {
				return ssSafeguardingLead;
			} else {
				throw new Exception("Invalid key");
			}
		}
		public void FillFromOther(IRecord other) {
			if (other == null) return;
			ssType = (string) other.AttributeGet(IdType);
			ssIssueFilterOn = (bool) other.AttributeGet(IdIssueFilterOn);
			ssIssueFilterName = (string) other.AttributeGet(IdIssueFilterName);
			ssGenderFilterOn = (bool) other.AttributeGet(IdGenderFilterOn);
			ssGenderFilter = (string) other.AttributeGet(IdGenderFilter);
			ssAgeFilterOn = (bool) other.AttributeGet(IdAgeFilterOn);
			ssAgeFilterType = (string) other.AttributeGet(IdAgeFilterType);
			ssExternalAgencyFilterOn = (bool) other.AttributeGet(IdExternalAgencyFilterOn);
			ssExternalAgencyFilterName = (string) other.AttributeGet(IdExternalAgencyFilterName);
			ssSafeguardingLead = (int) other.AttributeGet(IdSafeguardingLead);
		}
	} // STReporting_SafeguardingStatsFilterStructure
	/// <summary>
	/// Structure <code>RCReporting_SafeguardingStatsFilterRecord</code>
	/// </summary>
	[Serializable()]
	public partial struct RCReporting_SafeguardingStatsFilterRecord: ISerializable, ITypedRecord<RCReporting_SafeguardingStatsFilterRecord> {
		private static readonly GlobalObjectKey IdReporting_SafeguardingStatsFilter = GlobalObjectKey.Parse("2UmDmepsh0WSfJ_D1JexCA*4W64T4UNT76sXiBINzBklA");

		public static void EnsureInitialized() {}
		[System.Xml.Serialization.XmlElement("Reporting_SafeguardingStatsFilter")]
		public STReporting_SafeguardingStatsFilterStructure ssSTReporting_SafeguardingStatsFilter;


		public static implicit operator STReporting_SafeguardingStatsFilterStructure(RCReporting_SafeguardingStatsFilterRecord r) {
			return r.ssSTReporting_SafeguardingStatsFilter;
		}

		public static implicit operator RCReporting_SafeguardingStatsFilterRecord(STReporting_SafeguardingStatsFilterStructure r) {
			RCReporting_SafeguardingStatsFilterRecord res = new RCReporting_SafeguardingStatsFilterRecord(null);
			res.ssSTReporting_SafeguardingStatsFilter = r;
			return res;
		}

		public BitArray OptimizedAttributes;

		public RCReporting_SafeguardingStatsFilterRecord(params string[] dummy) {
			OptimizedAttributes = null;
			ssSTReporting_SafeguardingStatsFilter = new STReporting_SafeguardingStatsFilterStructure(null);
		}

		public BitArray[] GetDefaultOptimizedValues() {
			BitArray[] all = new BitArray[1];
			all[0] = null;
			return all;
		}

		public BitArray[] AllOptimizedAttributes {
			set {
				if (value == null) {
				} else {
					ssSTReporting_SafeguardingStatsFilter.OptimizedAttributes = value[0];
				}
			}
			get {
				BitArray[] all = new BitArray[1];
				all[0] = null;
				return all;
			}
		}

		/// <summary>
		/// Read a record from database
		/// </summary>
		/// <param name="r"> Data base reader</param>
		/// <param name="index"> index</param>
		public void Read(IDataReader r, ref int index) {
			ssSTReporting_SafeguardingStatsFilter.Read(r, ref index);
		}
		/// <summary>
		/// Read from database
		/// </summary>
		/// <param name="r"> Data reader</param>
		public void ReadDB(IDataReader r) {
			int index = 0;
			Read(r, ref index);
		}

		/// <summary>
		/// Read from record
		/// </summary>
		/// <param name="r"> Record</param>
		public void ReadIM(RCReporting_SafeguardingStatsFilterRecord r) {
			this = r;
		}


		public static bool operator == (RCReporting_SafeguardingStatsFilterRecord a, RCReporting_SafeguardingStatsFilterRecord b) {
			if (a.ssSTReporting_SafeguardingStatsFilter != b.ssSTReporting_SafeguardingStatsFilter) return false;
			return true;
		}

		public static bool operator != (RCReporting_SafeguardingStatsFilterRecord a, RCReporting_SafeguardingStatsFilterRecord b) {
			return !(a==b);
		}

		public override bool Equals(object o) {
			if (o.GetType() != typeof(RCReporting_SafeguardingStatsFilterRecord)) return false;
			return (this == (RCReporting_SafeguardingStatsFilterRecord) o);
		}

		public override int GetHashCode() {
			try {
				return base.GetHashCode()
				^ ssSTReporting_SafeguardingStatsFilter.GetHashCode()
				;
			} catch {
				return base.GetHashCode();
			}
		}

		public void GetObjectData(SerializationInfo info, StreamingContext context) {
			Type objInfo = this.GetType();
			FieldInfo[] fields;
			fields = objInfo.GetFields(BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public);
			for (int i = 0; i < fields.Length; i++)
			if (fields[i] .FieldType.IsSerializable)
			info.AddValue(fields[i] .Name, fields[i] .GetValue(this));
		}

		public RCReporting_SafeguardingStatsFilterRecord(SerializationInfo info, StreamingContext context) {
			OptimizedAttributes = null;
			ssSTReporting_SafeguardingStatsFilter = new STReporting_SafeguardingStatsFilterStructure(null);
			Type objInfo = this.GetType();
			FieldInfo[] fields;
			fields = objInfo.GetFields(BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public);
			if (fields[0] .FieldType.IsSerializable)
			ssSTReporting_SafeguardingStatsFilter = (STReporting_SafeguardingStatsFilterStructure) info.GetValue(fields[0] .Name, fields[0] .FieldType);
		}

		public void RecursiveReset() {
			ssSTReporting_SafeguardingStatsFilter.RecursiveReset();
		}

		public void InternalRecursiveSave() {
			ssSTReporting_SafeguardingStatsFilter.InternalRecursiveSave();
		}


		public RCReporting_SafeguardingStatsFilterRecord Duplicate() {
			RCReporting_SafeguardingStatsFilterRecord t;
			t.ssSTReporting_SafeguardingStatsFilter = (STReporting_SafeguardingStatsFilterStructure) this.ssSTReporting_SafeguardingStatsFilter.Duplicate();
			t.OptimizedAttributes = null;
			return t;
		}

		IRecord IRecord.Duplicate() {
			return Duplicate();
		}

		public void ToXml(Object parent, System.Xml.XmlElement baseElem, String fieldName, int detailLevel) {
			System.Xml.XmlElement recordElem = VarValue.AppendChild(baseElem, "Record");
			if (fieldName != null) {
				VarValue.AppendAttribute(recordElem, "debug.field", fieldName);
			}
			if (detailLevel > 0) {
				ssSTReporting_SafeguardingStatsFilter.ToXml(this, recordElem, "Reporting_SafeguardingStatsFilter", detailLevel - 1);
			} else {
				VarValue.AppendDeferredEvaluationElement(recordElem);
			}
		}

		public void EvaluateFields(VarValue variable, Object parent, String baseName, String fields) {
			String head = VarValue.GetHead(fields);
			String tail = VarValue.GetTail(fields);
			variable.Found = false;
			if (head == "reporting_safeguardingstatsfilter") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".Reporting_SafeguardingStatsFilter")) variable.Value = ssSTReporting_SafeguardingStatsFilter; else variable.Optimized = true;
				variable.SetFieldName("reporting_safeguardingstatsfilter");
			}
			if (variable.Found && tail != null) variable.EvaluateFields(this, head, tail);
		}

		public bool ChangedAttributeGet(GlobalObjectKey key) {
			throw new Exception("Method not Supported");
		}

		public bool OptimizedAttributeGet(GlobalObjectKey key) {
			throw new Exception("Method not Supported");
		}

		public object AttributeGet(GlobalObjectKey key) {
			if (key == IdReporting_SafeguardingStatsFilter) {
				return ssSTReporting_SafeguardingStatsFilter;
			} else {
				throw new Exception("Invalid key");
			}
		}
		public void FillFromOther(IRecord other) {
			if (other == null) return;
			ssSTReporting_SafeguardingStatsFilter.FillFromOther((IRecord) other.AttributeGet(IdReporting_SafeguardingStatsFilter));
		}
	} // RCReporting_SafeguardingStatsFilterRecord
	/// <summary>
	/// RecordList type <code>RLReporting_SafeguardingStatsFilterRecordList</code> that represents a record
	///  list of <code>Reporting_SafeguardingStatsFilter</code>
	/// </summary>
	[Serializable()]
	public partial class RLReporting_SafeguardingStatsFilterRecordList: GenericRecordList<RCReporting_SafeguardingStatsFilterRecord>, IEnumerable, IEnumerator, ISerializable {
		public static void EnsureInitialized() {}

		protected override RCReporting_SafeguardingStatsFilterRecord GetElementDefaultValue() {
			return new RCReporting_SafeguardingStatsFilterRecord("");
		}

		public T[] ToArray<T>(Func<RCReporting_SafeguardingStatsFilterRecord, T> converter) {
			return ToArray(this, converter);
		}

		public static T[] ToArray<T>(RLReporting_SafeguardingStatsFilterRecordList recordlist, Func<RCReporting_SafeguardingStatsFilterRecord, T> converter) {
			T[] result = new T[recordlist.Length];
			recordlist.StartIteration();
			while (!recordlist.Eof) {
				result[recordlist.CurrentRowNumber] = converter(recordlist.CurrentRec);
				recordlist.Advance();
			}
			recordlist.EndIteration();
			return result;
		}

		public static RLReporting_SafeguardingStatsFilterRecordList ToList<T>(T[] array, Func <T, RCReporting_SafeguardingStatsFilterRecord> converter) {
			RLReporting_SafeguardingStatsFilterRecordList result = new RLReporting_SafeguardingStatsFilterRecordList();
			if (array != null) {
				foreach(T item in array) {
					result.Append(converter(item));
				}
			}
			return result;
		}
		/// <summary>
		/// Default Constructor
		/// </summary>
		public RLReporting_SafeguardingStatsFilterRecordList(): base() {
		}

		/// <summary>
		/// Constructor with transaction parameter
		/// </summary>
		/// <param name="trans"> IDbTransaction Parameter</param>
		[Obsolete("Use the Default Constructor and set the Transaction afterwards.")]
		public RLReporting_SafeguardingStatsFilterRecordList(IDbTransaction trans): base(trans) {
		}

		/// <summary>
		/// Constructor with transaction parameter and alternate read method
		/// </summary>
		/// <param name="trans"> IDbTransaction Parameter</param>
		/// <param name="alternateReadDBMethod"> Alternate Read Method</param>
		[Obsolete("Use the Default Constructor and set the Transaction afterwards.")]
		public RLReporting_SafeguardingStatsFilterRecordList(IDbTransaction trans, ReadDBMethodDelegate alternateReadDBMethod): this(trans) {
			this.alternateReadDBMethod = alternateReadDBMethod;
		}

		/// <summary>
		/// Constructor declaration for serialization
		/// </summary>
		/// <param name="info"> SerializationInfo</param>
		/// <param name="context"> StreamingContext</param>
		public RLReporting_SafeguardingStatsFilterRecordList(SerializationInfo info, StreamingContext context): base(info, context) {
		}

		public override BitArray[] GetDefaultOptimizedValues() {
			BitArray[] def = new BitArray[1];
			def[0] = null;
			return def;
		}
		/// <summary>
		/// Create as new list
		/// </summary>
		/// <returns>The new record list</returns>
		protected override OSList<RCReporting_SafeguardingStatsFilterRecord> NewList() {
			return new RLReporting_SafeguardingStatsFilterRecordList();
		}


	} // RLReporting_SafeguardingStatsFilterRecordList
	/// <summary>
	/// RecordList type <code>RLReporting_SafeguardingStatsFilterList</code> that represents a record list
	///  of <code>StaffIdentifier, Text, Text, Text, Text, Text, Boolean, Boolean, Boolean, Boolean</code>
	/// </summary>
	[Serializable()]
	public partial class RLReporting_SafeguardingStatsFilterList: GenericRecordList<STReporting_SafeguardingStatsFilterStructure>, IEnumerable, IEnumerator, ISerializable {
		public static void EnsureInitialized() {}

		protected override STReporting_SafeguardingStatsFilterStructure GetElementDefaultValue() {
			return new STReporting_SafeguardingStatsFilterStructure("");
		}

		public T[] ToArray<T>(Func<STReporting_SafeguardingStatsFilterStructure, T> converter) {
			return ToArray(this, converter);
		}

		public static T[] ToArray<T>(RLReporting_SafeguardingStatsFilterList recordlist, Func<STReporting_SafeguardingStatsFilterStructure, T> converter) {
			T[] result = new T[recordlist.Length];
			recordlist.StartIteration();
			while (!recordlist.Eof) {
				result[recordlist.CurrentRowNumber] = converter(recordlist.CurrentRec);
				recordlist.Advance();
			}
			recordlist.EndIteration();
			return result;
		}

		public static RLReporting_SafeguardingStatsFilterList ToList<T>(T[] array, Func <T, STReporting_SafeguardingStatsFilterStructure> converter) {
			RLReporting_SafeguardingStatsFilterList result = new RLReporting_SafeguardingStatsFilterList();
			if (array != null) {
				foreach(T item in array) {
					result.Append(converter(item));
				}
			}
			return result;
		}
		/// <summary>
		/// Default Constructor
		/// </summary>
		public RLReporting_SafeguardingStatsFilterList(): base() {
		}

		/// <summary>
		/// Constructor with transaction parameter
		/// </summary>
		/// <param name="trans"> IDbTransaction Parameter</param>
		[Obsolete("Use the Default Constructor and set the Transaction afterwards.")]
		public RLReporting_SafeguardingStatsFilterList(IDbTransaction trans): base(trans) {
		}

		/// <summary>
		/// Constructor with transaction parameter and alternate read method
		/// </summary>
		/// <param name="trans"> IDbTransaction Parameter</param>
		/// <param name="alternateReadDBMethod"> Alternate Read Method</param>
		[Obsolete("Use the Default Constructor and set the Transaction afterwards.")]
		public RLReporting_SafeguardingStatsFilterList(IDbTransaction trans, ReadDBMethodDelegate alternateReadDBMethod): this(trans) {
			this.alternateReadDBMethod = alternateReadDBMethod;
		}

		/// <summary>
		/// Constructor declaration for serialization
		/// </summary>
		/// <param name="info"> SerializationInfo</param>
		/// <param name="context"> StreamingContext</param>
		public RLReporting_SafeguardingStatsFilterList(SerializationInfo info, StreamingContext context): base(info, context) {
		}

		public override BitArray[] GetDefaultOptimizedValues() {
			BitArray[] def = new BitArray[0];
			return def;
		}
		/// <summary>
		/// Create as new list
		/// </summary>
		/// <returns>The new record list</returns>
		protected override OSList<STReporting_SafeguardingStatsFilterStructure> NewList() {
			return new RLReporting_SafeguardingStatsFilterList();
		}


	} // RLReporting_SafeguardingStatsFilterList
}

namespace ssCaseConferencing {
	[XmlType("Reporting_SafeguardingStatsFilter")]
	public class WORCReporting_SafeguardingStatsFilterRecord {
		[System.Xml.Serialization.XmlElement("Type")]
		public string varWSType;

		[System.Xml.Serialization.XmlElement("IssueFilterOn")]
		public bool varWSIssueFilterOn;

		[System.Xml.Serialization.XmlElement("IssueFilterName")]
		public string varWSIssueFilterName;

		[System.Xml.Serialization.XmlElement("GenderFilterOn")]
		public bool varWSGenderFilterOn;

		[System.Xml.Serialization.XmlElement("GenderFilter")]
		public string varWSGenderFilter;

		[System.Xml.Serialization.XmlElement("AgeFilterOn")]
		public bool varWSAgeFilterOn;

		[System.Xml.Serialization.XmlElement("AgeFilterType")]
		public string varWSAgeFilterType;

		[System.Xml.Serialization.XmlElement("ExternalAgencyFilterOn")]
		public bool varWSExternalAgencyFilterOn;

		[System.Xml.Serialization.XmlElement("ExternalAgencyFilterName")]
		public string varWSExternalAgencyFilterName;

		[System.Xml.Serialization.XmlElement("SafeguardingLead")]
		public int varWSSafeguardingLead;

		public WORCReporting_SafeguardingStatsFilterRecord() {
			varWSType = (string) "Referrals";
			varWSIssueFilterOn = (bool) false;
			varWSIssueFilterName = (string) "";
			varWSGenderFilterOn = (bool) false;
			varWSGenderFilter = (string) "";
			varWSAgeFilterOn = (bool) false;
			varWSAgeFilterType = (string) "";
			varWSExternalAgencyFilterOn = (bool) false;
			varWSExternalAgencyFilterName = (string) "";
			varWSSafeguardingLead = (int) 0;
		}

		public WORCReporting_SafeguardingStatsFilterRecord(STReporting_SafeguardingStatsFilterStructure r) {
			varWSType = BaseAppUtils.RemoveControlChars(r.ssType);
			varWSIssueFilterOn = (bool) r.ssIssueFilterOn;
			varWSIssueFilterName = BaseAppUtils.RemoveControlChars(r.ssIssueFilterName);
			varWSGenderFilterOn = (bool) r.ssGenderFilterOn;
			varWSGenderFilter = BaseAppUtils.RemoveControlChars(r.ssGenderFilter);
			varWSAgeFilterOn = (bool) r.ssAgeFilterOn;
			varWSAgeFilterType = BaseAppUtils.RemoveControlChars(r.ssAgeFilterType);
			varWSExternalAgencyFilterOn = (bool) r.ssExternalAgencyFilterOn;
			varWSExternalAgencyFilterName = BaseAppUtils.RemoveControlChars(r.ssExternalAgencyFilterName);
			varWSSafeguardingLead = (int) r.ssSafeguardingLead;
		}

		public static RLReporting_SafeguardingStatsFilterList ToRecordList(WORCReporting_SafeguardingStatsFilterRecord[] array) {
			RLReporting_SafeguardingStatsFilterList rl = new RLReporting_SafeguardingStatsFilterList();
			if (array != null) {
				foreach(WORCReporting_SafeguardingStatsFilterRecord val in array) {
					rl.Append(val);
				}
			}
			return rl;
		}

		public static WORCReporting_SafeguardingStatsFilterRecord[] FromRecordList(RLReporting_SafeguardingStatsFilterList rl) {
			WORCReporting_SafeguardingStatsFilterRecord[] array = new WORCReporting_SafeguardingStatsFilterRecord[rl == null ? 0: rl.Length];
			for (int i = 0; i < array.Length; i++) {
				array[i] = rl.Data[i];
			}
			return array;
		}
	}
}

namespace ssCaseConferencing {
	partial struct RCReporting_SafeguardingStatsFilterRecord {
		public static implicit operator WORCReporting_SafeguardingStatsFilterRecord(RCReporting_SafeguardingStatsFilterRecord r) {
			return new WORCReporting_SafeguardingStatsFilterRecord(r.ssSTReporting_SafeguardingStatsFilter);
		}

		public static implicit operator RCReporting_SafeguardingStatsFilterRecord(WORCReporting_SafeguardingStatsFilterRecord w) {
			RCReporting_SafeguardingStatsFilterRecord r = new RCReporting_SafeguardingStatsFilterRecord("");
			if (w != null) {
				r.ssSTReporting_SafeguardingStatsFilter = w;
			}
			return r;
		}

	}

	partial struct STReporting_SafeguardingStatsFilterStructure {
		public static implicit operator WORCReporting_SafeguardingStatsFilterRecord(STReporting_SafeguardingStatsFilterStructure r) {
			return new WORCReporting_SafeguardingStatsFilterRecord(r);
		}

		public static implicit operator STReporting_SafeguardingStatsFilterStructure(WORCReporting_SafeguardingStatsFilterRecord w) {
			STReporting_SafeguardingStatsFilterStructure r = new STReporting_SafeguardingStatsFilterStructure("");
			if (w != null) {
				r.ssType = ((string) w.varWSType ?? "");
				r.ssIssueFilterOn = (bool) w.varWSIssueFilterOn;
				r.ssIssueFilterName = ((string) w.varWSIssueFilterName ?? "");
				r.ssGenderFilterOn = (bool) w.varWSGenderFilterOn;
				r.ssGenderFilter = ((string) w.varWSGenderFilter ?? "");
				r.ssAgeFilterOn = (bool) w.varWSAgeFilterOn;
				r.ssAgeFilterType = ((string) w.varWSAgeFilterType ?? "");
				r.ssExternalAgencyFilterOn = (bool) w.varWSExternalAgencyFilterOn;
				r.ssExternalAgencyFilterName = ((string) w.varWSExternalAgencyFilterName ?? "");
				r.ssSafeguardingLead = (int) w.varWSSafeguardingLead;
			}
			return r;
		}

	}
}


namespace ssCaseConferencing {
	[Serializable()]
	public partial class WORLReporting_SafeguardingStatsFilterRecordList {
		public WORCReporting_SafeguardingStatsFilterRecord[] Array;


		public WORLReporting_SafeguardingStatsFilterRecordList(WORCReporting_SafeguardingStatsFilterRecord[] r) {
			if (r == null)
			Array = new WORCReporting_SafeguardingStatsFilterRecord[0];
			else
			Array = r;
		}
		public WORLReporting_SafeguardingStatsFilterRecordList() {
			Array = new WORCReporting_SafeguardingStatsFilterRecord[0];
		}

		public WORLReporting_SafeguardingStatsFilterRecordList(RLReporting_SafeguardingStatsFilterRecordList rl) {
			rl=(RLReporting_SafeguardingStatsFilterRecordList) rl.Duplicate();
			Array = new WORCReporting_SafeguardingStatsFilterRecord[rl.Length];
			while (!rl.Eof) {
				Array[rl.CurrentRowNumber] = new WORCReporting_SafeguardingStatsFilterRecord(rl.CurrentRec);
				rl.Advance();
			}
		}

	}
}

namespace ssCaseConferencing {
	partial class RLReporting_SafeguardingStatsFilterRecordList {
		public static implicit operator RLReporting_SafeguardingStatsFilterRecordList(WORCReporting_SafeguardingStatsFilterRecord[] array) {
			RLReporting_SafeguardingStatsFilterRecordList rl = new RLReporting_SafeguardingStatsFilterRecordList();
			if (array != null) {
				foreach(WORCReporting_SafeguardingStatsFilterRecord val in array) {
					rl.Append((RCReporting_SafeguardingStatsFilterRecord) val);
				}
			}
			return rl;
		}
		public static implicit operator WORCReporting_SafeguardingStatsFilterRecord[](RLReporting_SafeguardingStatsFilterRecordList rl) {
			WORCReporting_SafeguardingStatsFilterRecord[] array = new WORCReporting_SafeguardingStatsFilterRecord[rl == null ? 0: rl.Length];
			for (int i = 0; i < array.Length; i++) {
				array[i] = (RCReporting_SafeguardingStatsFilterRecord) rl.Data[i];
			}
			return array;
		}
	}
}

namespace ssCaseConferencing {
	partial class WORLReporting_SafeguardingStatsFilterRecordList {
		public static implicit operator RLReporting_SafeguardingStatsFilterRecordList(WORLReporting_SafeguardingStatsFilterRecordList w) {
			return w.Array;
		}
		public static implicit operator WORLReporting_SafeguardingStatsFilterRecordList(RLReporting_SafeguardingStatsFilterRecordList rl) {
			return new WORLReporting_SafeguardingStatsFilterRecordList(rl);
		}
		public static implicit operator WORCReporting_SafeguardingStatsFilterRecord[](WORLReporting_SafeguardingStatsFilterRecordList w) {
			if (w != null) {
				return w.Array;
			}
			return null;
		}
		public static implicit operator WORLReporting_SafeguardingStatsFilterRecordList(WORCReporting_SafeguardingStatsFilterRecord[] array) {
			return new WORLReporting_SafeguardingStatsFilterRecordList(array);
		}
	}
}

namespace ssCaseConferencing {
	[Serializable()]
	public partial class WORLReporting_SafeguardingStatsFilterList {
		public WORCReporting_SafeguardingStatsFilterRecord[] Array;


		public WORLReporting_SafeguardingStatsFilterList(WORCReporting_SafeguardingStatsFilterRecord[] r) {
			if (r == null)
			Array = new WORCReporting_SafeguardingStatsFilterRecord[0];
			else
			Array = r;
		}
		public WORLReporting_SafeguardingStatsFilterList() {
			Array = new WORCReporting_SafeguardingStatsFilterRecord[0];
		}

		public WORLReporting_SafeguardingStatsFilterList(RLReporting_SafeguardingStatsFilterList rl) {
			rl=(RLReporting_SafeguardingStatsFilterList) rl.Duplicate();
			Array = new WORCReporting_SafeguardingStatsFilterRecord[rl.Length];
			while (!rl.Eof) {
				Array[rl.CurrentRowNumber] = rl.CurrentRec.Duplicate();
				rl.Advance();
			}
		}

	}
}

namespace ssCaseConferencing {
	partial class RLReporting_SafeguardingStatsFilterList {
		public static implicit operator RLReporting_SafeguardingStatsFilterList(WORCReporting_SafeguardingStatsFilterRecord[] array) {
			RLReporting_SafeguardingStatsFilterList rl = new RLReporting_SafeguardingStatsFilterList();
			if (array != null) {
				foreach(WORCReporting_SafeguardingStatsFilterRecord val in array) {
					rl.Append((STReporting_SafeguardingStatsFilterStructure) val);
				}
			}
			return rl;
		}
		public static implicit operator WORCReporting_SafeguardingStatsFilterRecord[](RLReporting_SafeguardingStatsFilterList rl) {
			WORCReporting_SafeguardingStatsFilterRecord[] array = new WORCReporting_SafeguardingStatsFilterRecord[rl == null ? 0: rl.Length];
			for (int i = 0; i < array.Length; i++) {
				array[i] = (STReporting_SafeguardingStatsFilterStructure) rl.Data[i];
			}
			return array;
		}
	}
}

namespace ssCaseConferencing {
	partial class WORLReporting_SafeguardingStatsFilterList {
		public static implicit operator RLReporting_SafeguardingStatsFilterList(WORLReporting_SafeguardingStatsFilterList w) {
			return w.Array;
		}
		public static implicit operator WORLReporting_SafeguardingStatsFilterList(RLReporting_SafeguardingStatsFilterList rl) {
			return new WORLReporting_SafeguardingStatsFilterList(rl);
		}
		public static implicit operator WORCReporting_SafeguardingStatsFilterRecord[](WORLReporting_SafeguardingStatsFilterList w) {
			if (w != null) {
				return w.Array;
			}
			return null;
		}
		public static implicit operator WORLReporting_SafeguardingStatsFilterList(WORCReporting_SafeguardingStatsFilterRecord[] array) {
			return new WORLReporting_SafeguardingStatsFilterList(array);
		}
	}
}

