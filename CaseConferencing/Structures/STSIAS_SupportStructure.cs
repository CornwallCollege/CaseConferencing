/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Data;
using System.Runtime.Serialization;
using System.Reflection;
using System.Xml;
using OutSystems.ObjectKeys;
using OutSystems.RuntimeCommon;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using System.Xml.Serialization;
using System.Collections;

namespace ssCaseConferencing {
	/// <summary>
	/// Structure <code>STSIAS_SupportStructure</code> that represents the Service Studio structure
	///  <code>SIAS_Support</code> <p> Description: </p>
	/// </summary>
	[Serializable()]
	public partial struct STSIAS_SupportStructure: ISerializable, ITypedRecord<STSIAS_SupportStructure>, ISimpleRecord {
		private static readonly GlobalObjectKey IdStudent = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*aT17FySPSECx_zUiO_NobQ");
		private static readonly GlobalObjectKey IdSIASSelectedSupportTypeId = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*l9PXAyi210GY_gjF4PFCHA");
		private static readonly GlobalObjectKey IdSIASSupport = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*Ujywh4hIlEup1xvRvaREFQ");
		private static readonly GlobalObjectKey IdSIASSupportTypeList = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*mGh5OrH5c0y2tFmvy_MkRg");

		public static void EnsureInitialized() {}
		[System.Xml.Serialization.XmlElement("Student")]
		public RCStudentRecord ssStudent;

		[System.Xml.Serialization.XmlElement("SIASSelectedSupportTypeId")]
		public int ssSIASSelectedSupportTypeId;

		[System.Xml.Serialization.XmlElement("SIASSupport")]
		public RCSIASSupportRecord ssSIASSupport;

		[System.Xml.Serialization.XmlElement("SIASSupportTypeList")]
		public RLSIASSupportTypeRecordList ssSIASSupportTypeList;


		public BitArray OptimizedAttributes;

		public STSIAS_SupportStructure(params string[] dummy) {
			OptimizedAttributes = null;
			ssStudent = new RCStudentRecord(null);
			ssSIASSelectedSupportTypeId = 0;
			ssSIASSupport = new RCSIASSupportRecord(null);
			ssSIASSupportTypeList = new RLSIASSupportTypeRecordList();
		}

		public BitArray[] GetDefaultOptimizedValues() {
			BitArray[] all = new BitArray[2];
			all[0] = null;
			all[1] = null;
			return all;
		}

		public BitArray[] AllOptimizedAttributes {
			set {
				if (value == null) {
				} else {
					ssStudent.OptimizedAttributes = value[0];
					ssSIASSupport.OptimizedAttributes = value[1];
				}
			}
			get {
				BitArray[] all = new BitArray[2];
				all[0] = null;
				all[1] = null;
				return all;
			}
		}

		/// <summary>
		/// Read a record from database
		/// </summary>
		/// <param name="r"> Data base reader</param>
		/// <param name="index"> index</param>
		public void Read(IDataReader r, ref int index) {
			ssSIASSelectedSupportTypeId = r.ReadEntityReference(index++, "SIAS_Support.SIASSelectedSupportTypeId", 0);
		}
		/// <summary>
		/// Read from database
		/// </summary>
		/// <param name="r"> Data reader</param>
		public void ReadDB(IDataReader r) {
			int index = 0;
			Read(r, ref index);
		}

		/// <summary>
		/// Read from record
		/// </summary>
		/// <param name="r"> Record</param>
		public void ReadIM(STSIAS_SupportStructure r) {
			this = r;
		}


		public static bool operator == (STSIAS_SupportStructure a, STSIAS_SupportStructure b) {
			if (a.ssStudent != b.ssStudent) return false;
			if (a.ssSIASSelectedSupportTypeId != b.ssSIASSelectedSupportTypeId) return false;
			if (a.ssSIASSupport != b.ssSIASSupport) return false;
			if (a.ssSIASSupportTypeList != b.ssSIASSupportTypeList) return false;
			return true;
		}

		public static bool operator != (STSIAS_SupportStructure a, STSIAS_SupportStructure b) {
			return !(a==b);
		}

		public override bool Equals(object o) {
			if (o.GetType() != typeof(STSIAS_SupportStructure)) return false;
			return (this == (STSIAS_SupportStructure) o);
		}

		public override int GetHashCode() {
			try {
				return base.GetHashCode()
				^ ssStudent.GetHashCode()
				^ ssSIASSelectedSupportTypeId.GetHashCode()
				^ ssSIASSupport.GetHashCode()
				^ ssSIASSupportTypeList.GetHashCode()
				;
			} catch {
				return base.GetHashCode();
			}
		}

		public void GetObjectData(SerializationInfo info, StreamingContext context) {
			Type objInfo = this.GetType();
			FieldInfo[] fields;
			fields = objInfo.GetFields(BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public);
			for (int i = 0; i < fields.Length; i++)
			if (fields[i] .FieldType.IsSerializable)
			info.AddValue(fields[i] .Name, fields[i] .GetValue(this));
		}

		public STSIAS_SupportStructure(SerializationInfo info, StreamingContext context) {
			OptimizedAttributes = null;
			ssStudent = new RCStudentRecord(null);
			ssSIASSelectedSupportTypeId = 0;
			ssSIASSupport = new RCSIASSupportRecord(null);
			ssSIASSupportTypeList = new RLSIASSupportTypeRecordList();
			Type objInfo = this.GetType();
			FieldInfo[] fields;
			fields = objInfo.GetFields(BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public);
			if (fields[0] .FieldType.IsSerializable)
			ssStudent = (RCStudentRecord) info.GetValue(fields[0] .Name, fields[0] .FieldType);
			if (fields[1] .FieldType.IsSerializable)
			ssSIASSelectedSupportTypeId = (int) info.GetValue(fields[1] .Name, fields[1] .FieldType);
			if (fields[2] .FieldType.IsSerializable)
			ssSIASSupport = (RCSIASSupportRecord) info.GetValue(fields[2] .Name, fields[2] .FieldType);
			if (fields[3] .FieldType.IsSerializable)
			ssSIASSupportTypeList = (RLSIASSupportTypeRecordList) info.GetValue(fields[3] .Name, fields[3] .FieldType);
		}

		public void RecursiveReset() {
			ssStudent.RecursiveReset();
			ssSIASSupport.RecursiveReset();
			ssSIASSupportTypeList.RecursiveReset();
		}

		public void InternalRecursiveSave() {
			ssStudent.InternalRecursiveSave();
			ssSIASSupport.InternalRecursiveSave();
			ssSIASSupportTypeList.InternalRecursiveSave();
		}


		public STSIAS_SupportStructure Duplicate() {
			STSIAS_SupportStructure t;
			t.ssStudent = (RCStudentRecord) this.ssStudent.Duplicate();
			t.ssSIASSelectedSupportTypeId = this.ssSIASSelectedSupportTypeId;
			t.ssSIASSupport = (RCSIASSupportRecord) this.ssSIASSupport.Duplicate();
			t.ssSIASSupportTypeList = (RLSIASSupportTypeRecordList) this.ssSIASSupportTypeList.Duplicate();
			t.OptimizedAttributes = null;
			return t;
		}

		IRecord IRecord.Duplicate() {
			return Duplicate();
		}

		public void ToXml(Object parent, System.Xml.XmlElement baseElem, String fieldName, int detailLevel) {
			System.Xml.XmlElement recordElem = VarValue.AppendChild(baseElem, "Structure");
			if (fieldName != null) {
				VarValue.AppendAttribute(recordElem, "debug.field", fieldName);
				fieldName = fieldName.ToLowerInvariant();
			}
			if (detailLevel > 0) {
				ssStudent.ToXml(this, recordElem, "Student", detailLevel - 1);
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".SIASSelectedSupportTypeId")) VarValue.AppendAttribute(recordElem, "SIASSelectedSupportTypeId", ssSIASSelectedSupportTypeId, detailLevel, TypeKind.EntityReference); else VarValue.AppendOptimizedAttribute(recordElem, "SIASSelectedSupportTypeId");
				ssSIASSupport.ToXml(this, recordElem, "SIASSupport", detailLevel - 1);
				ssSIASSupportTypeList.ToXml(this, recordElem, "SIASSupportTypeList", detailLevel - 1);
			} else {
				VarValue.AppendDeferredEvaluationElement(recordElem);
			}
		}

		public void EvaluateFields(VarValue variable, Object parent, String baseName, String fields) {
			String head = VarValue.GetHead(fields);
			String tail = VarValue.GetTail(fields);
			variable.Found = false;
			if (head == "student") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".Student")) variable.Value = ssStudent; else variable.Optimized = true;
				variable.SetFieldName("student");
			} else if (head == "siasselectedsupporttypeid") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".SIASSelectedSupportTypeId")) variable.Value = ssSIASSelectedSupportTypeId; else variable.Optimized = true;
			} else if (head == "siassupport") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".SIASSupport")) variable.Value = ssSIASSupport; else variable.Optimized = true;
				variable.SetFieldName("siassupport");
			} else if (head == "siassupporttypelist") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".SIASSupportTypeList")) variable.Value = ssSIASSupportTypeList; else variable.Optimized = true;
				variable.SetFieldName("siassupporttypelist");
			}
			if (variable.Found && tail != null) variable.EvaluateFields(this, head, tail);
		}

		public bool ChangedAttributeGet(GlobalObjectKey key) {
			throw new Exception("Method not Supported");
		}

		public bool OptimizedAttributeGet(GlobalObjectKey key) {
			throw new Exception("Method not Supported");
		}

		public object AttributeGet(GlobalObjectKey key) {
			if (key == IdStudent) {
				return ssStudent;
			} else if (key == IdSIASSelectedSupportTypeId) {
				return ssSIASSelectedSupportTypeId;
			} else if (key == IdSIASSupport) {
				return ssSIASSupport;
			} else if (key == IdSIASSupportTypeList) {
				return ssSIASSupportTypeList;
			} else {
				throw new Exception("Invalid key");
			}
		}
		public void FillFromOther(IRecord other) {
			if (other == null) return;
			ssStudent.FillFromOther((IRecord) other.AttributeGet(IdStudent));
			ssSIASSelectedSupportTypeId = (int) other.AttributeGet(IdSIASSelectedSupportTypeId);
			ssSIASSupport.FillFromOther((IRecord) other.AttributeGet(IdSIASSupport));
			ssSIASSupportTypeList = new RLSIASSupportTypeRecordList();
			ssSIASSupportTypeList.FillFromOther((IOSList) other.AttributeGet(IdSIASSupportTypeList));
		}
	} // STSIAS_SupportStructure
	/// <summary>
	/// Structure <code>RCSIAS_SupportRecord</code>
	/// </summary>
	[Serializable()]
	public partial struct RCSIAS_SupportRecord: ISerializable, ITypedRecord<RCSIAS_SupportRecord> {
		private static readonly GlobalObjectKey IdSIAS_Support = GlobalObjectKey.Parse("2UmDmepsh0WSfJ_D1JexCA*1lBDszbgjfGrR1rY7NIDXg");

		public static void EnsureInitialized() {}
		[System.Xml.Serialization.XmlElement("SIAS_Support")]
		public STSIAS_SupportStructure ssSTSIAS_Support;


		public static implicit operator STSIAS_SupportStructure(RCSIAS_SupportRecord r) {
			return r.ssSTSIAS_Support;
		}

		public static implicit operator RCSIAS_SupportRecord(STSIAS_SupportStructure r) {
			RCSIAS_SupportRecord res = new RCSIAS_SupportRecord(null);
			res.ssSTSIAS_Support = r;
			return res;
		}

		public BitArray OptimizedAttributes;

		public RCSIAS_SupportRecord(params string[] dummy) {
			OptimizedAttributes = null;
			ssSTSIAS_Support = new STSIAS_SupportStructure(null);
		}

		public BitArray[] GetDefaultOptimizedValues() {
			BitArray[] all = new BitArray[1];
			all[0] = null;
			return all;
		}

		public BitArray[] AllOptimizedAttributes {
			set {
				if (value == null) {
				} else {
					ssSTSIAS_Support.OptimizedAttributes = value[0];
				}
			}
			get {
				BitArray[] all = new BitArray[1];
				all[0] = null;
				return all;
			}
		}

		/// <summary>
		/// Read a record from database
		/// </summary>
		/// <param name="r"> Data base reader</param>
		/// <param name="index"> index</param>
		public void Read(IDataReader r, ref int index) {
			ssSTSIAS_Support.Read(r, ref index);
		}
		/// <summary>
		/// Read from database
		/// </summary>
		/// <param name="r"> Data reader</param>
		public void ReadDB(IDataReader r) {
			int index = 0;
			Read(r, ref index);
		}

		/// <summary>
		/// Read from record
		/// </summary>
		/// <param name="r"> Record</param>
		public void ReadIM(RCSIAS_SupportRecord r) {
			this = r;
		}


		public static bool operator == (RCSIAS_SupportRecord a, RCSIAS_SupportRecord b) {
			if (a.ssSTSIAS_Support != b.ssSTSIAS_Support) return false;
			return true;
		}

		public static bool operator != (RCSIAS_SupportRecord a, RCSIAS_SupportRecord b) {
			return !(a==b);
		}

		public override bool Equals(object o) {
			if (o.GetType() != typeof(RCSIAS_SupportRecord)) return false;
			return (this == (RCSIAS_SupportRecord) o);
		}

		public override int GetHashCode() {
			try {
				return base.GetHashCode()
				^ ssSTSIAS_Support.GetHashCode()
				;
			} catch {
				return base.GetHashCode();
			}
		}

		public void GetObjectData(SerializationInfo info, StreamingContext context) {
			Type objInfo = this.GetType();
			FieldInfo[] fields;
			fields = objInfo.GetFields(BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public);
			for (int i = 0; i < fields.Length; i++)
			if (fields[i] .FieldType.IsSerializable)
			info.AddValue(fields[i] .Name, fields[i] .GetValue(this));
		}

		public RCSIAS_SupportRecord(SerializationInfo info, StreamingContext context) {
			OptimizedAttributes = null;
			ssSTSIAS_Support = new STSIAS_SupportStructure(null);
			Type objInfo = this.GetType();
			FieldInfo[] fields;
			fields = objInfo.GetFields(BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public);
			if (fields[0] .FieldType.IsSerializable)
			ssSTSIAS_Support = (STSIAS_SupportStructure) info.GetValue(fields[0] .Name, fields[0] .FieldType);
		}

		public void RecursiveReset() {
			ssSTSIAS_Support.RecursiveReset();
		}

		public void InternalRecursiveSave() {
			ssSTSIAS_Support.InternalRecursiveSave();
		}


		public RCSIAS_SupportRecord Duplicate() {
			RCSIAS_SupportRecord t;
			t.ssSTSIAS_Support = (STSIAS_SupportStructure) this.ssSTSIAS_Support.Duplicate();
			t.OptimizedAttributes = null;
			return t;
		}

		IRecord IRecord.Duplicate() {
			return Duplicate();
		}

		public void ToXml(Object parent, System.Xml.XmlElement baseElem, String fieldName, int detailLevel) {
			System.Xml.XmlElement recordElem = VarValue.AppendChild(baseElem, "Record");
			if (fieldName != null) {
				VarValue.AppendAttribute(recordElem, "debug.field", fieldName);
			}
			if (detailLevel > 0) {
				ssSTSIAS_Support.ToXml(this, recordElem, "SIAS_Support", detailLevel - 1);
			} else {
				VarValue.AppendDeferredEvaluationElement(recordElem);
			}
		}

		public void EvaluateFields(VarValue variable, Object parent, String baseName, String fields) {
			String head = VarValue.GetHead(fields);
			String tail = VarValue.GetTail(fields);
			variable.Found = false;
			if (head == "sias_support") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".SIAS_Support")) variable.Value = ssSTSIAS_Support; else variable.Optimized = true;
				variable.SetFieldName("sias_support");
			}
			if (variable.Found && tail != null) variable.EvaluateFields(this, head, tail);
		}

		public bool ChangedAttributeGet(GlobalObjectKey key) {
			throw new Exception("Method not Supported");
		}

		public bool OptimizedAttributeGet(GlobalObjectKey key) {
			throw new Exception("Method not Supported");
		}

		public object AttributeGet(GlobalObjectKey key) {
			if (key == IdSIAS_Support) {
				return ssSTSIAS_Support;
			} else {
				throw new Exception("Invalid key");
			}
		}
		public void FillFromOther(IRecord other) {
			if (other == null) return;
			ssSTSIAS_Support.FillFromOther((IRecord) other.AttributeGet(IdSIAS_Support));
		}
	} // RCSIAS_SupportRecord
	/// <summary>
	/// RecordList type <code>RLSIAS_SupportRecordList</code> that represents a record list of
	///  <code>SIAS_Support</code>
	/// </summary>
	[Serializable()]
	public partial class RLSIAS_SupportRecordList: GenericRecordList<RCSIAS_SupportRecord>, IEnumerable, IEnumerator, ISerializable {
		public static void EnsureInitialized() {}

		protected override RCSIAS_SupportRecord GetElementDefaultValue() {
			return new RCSIAS_SupportRecord("");
		}

		public T[] ToArray<T>(Func<RCSIAS_SupportRecord, T> converter) {
			return ToArray(this, converter);
		}

		public static T[] ToArray<T>(RLSIAS_SupportRecordList recordlist, Func<RCSIAS_SupportRecord, T> converter) {
			T[] result = new T[recordlist.Length];
			recordlist.StartIteration();
			while (!recordlist.Eof) {
				result[recordlist.CurrentRowNumber] = converter(recordlist.CurrentRec);
				recordlist.Advance();
			}
			recordlist.EndIteration();
			return result;
		}

		public static RLSIAS_SupportRecordList ToList<T>(T[] array, Func <T, RCSIAS_SupportRecord> converter) {
			RLSIAS_SupportRecordList result = new RLSIAS_SupportRecordList();
			if (array != null) {
				foreach(T item in array) {
					result.Append(converter(item));
				}
			}
			return result;
		}
		/// <summary>
		/// Default Constructor
		/// </summary>
		public RLSIAS_SupportRecordList(): base() {
		}

		/// <summary>
		/// Constructor with transaction parameter
		/// </summary>
		/// <param name="trans"> IDbTransaction Parameter</param>
		[Obsolete("Use the Default Constructor and set the Transaction afterwards.")]
		public RLSIAS_SupportRecordList(IDbTransaction trans): base(trans) {
		}

		/// <summary>
		/// Constructor with transaction parameter and alternate read method
		/// </summary>
		/// <param name="trans"> IDbTransaction Parameter</param>
		/// <param name="alternateReadDBMethod"> Alternate Read Method</param>
		[Obsolete("Use the Default Constructor and set the Transaction afterwards.")]
		public RLSIAS_SupportRecordList(IDbTransaction trans, ReadDBMethodDelegate alternateReadDBMethod): this(trans) {
			this.alternateReadDBMethod = alternateReadDBMethod;
		}

		/// <summary>
		/// Constructor declaration for serialization
		/// </summary>
		/// <param name="info"> SerializationInfo</param>
		/// <param name="context"> StreamingContext</param>
		public RLSIAS_SupportRecordList(SerializationInfo info, StreamingContext context): base(info, context) {
		}

		public override BitArray[] GetDefaultOptimizedValues() {
			BitArray[] def = new BitArray[1];
			def[0] = null;
			return def;
		}
		/// <summary>
		/// Create as new list
		/// </summary>
		/// <returns>The new record list</returns>
		protected override OSList<RCSIAS_SupportRecord> NewList() {
			return new RLSIAS_SupportRecordList();
		}


	} // RLSIAS_SupportRecordList
	/// <summary>
	/// RecordList type <code>RLSIAS_SupportList</code> that represents a record list of
	///  <code>SIASSupportTypeIdentifier, StudentRecord, SIASSupportTypeRecordList
	/// , SIASSupportRecord</code>
	/// </summary>
	[Serializable()]
	public partial class RLSIAS_SupportList: GenericRecordList<STSIAS_SupportStructure>, IEnumerable, IEnumerator, ISerializable {
		public static void EnsureInitialized() {}

		protected override STSIAS_SupportStructure GetElementDefaultValue() {
			return new STSIAS_SupportStructure("");
		}

		public T[] ToArray<T>(Func<STSIAS_SupportStructure, T> converter) {
			return ToArray(this, converter);
		}

		public static T[] ToArray<T>(RLSIAS_SupportList recordlist, Func<STSIAS_SupportStructure, T> converter) {
			T[] result = new T[recordlist.Length];
			recordlist.StartIteration();
			while (!recordlist.Eof) {
				result[recordlist.CurrentRowNumber] = converter(recordlist.CurrentRec);
				recordlist.Advance();
			}
			recordlist.EndIteration();
			return result;
		}

		public static RLSIAS_SupportList ToList<T>(T[] array, Func <T, STSIAS_SupportStructure> converter) {
			RLSIAS_SupportList result = new RLSIAS_SupportList();
			if (array != null) {
				foreach(T item in array) {
					result.Append(converter(item));
				}
			}
			return result;
		}
		/// <summary>
		/// Default Constructor
		/// </summary>
		public RLSIAS_SupportList(): base() {
		}

		/// <summary>
		/// Constructor with transaction parameter
		/// </summary>
		/// <param name="trans"> IDbTransaction Parameter</param>
		[Obsolete("Use the Default Constructor and set the Transaction afterwards.")]
		public RLSIAS_SupportList(IDbTransaction trans): base(trans) {
		}

		/// <summary>
		/// Constructor with transaction parameter and alternate read method
		/// </summary>
		/// <param name="trans"> IDbTransaction Parameter</param>
		/// <param name="alternateReadDBMethod"> Alternate Read Method</param>
		[Obsolete("Use the Default Constructor and set the Transaction afterwards.")]
		public RLSIAS_SupportList(IDbTransaction trans, ReadDBMethodDelegate alternateReadDBMethod): this(trans) {
			this.alternateReadDBMethod = alternateReadDBMethod;
		}

		/// <summary>
		/// Constructor declaration for serialization
		/// </summary>
		/// <param name="info"> SerializationInfo</param>
		/// <param name="context"> StreamingContext</param>
		public RLSIAS_SupportList(SerializationInfo info, StreamingContext context): base(info, context) {
		}

		public override BitArray[] GetDefaultOptimizedValues() {
			BitArray[] def = new BitArray[2];
			def[0] = null;
			def[1] = null;
			return def;
		}
		/// <summary>
		/// Create as new list
		/// </summary>
		/// <returns>The new record list</returns>
		protected override OSList<STSIAS_SupportStructure> NewList() {
			return new RLSIAS_SupportList();
		}


	} // RLSIAS_SupportList
}

namespace ssCaseConferencing {
	[XmlType("SIAS_Support")]
	public class WORCSIAS_SupportRecord {
		[System.Xml.Serialization.XmlElement("Student")]
		public WORCStudentRecord varWSStudent;

		[System.Xml.Serialization.XmlElement("SIASSelectedSupportTypeId")]
		public int varWSSIASSelectedSupportTypeId;

		[System.Xml.Serialization.XmlElement("SIASSupport")]
		public WORCSIASSupportRecord varWSSIASSupport;

		[System.Xml.Serialization.XmlArray("SIASSupportTypeList")]
		public WORCSIASSupportTypeRecord[] varWSSIASSupportTypeList;

		public WORCSIAS_SupportRecord() {
			varWSStudent = new WORCStudentRecord();
			varWSSIASSelectedSupportTypeId = (int) 0;
			varWSSIASSupport = new WORCSIASSupportRecord();
			varWSSIASSupportTypeList = new WORCSIASSupportTypeRecord[0];
		}

		public WORCSIAS_SupportRecord(STSIAS_SupportStructure r) {
			varWSStudent = r.ssStudent;
			varWSSIASSelectedSupportTypeId = (int) r.ssSIASSelectedSupportTypeId;
			varWSSIASSupport = r.ssSIASSupport;
			varWSSIASSupportTypeList = r.ssSIASSupportTypeList;
		}

		public static RLSIAS_SupportList ToRecordList(WORCSIAS_SupportRecord[] array) {
			RLSIAS_SupportList rl = new RLSIAS_SupportList();
			if (array != null) {
				foreach(WORCSIAS_SupportRecord val in array) {
					rl.Append(val);
				}
			}
			return rl;
		}

		public static WORCSIAS_SupportRecord[] FromRecordList(RLSIAS_SupportList rl) {
			WORCSIAS_SupportRecord[] array = new WORCSIAS_SupportRecord[rl == null ? 0: rl.Length];
			for (int i = 0; i < array.Length; i++) {
				array[i] = rl.Data[i];
			}
			return array;
		}
	}
}

namespace ssCaseConferencing {
	partial struct RCSIAS_SupportRecord {
		public static implicit operator WORCSIAS_SupportRecord(RCSIAS_SupportRecord r) {
			return new WORCSIAS_SupportRecord(r.ssSTSIAS_Support);
		}

		public static implicit operator RCSIAS_SupportRecord(WORCSIAS_SupportRecord w) {
			RCSIAS_SupportRecord r = new RCSIAS_SupportRecord("");
			if (w != null) {
				r.ssSTSIAS_Support = w;
			}
			return r;
		}

	}

	partial struct STSIAS_SupportStructure {
		public static implicit operator WORCSIAS_SupportRecord(STSIAS_SupportStructure r) {
			return new WORCSIAS_SupportRecord(r);
		}

		public static implicit operator STSIAS_SupportStructure(WORCSIAS_SupportRecord w) {
			STSIAS_SupportStructure r = new STSIAS_SupportStructure("");
			if (w != null) {
				r.ssStudent = w.varWSStudent;
				r.ssSIASSelectedSupportTypeId = (int) w.varWSSIASSelectedSupportTypeId;
				r.ssSIASSupport = w.varWSSIASSupport;
				r.ssSIASSupportTypeList = w.varWSSIASSupportTypeList;
			}
			return r;
		}

	}
}


namespace ssCaseConferencing {
	[Serializable()]
	public partial class WORLSIAS_SupportRecordList {
		public WORCSIAS_SupportRecord[] Array;


		public WORLSIAS_SupportRecordList(WORCSIAS_SupportRecord[] r) {
			if (r == null)
			Array = new WORCSIAS_SupportRecord[0];
			else
			Array = r;
		}
		public WORLSIAS_SupportRecordList() {
			Array = new WORCSIAS_SupportRecord[0];
		}

		public WORLSIAS_SupportRecordList(RLSIAS_SupportRecordList rl) {
			rl=(RLSIAS_SupportRecordList) rl.Duplicate();
			Array = new WORCSIAS_SupportRecord[rl.Length];
			while (!rl.Eof) {
				Array[rl.CurrentRowNumber] = new WORCSIAS_SupportRecord(rl.CurrentRec);
				rl.Advance();
			}
		}

	}
}

namespace ssCaseConferencing {
	partial class RLSIAS_SupportRecordList {
		public static implicit operator RLSIAS_SupportRecordList(WORCSIAS_SupportRecord[] array) {
			RLSIAS_SupportRecordList rl = new RLSIAS_SupportRecordList();
			if (array != null) {
				foreach(WORCSIAS_SupportRecord val in array) {
					rl.Append((RCSIAS_SupportRecord) val);
				}
			}
			return rl;
		}
		public static implicit operator WORCSIAS_SupportRecord[](RLSIAS_SupportRecordList rl) {
			WORCSIAS_SupportRecord[] array = new WORCSIAS_SupportRecord[rl == null ? 0: rl.Length];
			for (int i = 0; i < array.Length; i++) {
				array[i] = (RCSIAS_SupportRecord) rl.Data[i];
			}
			return array;
		}
	}
}

namespace ssCaseConferencing {
	partial class WORLSIAS_SupportRecordList {
		public static implicit operator RLSIAS_SupportRecordList(WORLSIAS_SupportRecordList w) {
			return w.Array;
		}
		public static implicit operator WORLSIAS_SupportRecordList(RLSIAS_SupportRecordList rl) {
			return new WORLSIAS_SupportRecordList(rl);
		}
		public static implicit operator WORCSIAS_SupportRecord[](WORLSIAS_SupportRecordList w) {
			if (w != null) {
				return w.Array;
			}
			return null;
		}
		public static implicit operator WORLSIAS_SupportRecordList(WORCSIAS_SupportRecord[] array) {
			return new WORLSIAS_SupportRecordList(array);
		}
	}
}

namespace ssCaseConferencing {
	[Serializable()]
	public partial class WORLSIAS_SupportList {
		public WORCSIAS_SupportRecord[] Array;


		public WORLSIAS_SupportList(WORCSIAS_SupportRecord[] r) {
			if (r == null)
			Array = new WORCSIAS_SupportRecord[0];
			else
			Array = r;
		}
		public WORLSIAS_SupportList() {
			Array = new WORCSIAS_SupportRecord[0];
		}

		public WORLSIAS_SupportList(RLSIAS_SupportList rl) {
			rl=(RLSIAS_SupportList) rl.Duplicate();
			Array = new WORCSIAS_SupportRecord[rl.Length];
			while (!rl.Eof) {
				Array[rl.CurrentRowNumber] = rl.CurrentRec.Duplicate();
				rl.Advance();
			}
		}

	}
}

namespace ssCaseConferencing {
	partial class RLSIAS_SupportList {
		public static implicit operator RLSIAS_SupportList(WORCSIAS_SupportRecord[] array) {
			RLSIAS_SupportList rl = new RLSIAS_SupportList();
			if (array != null) {
				foreach(WORCSIAS_SupportRecord val in array) {
					rl.Append((STSIAS_SupportStructure) val);
				}
			}
			return rl;
		}
		public static implicit operator WORCSIAS_SupportRecord[](RLSIAS_SupportList rl) {
			WORCSIAS_SupportRecord[] array = new WORCSIAS_SupportRecord[rl == null ? 0: rl.Length];
			for (int i = 0; i < array.Length; i++) {
				array[i] = (STSIAS_SupportStructure) rl.Data[i];
			}
			return array;
		}
	}
}

namespace ssCaseConferencing {
	partial class WORLSIAS_SupportList {
		public static implicit operator RLSIAS_SupportList(WORLSIAS_SupportList w) {
			return w.Array;
		}
		public static implicit operator WORLSIAS_SupportList(RLSIAS_SupportList rl) {
			return new WORLSIAS_SupportList(rl);
		}
		public static implicit operator WORCSIAS_SupportRecord[](WORLSIAS_SupportList w) {
			if (w != null) {
				return w.Array;
			}
			return null;
		}
		public static implicit operator WORLSIAS_SupportList(WORCSIAS_SupportRecord[] array) {
			return new WORLSIAS_SupportList(array);
		}
	}
}

