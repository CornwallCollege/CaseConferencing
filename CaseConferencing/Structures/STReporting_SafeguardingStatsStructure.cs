/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Data;
using System.Runtime.Serialization;
using System.Reflection;
using System.Xml;
using OutSystems.ObjectKeys;
using OutSystems.RuntimeCommon;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using System.Xml.Serialization;
using System.Collections;

namespace ssCaseConferencing {
	/// <summary>
	/// Structure <code>STReporting_SafeguardingStatsStructure</code> that represents the Service Studio
	///  structure <code>Reporting_SafeguardingStats</code> <p> Description: </p>
	/// </summary>
	[Serializable()]
	public partial struct STReporting_SafeguardingStatsStructure: ISerializable, ITypedRecord<STReporting_SafeguardingStatsStructure>, ISimpleRecord {
		private static readonly GlobalObjectKey IdStudentReference = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*O_07ALSd506Iq3WhyJdpcA");
		private static readonly GlobalObjectKey IdSafeguardingIssueType = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*PqzibtPl2UC0eNIkwX+3kw");
		private static readonly GlobalObjectKey IdGender = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*sMJ3q_iAtE6J_N+iEsL5QQ");
		private static readonly GlobalObjectKey IdAgeBracket = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*37csUUUdBESKLLe5zw97mg");
		private static readonly GlobalObjectKey IdExternalAgencyReferral = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*xP7J1Ouf406SQHh+zIM8fw");
		private static readonly GlobalObjectKey IdStudentPhotoURL = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*3pul809doUyVOW8t6IEW6w");
		private static readonly GlobalObjectKey IdLearnerFullName = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*VXvci_vHCEKu7zRFEgdIkw");
		private static readonly GlobalObjectKey IdSafeguardingLead = GlobalObjectKey.Parse("shmcdFKEAEWXZGfrlZEwCQ*+M3BEJSkiUmqsVWplWMKqQ");

		public static void EnsureInitialized() {}
		[System.Xml.Serialization.XmlElement("StudentReference")]
		public string ssStudentReference;

		[System.Xml.Serialization.XmlElement("SafeguardingIssueType")]
		public string ssSafeguardingIssueType;

		[System.Xml.Serialization.XmlElement("Gender")]
		public string ssGender;

		[System.Xml.Serialization.XmlElement("AgeBracket")]
		public string ssAgeBracket;

		[System.Xml.Serialization.XmlElement("ExternalAgencyReferral")]
		public string ssExternalAgencyReferral;

		[System.Xml.Serialization.XmlElement("StudentPhotoURL")]
		public string ssStudentPhotoURL;

		[System.Xml.Serialization.XmlElement("LearnerFullName")]
		public string ssLearnerFullName;

		[System.Xml.Serialization.XmlElement("SafeguardingLead")]
		public string ssSafeguardingLead;


		public BitArray OptimizedAttributes;

		public STReporting_SafeguardingStatsStructure(params string[] dummy) {
			OptimizedAttributes = null;
			ssStudentReference = "";
			ssSafeguardingIssueType = "";
			ssGender = "";
			ssAgeBracket = "";
			ssExternalAgencyReferral = "";
			ssStudentPhotoURL = "";
			ssLearnerFullName = "";
			ssSafeguardingLead = "";
		}

		public BitArray[] GetDefaultOptimizedValues() {
			BitArray[] all = new BitArray[0];
			return all;
		}

		public BitArray[] AllOptimizedAttributes {
			set {
				if (value == null) {
				} else {
				}
			}
			get {
				BitArray[] all = new BitArray[0];
				return all;
			}
		}

		/// <summary>
		/// Read a record from database
		/// </summary>
		/// <param name="r"> Data base reader</param>
		/// <param name="index"> index</param>
		public void Read(IDataReader r, ref int index) {
			ssStudentReference = r.ReadTextEntityReference(index++, "Reporting_SafeguardingStats.StudentReference", "");
			ssSafeguardingIssueType = r.ReadText(index++, "Reporting_SafeguardingStats.SafeguardingIssueType", "");
			ssGender = r.ReadText(index++, "Reporting_SafeguardingStats.Gender", "");
			ssAgeBracket = r.ReadText(index++, "Reporting_SafeguardingStats.AgeBracket", "");
			ssExternalAgencyReferral = r.ReadText(index++, "Reporting_SafeguardingStats.ExternalAgencyReferral", "");
			ssStudentPhotoURL = r.ReadText(index++, "Reporting_SafeguardingStats.StudentPhotoURL", "");
			ssLearnerFullName = r.ReadText(index++, "Reporting_SafeguardingStats.LearnerFullName", "");
			ssSafeguardingLead = r.ReadText(index++, "Reporting_SafeguardingStats.SafeguardingLead", "");
		}
		/// <summary>
		/// Read from database
		/// </summary>
		/// <param name="r"> Data reader</param>
		public void ReadDB(IDataReader r) {
			int index = 0;
			Read(r, ref index);
		}

		/// <summary>
		/// Read from record
		/// </summary>
		/// <param name="r"> Record</param>
		public void ReadIM(STReporting_SafeguardingStatsStructure r) {
			this = r;
		}


		public static bool operator == (STReporting_SafeguardingStatsStructure a, STReporting_SafeguardingStatsStructure b) {
			if (a.ssStudentReference != b.ssStudentReference) return false;
			if (a.ssSafeguardingIssueType != b.ssSafeguardingIssueType) return false;
			if (a.ssGender != b.ssGender) return false;
			if (a.ssAgeBracket != b.ssAgeBracket) return false;
			if (a.ssExternalAgencyReferral != b.ssExternalAgencyReferral) return false;
			if (a.ssStudentPhotoURL != b.ssStudentPhotoURL) return false;
			if (a.ssLearnerFullName != b.ssLearnerFullName) return false;
			if (a.ssSafeguardingLead != b.ssSafeguardingLead) return false;
			return true;
		}

		public static bool operator != (STReporting_SafeguardingStatsStructure a, STReporting_SafeguardingStatsStructure b) {
			return !(a==b);
		}

		public override bool Equals(object o) {
			if (o.GetType() != typeof(STReporting_SafeguardingStatsStructure)) return false;
			return (this == (STReporting_SafeguardingStatsStructure) o);
		}

		public override int GetHashCode() {
			try {
				return base.GetHashCode()
				^ ssStudentReference.GetHashCode()
				^ ssSafeguardingIssueType.GetHashCode()
				^ ssGender.GetHashCode()
				^ ssAgeBracket.GetHashCode()
				^ ssExternalAgencyReferral.GetHashCode()
				^ ssStudentPhotoURL.GetHashCode()
				^ ssLearnerFullName.GetHashCode()
				^ ssSafeguardingLead.GetHashCode()
				;
			} catch {
				return base.GetHashCode();
			}
		}

		public void GetObjectData(SerializationInfo info, StreamingContext context) {
			Type objInfo = this.GetType();
			FieldInfo[] fields;
			fields = objInfo.GetFields(BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public);
			for (int i = 0; i < fields.Length; i++)
			if (fields[i] .FieldType.IsSerializable)
			info.AddValue(fields[i] .Name, fields[i] .GetValue(this));
		}

		public STReporting_SafeguardingStatsStructure(SerializationInfo info, StreamingContext context) {
			OptimizedAttributes = null;
			ssStudentReference = "";
			ssSafeguardingIssueType = "";
			ssGender = "";
			ssAgeBracket = "";
			ssExternalAgencyReferral = "";
			ssStudentPhotoURL = "";
			ssLearnerFullName = "";
			ssSafeguardingLead = "";
			Type objInfo = this.GetType();
			FieldInfo[] fields;
			fields = objInfo.GetFields(BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public);
			if (fields[0] .FieldType.IsSerializable)
			ssStudentReference = (string) info.GetValue(fields[0] .Name, fields[0] .FieldType);
			if (fields[1] .FieldType.IsSerializable)
			ssSafeguardingIssueType = (string) info.GetValue(fields[1] .Name, fields[1] .FieldType);
			if (fields[2] .FieldType.IsSerializable)
			ssGender = (string) info.GetValue(fields[2] .Name, fields[2] .FieldType);
			if (fields[3] .FieldType.IsSerializable)
			ssAgeBracket = (string) info.GetValue(fields[3] .Name, fields[3] .FieldType);
			if (fields[4] .FieldType.IsSerializable)
			ssExternalAgencyReferral = (string) info.GetValue(fields[4] .Name, fields[4] .FieldType);
			if (fields[5] .FieldType.IsSerializable)
			ssStudentPhotoURL = (string) info.GetValue(fields[5] .Name, fields[5] .FieldType);
			if (fields[6] .FieldType.IsSerializable)
			ssLearnerFullName = (string) info.GetValue(fields[6] .Name, fields[6] .FieldType);
			if (fields[7] .FieldType.IsSerializable)
			ssSafeguardingLead = (string) info.GetValue(fields[7] .Name, fields[7] .FieldType);
		}

		public void RecursiveReset() {
		}

		public void InternalRecursiveSave() {
		}


		public STReporting_SafeguardingStatsStructure Duplicate() {
			STReporting_SafeguardingStatsStructure t;
			t.ssStudentReference = this.ssStudentReference;
			t.ssSafeguardingIssueType = this.ssSafeguardingIssueType;
			t.ssGender = this.ssGender;
			t.ssAgeBracket = this.ssAgeBracket;
			t.ssExternalAgencyReferral = this.ssExternalAgencyReferral;
			t.ssStudentPhotoURL = this.ssStudentPhotoURL;
			t.ssLearnerFullName = this.ssLearnerFullName;
			t.ssSafeguardingLead = this.ssSafeguardingLead;
			t.OptimizedAttributes = null;
			return t;
		}

		IRecord IRecord.Duplicate() {
			return Duplicate();
		}

		public void ToXml(Object parent, System.Xml.XmlElement baseElem, String fieldName, int detailLevel) {
			System.Xml.XmlElement recordElem = VarValue.AppendChild(baseElem, "Structure");
			if (fieldName != null) {
				VarValue.AppendAttribute(recordElem, "debug.field", fieldName);
				fieldName = fieldName.ToLowerInvariant();
			}
			if (detailLevel > 0) {
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".StudentReference")) VarValue.AppendAttribute(recordElem, "StudentReference", ssStudentReference, detailLevel, TypeKind.TextEntityReference); else VarValue.AppendOptimizedAttribute(recordElem, "StudentReference");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".SafeguardingIssueType")) VarValue.AppendAttribute(recordElem, "SafeguardingIssueType", ssSafeguardingIssueType, detailLevel, TypeKind.Text); else VarValue.AppendOptimizedAttribute(recordElem, "SafeguardingIssueType");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".Gender")) VarValue.AppendAttribute(recordElem, "Gender", ssGender, detailLevel, TypeKind.Text); else VarValue.AppendOptimizedAttribute(recordElem, "Gender");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".AgeBracket")) VarValue.AppendAttribute(recordElem, "AgeBracket", ssAgeBracket, detailLevel, TypeKind.Text); else VarValue.AppendOptimizedAttribute(recordElem, "AgeBracket");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".ExternalAgencyReferral")) VarValue.AppendAttribute(recordElem, "ExternalAgencyReferral", ssExternalAgencyReferral, detailLevel, TypeKind.Text); else VarValue.AppendOptimizedAttribute(recordElem, "ExternalAgencyReferral");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".StudentPhotoURL")) VarValue.AppendAttribute(recordElem, "StudentPhotoURL", ssStudentPhotoURL, detailLevel, TypeKind.Text); else VarValue.AppendOptimizedAttribute(recordElem, "StudentPhotoURL");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".LearnerFullName")) VarValue.AppendAttribute(recordElem, "LearnerFullName", ssLearnerFullName, detailLevel, TypeKind.Text); else VarValue.AppendOptimizedAttribute(recordElem, "LearnerFullName");
				if (!VarValue.FieldIsOptimized(parent, fieldName + ".SafeguardingLead")) VarValue.AppendAttribute(recordElem, "SafeguardingLead", ssSafeguardingLead, detailLevel, TypeKind.Text); else VarValue.AppendOptimizedAttribute(recordElem, "SafeguardingLead");
			} else {
				VarValue.AppendDeferredEvaluationElement(recordElem);
			}
		}

		public void EvaluateFields(VarValue variable, Object parent, String baseName, String fields) {
			String head = VarValue.GetHead(fields);
			String tail = VarValue.GetTail(fields);
			variable.Found = false;
			if (head == "studentreference") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".StudentReference")) variable.Value = ssStudentReference; else variable.Optimized = true;
			} else if (head == "safeguardingissuetype") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".SafeguardingIssueType")) variable.Value = ssSafeguardingIssueType; else variable.Optimized = true;
			} else if (head == "gender") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".Gender")) variable.Value = ssGender; else variable.Optimized = true;
			} else if (head == "agebracket") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".AgeBracket")) variable.Value = ssAgeBracket; else variable.Optimized = true;
			} else if (head == "externalagencyreferral") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".ExternalAgencyReferral")) variable.Value = ssExternalAgencyReferral; else variable.Optimized = true;
			} else if (head == "studentphotourl") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".StudentPhotoURL")) variable.Value = ssStudentPhotoURL; else variable.Optimized = true;
			} else if (head == "learnerfullname") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".LearnerFullName")) variable.Value = ssLearnerFullName; else variable.Optimized = true;
			} else if (head == "safeguardinglead") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".SafeguardingLead")) variable.Value = ssSafeguardingLead; else variable.Optimized = true;
			}
			if (variable.Found && tail != null) variable.EvaluateFields(this, head, tail);
		}

		public bool ChangedAttributeGet(GlobalObjectKey key) {
			throw new Exception("Method not Supported");
		}

		public bool OptimizedAttributeGet(GlobalObjectKey key) {
			throw new Exception("Method not Supported");
		}

		public object AttributeGet(GlobalObjectKey key) {
			if (key == IdStudentReference) {
				return ssStudentReference;
			} else if (key == IdSafeguardingIssueType) {
				return ssSafeguardingIssueType;
			} else if (key == IdGender) {
				return ssGender;
			} else if (key == IdAgeBracket) {
				return ssAgeBracket;
			} else if (key == IdExternalAgencyReferral) {
				return ssExternalAgencyReferral;
			} else if (key == IdStudentPhotoURL) {
				return ssStudentPhotoURL;
			} else if (key == IdLearnerFullName) {
				return ssLearnerFullName;
			} else if (key == IdSafeguardingLead) {
				return ssSafeguardingLead;
			} else {
				throw new Exception("Invalid key");
			}
		}
		public void FillFromOther(IRecord other) {
			if (other == null) return;
			ssStudentReference = (string) other.AttributeGet(IdStudentReference);
			ssSafeguardingIssueType = (string) other.AttributeGet(IdSafeguardingIssueType);
			ssGender = (string) other.AttributeGet(IdGender);
			ssAgeBracket = (string) other.AttributeGet(IdAgeBracket);
			ssExternalAgencyReferral = (string) other.AttributeGet(IdExternalAgencyReferral);
			ssStudentPhotoURL = (string) other.AttributeGet(IdStudentPhotoURL);
			ssLearnerFullName = (string) other.AttributeGet(IdLearnerFullName);
			ssSafeguardingLead = (string) other.AttributeGet(IdSafeguardingLead);
		}
	} // STReporting_SafeguardingStatsStructure
	/// <summary>
	/// Structure <code>RCReporting_SafeguardingStatsRecord</code>
	/// </summary>
	[Serializable()]
	public partial struct RCReporting_SafeguardingStatsRecord: ISerializable, ITypedRecord<RCReporting_SafeguardingStatsRecord> {
		private static readonly GlobalObjectKey IdReporting_SafeguardingStats = GlobalObjectKey.Parse("2UmDmepsh0WSfJ_D1JexCA*kbcuvDdUeO3ygQFq7ashnA");

		public static void EnsureInitialized() {}
		[System.Xml.Serialization.XmlElement("Reporting_SafeguardingStats")]
		public STReporting_SafeguardingStatsStructure ssSTReporting_SafeguardingStats;


		public static implicit operator STReporting_SafeguardingStatsStructure(RCReporting_SafeguardingStatsRecord r) {
			return r.ssSTReporting_SafeguardingStats;
		}

		public static implicit operator RCReporting_SafeguardingStatsRecord(STReporting_SafeguardingStatsStructure r) {
			RCReporting_SafeguardingStatsRecord res = new RCReporting_SafeguardingStatsRecord(null);
			res.ssSTReporting_SafeguardingStats = r;
			return res;
		}

		public BitArray OptimizedAttributes;

		public RCReporting_SafeguardingStatsRecord(params string[] dummy) {
			OptimizedAttributes = null;
			ssSTReporting_SafeguardingStats = new STReporting_SafeguardingStatsStructure(null);
		}

		public BitArray[] GetDefaultOptimizedValues() {
			BitArray[] all = new BitArray[1];
			all[0] = null;
			return all;
		}

		public BitArray[] AllOptimizedAttributes {
			set {
				if (value == null) {
				} else {
					ssSTReporting_SafeguardingStats.OptimizedAttributes = value[0];
				}
			}
			get {
				BitArray[] all = new BitArray[1];
				all[0] = null;
				return all;
			}
		}

		/// <summary>
		/// Read a record from database
		/// </summary>
		/// <param name="r"> Data base reader</param>
		/// <param name="index"> index</param>
		public void Read(IDataReader r, ref int index) {
			ssSTReporting_SafeguardingStats.Read(r, ref index);
		}
		/// <summary>
		/// Read from database
		/// </summary>
		/// <param name="r"> Data reader</param>
		public void ReadDB(IDataReader r) {
			int index = 0;
			Read(r, ref index);
		}

		/// <summary>
		/// Read from record
		/// </summary>
		/// <param name="r"> Record</param>
		public void ReadIM(RCReporting_SafeguardingStatsRecord r) {
			this = r;
		}


		public static bool operator == (RCReporting_SafeguardingStatsRecord a, RCReporting_SafeguardingStatsRecord b) {
			if (a.ssSTReporting_SafeguardingStats != b.ssSTReporting_SafeguardingStats) return false;
			return true;
		}

		public static bool operator != (RCReporting_SafeguardingStatsRecord a, RCReporting_SafeguardingStatsRecord b) {
			return !(a==b);
		}

		public override bool Equals(object o) {
			if (o.GetType() != typeof(RCReporting_SafeguardingStatsRecord)) return false;
			return (this == (RCReporting_SafeguardingStatsRecord) o);
		}

		public override int GetHashCode() {
			try {
				return base.GetHashCode()
				^ ssSTReporting_SafeguardingStats.GetHashCode()
				;
			} catch {
				return base.GetHashCode();
			}
		}

		public void GetObjectData(SerializationInfo info, StreamingContext context) {
			Type objInfo = this.GetType();
			FieldInfo[] fields;
			fields = objInfo.GetFields(BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public);
			for (int i = 0; i < fields.Length; i++)
			if (fields[i] .FieldType.IsSerializable)
			info.AddValue(fields[i] .Name, fields[i] .GetValue(this));
		}

		public RCReporting_SafeguardingStatsRecord(SerializationInfo info, StreamingContext context) {
			OptimizedAttributes = null;
			ssSTReporting_SafeguardingStats = new STReporting_SafeguardingStatsStructure(null);
			Type objInfo = this.GetType();
			FieldInfo[] fields;
			fields = objInfo.GetFields(BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public);
			if (fields[0] .FieldType.IsSerializable)
			ssSTReporting_SafeguardingStats = (STReporting_SafeguardingStatsStructure) info.GetValue(fields[0] .Name, fields[0] .FieldType);
		}

		public void RecursiveReset() {
			ssSTReporting_SafeguardingStats.RecursiveReset();
		}

		public void InternalRecursiveSave() {
			ssSTReporting_SafeguardingStats.InternalRecursiveSave();
		}


		public RCReporting_SafeguardingStatsRecord Duplicate() {
			RCReporting_SafeguardingStatsRecord t;
			t.ssSTReporting_SafeguardingStats = (STReporting_SafeguardingStatsStructure) this.ssSTReporting_SafeguardingStats.Duplicate();
			t.OptimizedAttributes = null;
			return t;
		}

		IRecord IRecord.Duplicate() {
			return Duplicate();
		}

		public void ToXml(Object parent, System.Xml.XmlElement baseElem, String fieldName, int detailLevel) {
			System.Xml.XmlElement recordElem = VarValue.AppendChild(baseElem, "Record");
			if (fieldName != null) {
				VarValue.AppendAttribute(recordElem, "debug.field", fieldName);
			}
			if (detailLevel > 0) {
				ssSTReporting_SafeguardingStats.ToXml(this, recordElem, "Reporting_SafeguardingStats", detailLevel - 1);
			} else {
				VarValue.AppendDeferredEvaluationElement(recordElem);
			}
		}

		public void EvaluateFields(VarValue variable, Object parent, String baseName, String fields) {
			String head = VarValue.GetHead(fields);
			String tail = VarValue.GetTail(fields);
			variable.Found = false;
			if (head == "reporting_safeguardingstats") {
				if (!VarValue.FieldIsOptimized(parent, baseName + ".Reporting_SafeguardingStats")) variable.Value = ssSTReporting_SafeguardingStats; else variable.Optimized = true;
				variable.SetFieldName("reporting_safeguardingstats");
			}
			if (variable.Found && tail != null) variable.EvaluateFields(this, head, tail);
		}

		public bool ChangedAttributeGet(GlobalObjectKey key) {
			throw new Exception("Method not Supported");
		}

		public bool OptimizedAttributeGet(GlobalObjectKey key) {
			throw new Exception("Method not Supported");
		}

		public object AttributeGet(GlobalObjectKey key) {
			if (key == IdReporting_SafeguardingStats) {
				return ssSTReporting_SafeguardingStats;
			} else {
				throw new Exception("Invalid key");
			}
		}
		public void FillFromOther(IRecord other) {
			if (other == null) return;
			ssSTReporting_SafeguardingStats.FillFromOther((IRecord) other.AttributeGet(IdReporting_SafeguardingStats));
		}
	} // RCReporting_SafeguardingStatsRecord
	/// <summary>
	/// RecordList type <code>RLReporting_SafeguardingStatsRecordList</code> that represents a record list
	///  of <code>Reporting_SafeguardingStats</code>
	/// </summary>
	[Serializable()]
	public partial class RLReporting_SafeguardingStatsRecordList: GenericRecordList<RCReporting_SafeguardingStatsRecord>, IEnumerable, IEnumerator, ISerializable {
		public static void EnsureInitialized() {}

		protected override RCReporting_SafeguardingStatsRecord GetElementDefaultValue() {
			return new RCReporting_SafeguardingStatsRecord("");
		}

		public T[] ToArray<T>(Func<RCReporting_SafeguardingStatsRecord, T> converter) {
			return ToArray(this, converter);
		}

		public static T[] ToArray<T>(RLReporting_SafeguardingStatsRecordList recordlist, Func<RCReporting_SafeguardingStatsRecord, T> converter) {
			T[] result = new T[recordlist.Length];
			recordlist.StartIteration();
			while (!recordlist.Eof) {
				result[recordlist.CurrentRowNumber] = converter(recordlist.CurrentRec);
				recordlist.Advance();
			}
			recordlist.EndIteration();
			return result;
		}

		public static RLReporting_SafeguardingStatsRecordList ToList<T>(T[] array, Func <T, RCReporting_SafeguardingStatsRecord> converter) {
			RLReporting_SafeguardingStatsRecordList result = new RLReporting_SafeguardingStatsRecordList();
			if (array != null) {
				foreach(T item in array) {
					result.Append(converter(item));
				}
			}
			return result;
		}
		/// <summary>
		/// Default Constructor
		/// </summary>
		public RLReporting_SafeguardingStatsRecordList(): base() {
		}

		/// <summary>
		/// Constructor with transaction parameter
		/// </summary>
		/// <param name="trans"> IDbTransaction Parameter</param>
		[Obsolete("Use the Default Constructor and set the Transaction afterwards.")]
		public RLReporting_SafeguardingStatsRecordList(IDbTransaction trans): base(trans) {
		}

		/// <summary>
		/// Constructor with transaction parameter and alternate read method
		/// </summary>
		/// <param name="trans"> IDbTransaction Parameter</param>
		/// <param name="alternateReadDBMethod"> Alternate Read Method</param>
		[Obsolete("Use the Default Constructor and set the Transaction afterwards.")]
		public RLReporting_SafeguardingStatsRecordList(IDbTransaction trans, ReadDBMethodDelegate alternateReadDBMethod): this(trans) {
			this.alternateReadDBMethod = alternateReadDBMethod;
		}

		/// <summary>
		/// Constructor declaration for serialization
		/// </summary>
		/// <param name="info"> SerializationInfo</param>
		/// <param name="context"> StreamingContext</param>
		public RLReporting_SafeguardingStatsRecordList(SerializationInfo info, StreamingContext context): base(info, context) {
		}

		public override BitArray[] GetDefaultOptimizedValues() {
			BitArray[] def = new BitArray[1];
			def[0] = null;
			return def;
		}
		/// <summary>
		/// Create as new list
		/// </summary>
		/// <returns>The new record list</returns>
		protected override OSList<RCReporting_SafeguardingStatsRecord> NewList() {
			return new RLReporting_SafeguardingStatsRecordList();
		}


	} // RLReporting_SafeguardingStatsRecordList
	/// <summary>
	/// RecordList type <code>RLReporting_SafeguardingStatsList</code> that represents a record list of
	///  <code>StudentIdentifier, Text, Text, Text, Text, Text, Text, Text</code>
	/// </summary>
	[Serializable()]
	public partial class RLReporting_SafeguardingStatsList: GenericRecordList<STReporting_SafeguardingStatsStructure>, IEnumerable, IEnumerator, ISerializable {
		public static void EnsureInitialized() {}

		protected override STReporting_SafeguardingStatsStructure GetElementDefaultValue() {
			return new STReporting_SafeguardingStatsStructure("");
		}

		public T[] ToArray<T>(Func<STReporting_SafeguardingStatsStructure, T> converter) {
			return ToArray(this, converter);
		}

		public static T[] ToArray<T>(RLReporting_SafeguardingStatsList recordlist, Func<STReporting_SafeguardingStatsStructure, T> converter) {
			T[] result = new T[recordlist.Length];
			recordlist.StartIteration();
			while (!recordlist.Eof) {
				result[recordlist.CurrentRowNumber] = converter(recordlist.CurrentRec);
				recordlist.Advance();
			}
			recordlist.EndIteration();
			return result;
		}

		public static RLReporting_SafeguardingStatsList ToList<T>(T[] array, Func <T, STReporting_SafeguardingStatsStructure> converter) {
			RLReporting_SafeguardingStatsList result = new RLReporting_SafeguardingStatsList();
			if (array != null) {
				foreach(T item in array) {
					result.Append(converter(item));
				}
			}
			return result;
		}
		/// <summary>
		/// Default Constructor
		/// </summary>
		public RLReporting_SafeguardingStatsList(): base() {
		}

		/// <summary>
		/// Constructor with transaction parameter
		/// </summary>
		/// <param name="trans"> IDbTransaction Parameter</param>
		[Obsolete("Use the Default Constructor and set the Transaction afterwards.")]
		public RLReporting_SafeguardingStatsList(IDbTransaction trans): base(trans) {
		}

		/// <summary>
		/// Constructor with transaction parameter and alternate read method
		/// </summary>
		/// <param name="trans"> IDbTransaction Parameter</param>
		/// <param name="alternateReadDBMethod"> Alternate Read Method</param>
		[Obsolete("Use the Default Constructor and set the Transaction afterwards.")]
		public RLReporting_SafeguardingStatsList(IDbTransaction trans, ReadDBMethodDelegate alternateReadDBMethod): this(trans) {
			this.alternateReadDBMethod = alternateReadDBMethod;
		}

		/// <summary>
		/// Constructor declaration for serialization
		/// </summary>
		/// <param name="info"> SerializationInfo</param>
		/// <param name="context"> StreamingContext</param>
		public RLReporting_SafeguardingStatsList(SerializationInfo info, StreamingContext context): base(info, context) {
		}

		public override BitArray[] GetDefaultOptimizedValues() {
			BitArray[] def = new BitArray[0];
			return def;
		}
		/// <summary>
		/// Create as new list
		/// </summary>
		/// <returns>The new record list</returns>
		protected override OSList<STReporting_SafeguardingStatsStructure> NewList() {
			return new RLReporting_SafeguardingStatsList();
		}


	} // RLReporting_SafeguardingStatsList
}

namespace ssCaseConferencing {
	[XmlType("Reporting_SafeguardingStats")]
	public class WORCReporting_SafeguardingStatsRecord {
		[System.Xml.Serialization.XmlElement("StudentReference")]
		public string varWSStudentReference;

		[System.Xml.Serialization.XmlElement("SafeguardingIssueType")]
		public string varWSSafeguardingIssueType;

		[System.Xml.Serialization.XmlElement("Gender")]
		public string varWSGender;

		[System.Xml.Serialization.XmlElement("AgeBracket")]
		public string varWSAgeBracket;

		[System.Xml.Serialization.XmlElement("ExternalAgencyReferral")]
		public string varWSExternalAgencyReferral;

		[System.Xml.Serialization.XmlElement("StudentPhotoURL")]
		public string varWSStudentPhotoURL;

		[System.Xml.Serialization.XmlElement("LearnerFullName")]
		public string varWSLearnerFullName;

		[System.Xml.Serialization.XmlElement("SafeguardingLead")]
		public string varWSSafeguardingLead;

		public WORCReporting_SafeguardingStatsRecord() {
			varWSStudentReference = (string) "";
			varWSSafeguardingIssueType = (string) "";
			varWSGender = (string) "";
			varWSAgeBracket = (string) "";
			varWSExternalAgencyReferral = (string) "";
			varWSStudentPhotoURL = (string) "";
			varWSLearnerFullName = (string) "";
			varWSSafeguardingLead = (string) "";
		}

		public WORCReporting_SafeguardingStatsRecord(STReporting_SafeguardingStatsStructure r) {
			varWSStudentReference = BaseAppUtils.RemoveControlChars(r.ssStudentReference);
			varWSSafeguardingIssueType = BaseAppUtils.RemoveControlChars(r.ssSafeguardingIssueType);
			varWSGender = BaseAppUtils.RemoveControlChars(r.ssGender);
			varWSAgeBracket = BaseAppUtils.RemoveControlChars(r.ssAgeBracket);
			varWSExternalAgencyReferral = BaseAppUtils.RemoveControlChars(r.ssExternalAgencyReferral);
			varWSStudentPhotoURL = BaseAppUtils.RemoveControlChars(r.ssStudentPhotoURL);
			varWSLearnerFullName = BaseAppUtils.RemoveControlChars(r.ssLearnerFullName);
			varWSSafeguardingLead = BaseAppUtils.RemoveControlChars(r.ssSafeguardingLead);
		}

		public static RLReporting_SafeguardingStatsList ToRecordList(WORCReporting_SafeguardingStatsRecord[] array) {
			RLReporting_SafeguardingStatsList rl = new RLReporting_SafeguardingStatsList();
			if (array != null) {
				foreach(WORCReporting_SafeguardingStatsRecord val in array) {
					rl.Append(val);
				}
			}
			return rl;
		}

		public static WORCReporting_SafeguardingStatsRecord[] FromRecordList(RLReporting_SafeguardingStatsList rl) {
			WORCReporting_SafeguardingStatsRecord[] array = new WORCReporting_SafeguardingStatsRecord[rl == null ? 0: rl.Length];
			for (int i = 0; i < array.Length; i++) {
				array[i] = rl.Data[i];
			}
			return array;
		}
	}
}

namespace ssCaseConferencing {
	partial struct RCReporting_SafeguardingStatsRecord {
		public static implicit operator WORCReporting_SafeguardingStatsRecord(RCReporting_SafeguardingStatsRecord r) {
			return new WORCReporting_SafeguardingStatsRecord(r.ssSTReporting_SafeguardingStats);
		}

		public static implicit operator RCReporting_SafeguardingStatsRecord(WORCReporting_SafeguardingStatsRecord w) {
			RCReporting_SafeguardingStatsRecord r = new RCReporting_SafeguardingStatsRecord("");
			if (w != null) {
				r.ssSTReporting_SafeguardingStats = w;
			}
			return r;
		}

	}

	partial struct STReporting_SafeguardingStatsStructure {
		public static implicit operator WORCReporting_SafeguardingStatsRecord(STReporting_SafeguardingStatsStructure r) {
			return new WORCReporting_SafeguardingStatsRecord(r);
		}

		public static implicit operator STReporting_SafeguardingStatsStructure(WORCReporting_SafeguardingStatsRecord w) {
			STReporting_SafeguardingStatsStructure r = new STReporting_SafeguardingStatsStructure("");
			if (w != null) {
				r.ssStudentReference = (string) w.varWSStudentReference;
				r.ssSafeguardingIssueType = ((string) w.varWSSafeguardingIssueType ?? "");
				r.ssGender = ((string) w.varWSGender ?? "");
				r.ssAgeBracket = ((string) w.varWSAgeBracket ?? "");
				r.ssExternalAgencyReferral = ((string) w.varWSExternalAgencyReferral ?? "");
				r.ssStudentPhotoURL = ((string) w.varWSStudentPhotoURL ?? "");
				r.ssLearnerFullName = ((string) w.varWSLearnerFullName ?? "");
				r.ssSafeguardingLead = ((string) w.varWSSafeguardingLead ?? "");
			}
			return r;
		}

	}
}


namespace ssCaseConferencing {
	[Serializable()]
	public partial class WORLReporting_SafeguardingStatsRecordList {
		public WORCReporting_SafeguardingStatsRecord[] Array;


		public WORLReporting_SafeguardingStatsRecordList(WORCReporting_SafeguardingStatsRecord[] r) {
			if (r == null)
			Array = new WORCReporting_SafeguardingStatsRecord[0];
			else
			Array = r;
		}
		public WORLReporting_SafeguardingStatsRecordList() {
			Array = new WORCReporting_SafeguardingStatsRecord[0];
		}

		public WORLReporting_SafeguardingStatsRecordList(RLReporting_SafeguardingStatsRecordList rl) {
			rl=(RLReporting_SafeguardingStatsRecordList) rl.Duplicate();
			Array = new WORCReporting_SafeguardingStatsRecord[rl.Length];
			while (!rl.Eof) {
				Array[rl.CurrentRowNumber] = new WORCReporting_SafeguardingStatsRecord(rl.CurrentRec);
				rl.Advance();
			}
		}

	}
}

namespace ssCaseConferencing {
	partial class RLReporting_SafeguardingStatsRecordList {
		public static implicit operator RLReporting_SafeguardingStatsRecordList(WORCReporting_SafeguardingStatsRecord[] array) {
			RLReporting_SafeguardingStatsRecordList rl = new RLReporting_SafeguardingStatsRecordList();
			if (array != null) {
				foreach(WORCReporting_SafeguardingStatsRecord val in array) {
					rl.Append((RCReporting_SafeguardingStatsRecord) val);
				}
			}
			return rl;
		}
		public static implicit operator WORCReporting_SafeguardingStatsRecord[](RLReporting_SafeguardingStatsRecordList rl) {
			WORCReporting_SafeguardingStatsRecord[] array = new WORCReporting_SafeguardingStatsRecord[rl == null ? 0: rl.Length];
			for (int i = 0; i < array.Length; i++) {
				array[i] = (RCReporting_SafeguardingStatsRecord) rl.Data[i];
			}
			return array;
		}
	}
}

namespace ssCaseConferencing {
	partial class WORLReporting_SafeguardingStatsRecordList {
		public static implicit operator RLReporting_SafeguardingStatsRecordList(WORLReporting_SafeguardingStatsRecordList w) {
			return w.Array;
		}
		public static implicit operator WORLReporting_SafeguardingStatsRecordList(RLReporting_SafeguardingStatsRecordList rl) {
			return new WORLReporting_SafeguardingStatsRecordList(rl);
		}
		public static implicit operator WORCReporting_SafeguardingStatsRecord[](WORLReporting_SafeguardingStatsRecordList w) {
			if (w != null) {
				return w.Array;
			}
			return null;
		}
		public static implicit operator WORLReporting_SafeguardingStatsRecordList(WORCReporting_SafeguardingStatsRecord[] array) {
			return new WORLReporting_SafeguardingStatsRecordList(array);
		}
	}
}

namespace ssCaseConferencing {
	[Serializable()]
	public partial class WORLReporting_SafeguardingStatsList {
		public WORCReporting_SafeguardingStatsRecord[] Array;


		public WORLReporting_SafeguardingStatsList(WORCReporting_SafeguardingStatsRecord[] r) {
			if (r == null)
			Array = new WORCReporting_SafeguardingStatsRecord[0];
			else
			Array = r;
		}
		public WORLReporting_SafeguardingStatsList() {
			Array = new WORCReporting_SafeguardingStatsRecord[0];
		}

		public WORLReporting_SafeguardingStatsList(RLReporting_SafeguardingStatsList rl) {
			rl=(RLReporting_SafeguardingStatsList) rl.Duplicate();
			Array = new WORCReporting_SafeguardingStatsRecord[rl.Length];
			while (!rl.Eof) {
				Array[rl.CurrentRowNumber] = rl.CurrentRec.Duplicate();
				rl.Advance();
			}
		}

	}
}

namespace ssCaseConferencing {
	partial class RLReporting_SafeguardingStatsList {
		public static implicit operator RLReporting_SafeguardingStatsList(WORCReporting_SafeguardingStatsRecord[] array) {
			RLReporting_SafeguardingStatsList rl = new RLReporting_SafeguardingStatsList();
			if (array != null) {
				foreach(WORCReporting_SafeguardingStatsRecord val in array) {
					rl.Append((STReporting_SafeguardingStatsStructure) val);
				}
			}
			return rl;
		}
		public static implicit operator WORCReporting_SafeguardingStatsRecord[](RLReporting_SafeguardingStatsList rl) {
			WORCReporting_SafeguardingStatsRecord[] array = new WORCReporting_SafeguardingStatsRecord[rl == null ? 0: rl.Length];
			for (int i = 0; i < array.Length; i++) {
				array[i] = (STReporting_SafeguardingStatsStructure) rl.Data[i];
			}
			return array;
		}
	}
}

namespace ssCaseConferencing {
	partial class WORLReporting_SafeguardingStatsList {
		public static implicit operator RLReporting_SafeguardingStatsList(WORLReporting_SafeguardingStatsList w) {
			return w.Array;
		}
		public static implicit operator WORLReporting_SafeguardingStatsList(RLReporting_SafeguardingStatsList rl) {
			return new WORLReporting_SafeguardingStatsList(rl);
		}
		public static implicit operator WORCReporting_SafeguardingStatsRecord[](WORLReporting_SafeguardingStatsList w) {
			if (w != null) {
				return w.Array;
			}
			return null;
		}
		public static implicit operator WORLReporting_SafeguardingStatsList(WORCReporting_SafeguardingStatsRecord[] array) {
			return new WORLReporting_SafeguardingStatsList(array);
		}
	}
}

