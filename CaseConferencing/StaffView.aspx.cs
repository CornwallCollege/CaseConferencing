/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.IO;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Runtime.Serialization;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Web.Caching;
using System.Text;
using System.Resources;

namespace ssCaseConferencing.Flows.FlowStaffView {

	public class ScrnStaffView: OSPageViewStateCompressed, IWebScreen, INegotiateTabIndexes, IBookmarkableURL {


		public ScrnStaffView(): base(CaseConferencing_Properties.QuirksMode) {
		}


		/// <summary>
		/// Screen Input Parameter inParamCourseCode. Description:
		/// </summary>
		public string inParamCourseCode = "";
		/// <summary>
		/// Screen Input Parameter inParamSessionID. Description:
		/// </summary>
		public int inParamSessionID = 0;
		/// <summary>
		/// Variable <code>varLctop</code> that represents the Service Studio local variable <code>top</code>
		///  <p>Description: </p>
		/// </summary>
		decimal varLctop = 0.0M;

		/// <summary>
		/// Variable <code>varLcleft</code> that represents the Service Studio local variable <code>left</code>
		///  <p>Description: </p>
		/// </summary>
		decimal varLcleft = 0.0M;

		/// <summary>
		/// Variable <code>varLcshow</code> that represents the Service Studio local variable <code>show</code>
		///  <p>Description: </p>
		/// </summary>
		bool varLcshow = false;

		/// <summary>
		/// Variable <code>varLccurrentrow_popup</code> that represents the Service Studio local variable
		///  <code>currentrow_popup</code> <p>Description: </p>
		/// </summary>
		int varLccurrentrow_popup = 0;

		/// <summary>
		/// Variable <code>varLccurrentcategoryid</code> that represents the Service Studio local variable
		///  <code>currentcategoryid</code> <p>Description: </p>
		/// </summary>
		int varLccurrentcategoryid = 0;

		/// <summary>
		/// Variable <code>varLctooltip</code> that represents the Service Studio local variable
		///  <code>tooltip</code> <p>Description: </p>
		/// </summary>
		string varLctooltip = "";

		/// <summary>
		/// Variable <code>varLcEnrolmentsSplit</code> that represents the Service Studio local variable
		///  <code>EnrolmentsSplit</code> <p>Description: </p>
		/// </summary>
		bool varLcEnrolmentsSplit = false;

		/// <summary>
		/// Variable <code>varLcActiveEnrolments</code> that represents the Service Studio local variable
		///  <code>ActiveEnrolments</code> <p>Description: </p>
		/// </summary>
		RLStaffViewRecordRecordList varLcActiveEnrolments = new RLStaffViewRecordRecordList();

		/// <summary>
		/// Variable <code>varLcWithdrawnEnrolments</code> that represents the Service Studio local variable
		///  <code>WithdrawnEnrolments</code> <p>Description: </p>
		/// </summary>
		RLStaffViewRecordRecordList varLcWithdrawnEnrolments = new RLStaffViewRecordRecordList();

		/// <summary>
		/// Variable <code>varLcCompletedEnrolments</code> that represents the Service Studio local variable
		///  <code>CompletedEnrolments</code> <p>Description: </p>
		/// </summary>
		RLStaffViewRecordRecordList varLcCompletedEnrolments = new RLStaffViewRecordRecordList();

		/// <summary>
		/// Variable <code>varLcTransferredEnrolments</code> that represents the Service Studio local variable
		///  <code>TransferredEnrolments</code> <p>Description: </p>
		/// </summary>
		RLStaffViewRecordRecordList varLcTransferredEnrolments = new RLStaffViewRecordRecordList();

		/// <summary>
		/// Variable <code>varLcBlankStaffViewRecordList</code> that represents the Service Studio local
		///  variable <code>BlankStaffViewRecordList</code> <p>Description: </p>
		/// </summary>
		RLStaffViewRecordRecordList varLcBlankStaffViewRecordList = new RLStaffViewRecordRecordList();

		/// <summary>
		/// Variable ThemeProvider_wt_WebBlockInstance302
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main ThemeProvider_wt_WebBlockInstance302;
		/// <summary>
		/// Variable "True" if the Widget wt_If498
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If498T;

		/// <summary>
		/// Variable "True" if the Widget wt_If498
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If498F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container11;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container215;
		/// <summary>
		/// Variable ThemeProvider_wtBreadcrumb
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkBreadCrumb ThemeProvider_wtBreadcrumb;
		/// <summary>
		/// Variable (wt_Link303) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link303;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container550;
		/// <summary>
		/// Variable (wt_Link401) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link401;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container180;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container418;
		protected OutSystems.HubEdition.WebWidgets.Container wtStaffViewHeader;
		protected OutSystems.HubEdition.WebWidgets.Container wtListHeader;
		protected OutSystems.HubEdition.WebWidgets.Container wtIconFilter;
		protected OutSystems.HubEdition.WebWidgets.Container wtIconFilter2;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapper_Favorite;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapper_Filter;
		/// <summary>
		/// Variable "True" if the Widget wt_If525
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If525T;

		/// <summary>
		/// Variable "True" if the Widget wt_If525
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If525F;
		/// <summary>
		/// Variable (wt_Link491) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link491;
		/// <summary>
		/// Variable (wt_Link61) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link61;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container222;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container410;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container217;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container166;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container536;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container476;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container284;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container337;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container207;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container126;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container18;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container371;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container462;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container465;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container321;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container57;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container375;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container82;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container10;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container412;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container511;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container334;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container434;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container214;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container402;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container322;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container332;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container377;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container43;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container216;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container285;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container74;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container46;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_ComboBox490ValidatorRequired;
		protected SelectRtWidget Rt_wt_ComboBox490 = new SelectRtWidget();
		RLTimetabledClassesDropdownRecordList Rt_wt_ComboBox490_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container433;
		/// <summary>
		/// Variable "True" if the Widget wtWrapperContent
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wtWrapperContentT;

		/// <summary>
		/// Variable "True" if the Widget wtWrapperContent
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wtWrapperContentF;
		protected OutSystems.HubEdition.WebWidgets.Container wtAllLearners;
		protected OutSystems.HubEdition.WebWidgets.Container wtStaffViewNormal;
		protected OutSystems.HubEdition.WebWidgets.Container wtActiveEnrolmentsWrapper;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container102;
		private RLStaffViewRecordRecordList _ssActiveEnrolmentsListList = new RLStaffViewRecordRecordList();
		public RLStaffViewRecordRecordList ssActiveEnrolmentsListList {
			get {
				return _ssActiveEnrolmentsListList; 
			}
			set {
				_ssActiveEnrolmentsListList = value;
				wtActiveEnrolmentsList.DataSource = value;
				ssActiveEnrolmentsListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtActiveEnrolmentsList;
		public ArrayList wtActiveEnrolmentsList_storage = new ArrayList();
		protected bool ssActiveEnrolmentsListList_notUsedYet = true;
		protected bool ssActiveEnrolmentsListListDoDataBind;
		protected bool ssActiveEnrolmentsListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wtLineWrapper;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentFavourite;
		/// <summary>
		/// Variable "True" if the Widget wt_If15
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If15T;

		/// <summary>
		/// Variable "True" if the Widget wt_If15
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If15F;
		/// <summary>
		/// Variable "True" if the Widget wt_If409
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If409T;

		/// <summary>
		/// Variable "True" if the Widget wt_If409
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If409F;
		/// <summary>
		/// Variable (wt_Link199) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link199;
		/// <summary>
		/// Variable (wt_Link262) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link262;
		/// <summary>
		/// Variable "True" if the Widget wt_If281
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If281T;

		/// <summary>
		/// Variable "True" if the Widget wt_If281
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If281F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container436;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container158;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentRAG;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container522;
		/// <summary>
		/// Variable "True" if the Widget wt_If541
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If541T;

		/// <summary>
		/// Variable "True" if the Widget wt_If541
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If541F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container372;
		protected OutSystems.HubEdition.WebWidgets.Container wtRAGStudentWrapper;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapStudentLine;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentPhotoWrapper;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container235;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container519;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container55;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container170;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperIconNotes;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container404;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container31;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container311;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container254;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container220;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container331;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container52;
		protected OutSystems.HubEdition.WebWidgets.Container wtIndicatorColumn_Voc;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container530;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container470;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container90;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container174;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container405;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container526;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container422;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container348;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container406;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container552;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container395;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container240;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperIcon3;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container260;
		/// <summary>
		/// Variable "True" if the Widget wt_If450
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If450T;

		/// <summary>
		/// Variable "True" if the Widget wt_If450
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If450F;
		/// <summary>
		/// Variable "True" if the Widget wt_If294
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If294T;

		/// <summary>
		/// Variable "True" if the Widget wt_If294
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If294F;
		/// <summary>
		/// Variable "True" if the Widget wt_If110
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If110T;

		/// <summary>
		/// Variable "True" if the Widget wt_If110
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If110F;
		/// <summary>
		/// Variable "True" if the Widget wt_If556
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If556T;

		/// <summary>
		/// Variable "True" if the Widget wt_If556
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If556F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container133;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperIcon2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container171;
		/// <summary>
		/// Variable "True" if the Widget wt_If167
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If167T;

		/// <summary>
		/// Variable "True" if the Widget wt_If167
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If167F;
		/// <summary>
		/// Variable "True" if the Widget wt_If390
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If390T;

		/// <summary>
		/// Variable "True" if the Widget wt_If390
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If390F;
		/// <summary>
		/// Variable "True" if the Widget wt_If430
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If430T;

		/// <summary>
		/// Variable "True" if the Widget wt_If430
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If430F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container449;
		protected OutSystems.HubEdition.WebWidgets.Container wtWithdrawnEnrolmentsWrapper;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container177;
		private RLStaffViewRecordRecordList _ssWithdrawnEnrolmentsListList = new RLStaffViewRecordRecordList();
		public RLStaffViewRecordRecordList ssWithdrawnEnrolmentsListList {
			get {
				return _ssWithdrawnEnrolmentsListList; 
			}
			set {
				_ssWithdrawnEnrolmentsListList = value;
				wtWithdrawnEnrolmentsList.DataSource = value;
				ssWithdrawnEnrolmentsListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtWithdrawnEnrolmentsList;
		public ArrayList wtWithdrawnEnrolmentsList_storage = new ArrayList();
		protected bool ssWithdrawnEnrolmentsListList_notUsedYet = true;
		protected bool ssWithdrawnEnrolmentsListListDoDataBind;
		protected bool ssWithdrawnEnrolmentsListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wtLineWrapper2;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentFavourite2;
		/// <summary>
		/// Variable "True" if the Widget wt_If374
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If374T;

		/// <summary>
		/// Variable "True" if the Widget wt_If374
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If374F;
		/// <summary>
		/// Variable (wt_Link365) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link365;
		/// <summary>
		/// Variable (wt_Link327) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link327;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentRAG2;
		protected OutSystems.HubEdition.WebWidgets.Container wtRAGStudentWrapper2;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapStudentLine2;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentPhotoWrapper2;
		/// <summary>
		/// Variable (wt_Link256) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link256;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container175;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container349;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container237;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container345;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperIcon4;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container443;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container278;
		/// <summary>
		/// Variable (wt_Link236) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link236;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container416;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container487;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container188;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container68;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container129;
		protected OutSystems.HubEdition.WebWidgets.Container wtIndicatorColumn_Voc2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container543;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container318;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container70;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container279;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container5;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container232;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container211;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container23;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container228;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container532;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container456;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container366;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperIcon5;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container275;
		/// <summary>
		/// Variable "True" if the Widget wt_If42
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If42T;

		/// <summary>
		/// Variable "True" if the Widget wt_If42
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If42F;
		/// <summary>
		/// Variable "True" if the Widget wt_If265
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If265T;

		/// <summary>
		/// Variable "True" if the Widget wt_If265
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If265F;
		/// <summary>
		/// Variable "True" if the Widget wt_If329
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If329T;

		/// <summary>
		/// Variable "True" if the Widget wt_If329
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If329F;
		/// <summary>
		/// Variable "True" if the Widget wt_If72
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If72T;

		/// <summary>
		/// Variable "True" if the Widget wt_If72
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If72F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container291;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperIcon6;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container358;
		/// <summary>
		/// Variable "True" if the Widget wt_If343
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If343T;

		/// <summary>
		/// Variable "True" if the Widget wt_If343
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If343F;
		/// <summary>
		/// Variable "True" if the Widget wt_If382
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If382T;

		/// <summary>
		/// Variable "True" if the Widget wt_If382
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If382F;
		/// <summary>
		/// Variable "True" if the Widget wt_If393
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If393T;

		/// <summary>
		/// Variable "True" if the Widget wt_If393
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If393F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container159;
		protected OutSystems.HubEdition.WebWidgets.Container wtCompletedEnrolmentsWrapper;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container347;
		private RLStaffViewRecordRecordList _ssCompletedEnrolmentsListList = new RLStaffViewRecordRecordList();
		public RLStaffViewRecordRecordList ssCompletedEnrolmentsListList {
			get {
				return _ssCompletedEnrolmentsListList; 
			}
			set {
				_ssCompletedEnrolmentsListList = value;
				wtCompletedEnrolmentsList.DataSource = value;
				ssCompletedEnrolmentsListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtCompletedEnrolmentsList;
		public ArrayList wtCompletedEnrolmentsList_storage = new ArrayList();
		protected bool ssCompletedEnrolmentsListList_notUsedYet = true;
		protected bool ssCompletedEnrolmentsListListDoDataBind;
		protected bool ssCompletedEnrolmentsListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wtLineWrapper3;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentFavourite3;
		/// <summary>
		/// Variable "True" if the Widget wt_If508
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If508T;

		/// <summary>
		/// Variable "True" if the Widget wt_If508
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If508F;
		/// <summary>
		/// Variable (wt_Link474) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link474;
		/// <summary>
		/// Variable (wt_Link554) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link554;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentRAG3;
		protected OutSystems.HubEdition.WebWidgets.Container wtRAGStudentWrapper3;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapStudentLine3;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentPhotoWrapper3;
		/// <summary>
		/// Variable (wt_Link238) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link238;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container49;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container517;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container223;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container50;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperIcon7;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container104;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container391;
		/// <summary>
		/// Variable (wt_Link435) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link435;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container117;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container361;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container427;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container355;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container425;
		protected OutSystems.HubEdition.WebWidgets.Container wtIndicatorColumn_Voc3;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container424;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container323;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container359;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container121;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container221;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container445;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container339;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container463;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container157;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container524;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container521;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container271;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperIcon8;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container346;
		/// <summary>
		/// Variable "True" if the Widget wt_If25
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If25T;

		/// <summary>
		/// Variable "True" if the Widget wt_If25
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If25F;
		/// <summary>
		/// Variable "True" if the Widget wt_If439
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If439T;

		/// <summary>
		/// Variable "True" if the Widget wt_If439
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If439F;
		/// <summary>
		/// Variable "True" if the Widget wt_If289
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If289T;

		/// <summary>
		/// Variable "True" if the Widget wt_If289
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If289F;
		/// <summary>
		/// Variable "True" if the Widget wt_If239
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If239T;

		/// <summary>
		/// Variable "True" if the Widget wt_If239
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If239F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container441;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperIcon9;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container288;
		/// <summary>
		/// Variable "True" if the Widget wt_If86
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If86T;

		/// <summary>
		/// Variable "True" if the Widget wt_If86
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If86F;
		/// <summary>
		/// Variable "True" if the Widget wt_If249
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If249T;

		/// <summary>
		/// Variable "True" if the Widget wt_If249
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If249F;
		/// <summary>
		/// Variable "True" if the Widget wt_If183
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If183T;

		/// <summary>
		/// Variable "True" if the Widget wt_If183
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If183F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container502;
		protected OutSystems.HubEdition.WebWidgets.Container wtTransferredEnrolmentsWrapper;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container99;
		private RLStaffViewRecordRecordList _ssTransferredEnrolmentsListList = new RLStaffViewRecordRecordList();
		public RLStaffViewRecordRecordList ssTransferredEnrolmentsListList {
			get {
				return _ssTransferredEnrolmentsListList; 
			}
			set {
				_ssTransferredEnrolmentsListList = value;
				wtTransferredEnrolmentsList.DataSource = value;
				ssTransferredEnrolmentsListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtTransferredEnrolmentsList;
		public ArrayList wtTransferredEnrolmentsList_storage = new ArrayList();
		protected bool ssTransferredEnrolmentsListList_notUsedYet = true;
		protected bool ssTransferredEnrolmentsListListDoDataBind;
		protected bool ssTransferredEnrolmentsListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wtLineWrapper4;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentFavourite4;
		/// <summary>
		/// Variable "True" if the Widget wt_If399
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If399T;

		/// <summary>
		/// Variable "True" if the Widget wt_If399
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If399F;
		/// <summary>
		/// Variable (wt_Link429) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link429;
		/// <summary>
		/// Variable (wt_Link548) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link548;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentRAG4;
		protected OutSystems.HubEdition.WebWidgets.Container wtRAGStudentWrapper4;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapStudentLine4;
		protected OutSystems.HubEdition.WebWidgets.Container wtStudentPhotoWrapper4;
		/// <summary>
		/// Variable (wt_Link454) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link454;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container33;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container36;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container392;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container78;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperIcon10;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container181;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container308;
		/// <summary>
		/// Variable (wt_Link533) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link533;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container30;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container130;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container94;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container276;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container557;
		protected OutSystems.HubEdition.WebWidgets.Container wtIndicatorColumn_Voc4;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container324;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container457;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container58;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container160;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container363;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container317;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container558;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container455;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container65;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container144;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container17;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container437;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperIcon11;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container367;
		/// <summary>
		/// Variable "True" if the Widget wt_If298
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If298T;

		/// <summary>
		/// Variable "True" if the Widget wt_If298
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If298F;
		/// <summary>
		/// Variable "True" if the Widget wt_If342
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If342T;

		/// <summary>
		/// Variable "True" if the Widget wt_If342
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If342F;
		/// <summary>
		/// Variable "True" if the Widget wt_If101
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If101T;

		/// <summary>
		/// Variable "True" if the Widget wt_If101
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If101F;
		/// <summary>
		/// Variable "True" if the Widget wt_If513
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If513T;

		/// <summary>
		/// Variable "True" if the Widget wt_If513
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If513F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container155;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperIcon12;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container21;
		/// <summary>
		/// Variable "True" if the Widget wt_If250
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If250T;

		/// <summary>
		/// Variable "True" if the Widget wt_If250
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If250F;
		/// <summary>
		/// Variable "True" if the Widget wt_If116
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If116T;

		/// <summary>
		/// Variable "True" if the Widget wt_If116
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If116F;
		/// <summary>
		/// Variable "True" if the Widget wt_If483
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If483T;

		/// <summary>
		/// Variable "True" if the Widget wt_If483
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If483F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container142;
		protected OutSystems.HubEdition.WebWidgets.Container wtMoreRowsWrapper;
		/// <summary>
		/// Variable "True" if the Widget wt_If201
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If201T;

		/// <summary>
		/// Variable "True" if the Widget wt_If201
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If201F;
		protected OutSystems.HubEdition.WebWidgets.Container wtMoreRow;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container20;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container251;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtileftValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtileftValidatorType;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtitopValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtitopValidatorType;
		/// <summary>
		/// Variable (wtButtonInvisibleSearch) with Button component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.Button wtButtonInvisibleSearch;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container295;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container277;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container107;


		protected override void GetBlocksCss(TextWriter writer, bool inline, HashSet<string> visited) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate.GetCss(writer, inline, visited);
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main.GetCss(writer, inline, visited);
			proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkBreadCrumb.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCaseConference.WBlkCCSessionActionsFloatingPanel.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkHeaderFilter.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffViewListIcons.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkInfiniteScroll.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_StudentRAG.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_Notes.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_CategoryRAG.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_CauseOfConcern.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_Rewards.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkPopUp_Tootip.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkjQuerySelectric.GetCss(writer, inline, visited);

		}

		protected override void GetWidgetsCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}







		protected override string GetInlineStyleSheetInclude() {
			throw new InvalidOperationException();
		}





		protected override bool PageAllowsCallbacks() {
			return true;
		}


		protected string GetRequestInfoJavaScript() {
			return GetRequestInfoJavaScript("j8jDU90qoUqC4OOZCvawmQ", "StaffView");
		}

		protected string GetVisitCode() {
			SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
			if (session["osIsNewVisit"] != null && ((bool) session["osIsNewVisit"])
			// && !NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)
			&& RuntimePlatformUtils.IsValidRequestForVisit()) {
				return "<script type=\"text/javascript\">outsystems.internal.$.get(\"/CaseConferencing/_status.aspx\")</script>";
			}
			return "";
		}

		public string GetCallbackDebug() {
			if (Request.HttpMethod == "GET" && Request.QueryString["__CALLBACK_DEBUG"] != null && Request.QueryString["__CALLBACK_DEBUG"] != "") {
				if (Request.QueryString["__CALLBACK_DEBUG"] == OutSystems.HubEdition.RuntimePlatform.AppInfo.GetParameter(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Callback_Debug_Information_Key)) {
					return OutSystems.HubEdition.RuntimePlatform.AppInfo.GetAppInfo().GetCallbackDebugInformation();
				}
			}
			return "";
		}

		protected string GetHeadTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadTop, "j8jDU90qoUqC4OOZCvawmQ", "StaffView");
		}

		protected string GetHeadBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadBottom, "j8jDU90qoUqC4OOZCvawmQ", "StaffView");
		}

		protected string GetBodyTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyTop, "j8jDU90qoUqC4OOZCvawmQ", "StaffView");
		}

		protected string GetBodyBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyBottom, "j8jDU90qoUqC4OOZCvawmQ", "StaffView");
		}

		HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();



		static ScrnStaffView() {
		}


		RLTextRecordList resString_Split_ByComma_outParamList = new RLTextRecordList();
		string resSplitDomainAndUser_outParamDomain = "";
		string resSplitDomainAndUser_outParamUsername = "";
		RLClusterCCSessionRecordList queryResGetCCSessionById_outParamList = new RLClusterCCSessionRecordList();
		int queryResGetCCSessionById_outParamCount = 0;
		RLTimetabledClassesDropdownRecordList queryResGetMyTimetabledClasses_outParamList = new RLTimetabledClassesDropdownRecordList();
		int queryResGetMyTimetabledClasses_outParamCount = 0;
		Actions.lcoGetScrollToJavascript resGetScrollToJavascript = new Actions.lcoGetScrollToJavascript(); RCAcademicYear2Record resGetAcademicYearValues2_outParamAcademicYear = new RCAcademicYear2Record(null);
		RLGroupRecordList queryResGetGroups_outParamList = new RLGroupRecordList();
		int queryResGetGroups_outParamCount = 0;
		RLStudent_GroupRecordList queryResGetStudentGroups_outParamList = new RLStudent_GroupRecordList();
		int queryResGetStudentGroups_outParamCount = 0;
		int resUserCheck_outParamPermissionType = 0;
		Actions.lcoSplitEnrolments resSplitEnrolments2 = new Actions.lcoSplitEnrolments(); RLTextRecordList resStringSplit_ByCrossBar_outParamList = new RLTextRecordList();
		RLStaffViewRecordRecordList queryResGetMyStudents_outParamList = new RLStaffViewRecordRecordList();
		int queryResGetMyStudents_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// UserCheck
			Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("GROqSKyUPUq3TwhHOucRIg")).ssId, out resUserCheck_outParamPermissionType);
			if ((resUserCheck_outParamPermissionType==BuiltInFunction.NullIdentifier())) {
				// Destination = ExternalURL

				if (OSPage.IsAjaxRequest) {
					// go to target page
					{

						((OSPage) Page).ClearErrorHandler();
						if (OSPage.IsAjaxRequest) {
							string sURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "InvalidPermissions", "ThemeProvider", "", "", "", "", "", "", "", "", "", "");
							sURL = sURL.Replace("&amp;", "&");
							sURL = RuntimePlatformUtils.GetURL(sURL, AppUtils.Instance, Global.App.eSpaceName);
							((OSPageViewState) Page).RedirectLocation = sURL;
						} else {
							string sURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "InvalidPermissions", "ThemeProvider", "", "", "", "", "", "", "", "", "", "");
							sURL = sURL.Replace("&amp;", "&");
							sURL = RuntimePlatformUtils.GetURL(sURL, AppUtils.Instance, Global.App.eSpaceName);
							Response.BufferOutput = true;
							Response.Redirect(sURL, true);
						}
						return;

					}
				} else {
					// go to target page
					{

						((OSPage) Page).ClearErrorHandler();
						if (OSPage.IsAjaxRequest) {
							string sURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "InvalidPermissions", "ThemeProvider", "", "", "", "", "", "", "", "", "", "");
							sURL = sURL.Replace("&amp;", "&");
							sURL = RuntimePlatformUtils.GetURL(sURL, AppUtils.Instance, Global.App.eSpaceName);
							((OSPageViewState) Page).RedirectLocation = sURL;
						} else {
							string sURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "InvalidPermissions", "ThemeProvider", "", "", "", "", "", "", "", "", "", "");
							sURL = sURL.Replace("&amp;", "&");
							sURL = RuntimePlatformUtils.GetURL(sURL, AppUtils.Instance, Global.App.eSpaceName);
							Response.BufferOutput = true;
							Response.Redirect(sURL, true);
						}
						return;

					}
				}

			} else {
				// GetScrollToJavascript
				Actions.ActionGetScrollToJavascript(heContext, out resGetScrollToJavascript.outParamJavascriptText);
				// MaintainScrollPositionOnPostback
				Actions.ActionMaintainScrollPositionOnPostback(heContext);
				// AddMetaTags
				Actions.ActionAddMetaTags(heContext);
				Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"] = (((((int) Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"]) >0)) ?(((int) Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"])):(((int) Global.SiteProperties["RowsShown"]))); // StaffViewMaxRecords = internalIf
				if ((inParamSessionID!=BuiltInFunction.NullIdentifier())) {
					RCStaffView_SearchStaffView_FilterRecord CompID_Aux_31 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
					CompID_Aux_31.ssSTStaffView_Search.ssSearchType = 2;
					Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_31; // StaffView_Search.StaffView_Search.SearchType = 2
					// Query datasetGetCCSessionById
					int datasetGetCCSessionById_maxRecords = 1;
					if (datasetGetCCSessionById_maxRecords < 1) datasetGetCCSessionById_maxRecords = 1;
					queryResGetCCSessionById_outParamList = FuncssPreparation.datasetGetCCSessionById(heContext, datasetGetCCSessionById_maxRecords, IterationMultiplicity.Never, out queryResGetCCSessionById_outParamCount, inParamSessionID
					);

				} else {
					if ((inParamCourseCode!= "")) {
						RCStaffView_SearchStaffView_FilterRecord CompID_Aux_32 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
						CompID_Aux_32.ssSTStaffView_Search.ssSearchType = 2;
						Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_32; // StaffView_Search.StaffView_Search.SearchType = 2

					} else {
						if (Functions.ssCheckPLARole(heContext, ((int) Global.App.OsContext.Session["UserID"]))) {
							RCStaffView_SearchStaffView_FilterRecord CompID_Aux_33 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
							CompID_Aux_33.ssSTStaffView_Search.ssSearchType = 3;
							Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_33; // StaffView_Search.StaffView_Search.SearchType = 3

						} else {
							RCStaffView_SearchStaffView_FilterRecord CompID_Aux_34 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
							CompID_Aux_34.ssSTStaffView_Search.ssSearchType = 1;
							Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_34; // StaffView_Search.StaffView_Search.SearchType = 1

						}

					}

				}
				// Query datasetGetGroups
				int datasetGetGroups_maxRecords = 1;
				if (datasetGetGroups_maxRecords < 1) datasetGetGroups_maxRecords = 1;
				queryResGetGroups_outParamList = FuncssPreparation.datasetGetGroups(heContext, datasetGetGroups_maxRecords, IterationMultiplicity.Never, out queryResGetGroups_outParamCount, inParamCourseCode
				);
				// Query QueryGetMyTimetabledClasses
				int QueryGetMyTimetabledClasses_maxRecords = 0;
				queryResGetMyTimetabledClasses_outParamList = FuncssPreparation.QueryGetMyTimetabledClasses(heContext, QueryGetMyTimetabledClasses_maxRecords, IterationMultiplicity.Single, out queryResGetMyTimetabledClasses_outParamCount, ((string) Global.App.OsContext.Session["UserName"])
				);
				// GetAcademicYearValues2
				Actions.ActionGetAcademicYearValues2(heContext, ENAcademicYearType2Entity.GetRecordByKey(ObjectKey.Parse("8ZDe8cEZhk2DF16FIzuk9A")).ssId, "", out resGetAcademicYearValues2_outParamAcademicYear);
				// SplitDomainAndUser
				Actions.ActionSplitDomainAndUser(heContext, Functions.ssGetUser(heContext, ((int) Global.App.OsContext.Session["UserID"])).ssENUser.ssUsername, ".", out resSplitDomainAndUser_outParamDomain, out resSplitDomainAndUser_outParamUsername);
				while (true) {
					// Query QueryGetMyStudents
					int QueryGetMyStudents_maxRecords = (((int) Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"]) +1);
					if (QueryGetMyStudents_maxRecords < 1) QueryGetMyStudents_maxRecords = 1;
					queryResGetMyStudents_outParamList = FuncssPreparation.QueryGetMyStudents(heContext, QueryGetMyStudents_maxRecords, IterationMultiplicity.Multiple, out queryResGetMyStudents_outParamCount, resSplitDomainAndUser_outParamUsername
					, (((inParamCourseCode!= "")) ?(inParamCourseCode):(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssGroupDescription))
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchKeyword
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchType
					, BuiltInFunction.NullDate()
					, ((int) Global.App.OsContext.Session["UserID"])
					, ENSafeguardingStatusEntity.GetRecordByKey(ObjectKey.Parse("meDqkJGkEka0FA+KqD8Tog")).ssId
					, ((((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssRAGStatusListIds== "") || (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssRAGStatusListIds== "\'0\'"))) ?(false):(true))
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssRAGStatusListIds
					, (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssAttendance_Red ? 1: 0)
					, (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssAttendance_Amber ? 1: 0)
					, (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssAttendance_Green ? 1: 0)
					, (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssPunctuality_Red ? 1: 0)
					, (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssPunctuality_Amber ? 1: 0)
					, (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssPunctuality_Green ? 1: 0)
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssCFC
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssSafeGuard
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssReward
					, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("hh0WWQ2FF0acLTzRV4EL3Q")).ssId
					, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId
					, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("9J+4M6ZeU0+g4qKAzSFbVg")).ssId
					, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("iy5u49fNYkGR3K77QLSz4g")).ssId
					, ((((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssVOC_Red||((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssVOC_Green) || ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssVOC_Amber)) ?(true):(false))
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssVOC_Red) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssVOC_Green) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssVOC_Amber) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId):(""))) + "\'")
					, ((((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMath_Red||((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMath_Green) || ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMath_Amber)) ?(true):(false))
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMath_Red) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMath_Green) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMath_Amber) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId):(""))) + "\'")
					, ((((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssEnglish_Red||((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssEnglish_Green) || ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssEnglish_Amber)) ?(true):(false))
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssEnglish_Red) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssEnglish_Green) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssEnglish_Amber) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId):(""))) + "\'")
					, ((((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMLW_Red||((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMLW_Green) || ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMLW_Amber)) ?(true):(false))
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMLW_Red) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMLW_Green) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMLW_Amber) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId):(""))) + "\'")
					, Functions.ActionGetMyStaffListOrder(heContext, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderBy)
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderDirection
					, (((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssSupports== "")) ?("\'0\'"):(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssSupports))
					, (((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssSupports== "")) ?(false):(true))
					, resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssYYYY_Academic
					, inParamSessionID
					, (((inParamSessionID!=BuiltInFunction.NullIdentifier())) ?(0):((-1)))
					, ((BuiltInFunction.TextToDateValidate(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchKeyword)) ?(BuiltInFunction.TextToDate(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchKeyword)):(BuiltInFunction.NullDate()))
					, (((int) Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"]) +1)
					, Convert.ToDateTime(BuiltInFunction.TextToDateTime(resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssDD_MMMM_YYYY).ToString("yyyy-M-d"))
					, ENMLWStagesEntity.GetRecordByKey(ObjectKey.Parse("4UtQeZsXLE+loQtCc6xR5A")).ssId
					, ENMLWStagesEntity.GetRecordByKey(ObjectKey.Parse("oSjGpeFpAkSUy1tEn+I7gA")).ssId
					, 5
					, resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssYY_YY
					);
					// Foreach GetMyStudents.List
					queryResGetMyStudents_outParamList.StartIteration();
					try {
						while (!queryResGetMyStudents_outParamList.Eof) {
							// SupportIdList = ""
							if (!((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssSupportIdList== ""))) {
								// String_Split_ByComma
								Actions.ActionString_Split(heContext, queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssSupportIdList, ";", out resString_Split_ByComma_outParamList);
								// Foreach String_Split_ByComma.List
								resString_Split_ByComma_outParamList.StartIteration();
								try {
									while (!resString_Split_ByComma_outParamList.Eof) {
										// StringSplit_ByCrossBar
										Actions.ActionString_Split(heContext, resString_Split_ByComma_outParamList.CurrentRec.ssSTText.ssValue, "|", out resStringSplit_ByCrossBar_outParamList);
										if ((BuiltInFunction.Trim(resStringSplit_ByCrossBar_outParamList[0] .ssSTText.ssValue) == "Transport")) {
											// (Transport)
											queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssTransport = ((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssTransport+(((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssTransport!= "")) ?(";"):(""))) +resStringSplit_ByCrossBar_outParamList[1] .ssSTText.ssValue); // GetMyStudents.List.Current.StaffViewRecord.Transport = GetMyStudents.List.Current.StaffViewRecord.Transport +
											// internalIf + StringSplit_ByCrossBar.List[1].Text.Value

										} else {
											if ((BuiltInFunction.Trim(resStringSplit_ByCrossBar_outParamList[0] .ssSTText.ssValue) == "Financial")) {
												// (Financial)
												queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssFinancial = ((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssFinancial+(((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssFinancial!= "")) ?(";"):(""))) +resStringSplit_ByCrossBar_outParamList[1] .ssSTText.ssValue); // GetMyStudents.List.Current.StaffViewRecord.Financial = GetMyStudents.List.Current.StaffViewRecord.Financial +
												// internalIf + StringSplit_ByCrossBar.List[1].Text.Value

											} else {
												if ((BuiltInFunction.Trim(resStringSplit_ByCrossBar_outParamList[0] .ssSTText.ssValue) == "Academic")) {
													// (Academic)
													queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssAcademic = ((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssAcademic+(((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssAcademic!= "")) ?(";"):(""))) +resStringSplit_ByCrossBar_outParamList[1] .ssSTText.ssValue); // GetMyStudents.List.Current.StaffViewRecord.Academic = GetMyStudents.List.Current.StaffViewRecord.Academic +
													// internalIf + StringSplit_ByCrossBar.List[1].Text.Value

												} else {
													if ((BuiltInFunction.Trim(resStringSplit_ByCrossBar_outParamList[0] .ssSTText.ssValue) == "Personal")) {
														// (Personal)
														queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssPersonal = ((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssPersonal+(((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssPersonal!= "")) ?(";"):(""))) +resStringSplit_ByCrossBar_outParamList[1] .ssSTText.ssValue); // GetMyStudents.List.Current.StaffViewRecord.Personal = GetMyStudents.List.Current.StaffViewRecord.Personal +
														// internalIf + StringSplit_ByCrossBar.List[1].Text.Value

													} else {
														resString_Split_ByComma_outParamList.Advance();
														continue;

													}

												}

											}

										}
										resString_Split_ByComma_outParamList.Advance();
									}
								} finally {
									resString_Split_ByComma_outParamList.EndIteration();
								}

							}
							queryResGetMyStudents_outParamList.Advance();
						}
					} finally {
						queryResGetMyStudents_outParamList.EndIteration();
					}
					// (Empty)
					if ((queryResGetMyStudents_outParamList.Empty&&(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchType!=2))) {
						// (Favorite ? )
						if (!((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchType==1))) {
							// (My ? )
							if ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchType==0)) {
								// (Set All)
								RCStaffView_SearchStaffView_FilterRecord CompID_Aux_35 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
								CompID_Aux_35.ssSTStaffView_Search.ssSearchType = 2;
								Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_35; // StaffView_Search.StaffView_Search.SearchType = 2
								continue;

							}

						}
						// (Set My Group)
						RCStaffView_SearchStaffView_FilterRecord CompID_Aux_36 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
						CompID_Aux_36.ssSTStaffView_Search.ssSearchType = 0;
						Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_36; // StaffView_Search.StaffView_Search.SearchType = 0

					} else {
						break;

					}
				}
				if (((((((inParamCourseCode!= "")) ?(inParamCourseCode):(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssGroupDescription)) != "")) ?(true):(false))) {
					varLcEnrolmentsSplit = true; // EnrolmentsSplit = True

				}
				// Query QueryGetStudentGroups
				int QueryGetStudentGroups_maxRecords = 0;
				queryResGetStudentGroups_outParamList = FuncssPreparation.QueryGetStudentGroups(heContext, QueryGetStudentGroups_maxRecords, IterationMultiplicity.Multiple, out queryResGetStudentGroups_outParamCount, (((inParamCourseCode!= "")) ?(inParamCourseCode):(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssGroupDescription))
				);
				// SplitEnrolments2
				Actions.ActionSplitEnrolments(heContext, queryResGetMyStudents_outParamList, queryResGetStudentGroups_outParamList, out resSplitEnrolments2.outParamActiveEnrolments, out resSplitEnrolments2.outParamCompletedEnrolments, out resSplitEnrolments2.outParamTransferredEnrolments, out resSplitEnrolments2.outParamWithdrawnEnrolments);
				varLcActiveEnrolments = resSplitEnrolments2.outParamActiveEnrolments; // ActiveEnrolments = SplitEnrolments2.ActiveEnrolments
				varLcWithdrawnEnrolments = resSplitEnrolments2.outParamWithdrawnEnrolments; // WithdrawnEnrolments = SplitEnrolments2.WithdrawnEnrolments
				varLcTransferredEnrolments = resSplitEnrolments2.outParamTransferredEnrolments; // TransferredEnrolments = SplitEnrolments2.TransferredEnrolments
				varLcCompletedEnrolments = resSplitEnrolments2.outParamCompletedEnrolments; // CompletedEnrolments = SplitEnrolments2.CompletedEnrolments
				// Filter visible?
				if (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssFilterVisible) {
					// RunJavaScript2
					Actions.ActionRunJavaScript(heContext, "$(\'.StaffViewFilter\').toggle(1000);");

				}

			}
		}


		protected override BaseAppUtils GetAppUtils() {
			return AppUtils.Instance;
		}

		protected override string OwnCssUrl {
			get {
				return "StaffView.css"; 
			}
		}

		protected override string OwnCssFile {
			get {
				return "StaffView.css"; 
			}
		}

		protected override string BasicCssUrl {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string BasicCssFile {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssUrl {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssFile {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssUrl {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssFile {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssUrl {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssFile {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssUrl {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssFile {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string ThemeCssUrl {
			get {
				return RsseSpaceThemeProvider.Themes.ThemeThemeProviderWithoutLondon.ThemeCssUrl; 
			}
		}

		protected override string ThemeCssFile {
			get {
				return "ReferenceTheme.ThemeProviderWithoutLondon.css"; 
			}
		}

		protected override string ThemeExtraCssUrl {
			get {
				return ""; 
			}
		}

		protected override string ThemeExtraCssFile {
			get {
				return ""; 
			}
		}

		public override bool IsUsingMobileTheme {
			get {
				return false; 
			}
		}

		protected override string OwnJavascriptInclude {
			get {
				return ""; 
			}
		}

		public override string XUACompatibleOverride {
			get {
				return null; 
			}
		}

		protected void InitializeUrls() {
			Uri uri = new Uri((RuntimePlatformUtils.RequestIsSecure(Request) ? "https": "http") + Request.Url.ToString().Substring(Request.Url.Scheme.Length));
			string applicationUrl = AppUtils.Instance.getImagePath(/*internalAccess*/false,/*includeSessionIdIfNeeded*/ false);
			actionUrl = "";
			bookmarkableUrl = uri.GetLeftPart(UriPartial.Authority) + applicationUrl;
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			if ((inParamCourseCode!= "")) {
				parameters.Add(new Pair<string, string>("CourseCode", HttpUtility.UrlEncode(inParamCourseCode, Request.ContentEncoding)));
			}
			if ((inParamSessionID!=0)) {
				parameters.Add(new Pair<string, string>("SessionID", HttpUtility.UrlEncode(Convert.ToString(inParamSessionID), Request.ContentEncoding)));
			}
			if (Request.AppRelativeCurrentExecutionFilePath.IndexOf('/', 2) == -1) {
				AppInfo appInfo = AppInfo.GetAppInfo();
				if (appInfo != null) {
					string pageHeader = appInfo.OsContext.OsISAPIFilter.GetPage(Request);
					if (appInfo.OsContext.IsCookielessSession || (pageHeader != null && pageHeader.IndexOf('/', 1) != -1)) {
						actionUrl = applicationUrl;
					}
				}
				actionUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "StaffView", parameters,/*useParamsOnlyIfNeededForRule*/ true);
			}
			bookmarkableUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "StaffView", parameters,/*useParamsOnlyIfNeededForRule*/ false);

		}

		protected override void OnInit(EventArgs e) {
			HeContext heContext = AppInfo.GetAppInfo().OsContext;
			heContext.CurrentScreen = this;
			try {
				heContext.CurrentExecutionFileName = Path.GetFileName(Request.CurrentExecutionFilePath);
			} catch {}
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			ThemeProvider_wt_WebBlockInstance302 = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main) FindControl("ThemeProvider_wt_WebBlockInstance302");
			wt_Container11 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container11");
			wt_Container215 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container215");
			ThemeProvider_wtBreadcrumb = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkBreadCrumb) FindControl("ThemeProvider_wtBreadcrumb");
			wt_Link303 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link303");
			wt_Container550 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container550");
			wt_Link401 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link401");
			wt_Container180 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container180");
			wt_Container418 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container418");
			wtStaffViewHeader = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtStaffViewHeader");
			wtListHeader = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtListHeader");
			wtIconFilter = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtIconFilter");
			wtIconFilter2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtIconFilter2");
			wtWrapper_Favorite = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtWrapper_Favorite");
			wtWrapper_Filter = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtWrapper_Filter");
			wt_Link491 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link491");
			if (this.wt_Link491 != null) {
				this.wt_Link491.Click += new System.EventHandler(this.wt_Link491_Click);
			}
			wt_Link61 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link61");
			if (this.wt_Link61 != null) {
				this.wt_Link61.Click += new System.EventHandler(this.wt_Link61_Click);
			}
			wt_Container222 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container222");
			wt_Container410 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container410");
			wt_Container217 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container217");
			wt_Container166 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container166");
			wt_Container536 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container536");
			wt_Container476 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container476");
			wt_Container284 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container284");
			wt_Container337 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container337");
			wt_Container207 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container207");
			wt_Container126 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container126");
			wt_Container18 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container18");
			wt_Container371 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container371");
			wt_Container462 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container462");
			wt_Container465 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container465");
			wt_Container321 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container321");
			wt_Container57 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container57");
			wt_Container375 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container375");
			wt_Container82 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container82");
			wt_Container10 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container10");
			wt_Container412 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container412");
			wt_Container511 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container511");
			wt_Container334 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container334");
			wt_Container434 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container434");
			wt_Container214 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container214");
			wt_Container402 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container402");
			wt_Container322 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container322");
			wt_Container332 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container332");
			wt_Container377 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container377");
			wt_Container43 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container43");
			wt_Container216 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container216");
			wt_Container285 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container285");
			wt_Container74 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container74");
			wt_Container46 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container46");
			wt_Container433 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container433");
			wtAllLearners = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtAllLearners");
			wtStaffViewNormal = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtStaffViewNormal");
			wtActiveEnrolmentsWrapper = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtActiveEnrolmentsWrapper");
			wt_Container102 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container102");
			wtActiveEnrolmentsList = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtActiveEnrolmentsList");
			wtActiveEnrolmentsList.StartIndexExpression = () => 0;
			wtActiveEnrolmentsList.LineCountExpression = () =>((int) Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"]);
			wtActiveEnrolmentsList.EmptyMessageExpression = () => "No results found for the selected search criteria.";
			if (this.wt_Link199 != null) {
				this.wt_Link199.Click += new System.EventHandler(this.wt_Link199_Click);
			}
			if (this.wt_Link262 != null) {
				this.wt_Link262.Click += new System.EventHandler(this.wt_Link262_Click);
			}
			wt_Container449 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container449");
			wtWithdrawnEnrolmentsWrapper = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtWithdrawnEnrolmentsWrapper");
			wt_Container177 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container177");
			wtWithdrawnEnrolmentsList = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtWithdrawnEnrolmentsList");
			wtWithdrawnEnrolmentsList.StartIndexExpression = () => 0;
			wtWithdrawnEnrolmentsList.LineCountExpression = () =>((int) Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"]);
			wtWithdrawnEnrolmentsList.EmptyMessageExpression = () => "No results found for the selected search criteria.";
			if (this.wt_Link365 != null) {
				this.wt_Link365.Click += new System.EventHandler(this.wt_Link365_Click);
			}
			if (this.wt_Link327 != null) {
				this.wt_Link327.Click += new System.EventHandler(this.wt_Link327_Click);
			}
			wt_Container159 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container159");
			wtCompletedEnrolmentsWrapper = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtCompletedEnrolmentsWrapper");
			wt_Container347 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container347");
			wtCompletedEnrolmentsList = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtCompletedEnrolmentsList");
			wtCompletedEnrolmentsList.StartIndexExpression = () => 0;
			wtCompletedEnrolmentsList.LineCountExpression = () =>((int) Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"]);
			wtCompletedEnrolmentsList.EmptyMessageExpression = () => "No results found for the selected search criteria.";
			if (this.wt_Link474 != null) {
				this.wt_Link474.Click += new System.EventHandler(this.wt_Link474_Click);
			}
			if (this.wt_Link554 != null) {
				this.wt_Link554.Click += new System.EventHandler(this.wt_Link554_Click);
			}
			wt_Container502 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container502");
			wtTransferredEnrolmentsWrapper = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtTransferredEnrolmentsWrapper");
			wt_Container99 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container99");
			wtTransferredEnrolmentsList = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtTransferredEnrolmentsList");
			wtTransferredEnrolmentsList.StartIndexExpression = () => 0;
			wtTransferredEnrolmentsList.LineCountExpression = () =>((int) Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"]);
			wtTransferredEnrolmentsList.EmptyMessageExpression = () => "No results found for the selected search criteria.";
			if (this.wt_Link429 != null) {
				this.wt_Link429.Click += new System.EventHandler(this.wt_Link429_Click);
			}
			if (this.wt_Link548 != null) {
				this.wt_Link548.Click += new System.EventHandler(this.wt_Link548_Click);
			}
			wt_Container142 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container142");
			wtMoreRowsWrapper = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtMoreRowsWrapper");
			wtMoreRow = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtMoreRow");
			wt_Container20 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container20");
			wt_Container251 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container251");
			wtButtonInvisibleSearch = (OutSystems.HubEdition.WebWidgets.Button) FindControl("wtButtonInvisibleSearch");
			if (this.wtButtonInvisibleSearch != null) {
				this.wtButtonInvisibleSearch.Click += new System.EventHandler(this.wtButtonInvisibleSearch_Click);
			}
			wt_Container295 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container295");
			wt_Container277 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container277");
			Page.Error += new EventHandler(Page_Error);
			this.Load += new System.EventHandler(this.Page_Load);
			this.PreRender += new System.EventHandler(this.Page_PreRender);
		}

		public override Control FindControl(string id) {
			if (id == "wt_WebBlockInstance143") {
				return ThemeProvider_wt_WebBlockInstance302.wtHelpUpdate.FindControl("wt_WebBlockInstance143");
			}
			if (id == "wt_If498") {
				return ThemeProvider_wt_WebBlockInstance302.wtHeaderActions.FindControl("wt_If498");
			}
			if (id == "wt_If498T") {
				return ThemeProvider_wt_WebBlockInstance302.wtHeaderActions.FindControl("wt_If498T");
			}
			if (id == "wt_Container11") {
				return ThemeProvider_wt_WebBlockInstance302.wtHeaderActions.FindControl("wt_Container11");
			}
			if (id == "ThemeProvider_wt_WebBlockInstance100") {
				return ThemeProvider_wt_WebBlockInstance302.wtHeaderActions.FindControl("ThemeProvider_wt_WebBlockInstance100");
			}
			if (id == "wt_If498F") {
				return ThemeProvider_wt_WebBlockInstance302.wtHeaderActions.FindControl("wt_If498F");
			}
			if (id == "wt_Container215") {
				return ThemeProvider_wt_WebBlockInstance302.wtHeaderActions.FindControl("wt_Container215");
			}
			if (id == "ThemeProvider_wtBreadcrumb") {
				return ThemeProvider_wt_WebBlockInstance302.wtHeaderActions.FindControl("ThemeProvider_wtBreadcrumb");
			}
			if (id == "wt_Link303") {
				return ThemeProvider_wtBreadcrumb.wtLevel1.FindControl("wt_Link303");
			}
			if (id == "wt_Container550") {
				return ThemeProvider_wtBreadcrumb.wtLevel1.FindControl("wt_Container550");
			}
			if (id == "RichWidgets_wt_WebBlockInstance120") {
				return ThemeProvider_wtBreadcrumb.wtLevel1.FindControl("RichWidgets_wt_WebBlockInstance120");
			}
			if (id == "wt_InlineExpression290") {
				return ThemeProvider_wtBreadcrumb.wtLevel1.FindControl("wt_InlineExpression290");
			}
			if (id == "wt_Link401") {
				return ThemeProvider_wtBreadcrumb.wtLevel2.FindControl("wt_Link401");
			}
			if (id == "wt_Container180") {
				return ThemeProvider_wtBreadcrumb.wtLevel2.FindControl("wt_Container180");
			}
			if (id == "RichWidgets_wt_WebBlockInstance191") {
				return ThemeProvider_wtBreadcrumb.wtLevel2.FindControl("RichWidgets_wt_WebBlockInstance191");
			}
			if (id == "wt_InlineExpression477") {
				return ThemeProvider_wtBreadcrumb.wtLevel2.FindControl("wt_InlineExpression477");
			}
			if (id == "RichWidgets_wt_WebBlockInstance105") {
				return ThemeProvider_wtBreadcrumb.wtLevel3.FindControl("RichWidgets_wt_WebBlockInstance105");
			}
			if (id == "wt_InlineExpression415") {
				return ThemeProvider_wtBreadcrumb.wtLevel3.FindControl("wt_InlineExpression415");
			}
			if (id == "wt_Container418") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container418");
			}
			if (id == "wtStaffViewHeader") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtStaffViewHeader");
			}
			if (id == "wtListHeader") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtListHeader");
			}
			if (id == "wtIconFilter") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtIconFilter");
			}
			if (id == "wtIconFilter2") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtIconFilter2");
			}
			if (id == "RichWidgets_wt_WebBlockInstance137") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("RichWidgets_wt_WebBlockInstance137");
			}
			if (id == "wtWrapper_Favorite") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtWrapper_Favorite");
			}
			if (id == "wtWrapper_Filter") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtWrapper_Filter");
			}
			if (id == "wt_If525") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_If525");
			}
			if (id == "wt_If525T") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_If525T");
			}
			if (id == "wt_Link491") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Link491");
			}
			if (id == "RichWidgets_wt_WebBlockInstance344") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("RichWidgets_wt_WebBlockInstance344");
			}
			if (id == "wt_If525F") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_If525F");
			}
			if (id == "wt_Link61") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Link61");
			}
			if (id == "RichWidgets_wt_WebBlockInstance38") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("RichWidgets_wt_WebBlockInstance38");
			}
			if (id == "wt_Container222") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container222");
			}
			if (id == "wt_Container410") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container410");
			}
			if (id == "wt_Table501") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Table501");
			}
			if (id == "wt_TableRow509") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableRow509");
			}
			if (id == "wt_TableCell494") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableCell494");
			}
			if (id == "wt_Container217") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container217");
			}
			if (id == "wt_Text62") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text62");
			}
			if (id == "wt_Container166") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container166");
			}
			if (id == "wt_WebBlockInstance413") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_WebBlockInstance413");
			}
			if (id == "wt_Container536") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container536");
			}
			if (id == "wt_Table19") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Table19");
			}
			if (id == "wt_TableRow135") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableRow135");
			}
			if (id == "wt_TableCell162") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableCell162");
			}
			if (id == "wt_Container476") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container476");
			}
			if (id == "wt_Text280") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text280");
			}
			if (id == "wt_TableRow111") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableRow111");
			}
			if (id == "wt_TableCell376") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableCell376");
			}
			if (id == "wt_Container284") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container284");
			}
			if (id == "wt_Text113") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text113");
			}
			if (id == "wt_Container337") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container337");
			}
			if (id == "wt_WebBlockInstance267") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_WebBlockInstance267");
			}
			if (id == "wt_TableCell448") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableCell448");
			}
			if (id == "wt_Container207") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container207");
			}
			if (id == "wt_Text535") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text535");
			}
			if (id == "wt_Container126") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container126");
			}
			if (id == "wt_WebBlockInstance360") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_WebBlockInstance360");
			}
			if (id == "wt_Container18") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container18");
			}
			if (id == "wt_Table368") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Table368");
			}
			if (id == "wt_TableRow89") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableRow89");
			}
			if (id == "wt_TableCell385") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableCell385");
			}
			if (id == "wt_Container371") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container371");
			}
			if (id == "wt_Text75") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text75");
			}
			if (id == "wt_TableRow484") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableRow484");
			}
			if (id == "wt_TableCell503") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableCell503");
			}
			if (id == "wt_Container462") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container462");
			}
			if (id == "wt_Text208") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text208");
			}
			if (id == "wt_Container465") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container465");
			}
			if (id == "wt_WebBlockInstance423") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_WebBlockInstance423");
			}
			if (id == "wt_Container321") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container321");
			}
			if (id == "wt_Table163") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Table163");
			}
			if (id == "wt_TableRow14") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableRow14");
			}
			if (id == "wt_TableCell124") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableCell124");
			}
			if (id == "wt_Container57") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container57");
			}
			if (id == "wt_Text118") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text118");
			}
			if (id == "wt_TableRow354") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableRow354");
			}
			if (id == "wt_TableCell53") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableCell53");
			}
			if (id == "wt_Container375") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container375");
			}
			if (id == "wt_Text274") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text274");
			}
			if (id == "wt_Container82") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container82");
			}
			if (id == "wt_WebBlockInstance316") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_WebBlockInstance316");
			}
			if (id == "wt_Container10") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container10");
			}
			if (id == "wt_Table523") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Table523");
			}
			if (id == "wt_TableRow272") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableRow272");
			}
			if (id == "wt_TableCell514") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableCell514");
			}
			if (id == "wt_Container412") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container412");
			}
			if (id == "wt_Text394") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text394");
			}
			if (id == "wt_Container511") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container511");
			}
			if (id == "wt_WebBlockInstance81") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_WebBlockInstance81");
			}
			if (id == "wt_Container334") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container334");
			}
			if (id == "wt_Table224") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Table224");
			}
			if (id == "wt_TableRow467") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableRow467");
			}
			if (id == "wt_TableCell51") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableCell51");
			}
			if (id == "wt_Container434") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container434");
			}
			if (id == "wt_Text383") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text383");
			}
			if (id == "wt_Container214") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container214");
			}
			if (id == "wt_WebBlockInstance297") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_WebBlockInstance297");
			}
			if (id == "wt_Container402") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container402");
			}
			if (id == "wt_Table369") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Table369");
			}
			if (id == "wt_TableRow287") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableRow287");
			}
			if (id == "wt_TableCell259") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableCell259");
			}
			if (id == "wt_Container322") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container322");
			}
			if (id == "wt_Text464") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text464");
			}
			if (id == "wt_Container332") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container332");
			}
			if (id == "wt_WebBlockInstance229") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_WebBlockInstance229");
			}
			if (id == "wt_Container377") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container377");
			}
			if (id == "wt_Table245") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Table245");
			}
			if (id == "wt_TableRow562") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableRow562");
			}
			if (id == "wt_TableCell341") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_TableCell341");
			}
			if (id == "wt_Container43") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container43");
			}
			if (id == "wt_Text333") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text333");
			}
			if (id == "wt_Container216") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container216");
			}
			if (id == "wt_WebBlockInstance9") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_WebBlockInstance9");
			}
			if (id == "wt_Container285") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container285");
			}
			if (id == "wt_Container74") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container74");
			}
			if (id == "wt_Text325") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text325");
			}
			if (id == "wt_Container46") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container46");
			}
			if (id == "wt_ComboBox490") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_ComboBox490");
			}
			if (id == "wt_Container433") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container433");
			}
			if (id == "wt_WebBlockInstance202") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_WebBlockInstance202");
			}
			if (id == "wtHeaderFilter") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtHeaderFilter");
			}
			if (id == "wtWrapperContent") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtWrapperContent");
			}
			if (id == "wtWrapperContentT") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtWrapperContentT");
			}
			if (id == "wtAllLearners") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtAllLearners");
			}
			if (id == "wtStaffViewNormal") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtStaffViewNormal");
			}
			if (id == "wtActiveEnrolmentsWrapper") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtActiveEnrolmentsWrapper");
			}
			if (id == "wt_Container102") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container102");
			}
			if (id == "wt_InlineExpression164") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_InlineExpression164");
			}
			if (id == "wtActiveEnrolmentsList") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtActiveEnrolmentsList");
			}
			if (id == "wt_Container449") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container449");
			}
			if (id == "wtWithdrawnEnrolmentsWrapper") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtWithdrawnEnrolmentsWrapper");
			}
			if (id == "wt_Container177") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container177");
			}
			if (id == "wt_InlineExpression173") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_InlineExpression173");
			}
			if (id == "wtWithdrawnEnrolmentsList") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtWithdrawnEnrolmentsList");
			}
			if (id == "wt_Container159") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container159");
			}
			if (id == "wtCompletedEnrolmentsWrapper") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtCompletedEnrolmentsWrapper");
			}
			if (id == "wt_Container347") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container347");
			}
			if (id == "wt_InlineExpression96") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_InlineExpression96");
			}
			if (id == "wtCompletedEnrolmentsList") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtCompletedEnrolmentsList");
			}
			if (id == "wt_Container502") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container502");
			}
			if (id == "wtTransferredEnrolmentsWrapper") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtTransferredEnrolmentsWrapper");
			}
			if (id == "wt_Container99") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container99");
			}
			if (id == "wt_InlineExpression112") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_InlineExpression112");
			}
			if (id == "wtTransferredEnrolmentsList") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtTransferredEnrolmentsList");
			}
			if (id == "wt_Container142") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container142");
			}
			if (id == "wtMoreRowsWrapper") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtMoreRowsWrapper");
			}
			if (id == "wt_If201") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_If201");
			}
			if (id == "wt_If201T") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_If201T");
			}
			if (id == "wtMoreRow") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtMoreRow");
			}
			if (id == "wt_WebBlockInstance520") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_WebBlockInstance520");
			}
			if (id == "wt_If201F") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_If201F");
			}
			if (id == "wtWrapperContentF") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtWrapperContentF");
			}
			if (id == "wt_Container20") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container20");
			}
			if (id == "wt_Text122") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Text122");
			}
			if (id == "wt_Container251") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container251");
			}
			if (id == "wtileft") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtileft");
			}
			if (id == "wtitop") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtitop");
			}
			if (id == "wtButtonInvisibleSearch") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtButtonInvisibleSearch");
			}
			if (id == "wt_InlineExpression145") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_InlineExpression145");
			}
			if (id == "wtPopUpStudenRAG") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtPopUpStudenRAG");
			}
			if (id == "wtPopUpNotes") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtPopUpNotes");
			}
			if (id == "wtPopUpCategoryRAG") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtPopUpCategoryRAG");
			}
			if (id == "wtPopUp_CauseOfConcern") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtPopUp_CauseOfConcern");
			}
			if (id == "wtPopUpRewards") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtPopUpRewards");
			}
			if (id == "wt_Container295") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container295");
			}
			if (id == "wtPopUp_Tootip") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wtPopUp_Tootip");
			}
			if (id == "wt_Container277") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_Container277");
			}
			if (id == "wt_InlineExpression83") {
				return ThemeProvider_wt_WebBlockInstance302.wtMainContent.FindControl("wt_InlineExpression83");
			}

			return base.FindControl(id);
		}


		private void Page_Load(object sender, System.EventArgs e) {
			// init vars
			AppInfo appInfo = Global.App;
			if (appInfo != null) {
				heContext = appInfo.OsContext;
			}
			Response.ContentType = "text/html; charset=" + Response.ContentEncoding.WebName;
			OutSystems.HubEdition.RuntimePlatform.Web.JavaScriptManager.CheckRelativeJavaScriptPrefix(AppUtils.Instance.getImagePath());
			appInfo.IsLoadingScreen = !IsPostBack;
			((OSPageViewState) Page).EnableResetViewState();
			if (!IsPostBack) {
				ArrayList screenParameters = (ArrayList) Global.App.OsContext.Session["CaseConferencing._ScreenParameters_StaffView"];
				bool screenParametersInSession = false;
				object screenParametersKey = heContext.Session["_ScreenParametersKey"];
				if ((screenParametersKey == null || this.Key.Equals(ObjectKey.Parse(Convert.ToString(screenParametersKey)))) && screenParameters != null) {
					try {
						if (screenParameters.Count > 0) {
							object paramValue = screenParameters[0];
							if (paramValue != null) {
								inParamCourseCode = (string) paramValue;
							}
						}
						if (screenParameters.Count > 1) {
							object paramValue = screenParameters[1];
							if (paramValue != null) {
								inParamSessionID = (int) paramValue;
							}
						}
						screenParametersInSession = true;
					} catch (Exception parametersException) {
						ErrorLog.LogApplicationError("Failed to load Screen Input Parameters from session.", "ScreenParametersKey = " + screenParametersKey + ", Count = " + screenParameters.Count + "\r\n" + parametersException.StackTrace, heContext, "Global");
					} finally {
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_StaffView"] = null;
						heContext.Session["_ScreenParametersKey"] = null;
					}
				}
				else if (Request.HttpMethod == "GET") {
					if (Request.QueryString["CourseCode"] != null) {
						inParamCourseCode = Request.QueryString["CourseCode"];
					}
					if (Request.QueryString["SessionID"] != null) {
						inParamSessionID = Convert.ToInt32(Request.QueryString["SessionID"]);
					}
				}
				else if (Request.HttpMethod == "POST") {
					if (Request.Form["CourseCode"] != null) {
						inParamCourseCode = Request.Form["CourseCode"];
					}
					if (Request.Form["SessionID"] != null) {
						inParamSessionID = Convert.ToInt32(Request.Form["SessionID"]);
					}
				}
			}
			if (!appInfo.IsApplicationEnabled) {
				ErrorLog.LogApplicationError(new Exception("eSpace " + appInfo.eSpaceName + " is disabled"), heContext, "Global");
				String contact = BuiltInFunction.EncodeUrl(RuntimePlatformUtils.GetAdministrationEmail());
				try {
					Server.Transfer("/customHandlers/app_offline.aspx?contact=" + contact + "&errorCode=APPLICATION_OFFLINE");
				}
				catch (System.Threading.ThreadAbortException) {}
				catch {
					Response.Redirect("/customHandlers/internalerror.aspx");
				}
			}
			InitializeUrls();
			Actions.ActionOnBeginWebRequest(heContext);
			if (!IsPostBack) {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				Preparation(heContext);
				bool bindEditRecords = !IsPostBack;
				ssActiveEnrolmentsListListDoDataBind = true;
				ssWithdrawnEnrolmentsListListDoDataBind = true;
				ssCompletedEnrolmentsListListDoDataBind = true;
				ssTransferredEnrolmentsListListDoDataBind = true;
				Title = "StaffView"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "StaffView", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} else {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				FetchViewState();
			}

		}

		private bool _negociateTabIndexesExecuted = false;

		private void Page_PreRender(object sender, System.EventArgs e) {
			ClientScript.RegisterArrayDeclaration("OsPage_Validators", "{}");
			if (!_negociateTabIndexesExecuted) {
				NegotiateTabIndexes();
				_negociateTabIndexesExecuted = true;
			}
			foreach(Control child in this.Controls) {
				DisableViewState(child);
			}
		}

		private void NegotiateTabIndexes() {
			short tabindex=1;
			tabindex = NegotiateTabIndexes(tabindex, true);
		}

		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {
			try {
				wtButtonInvisibleSearch = wtButtonInvisibleSearch ??(OutSystems.HubEdition.WebWidgets.Button) rootCtrl.FindControl("wtButtonInvisibleSearch");
			} catch {}
			string jsString = (wtButtonInvisibleSearch != null) ? "return OsEnterKey('" +wtButtonInvisibleSearch.ClientID + "', arguments[0] || window.event)": "";

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {
						string onkeydown = ctrl.Attributes["onkeydown"];
						if (onkeydown == null)
						onkeydown = "";
						ctrl.Attributes.Add("onkeydown", onkeydown + jsString);

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}



		private void Page_Error(object sender, System.EventArgs e) {
			if (! new ssCaseConferencing.Flows.FlowStaffView.ExceptionHandler(this, false).HandleException()) {
				DatabaseAccess.FreeupResources(false);
				Server.Transfer("_WebErrorPage.aspx");
			}
		}

		public override void ClearErrorHandler() {
			Error -= Page_Error;
		}

		public void CheckPermissions(HeContext heContext) {
			{
				bool check;
				ExtendedActions.CheckSuperUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckPLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckRegisteredRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingBackofficeRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportPractitionerRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSafeGuardingLeadRole(heContext, 0, out check);
				if (check) return;
			}
			throw new ExcptNotSuperUser("SuperUser role required");
		}


		public ObjectKey Key {
			get {
				return ObjectKey.Parse("j8jDU90qoUqC4OOZCvawmQ"); 
			}
		}

		public bool isSecure {
			get {
				return true; 
			}
		}


		public class lcvOpenCategoryRAGPopUp: VarsBag {
			public int inParamCategoryId;
			public int resUserCheck2_outParamPermissionType = 0;

			public lcvOpenCategoryRAGPopUp(int inParamCategoryId) {
				this.inParamCategoryId = inParamCategoryId;
			}
		}
		/// <summary>
		/// Action <code>CommandOpenCategoryRAGPopUp</code> that represents the Service Studio screen action
		///  <code>OpenCategoryRAGPopUp</code> <p> Description: </p>
		/// </summary>
		private bool CommandOpenCategoryRAGPopUp(HeContext heContext, int inParamCategoryId) {
			CheckPermissions(heContext);
			lcvOpenCategoryRAGPopUp localVars = new lcvOpenCategoryRAGPopUp(inParamCategoryId);
			try {
				// UserCheck2
				Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("GMC2Cg5OBk2I5KHK3cOUQg")).ssId, out localVars.resUserCheck2_outParamPermissionType);
				if ((localVars.resUserCheck2_outParamPermissionType==BuiltInFunction.NullIdentifier())) {
					// Update Screen
					return true;

				} else {
					// Exampt
					if (((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssIsMathExempt&&(localVars.inParamCategoryId==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("9J+4M6ZeU0+g4qKAzSFbVg")).ssId)) || (getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssIsEnglishExempt&&(localVars.inParamCategoryId==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("hh0WWQ2FF0acLTzRV4EL3Q")).ssId)))) {
						// Update Screen
						return true;

					} else {
						varLcshow = true; // show = True
						varLccurrentrow_popup = getWtActiveEnrolmentsListList().CurrentRowNumber; // currentrow_popup = ActiveEnrolmentsList.List.CurrentRowNumber
						varLccurrentcategoryid = localVars.inParamCategoryId; // currentcategoryid = CategoryId
						// Refresh Widget (wtPopUpCategoryRAG)
						((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtPopUpCategoryRAG"), "None", StoreViewState);
						// Update Screen
						return true;

					}

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOnNotifyCategoryChange: VarsBag {
			public RLTextRecordList resString_Split_outParamList = new RLTextRecordList();

			public string resNotifyWidgetGetMessage_outParamMessage = "";

			public lcvOnNotifyCategoryChange() {
			}
		}
		/// <summary>
		/// Action <code>CommandOnNotifyCategoryChange</code> that represents the Service Studio screen action
		///  <code>OnNotifyCategoryChange</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnNotifyCategoryChange(HeContext heContext) {
			CheckPermissions(heContext);
			lcvOnNotifyCategoryChange localVars = new lcvOnNotifyCategoryChange();
			try {
				// NotifyWidgetGetMessage
				ExtendedActions.NotifyWidgetGetMessage(heContext, out localVars.resNotifyWidgetGetMessage_outParamMessage);
				// String_Split
				Actions.ActionString_Split(heContext, localVars.resNotifyWidgetGetMessage_outParamMessage, "|", out localVars.resString_Split_outParamList);
				if ((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId)) {
					// (VOC)
					int CompID_Aux_37_index = varLccurrentrow_popup;
					RCStaffViewRecordRecord CompID_Aux_37 = getWtActiveEnrolmentsListList()[CompID_Aux_37_index];
					CompID_Aux_37.ssSTStaffViewRecord.ssVocPeriodRAG = BuiltInFunction.TextToEntityRefText((((localVars.resString_Split_outParamList[0] .ssSTText.ssValue== "")) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(localVars.resString_Split_outParamList[0] .ssSTText.ssValue)));
					ssActiveEnrolmentsListList[CompID_Aux_37_index] = CompID_Aux_37; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.VocPeriodRAG = TextToEntityRefText
					int CompID_Aux_38_index = varLccurrentrow_popup;
					RCStaffViewRecordRecord CompID_Aux_38 = getWtActiveEnrolmentsListList()[CompID_Aux_38_index];
					CompID_Aux_38.ssSTStaffViewRecord.ssVocOverallRAG = BuiltInFunction.TextToEntityRefText((((localVars.resString_Split_outParamList[1] .ssSTText.ssValue== "")) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(localVars.resString_Split_outParamList[1] .ssSTText.ssValue)));
					ssActiveEnrolmentsListList[CompID_Aux_38_index] = CompID_Aux_38; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.VocOverallRAG = TextToEntityRefText
					int CompID_Aux_39_index = varLccurrentrow_popup;
					RCStaffViewRecordRecord CompID_Aux_39 = getWtActiveEnrolmentsListList()[CompID_Aux_39_index];
					CompID_Aux_39.ssSTStaffViewRecord.ssStudentCatVocShortTermUpdatedAt = Convert.ToDateTime(BuiltInFunction.TextToDateTime(localVars.resString_Split_outParamList[2] .ssSTText.ssValue).ToString("yyyy-M-d"));
					ssActiveEnrolmentsListList[CompID_Aux_39_index] = CompID_Aux_39; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatVocShortTermUpdatedAt = TextToDateTime
					int CompID_Aux_40_index = varLccurrentrow_popup;
					RCStaffViewRecordRecord CompID_Aux_40 = getWtActiveEnrolmentsListList()[CompID_Aux_40_index];
					CompID_Aux_40.ssSTStaffViewRecord.ssStudentCatVocOverallUpdatedAt = Convert.ToDateTime(BuiltInFunction.TextToDateTime(localVars.resString_Split_outParamList[3] .ssSTText.ssValue).ToString("yyyy-M-d"));
					ssActiveEnrolmentsListList[CompID_Aux_40_index] = CompID_Aux_40; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatVocOverallUpdatedAt = TextToDateTime
					int CompID_Aux_41_index = varLccurrentrow_popup;
					RCStaffViewRecordRecord CompID_Aux_41 = getWtActiveEnrolmentsListList()[CompID_Aux_41_index];
					CompID_Aux_41.ssSTStaffViewRecord.ssStudentCatVocShortTermLastUpdatedBy = localVars.resString_Split_outParamList[4] .ssSTText.ssValue;
					ssActiveEnrolmentsListList[CompID_Aux_41_index] = CompID_Aux_41; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatVocShortTermLastUpdatedBy =
					// String_Split.List[4].Text.Value
					int CompID_Aux_42_index = varLccurrentrow_popup;
					RCStaffViewRecordRecord CompID_Aux_42 = getWtActiveEnrolmentsListList()[CompID_Aux_42_index];
					CompID_Aux_42.ssSTStaffViewRecord.ssStudentCatVocOverallLastUpdatedBy = localVars.resString_Split_outParamList[5] .ssSTText.ssValue;
					ssActiveEnrolmentsListList[CompID_Aux_42_index] = CompID_Aux_42; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatVocOverallLastUpdatedBy =
					// String_Split.List[5].Text.Value

				} else {
					if ((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("9J+4M6ZeU0+g4qKAzSFbVg")).ssId)) {
						// (Math)
						int CompID_Aux_43_index = varLccurrentrow_popup;
						RCStaffViewRecordRecord CompID_Aux_43 = getWtActiveEnrolmentsListList()[CompID_Aux_43_index];
						CompID_Aux_43.ssSTStaffViewRecord.ssMathPeriodRAG = BuiltInFunction.TextToEntityRefText((((localVars.resString_Split_outParamList[0] .ssSTText.ssValue== "")) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(localVars.resString_Split_outParamList[0] .ssSTText.ssValue)));
						ssActiveEnrolmentsListList[CompID_Aux_43_index] = CompID_Aux_43; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.MathPeriodRAG = TextToEntityRefText
						int CompID_Aux_44_index = varLccurrentrow_popup;
						RCStaffViewRecordRecord CompID_Aux_44 = getWtActiveEnrolmentsListList()[CompID_Aux_44_index];
						CompID_Aux_44.ssSTStaffViewRecord.ssMathOverallRAG = BuiltInFunction.TextToEntityRefText((((localVars.resString_Split_outParamList[1] .ssSTText.ssValue== "")) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(localVars.resString_Split_outParamList[1] .ssSTText.ssValue)));
						ssActiveEnrolmentsListList[CompID_Aux_44_index] = CompID_Aux_44; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.MathOverallRAG = TextToEntityRefText
						int CompID_Aux_45_index = varLccurrentrow_popup;
						RCStaffViewRecordRecord CompID_Aux_45 = getWtActiveEnrolmentsListList()[CompID_Aux_45_index];
						CompID_Aux_45.ssSTStaffViewRecord.ssStudentCatMathShortTermUpdatedAt = Convert.ToDateTime(BuiltInFunction.TextToDateTime(localVars.resString_Split_outParamList[2] .ssSTText.ssValue).ToString("yyyy-M-d"));
						ssActiveEnrolmentsListList[CompID_Aux_45_index] = CompID_Aux_45; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatMathShortTermUpdatedAt = TextToDateTime
						int CompID_Aux_46_index = varLccurrentrow_popup;
						RCStaffViewRecordRecord CompID_Aux_46 = getWtActiveEnrolmentsListList()[CompID_Aux_46_index];
						CompID_Aux_46.ssSTStaffViewRecord.ssStudentCatMathOverallUpdatedAt = Convert.ToDateTime(BuiltInFunction.TextToDateTime(localVars.resString_Split_outParamList[3] .ssSTText.ssValue).ToString("yyyy-M-d"));
						ssActiveEnrolmentsListList[CompID_Aux_46_index] = CompID_Aux_46; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatMathOverallUpdatedAt = TextToDateTime
						int CompID_Aux_47_index = varLccurrentrow_popup;
						RCStaffViewRecordRecord CompID_Aux_47 = getWtActiveEnrolmentsListList()[CompID_Aux_47_index];
						CompID_Aux_47.ssSTStaffViewRecord.ssStudentCatMathShortTermLastUpdatedBy = localVars.resString_Split_outParamList[4] .ssSTText.ssValue;
						ssActiveEnrolmentsListList[CompID_Aux_47_index] = CompID_Aux_47; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatMathShortTermLastUpdatedBy =
						// String_Split.List[4].Text.Value
						int CompID_Aux_48_index = varLccurrentrow_popup;
						RCStaffViewRecordRecord CompID_Aux_48 = getWtActiveEnrolmentsListList()[CompID_Aux_48_index];
						CompID_Aux_48.ssSTStaffViewRecord.ssStudentCatMathOverallLastUpdatedBy = localVars.resString_Split_outParamList[5] .ssSTText.ssValue;
						ssActiveEnrolmentsListList[CompID_Aux_48_index] = CompID_Aux_48; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatMathOverallLastUpdatedBy =
						// String_Split.List[5].Text.Value

					} else {
						if ((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("hh0WWQ2FF0acLTzRV4EL3Q")).ssId)) {
							// (English)
							int CompID_Aux_49_index = varLccurrentrow_popup;
							RCStaffViewRecordRecord CompID_Aux_49 = getWtActiveEnrolmentsListList()[CompID_Aux_49_index];
							CompID_Aux_49.ssSTStaffViewRecord.ssEngPeriodRAG = BuiltInFunction.TextToEntityRefText((((localVars.resString_Split_outParamList[0] .ssSTText.ssValue== "")) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(localVars.resString_Split_outParamList[0] .ssSTText.ssValue)));
							ssActiveEnrolmentsListList[CompID_Aux_49_index] = CompID_Aux_49; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.EngPeriodRAG = TextToEntityRefText
							int CompID_Aux_50_index = varLccurrentrow_popup;
							RCStaffViewRecordRecord CompID_Aux_50 = getWtActiveEnrolmentsListList()[CompID_Aux_50_index];
							CompID_Aux_50.ssSTStaffViewRecord.ssEngOverallRAG = BuiltInFunction.TextToEntityRefText((((localVars.resString_Split_outParamList[1] .ssSTText.ssValue== "")) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(localVars.resString_Split_outParamList[1] .ssSTText.ssValue)));
							ssActiveEnrolmentsListList[CompID_Aux_50_index] = CompID_Aux_50; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.EngOverallRAG = TextToEntityRefText
							int CompID_Aux_51_index = varLccurrentrow_popup;
							RCStaffViewRecordRecord CompID_Aux_51 = getWtActiveEnrolmentsListList()[CompID_Aux_51_index];
							CompID_Aux_51.ssSTStaffViewRecord.ssStudentCatEngShortTermUpdatedAt = Convert.ToDateTime(BuiltInFunction.TextToDateTime(localVars.resString_Split_outParamList[2] .ssSTText.ssValue).ToString("yyyy-M-d"));
							ssActiveEnrolmentsListList[CompID_Aux_51_index] = CompID_Aux_51; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatEngShortTermUpdatedAt = TextToDateTime
							int CompID_Aux_52_index = varLccurrentrow_popup;
							RCStaffViewRecordRecord CompID_Aux_52 = getWtActiveEnrolmentsListList()[CompID_Aux_52_index];
							CompID_Aux_52.ssSTStaffViewRecord.ssStudentCatEngOverallUpdatedAt = Convert.ToDateTime(BuiltInFunction.TextToDateTime(localVars.resString_Split_outParamList[3] .ssSTText.ssValue).ToString("yyyy-M-d"));
							ssActiveEnrolmentsListList[CompID_Aux_52_index] = CompID_Aux_52; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatEngOverallUpdatedAt = TextToDateTime
							int CompID_Aux_53_index = varLccurrentrow_popup;
							RCStaffViewRecordRecord CompID_Aux_53 = getWtActiveEnrolmentsListList()[CompID_Aux_53_index];
							CompID_Aux_53.ssSTStaffViewRecord.ssStudentCatEngShortTermLastUpdatedBy = localVars.resString_Split_outParamList[4] .ssSTText.ssValue;
							ssActiveEnrolmentsListList[CompID_Aux_53_index] = CompID_Aux_53; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatEngShortTermLastUpdatedBy =
							// String_Split.List[4].Text.Value
							int CompID_Aux_54_index = varLccurrentrow_popup;
							RCStaffViewRecordRecord CompID_Aux_54 = getWtActiveEnrolmentsListList()[CompID_Aux_54_index];
							CompID_Aux_54.ssSTStaffViewRecord.ssStudentCatEngOverallLastUpdatedBy = localVars.resString_Split_outParamList[5] .ssSTText.ssValue;
							ssActiveEnrolmentsListList[CompID_Aux_54_index] = CompID_Aux_54; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatEngOverallLastUpdatedBy =
							// String_Split.List[5].Text.Value

						} else {
							// (MLW)
							int CompID_Aux_55_index = varLccurrentrow_popup;
							RCStaffViewRecordRecord CompID_Aux_55 = getWtActiveEnrolmentsListList()[CompID_Aux_55_index];
							CompID_Aux_55.ssSTStaffViewRecord.ssMLWPeriodRAG = BuiltInFunction.TextToEntityRefText((((localVars.resString_Split_outParamList[0] .ssSTText.ssValue== "")) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(localVars.resString_Split_outParamList[0] .ssSTText.ssValue)));
							ssActiveEnrolmentsListList[CompID_Aux_55_index] = CompID_Aux_55; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.MLWPeriodRAG = TextToEntityRefText
							int CompID_Aux_56_index = varLccurrentrow_popup;
							RCStaffViewRecordRecord CompID_Aux_56 = getWtActiveEnrolmentsListList()[CompID_Aux_56_index];
							CompID_Aux_56.ssSTStaffViewRecord.ssMLWOverallRAG = BuiltInFunction.TextToEntityRefText((((localVars.resString_Split_outParamList[1] .ssSTText.ssValue== "")) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(localVars.resString_Split_outParamList[1] .ssSTText.ssValue)));
							ssActiveEnrolmentsListList[CompID_Aux_56_index] = CompID_Aux_56; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.MLWOverallRAG = TextToEntityRefText
							int CompID_Aux_57_index = varLccurrentrow_popup;
							RCStaffViewRecordRecord CompID_Aux_57 = getWtActiveEnrolmentsListList()[CompID_Aux_57_index];
							CompID_Aux_57.ssSTStaffViewRecord.ssStudentCatMLWShortTermUpdatedAt = Convert.ToDateTime(BuiltInFunction.TextToDateTime(localVars.resString_Split_outParamList[2] .ssSTText.ssValue).ToString("yyyy-M-d"));
							ssActiveEnrolmentsListList[CompID_Aux_57_index] = CompID_Aux_57; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatMLWShortTermUpdatedAt = TextToDateTime
							int CompID_Aux_58_index = varLccurrentrow_popup;
							RCStaffViewRecordRecord CompID_Aux_58 = getWtActiveEnrolmentsListList()[CompID_Aux_58_index];
							CompID_Aux_58.ssSTStaffViewRecord.ssStudentCatMLWOverallUpdatedAt = Convert.ToDateTime(BuiltInFunction.TextToDateTime(localVars.resString_Split_outParamList[3] .ssSTText.ssValue).ToString("yyyy-M-d"));
							ssActiveEnrolmentsListList[CompID_Aux_58_index] = CompID_Aux_58; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatMLWOverallUpdatedAt = TextToDateTime
							int CompID_Aux_59_index = varLccurrentrow_popup;
							RCStaffViewRecordRecord CompID_Aux_59 = getWtActiveEnrolmentsListList()[CompID_Aux_59_index];
							CompID_Aux_59.ssSTStaffViewRecord.ssStudentCatMLWShortTermLastUpdatedBy = localVars.resString_Split_outParamList[4] .ssSTText.ssValue;
							ssActiveEnrolmentsListList[CompID_Aux_59_index] = CompID_Aux_59; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatMLWShortTermLastUpdatedBy =
							// String_Split.List[4].Text.Value
							int CompID_Aux_60_index = varLccurrentrow_popup;
							RCStaffViewRecordRecord CompID_Aux_60 = getWtActiveEnrolmentsListList()[CompID_Aux_60_index];
							CompID_Aux_60.ssSTStaffViewRecord.ssStudentCatMLWOverallLastUpdatedBy = localVars.resString_Split_outParamList[5] .ssSTText.ssValue;
							ssActiveEnrolmentsListList[CompID_Aux_60_index] = CompID_Aux_60; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentCatMLWOverallLastUpdatedBy =
							// String_Split.List[5].Text.Value

						}

					}

				}
				// Refresh Widget (wtActiveEnrolmentsList)
				((OSPageViewState) Page).AjaxRefresh(wtActiveEnrolmentsList, varLccurrentrow_popup, "None", "Refresh", false, null, StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOnPopUpNotesNotify: VarsBag {
			public RLNoteRecordList queryResGetNotesByStudentId_outParamList = new RLNoteRecordList();
			public int queryResGetNotesByStudentId_outParamCount = 0;

			public lcvOnPopUpNotesNotify() {
			}
		}
		/// <summary>
		/// Action <code>CommandOnPopUpNotesNotify</code> that represents the Service Studio screen action
		///  <code>OnPopUpNotesNotify</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnPopUpNotesNotify(HeContext heContext) {
			CheckPermissions(heContext);
			lcvOnPopUpNotesNotify localVars = new lcvOnPopUpNotesNotify();
			try {
				// Query datasetGetNotesByStudentId
				int datasetGetNotesByStudentId_maxRecords = 0;
				localVars.queryResGetNotesByStudentId_outParamList = FuncCommandOnPopUpNotesNotify.datasetGetNotesByStudentId(heContext, datasetGetNotesByStudentId_maxRecords, IterationMultiplicity.Multiple, out localVars.queryResGetNotesByStudentId_outParamCount, getWtActiveEnrolmentsListList()[varLccurrentrow_popup] .ssSTStaffViewRecord.ssStudentReference
				);
				// Set Notes Number
				int CompID_Aux_61_index = varLccurrentrow_popup;
				RCStaffViewRecordRecord CompID_Aux_61 = getWtActiveEnrolmentsListList()[CompID_Aux_61_index];
				CompID_Aux_61.ssSTStaffViewRecord.ssNotesNr = localVars.queryResGetNotesByStudentId_outParamList.Length;
				ssActiveEnrolmentsListList[CompID_Aux_61_index] = CompID_Aux_61; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.NotesNr = GetNotesByStudentId.List.Length
				// Refresh Widget (wtActiveEnrolmentsList)
				((OSPageViewState) Page).AjaxRefresh(wtActiveEnrolmentsList, varLccurrentrow_popup, "None", "Refresh", false, null, StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandOpenNotesPopup</code> that represents the Service Studio screen action
		///  <code>OpenNotesPopup</code> <p> Description: </p>
		/// </summary>
		private bool CommandOpenNotesPopup(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				varLcshow = true; // show = True
				varLccurrentrow_popup = getWtActiveEnrolmentsListList().CurrentRowNumber; // currentrow_popup = ActiveEnrolmentsList.List.CurrentRowNumber
				// Refresh Widget (wtPopUpNotes)
				((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtPopUpNotes"), "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvShowLearnerDetail: VarsBag {
			public string inParamStudentReference;
			public lcvShowLearnerDetail(string inParamStudentReference) {
				this.inParamStudentReference = inParamStudentReference;
			}
		}
		/// <summary>
		/// Action <code>CommandShowLearnerDetail</code> that represents the Service Studio screen action
		///  <code>ShowLearnerDetail</code> <p> Description: </p>
		/// </summary>
		private bool CommandShowLearnerDetail(HeContext heContext, string inParamStudentReference) {
			CheckPermissions(heContext);
			try {
				Global.App.OsContext.Session["CaseConferencing.yPos"] = (160+((getWtActiveEnrolmentsListList().CurrentRowNumber-1) *83)); // yPos = 160 + ActiveEnrolmentsList.List.CurrentRowNumber - 1 * 83
				// Destination = LearnerDetailsOverview

				if (OSPage.IsAjaxRequest) {
					// go to target page
					{

						((OSPage) Page).ClearErrorHandler();
						// get parameters
						heContext.Session["_ScreenParametersKey"] = "Ll6e8OlyEUirEGk6MODdUA";
						ArrayList screenParameters = new ArrayList();
						screenParameters.Add(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference);
						screenParameters.Add(inParamSessionID);
						screenParameters.Add(inParamCourseCode);
						screenParameters.Add(false);
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"] = screenParameters;
						string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference) + "&" +
						 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionID)) + "&" +
						 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode);
						sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
						string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsOverview.aspx" + sURLQuery;
						((OSPageViewState) Page).RedirectLocation = sURL;
						return false;

					}
				} else {
					// go to target page
					{

						((OSPage) Page).ClearErrorHandler();
						// get parameters
						heContext.Session["_ScreenParametersKey"] = "Ll6e8OlyEUirEGk6MODdUA";
						ArrayList screenParameters = new ArrayList();
						screenParameters.Add(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference);
						screenParameters.Add(inParamSessionID);
						screenParameters.Add(inParamCourseCode);
						screenParameters.Add(false);
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"] = screenParameters;
						Server.Transfer("LearnerDetailsOverview.aspx");
						return false;

					}
				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvRefreshStudentTable: VarsBag {
			public bool inParamClearSearchCourses;
			public bool inParamShowMoreRows;
			public bool inParamStudentRevised;
			public bool inParamIsToggleFavorite;
			public string inParamColumn;
			public string inParamDefaultOrder;
			public bool inParamMyTimetableChange;
			/// <summary>
			/// Variable <code>varLcFilterDefault</code> that represents the Service Studio local variable
			///  <code>FilterDefault</code> <p>Description: </p>
			/// </summary>
			public RCStaffView_SearchStaffView_FilterRecord varLcFilterDefault = new RCStaffView_SearchStaffView_FilterRecord(null);

			public RLTextRecordList resString_Split_ByComma2_outParamList = new RLTextRecordList();

			public Actions.lcoSplitEnrolments resSplitEnrolments = new Actions.lcoSplitEnrolments();
			public RLStudent_GroupRecordList queryResGetStudentGroups2_outParamList = new RLStudent_GroupRecordList();
			public int queryResGetStudentGroups2_outParamCount = 0;

			public RLTextRecordList resStringSplit_ByCrossBar2_outParamList = new RLTextRecordList();

			public string resNotifyWidgetGetMessage_outParamMessage = "";

			public lcvRefreshStudentTable(bool inParamClearSearchCourses, bool inParamShowMoreRows, bool inParamStudentRevised, bool inParamIsToggleFavorite, string inParamColumn, string inParamDefaultOrder, bool inParamMyTimetableChange) {
				this.inParamClearSearchCourses = inParamClearSearchCourses;
				this.inParamShowMoreRows = inParamShowMoreRows;
				this.inParamStudentRevised = inParamStudentRevised;
				this.inParamIsToggleFavorite = inParamIsToggleFavorite;
				this.inParamColumn = inParamColumn;
				this.inParamDefaultOrder = inParamDefaultOrder;
				this.inParamMyTimetableChange = inParamMyTimetableChange;
			}
		}
		/// <summary>
		/// Action <code>CommandRefreshStudentTable</code> that represents the Service Studio screen action
		///  <code>RefreshStudentTable</code> <p> Description: </p>
		/// </summary>
		private bool CommandRefreshStudentTable(HeContext heContext, bool inParamClearSearchCourses, bool inParamShowMoreRows, bool inParamStudentRevised, bool inParamIsToggleFavorite, string inParamColumn, string inParamDefaultOrder, bool inParamMyTimetableChange) {
			CheckPermissions(heContext);
			lcvRefreshStudentTable localVars = new lcvRefreshStudentTable(inParamClearSearchCourses, inParamShowMoreRows, inParamStudentRevised, inParamIsToggleFavorite, inParamColumn, inParamDefaultOrder, inParamMyTimetableChange);
			try {
				if (localVars.inParamMyTimetableChange) {
					RCStaffView_SearchStaffView_FilterRecord CompID_Aux_62 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
					CompID_Aux_62.ssSTStaffView_Search.ssSearchType = 2;
					Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_62; // StaffView_Search.StaffView_Search.SearchType = 2

				}
				// Order by Action
				if ((localVars.inParamColumn!= "")) {
					// (Same Column? )
					if ((localVars.inParamColumn==((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderBy)) {
						// Toggle Direction
						RCStaffView_SearchStaffView_FilterRecord CompID_Aux_63 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
						CompID_Aux_63.ssSTStaffView_Filter.ssOrderDirection = (((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderDirection== "ASC")) ?("DESC"):("ASC"));
						Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_63; // StaffView_Search.StaffView_Filter.OrderDirection = internalIf

					} else {
						// Set Column
						RCStaffView_SearchStaffView_FilterRecord CompID_Aux_64 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
						CompID_Aux_64.ssSTStaffView_Filter.ssOrderBy = localVars.inParamColumn;
						Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_64; // StaffView_Search.StaffView_Filter.OrderBy = Column
						RCStaffView_SearchStaffView_FilterRecord CompID_Aux_65 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
						CompID_Aux_65.ssSTStaffView_Filter.ssOrderDirection = localVars.inParamDefaultOrder;
						Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_65; // StaffView_Search.StaffView_Filter.OrderDirection = DefaultOrder

					}

				}
				if (localVars.inParamIsToggleFavorite) {
					// Toggle Favorite
					RCStaffView_SearchStaffView_FilterRecord CompID_Aux_66 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
					CompID_Aux_66.ssSTStaffView_Search.ssSearchType = ((((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchType==0) || (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchType==2))) ?(1):(0));
					Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_66; // StaffView_Search.StaffView_Search.SearchType = internalIf

				}
				if ((localVars.inParamShowMoreRows==true)) {
					// MaxRecords
					Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"] = (((int) Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"]) + ((int) Global.SiteProperties["RowsShown"])); // StaffViewMaxRecords = StaffViewMaxRecords + RowsShown

				}
				// NotifyWidgetGetMessage
				ExtendedActions.NotifyWidgetGetMessage(heContext, out localVars.resNotifyWidgetGetMessage_outParamMessage);
				// (filter)
				if ((localVars.resNotifyWidgetGetMessage_outParamMessage== "filter")) {
					localVars.varLcFilterDefault.ssSTStaffView_Filter.ssFilterVisible = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssFilterVisible; // FilterDefault.StaffView_Filter.FilterVisible = StaffView_Search.StaffView_Filter.FilterVisible
					localVars.varLcFilterDefault.ssSTStaffView_Filter.ssFilterActive = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssFilterActive; // FilterDefault.StaffView_Filter.FilterActive = StaffView_Search.StaffView_Filter.FilterActive
					localVars.varLcFilterDefault.ssSTStaffView_Search.ssSearchType = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchType; // FilterDefault.StaffView_Search.SearchType = StaffView_Search.StaffView_Search.SearchType
					// (Filter ? )
					if (((localVars.varLcFilterDefault.ssSTStaffView_Filter!=((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter) || (localVars.varLcFilterDefault.ssSTStaffView_Search!=((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search))) {
						// (Setvisible)
						RCStaffView_SearchStaffView_FilterRecord CompID_Aux_67 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
						CompID_Aux_67.ssSTStaffView_Filter.ssFilterActive = true;
						Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_67; // StaffView_Search.StaffView_Filter.FilterActive = True

					} else {
						// (Set invisible)
						RCStaffView_SearchStaffView_FilterRecord CompID_Aux_68 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
						CompID_Aux_68.ssSTStaffView_Filter.ssFilterActive = false;
						Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_68; // StaffView_Search.StaffView_Filter.FilterActive = False

					}
					// Refresh Widget (wtWrapper_Favorite)
					((OSPageViewState) Page).AjaxRefresh(wtWrapper_Favorite, "None", StoreViewState);

				}
				if (((localVars.inParamClearSearchCourses==true) || (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchType==1))) {
					// ClearInputAutoComplete
					inParamCourseCode = ""; // CourseCode = ""
					RCStaffView_SearchStaffView_FilterRecord CompID_Aux_69 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
					CompID_Aux_69.ssSTStaffView_Search.ssGroupDescription = "";
					Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_69; // StaffView_Search.StaffView_Search.GroupDescription = ""

				}
				// (All Students) ?
				if ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchType==2)) {
					Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"] = ((int) Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"]); // StaffViewMaxRecords = StaffViewMaxRecords

				}
				// Query QueryGetMyStudents
				{
					int QueryGetMyStudents_maxRecords = (((int) Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"]) +1);
					if (QueryGetMyStudents_maxRecords < 1) QueryGetMyStudents_maxRecords = 1;
					queryResGetMyStudents_outParamList = FuncssPreparation.QueryGetMyStudents(heContext, QueryGetMyStudents_maxRecords, IterationMultiplicity.Multiple, out queryResGetMyStudents_outParamCount, resSplitDomainAndUser_outParamUsername
					, (((inParamCourseCode!= "")) ?(inParamCourseCode):(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssGroupDescription))
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchKeyword
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchType
					, BuiltInFunction.NullDate()
					, ((int) Global.App.OsContext.Session["UserID"])
					, ENSafeguardingStatusEntity.GetRecordByKey(ObjectKey.Parse("meDqkJGkEka0FA+KqD8Tog")).ssId
					, ((((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssRAGStatusListIds== "") || (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssRAGStatusListIds== "\'0\'"))) ?(false):(true))
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssRAGStatusListIds
					, (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssAttendance_Red ? 1: 0)
					, (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssAttendance_Amber ? 1: 0)
					, (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssAttendance_Green ? 1: 0)
					, (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssPunctuality_Red ? 1: 0)
					, (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssPunctuality_Amber ? 1: 0)
					, (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssPunctuality_Green ? 1: 0)
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssCFC
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssSafeGuard
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssReward
					, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("hh0WWQ2FF0acLTzRV4EL3Q")).ssId
					, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId
					, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("9J+4M6ZeU0+g4qKAzSFbVg")).ssId
					, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("iy5u49fNYkGR3K77QLSz4g")).ssId
					, ((((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssVOC_Red||((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssVOC_Green) || ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssVOC_Amber)) ?(true):(false))
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssVOC_Red) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssVOC_Green) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssVOC_Amber) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId):(""))) + "\'")
					, ((((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMath_Red||((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMath_Green) || ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMath_Amber)) ?(true):(false))
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMath_Red) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMath_Green) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMath_Amber) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId):(""))) + "\'")
					, ((((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssEnglish_Red||((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssEnglish_Green) || ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssEnglish_Amber)) ?(true):(false))
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssEnglish_Red) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssEnglish_Green) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssEnglish_Amber) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId):(""))) + "\'")
					, ((((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMLW_Red||((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMLW_Green) || ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMLW_Amber)) ?(true):(false))
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMLW_Red) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMLW_Green) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(""))) + "\'")
					, (("\'" + ((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssMLW_Amber) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId):(""))) + "\'")
					, Functions.ActionGetMyStaffListOrder(heContext, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderBy)
					, ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderDirection
					, (((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssSupports== "")) ?("\'0\'"):(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssSupports))
					, (((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssSupports== "")) ?(false):(true))
					, resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssYYYY_Academic
					, inParamSessionID
					, ((localVars.inParamStudentRevised) ?(BuiltInFunction.TextToInteger(localVars.resNotifyWidgetGetMessage_outParamMessage)):((-1)))
					, ((BuiltInFunction.TextToDateValidate(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchKeyword)) ?(BuiltInFunction.TextToDate(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchKeyword)):(BuiltInFunction.NullDate()))
					, (((int) Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"]) +1)
					, Convert.ToDateTime(BuiltInFunction.TextToDateTime(resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssDD_MMMM_YYYY).ToString("yyyy-M-d"))
					, ENMLWStagesEntity.GetRecordByKey(ObjectKey.Parse("4UtQeZsXLE+loQtCc6xR5A")).ssId
					, ENMLWStagesEntity.GetRecordByKey(ObjectKey.Parse("oSjGpeFpAkSUy1tEn+I7gA")).ssId
					, 5
					, resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssYY_YY
					);
				}
				// Query datasetGetGroups
				{
					int datasetGetGroups_maxRecords = 1;
					if (datasetGetGroups_maxRecords < 1) datasetGetGroups_maxRecords = 1;
					queryResGetGroups_outParamList = FuncssPreparation.datasetGetGroups(heContext, datasetGetGroups_maxRecords, IterationMultiplicity.Never, out queryResGetGroups_outParamCount, inParamCourseCode
					);
				}
				// Foreach GetMyStudents.List
				queryResGetMyStudents_outParamList.StartIteration();
				try {
					while (! queryResGetMyStudents_outParamList.Eof) {
						// SupportIdList = ""
						if (!((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssSupportIdList== ""))) {
							// String_Split_ByComma2
							Actions.ActionString_Split(heContext, queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssSupportIdList, ";", out localVars.resString_Split_ByComma2_outParamList);
							// Foreach String_Split_ByComma2.List
							localVars.resString_Split_ByComma2_outParamList.StartIteration();
							try {
								while (!localVars.resString_Split_ByComma2_outParamList.Eof) {
									// StringSplit_ByCrossBar2
									Actions.ActionString_Split(heContext, localVars.resString_Split_ByComma2_outParamList.CurrentRec.ssSTText.ssValue, "|", out localVars.resStringSplit_ByCrossBar2_outParamList);
									if ((BuiltInFunction.Trim(localVars.resStringSplit_ByCrossBar2_outParamList[0] .ssSTText.ssValue) == "Transport")) {
										// (Transport)
										queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssTransport = ((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssTransport+(((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssTransport!= "")) ?(";"):(""))) +localVars.resStringSplit_ByCrossBar2_outParamList[1] .ssSTText.ssValue); // GetMyStudents.List.Current.StaffViewRecord.Transport = GetMyStudents.List.Current.StaffViewRecord.Transport +
										// internalIf + StringSplit_ByCrossBar2.List[1].Text.Value

									} else {
										if ((BuiltInFunction.Trim(localVars.resStringSplit_ByCrossBar2_outParamList[0] .ssSTText.ssValue) == "Financial")) {
											// (Financial)
											queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssFinancial = ((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssFinancial+(((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssFinancial!= "")) ?(";"):(""))) +localVars.resStringSplit_ByCrossBar2_outParamList[1] .ssSTText.ssValue); // GetMyStudents.List.Current.StaffViewRecord.Financial = GetMyStudents.List.Current.StaffViewRecord.Financial +
											// internalIf + StringSplit_ByCrossBar2.List[1].Text.Value

										} else {
											if ((BuiltInFunction.Trim(localVars.resStringSplit_ByCrossBar2_outParamList[0] .ssSTText.ssValue) == "Academic")) {
												// (Academic)
												queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssAcademic = ((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssAcademic+(((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssAcademic!= "")) ?(";"):(""))) +localVars.resStringSplit_ByCrossBar2_outParamList[1] .ssSTText.ssValue); // GetMyStudents.List.Current.StaffViewRecord.Academic = GetMyStudents.List.Current.StaffViewRecord.Academic +
												// internalIf + StringSplit_ByCrossBar2.List[1].Text.Value

											} else {
												if ((BuiltInFunction.Trim(localVars.resStringSplit_ByCrossBar2_outParamList[0] .ssSTText.ssValue) == "Personal")) {
													// (Personal)
													queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssPersonal = ((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssPersonal+(((queryResGetMyStudents_outParamList.CurrentRec.ssSTStaffViewRecord.ssPersonal!= "")) ?(";"):(""))) +localVars.resStringSplit_ByCrossBar2_outParamList[1] .ssSTText.ssValue); // GetMyStudents.List.Current.StaffViewRecord.Personal = GetMyStudents.List.Current.StaffViewRecord.Personal +
													// internalIf + StringSplit_ByCrossBar2.List[1].Text.Value

												} else {
													localVars.resString_Split_ByComma2_outParamList.Advance();
													continue;

												}

											}

										}

									}
									localVars.resString_Split_ByComma2_outParamList.Advance();
								}
							} finally {
								localVars.resString_Split_ByComma2_outParamList.EndIteration();
							}

						}
						queryResGetMyStudents_outParamList.Advance();
					}
				} finally {
					queryResGetMyStudents_outParamList.EndIteration();
				}
				if (((((((inParamCourseCode!= "")) ?(inParamCourseCode):(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssGroupDescription)) != "")) ?(true):(false))) {
					varLcEnrolmentsSplit = true; // EnrolmentsSplit = True
					// Query QueryGetStudentGroups2
					int QueryGetStudentGroups2_maxRecords = 0;
					localVars.queryResGetStudentGroups2_outParamList = FuncCommandRefreshStudentTable.QueryGetStudentGroups2(heContext, QueryGetStudentGroups2_maxRecords, IterationMultiplicity.Multiple, out localVars.queryResGetStudentGroups2_outParamCount, (((inParamCourseCode!= "")) ?(inParamCourseCode):(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssGroupDescription))
					);
					// SplitEnrolments
					Actions.ActionSplitEnrolments(heContext, queryResGetMyStudents_outParamList, localVars.queryResGetStudentGroups2_outParamList, out localVars.resSplitEnrolments.outParamActiveEnrolments, out localVars.resSplitEnrolments.outParamCompletedEnrolments, out localVars.resSplitEnrolments.outParamTransferredEnrolments, out localVars.resSplitEnrolments.outParamWithdrawnEnrolments);
					varLcActiveEnrolments = localVars.resSplitEnrolments.outParamActiveEnrolments; // ActiveEnrolments = SplitEnrolments.ActiveEnrolments
					varLcWithdrawnEnrolments = localVars.resSplitEnrolments.outParamWithdrawnEnrolments; // WithdrawnEnrolments = SplitEnrolments.WithdrawnEnrolments
					varLcTransferredEnrolments = localVars.resSplitEnrolments.outParamTransferredEnrolments; // TransferredEnrolments = SplitEnrolments.TransferredEnrolments
					varLcCompletedEnrolments = localVars.resSplitEnrolments.outParamCompletedEnrolments; // CompletedEnrolments = SplitEnrolments.CompletedEnrolments

				} else {
					varLcActiveEnrolments = queryResGetMyStudents_outParamList; // ActiveEnrolments = GetMyStudents.List
					varLcWithdrawnEnrolments = varLcBlankStaffViewRecordList; // WithdrawnEnrolments = BlankStaffViewRecordList
					varLcCompletedEnrolments = varLcBlankStaffViewRecordList; // CompletedEnrolments = BlankStaffViewRecordList
					varLcTransferredEnrolments = varLcBlankStaffViewRecordList; // TransferredEnrolments = BlankStaffViewRecordList
					varLcEnrolmentsSplit = false; // EnrolmentsSplit = False

				}
				// Refresh Widget (wtWrapperContent)
				ssActiveEnrolmentsListListDoDataBind = true;
				ssWithdrawnEnrolmentsListListDoDataBind = true;
				ssCompletedEnrolmentsListListDoDataBind = true;
				ssTransferredEnrolmentsListListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtWrapperContent"), "None", StoreViewState);
				// Refresh Widget (wtWrapper_Filter)
				((OSPageViewState) Page).AjaxRefresh(wtWrapper_Filter, "None", StoreViewState);
				if ((localVars.inParamColumn!= "")) {
					// Refresh Widget (wtListHeader)
					((OSPageViewState) Page).AjaxRefresh(wtListHeader, "None", StoreViewState);

				}
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOpenStudentRAG: VarsBag {
			public int resUserCheck2_outParamPermissionType = 0;

			public lcvOpenStudentRAG() {
			}
		}
		/// <summary>
		/// Action <code>CommandOpenStudentRAG</code> that represents the Service Studio screen action
		///  <code>OpenStudentRAG</code> <p> Description: </p>
		/// </summary>
		private bool CommandOpenStudentRAG(HeContext heContext) {
			CheckPermissions(heContext);
			lcvOpenStudentRAG localVars = new lcvOpenStudentRAG();
			try {
				// UserCheck2
				Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("GMC2Cg5OBk2I5KHK3cOUQg")).ssId, out localVars.resUserCheck2_outParamPermissionType);
				if ((localVars.resUserCheck2_outParamPermissionType==BuiltInFunction.NullIdentifier())) {
					// Update Screen
					return true;

				} else {
					varLcshow = true; // show = True
					varLccurrentrow_popup = getWtActiveEnrolmentsListList().CurrentRowNumber; // currentrow_popup = ActiveEnrolmentsList.List.CurrentRowNumber
					// Refresh Widget (wtPopUpStudenRAG)
					((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtPopUpStudenRAG"), "None", StoreViewState);
					// Update Screen
					return true;

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOpenTooltipPopup: VarsBag {
			public string inParamintooltip;
			public lcvOpenTooltipPopup(string inParamintooltip) {
				this.inParamintooltip = inParamintooltip;
			}
		}
		/// <summary>
		/// Action <code>CommandOpenTooltipPopup</code> that represents the Service Studio screen action
		///  <code>OpenTooltipPopup</code> <p> Description: </p>
		/// </summary>
		private bool CommandOpenTooltipPopup(HeContext heContext, string inParamintooltip) {
			CheckPermissions(heContext);
			lcvOpenTooltipPopup localVars = new lcvOpenTooltipPopup(inParamintooltip);
			try {
				varLcshow = true; // show = True
				varLccurrentrow_popup = getWtActiveEnrolmentsListList().CurrentRowNumber; // currentrow_popup = ActiveEnrolmentsList.List.CurrentRowNumber
				varLctooltip = localVars.inParamintooltip; // tooltip = intooltip
				// Refresh Widget (wtPopUp_Tootip)
				((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtPopUp_Tootip"), "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvToogleFavourite: VarsBag {
			/// <summary>
			/// Variable <code>varLcStaffStudentFavourite</code> that represents the Service Studio local variable
			///  <code>StaffStudentFavourite</code> <p>Description: </p>
			/// </summary>
			public RCStaffStudentFavouriteRecord varLcStaffStudentFavourite = new RCStaffStudentFavouriteRecord(null);

			public RLStaffStudentFavouriteRecordList queryResGetNewFavourite_outParamList = new RLStaffStudentFavouriteRecordList();
			public int queryResGetNewFavourite_outParamCount = 0;

			public int resCreateStaffStudentFavourite_outParamId = 0;

			public lcvToogleFavourite() {
			}
		}
		/// <summary>
		/// Action <code>CommandToogleFavourite</code> that represents the Service Studio screen action
		///  <code>ToogleFavourite</code> <p> Description: </p>
		/// </summary>
		private bool CommandToogleFavourite(HeContext heContext) {
			CheckPermissions(heContext);
			lcvToogleFavourite localVars = new lcvToogleFavourite();
			try {
				// IsFavorite
				if ((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStaffStudentFavouriteId==BuiltInFunction.NullIdentifier())) {
					// Set Favourite
					localVars.varLcStaffStudentFavourite.ssENStaffStudentFavourite.ssStudentReference = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference; // StaffStudentFavourite.StaffStudentFavourite.StudentReference =
					// ActiveEnrolmentsList.List.Current.StaffViewRecord.StudentReference
					localVars.varLcStaffStudentFavourite.ssENStaffStudentFavourite.ssUserId = ((int) Global.App.OsContext.Session["UserID"]); // StaffStudentFavourite.StaffStudentFavourite.UserId = UserID
					// CreateStaffStudentFavourite
					ExtendedActions.CreateStaffStudentFavourite(heContext, localVars.varLcStaffStudentFavourite, out localVars.resCreateStaffStudentFavourite_outParamId);
					// Query datasetGetNewFavourite
					int datasetGetNewFavourite_maxRecords = 0;
					localVars.queryResGetNewFavourite_outParamList = FuncCommandToogleFavourite.datasetGetNewFavourite(heContext, datasetGetNewFavourite_maxRecords, IterationMultiplicity.Never, out localVars.queryResGetNewFavourite_outParamCount, getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference
					);
					getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStaffStudentFavouriteId = localVars.queryResGetNewFavourite_outParamList.CurrentRec.ssENStaffStudentFavourite.ssId; // ActiveEnrolmentsList.List.Current.StaffViewRecord.StaffStudentFavouriteId =
					// GetNewFavourite.List.Current.StaffStudentFavourite.Id

				} else {
					// DeleteStaffStudentFavourite
					ExtendedActions.DeleteStaffStudentFavourite(heContext, getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStaffStudentFavouriteId);
					getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStaffStudentFavouriteId = BuiltInFunction.NullIdentifier(); // ActiveEnrolmentsList.List.Current.StaffViewRecord.StaffStudentFavouriteId = NullIdentifier

				}
				// Refresh Widget (wtStudentFavourite)
				((OSPageViewState) Page).AjaxRefresh(Utils.getSelectedControlInRecordWidget(wtActiveEnrolmentsList, "wtStudentFavourite"), "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOpenCauseOfConcernPopUp: VarsBag {
			public int resUserCheck2_outParamPermissionType = 0;

			public lcvOpenCauseOfConcernPopUp() {
			}
		}
		/// <summary>
		/// Action <code>CommandOpenCauseOfConcernPopUp</code> that represents the Service Studio screen action
		///  <code>OpenCauseOfConcernPopUp</code> <p> Description: </p>
		/// </summary>
		private bool CommandOpenCauseOfConcernPopUp(HeContext heContext) {
			CheckPermissions(heContext);
			lcvOpenCauseOfConcernPopUp localVars = new lcvOpenCauseOfConcernPopUp();
			try {
				// UserCheck2
				Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("b2pJMuDp8U6rt2CiqWNG1A")).ssId, out localVars.resUserCheck2_outParamPermissionType);
				if ((localVars.resUserCheck2_outParamPermissionType==BuiltInFunction.NullIdentifier())) {
					// Update Screen
					return true;

				} else {
					varLcshow = true; // show = True
					varLccurrentrow_popup = getWtActiveEnrolmentsListList().CurrentRowNumber; // currentrow_popup = ActiveEnrolmentsList.List.CurrentRowNumber
					// Refresh Widget (wtPopUp_CauseOfConcern)
					((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtPopUp_CauseOfConcern"), "None", StoreViewState);
					// Update Screen
					return true;

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOnNotifyRAGChange: VarsBag {
			public RLStudentRAGRecordList queryResGetStudentByStudentReference_outParamList = new RLStudentRAGRecordList();
			public int queryResGetStudentByStudentReference_outParamCount = 0;

			public lcvOnNotifyRAGChange() {
			}
		}
		/// <summary>
		/// Action <code>CommandOnNotifyRAGChange</code> that represents the Service Studio screen action
		///  <code>OnNotifyRAGChange</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnNotifyRAGChange(HeContext heContext) {
			CheckPermissions(heContext);
			lcvOnNotifyRAGChange localVars = new lcvOnNotifyRAGChange();
			try {
				// Query datasetGetStudentByStudentReference
				int datasetGetStudentByStudentReference_maxRecords = 0;
				localVars.queryResGetStudentByStudentReference_outParamList = FuncCommandOnNotifyRAGChange.datasetGetStudentByStudentReference(heContext, datasetGetStudentByStudentReference_maxRecords, IterationMultiplicity.Never, out localVars.queryResGetStudentByStudentReference_outParamCount, getWtActiveEnrolmentsListList()[varLccurrentrow_popup] .ssSTStaffViewRecord.ssStudentReference
				);
				// Set new RAG
				int CompID_Aux_70_index = varLccurrentrow_popup;
				RCStaffViewRecordRecord CompID_Aux_70 = getWtActiveEnrolmentsListList()[CompID_Aux_70_index];
				CompID_Aux_70.ssSTStaffViewRecord.ssStudentRAG = localVars.queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentRAG.ssRAG;
				ssActiveEnrolmentsListList[CompID_Aux_70_index] = CompID_Aux_70; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentRAG =
				// GetStudentByStudentReference.List.Current.StudentRAG.RAG
				int CompID_Aux_71_index = varLccurrentrow_popup;
				RCStaffViewRecordRecord CompID_Aux_71 = getWtActiveEnrolmentsListList()[CompID_Aux_71_index];
				CompID_Aux_71.ssSTStaffViewRecord.ssStudentRAGUpdateAt = localVars.queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentRAG.ssUpdatedAt;
				ssActiveEnrolmentsListList[CompID_Aux_71_index] = CompID_Aux_71; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentRAGUpdateAt =
				// GetStudentByStudentReference.List.Current.StudentRAG.UpdatedAt
				int CompID_Aux_72_index = varLccurrentrow_popup;
				RCStaffViewRecordRecord CompID_Aux_72 = getWtActiveEnrolmentsListList()[CompID_Aux_72_index];
				CompID_Aux_72.ssSTStaffViewRecord.ssStudentRAGUUpdatedBy = localVars.queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentRAG.ssUpdatedBy;
				ssActiveEnrolmentsListList[CompID_Aux_72_index] = CompID_Aux_72; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.StudentRAGUUpdatedBy =
				// GetStudentByStudentReference.List.Current.StudentRAG.UpdatedBy
				int CompID_Aux_73_index = varLccurrentrow_popup;
				RCStaffViewRecordRecord CompID_Aux_73 = getWtActiveEnrolmentsListList()[CompID_Aux_73_index];
				CompID_Aux_73.ssSTStaffViewRecord.ssIsSessionReviewed = (((inParamSessionID!=BuiltInFunction.NullIdentifier())) ?(true):(false));
				ssActiveEnrolmentsListList[CompID_Aux_73_index] = CompID_Aux_73; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.IsSessionReviewed = internalIf
				// Refresh Widget (wtActiveEnrolmentsList)
				((OSPageViewState) Page).AjaxRefresh(wtActiveEnrolmentsList, varLccurrentrow_popup, "None", "Refresh", false, null, StoreViewState);
				if ((inParamSessionID!=BuiltInFunction.NullIdentifier())) {
					// RunJavaScript
					Actions.ActionRunJavaScript(heContext, (("$(\'.LineWrapper_Line" +Convert.ToString(varLccurrentrow_popup)) + "\').slideUp(1000);"));

				}
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOpenRewardsPopUp: VarsBag {
			public int resUserCheck2_outParamPermissionType = 0;

			public lcvOpenRewardsPopUp() {
			}
		}
		/// <summary>
		/// Action <code>CommandOpenRewardsPopUp</code> that represents the Service Studio screen action
		///  <code>OpenRewardsPopUp</code> <p> Description: </p>
		/// </summary>
		private bool CommandOpenRewardsPopUp(HeContext heContext) {
			CheckPermissions(heContext);
			lcvOpenRewardsPopUp localVars = new lcvOpenRewardsPopUp();
			try {
				// UserCheck2
				Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("lKOCEf28DEau0pkIfBpw3A")).ssId, out localVars.resUserCheck2_outParamPermissionType);
				if ((localVars.resUserCheck2_outParamPermissionType==BuiltInFunction.NullIdentifier())) {
					// Update Screen
					return true;

				} else {
					varLcshow = true; // show = True
					varLccurrentrow_popup = getWtActiveEnrolmentsListList().CurrentRowNumber; // currentrow_popup = ActiveEnrolmentsList.List.CurrentRowNumber
					// Refresh Widget (wtPopUpRewards)
					((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtPopUpRewards"), "None", StoreViewState);
					// Update Screen
					return true;

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOnNotifyRewards: VarsBag {
			public string resNotifyWidgetGetMessage_outParamMessage = "";

			public RLTextRecordList resString_Split_outParamList = new RLTextRecordList();

			public lcvOnNotifyRewards() {
			}
		}
		/// <summary>
		/// Action <code>CommandOnNotifyRewards</code> that represents the Service Studio screen action
		///  <code>OnNotifyRewards</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnNotifyRewards(HeContext heContext) {
			CheckPermissions(heContext);
			lcvOnNotifyRewards localVars = new lcvOnNotifyRewards();
			try {
				// NotifyWidgetGetMessage
				ExtendedActions.NotifyWidgetGetMessage(heContext, out localVars.resNotifyWidgetGetMessage_outParamMessage);
				// String_Split
				Actions.ActionString_Split(heContext, localVars.resNotifyWidgetGetMessage_outParamMessage, "|", out localVars.resString_Split_outParamList);
				// SET Rewards
				int CompID_Aux_74_index = varLccurrentrow_popup;
				RCStaffViewRecordRecord CompID_Aux_74 = getWtActiveEnrolmentsListList()[CompID_Aux_74_index];
				CompID_Aux_74.ssSTStaffViewRecord.ssRewardsGreenNumber = (((localVars.resString_Split_outParamList.Length>0)) ?(BuiltInFunction.TextToInteger(localVars.resString_Split_outParamList.CurrentRec.ssSTText.ssValue)):(0));
				ssActiveEnrolmentsListList[CompID_Aux_74_index] = CompID_Aux_74; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.RewardsGreenNumber = internalIf
				int CompID_Aux_75_index = varLccurrentrow_popup;
				RCStaffViewRecordRecord CompID_Aux_75 = getWtActiveEnrolmentsListList()[CompID_Aux_75_index];
				CompID_Aux_75.ssSTStaffViewRecord.ssRewardsGoldNumber = (((localVars.resString_Split_outParamList.Length>0)) ?(BuiltInFunction.TextToInteger(localVars.resString_Split_outParamList[1] .ssSTText.ssValue)):(0));
				ssActiveEnrolmentsListList[CompID_Aux_75_index] = CompID_Aux_75; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.RewardsGoldNumber = internalIf
				// Refresh Widget (wtActiveEnrolmentsList)
				((OSPageViewState) Page).AjaxRefresh(wtActiveEnrolmentsList, varLccurrentrow_popup, "None", "Refresh", false, null, StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOnNotifyCauseOfConcern: VarsBag {
			public string resNotifyWidgetGetMessage_outParamMessage = "";

			public lcvOnNotifyCauseOfConcern() {
			}
		}
		/// <summary>
		/// Action <code>CommandOnNotifyCauseOfConcern</code> that represents the Service Studio screen action
		///  <code>OnNotifyCauseOfConcern</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnNotifyCauseOfConcern(HeContext heContext) {
			CheckPermissions(heContext);
			lcvOnNotifyCauseOfConcern localVars = new lcvOnNotifyCauseOfConcern();
			try {
				// NotifyWidgetGetMessage
				ExtendedActions.NotifyWidgetGetMessage(heContext, out localVars.resNotifyWidgetGetMessage_outParamMessage);
				int CompID_Aux_76_index = varLccurrentrow_popup;
				RCStaffViewRecordRecord CompID_Aux_76 = getWtActiveEnrolmentsListList()[CompID_Aux_76_index];
				CompID_Aux_76.ssSTStaffViewRecord.ssCauseOfConcernRAG = BuiltInFunction.TextToEntityRefText(localVars.resNotifyWidgetGetMessage_outParamMessage);
				ssActiveEnrolmentsListList[CompID_Aux_76_index] = CompID_Aux_76; // ActiveEnrolmentsList.List[currentrow_popup].StaffViewRecord.CauseOfConcernRAG = TextToEntityRefText
				// Refresh Widget (wtActiveEnrolmentsList)
				((OSPageViewState) Page).AjaxRefresh(wtActiveEnrolmentsList, varLccurrentrow_popup, "None", "Refresh", false, null, StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandOpenFilters</code> that represents the Service Studio screen action
		///  <code>OpenFilters</code> <p> Description: </p>
		/// </summary>
		private bool CommandOpenFilters(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// OpenFilter
				RCStaffView_SearchStaffView_FilterRecord CompID_Aux_77 = ((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]);
				CompID_Aux_77.ssSTStaffView_Filter.ssFilterVisible = (!((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssFilterVisible);
				Global.App.OsContext.Session["CaseConferencing.StaffView_Search"] = CompID_Aux_77; // StaffView_Search.StaffView_Filter.FilterVisible = notStaffView_Search.StaffView_Filter.FilterVisible
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance302 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance302_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main) sender;
		}
		/// <summary>
		/// wt_WebBlockInstance143 Functions
		/// </summary>
		public void webBlck_WebBlockInstance143_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate widget = (ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate) sender;
		}
		/// <summary>
		/// wt_If498 Functions
		/// </summary>
		bool if_wt_If498_hasRun=false;
		bool if_wt_If498_evalResult;
		public bool if_wt_If498() {
			if (if_wt_If498_hasRun) {
				if_wt_If498_hasRun = false;
				return if_wt_If498_evalResult;
			}
			if_wt_If498_hasRun = true;
			if_wt_If498_evalResult = (inParamSessionID==BuiltInFunction.NullIdentifier());
			return if_wt_If498_evalResult;
		}

		/// <summary>
		/// wt_Container11 Functions
		/// </summary>
		public void cnt_Container11_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container11_setInlineAttributes(sender, e);
		}
		public string cnt_Container11_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container11_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container11)
		/// </summary>
		/// <returns>The Visible State of wt_Container11</returns>
		public bool cnt_Container11_isVisible() {
			return true;
		}

		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance100 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance100_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main) sender;
			widget.inParamActiveMenuItem = (((inParamCourseCode== "")) ?(ENMenuItem2Entity.GetRecordByKey(ObjectKey.Parse("fmJ189Eh1ESMcFcWCOyaBg")).ssId):(ENMenuItem2Entity.GetRecordByKey(ObjectKey.Parse("7qeG0AIy00KFvJsqdEaGOg")).ssId));
		}
		/// <summary>
		/// wt_Container215 Functions
		/// </summary>
		public void cnt_Container215_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container215_setInlineAttributes(sender, e);
		}
		public string cnt_Container215_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: white;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container215_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container215)
		/// </summary>
		/// <returns>The Visible State of wt_Container215</returns>
		public bool cnt_Container215_isVisible() {
			return true;
		}

		/// <summary>
		/// ThemeProvider_wtBreadcrumb Functions
		/// </summary>
		public void ThemeProvider_webBlckBreadcrumb_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkBreadCrumb widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkBreadCrumb) sender;
			widget.inParamSeparator = RsseSpaceThemeProvider.DefaultValues.ReferenceWebFlow_Common2_ReferenceWebBlock_BreadCrumb_Variables_ReferenceSerializableInputParameter_Separator;
		}
		/// <summary>
		/// wt_Link303 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link303)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link303)</returns>
		public string lnk_Link303_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("CCSessionId", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionID), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "CCSession_Edit", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link303)
		/// </summary>
		/// <returns>title of the Link (wt_Link303)</returns>
		public string
		lnk_Link303_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link303)
		/// </summary>
		/// <returns>The Visible State of wt_Link303</returns>
		public bool lnk_Link303_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link303)
		/// </summary>
		/// <returns>The Enabled State of wt_Link303</returns>
		public bool lnk_Link303_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container550 Functions
		/// </summary>
		public void cnt_Container550_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container550_setInlineAttributes(sender, e);
		}
		public string cnt_Container550_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container550_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container550)
		/// </summary>
		/// <returns>The Visible State of wt_Container550</returns>
		public bool cnt_Container550_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance120 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance120_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("Iqs32xXjXE+ICbLVRQVIzg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression290 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = GW5NfzlnvkqsrOaDQOkohg) Expression:
		///  GetCCSessionById.List.Current.CCSession.Description
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression290() {
			return queryResGetCCSessionById_outParamList.CurrentRec.ssENCCSession.ssDescription;
		}
		/// <summary>
		/// wt_Link401 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link401)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link401)</returns>
		public string lnk_Link401_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("CCSessionId", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionID), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "CCSessionStep2_Edit", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link401)
		/// </summary>
		/// <returns>title of the Link (wt_Link401)</returns>
		public string
		lnk_Link401_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link401)
		/// </summary>
		/// <returns>The Visible State of wt_Link401</returns>
		public bool lnk_Link401_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link401)
		/// </summary>
		/// <returns>The Enabled State of wt_Link401</returns>
		public bool lnk_Link401_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container180 Functions
		/// </summary>
		public void cnt_Container180_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container180_setInlineAttributes(sender, e);
		}
		public string cnt_Container180_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container180_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container180)
		/// </summary>
		/// <returns>The Visible State of wt_Container180</returns>
		public bool cnt_Container180_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance191 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance191_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("2DFx6X0sh0GYKNklWr5t1A")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression477 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = JF1904rLV0uglwQHd+F8sA) Expression:
		///  GetCCSessionById.List.Current.Cluster.ClusterDescription
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression477() {
			return queryResGetCCSessionById_outParamList.CurrentRec.ssENCluster.ssClusterDescription;
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance105 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance105_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("BDbvGpjWkkirEM_ATP7B6Q")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression415 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = WPIntv4WoEaWzCV7o6nuAQ) Expression: CourseCode
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression415() {
			return inParamCourseCode;
		}
		/// <summary>
		/// wt_Container418 Functions
		/// </summary>
		public void cnt_Container418_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container418_setInlineAttributes(sender, e);
		}
		public string cnt_Container418_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container418_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container418)
		/// </summary>
		/// <returns>The Visible State of wt_Container418</returns>
		public bool cnt_Container418_isVisible() {
			return true;
		}

		/// <summary>
		/// wtStaffViewHeader Functions
		/// </summary>
		public void cntStaffViewHeader_onDataBinding(object sender, System.EventArgs e) {
			cntStaffViewHeader_setInlineAttributes(sender, e);
		}
		public string cntStaffViewHeader_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntStaffViewHeader_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStaffViewHeader)
		/// </summary>
		/// <returns>The Visible State of wtStaffViewHeader</returns>
		public bool cntStaffViewHeader_isVisible() {
			return true;
		}

		/// <summary>
		/// wtListHeader Functions
		/// </summary>
		public void cntListHeader_onDataBinding(object sender, System.EventArgs e) {
			cntListHeader_setInlineAttributes(sender, e);
		}
		public string cntListHeader_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "height: 100%;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntListHeader_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtListHeader)
		/// </summary>
		/// <returns>The Visible State of wtListHeader</returns>
		public bool cntListHeader_isVisible() {
			return true;
		}

		/// <summary>
		/// wtIconFilter Functions
		/// </summary>
		public void cntIconFilter_onDataBinding(object sender, System.EventArgs e) {
			cntIconFilter_setInlineAttributes(sender, e);
		}
		public string cntIconFilter_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "cursor:pointer;color:#03578D;position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntIconFilter_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtIconFilter)
		/// </summary>
		/// <returns>The Visible State of wtIconFilter</returns>
		public bool cntIconFilter_isVisible() {
			return true;
		}

		/// <summary>
		/// wtIconFilter2 Functions
		/// </summary>
		public void cntIconFilter2_onDataBinding(object sender, System.EventArgs e) {
			cntIconFilter2_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cntIconFilter2_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("onclick", "$(\'.StaffViewFilter\').toggle(1000);" .ToString());
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ("cursor:pointer;color:silver;" + (((inParamSessionID!=BuiltInFunction.NullIdentifier())) ?("left:0px;"):("")));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntIconFilter2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wtIconFilter2
		/// </summary>
		public void cntIconFilter2_AjaxClick(object sender, System.EventArgs e) {
			if (CommandOpenFilters(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtIconFilter2)
		/// </summary>
		/// <returns>The Visible State of wtIconFilter2</returns>
		public bool cntIconFilter2_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance137 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance137_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("A+DPAqLWak2cJEH_xuxb2A")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wtWrapper_Favorite Functions
		/// </summary>
		public void cntWrapper_Favorite_onDataBinding(object sender, System.EventArgs e) {
			cntWrapper_Favorite_setInlineAttributes(sender, e);
		}
		public string cntWrapper_Favorite_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntWrapper_Favorite_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapper_Favorite)
		/// </summary>
		/// <returns>The Visible State of wtWrapper_Favorite</returns>
		public bool cntWrapper_Favorite_isVisible() {
			return (inParamSessionID==BuiltInFunction.NullIdentifier());
		}

		/// <summary>
		/// wtWrapper_Filter Functions
		/// </summary>
		public void cntWrapper_Filter_onDataBinding(object sender, System.EventArgs e) {
			cntWrapper_Filter_setInlineAttributes(sender, e);
		}
		public string cntWrapper_Filter_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntWrapper_Filter_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapper_Filter)
		/// </summary>
		/// <returns>The Visible State of wtWrapper_Filter</returns>
		public bool cntWrapper_Filter_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If525 Functions
		/// </summary>
		bool if_wt_If525_hasRun=false;
		bool if_wt_If525_evalResult;
		public bool if_wt_If525() {
			if (if_wt_If525_hasRun) {
				if_wt_If525_hasRun = false;
				return if_wt_If525_evalResult;
			}
			if_wt_If525_hasRun = true;
			if_wt_If525_evalResult = (((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssSearchType==1);
			return if_wt_If525_evalResult;
		}

		/// <summary>
		/// wt_Link491 Functions
		/// </summary>
		public void lnk_Link491_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link491_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link491_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#FFD700;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link491_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandRefreshStudentTable(heContext, true, false, false, true, "", "", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link491)
		/// </summary>
		/// <returns>title of the Link (wt_Link491)</returns>
		public string
		lnk_Link491_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link491)
		/// </summary>
		/// <returns>The Visible State of wt_Link491</returns>
		public bool lnk_Link491_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link491)
		/// </summary>
		/// <returns>The Enabled State of wt_Link491</returns>
		public bool lnk_Link491_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance344 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance344_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("qKwz4ZaPnkmbJYnyFjRtFg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Link61 Functions
		/// </summary>
		public void lnk_Link61_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link61_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link61_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#DADADA;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link61_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandRefreshStudentTable(heContext, true, false, false, true, "", "", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link61)
		/// </summary>
		/// <returns>title of the Link (wt_Link61)</returns>
		public string
		lnk_Link61_getTitle() {
			return "set as favourite";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link61)
		/// </summary>
		/// <returns>The Visible State of wt_Link61</returns>
		public bool lnk_Link61_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link61)
		/// </summary>
		/// <returns>The Enabled State of wt_Link61</returns>
		public bool lnk_Link61_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance38 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance38_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("ycc7nxlWj0WSykMfq37k4A")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container222 Functions
		/// </summary>
		public void cnt_Container222_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container222_setInlineAttributes(sender, e);
		}
		public string cnt_Container222_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container222_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container222)
		/// </summary>
		/// <returns>The Visible State of wt_Container222</returns>
		public bool cnt_Container222_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container410 Functions
		/// </summary>
		public void cnt_Container410_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container410_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container410_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width: 340px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container410_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container410
		/// </summary>
		public void cnt_Container410_AjaxClick(object sender, System.EventArgs e) {
			if (CommandRefreshStudentTable(heContext
			, false, false, false, false, "Name", "ASC", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container410)
		/// </summary>
		/// <returns>The Visible State of wt_Container410</returns>
		public bool cnt_Container410_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_TableCell494 Functions
		/// </summary>
		public void wt_TableCell494_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell494_setInlineAttributes(sender, e);
		}
		public string wt_TableCell494_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container217 Functions
		/// </summary>
		public void cnt_Container217_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container217_setInlineAttributes(sender, e);
		}
		public string cnt_Container217_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container217_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container217)
		/// </summary>
		/// <returns>The Visible State of wt_Container217</returns>
		public bool cnt_Container217_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text62 Functions
		/// </summary>
		public void wt_Text62_onDataBinding(object sender, System.EventArgs e) {
			wt_Text62_setInlineAttributes(sender, e);
		}
		public string wt_Text62_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = (((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderBy== "Name")) ?("font-weight: bold"):(""));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container166 Functions
		/// </summary>
		public void cnt_Container166_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container166_setInlineAttributes(sender, e);
		}
		public string cnt_Container166_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "Float:right;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container166_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container166)
		/// </summary>
		/// <returns>The Visible State of wt_Container166</returns>
		public bool cnt_Container166_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance413 Functions
		/// </summary>
		public void webBlck_WebBlockInstance413_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort) sender;
			widget.inParamColumn = "Name";
			widget.inParamTop = "13";
			widget.inParamLeft = "325";
		}
		/// <summary>
		/// wt_Container536 Functions
		/// </summary>
		public void cnt_Container536_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container536_setInlineAttributes(sender, e);
		}
		public string cnt_Container536_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ("margin-left:31px;width: 130px;cursor:pointer;" + (((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderBy== "Math")) ?("font-weight: bold"):("")));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container536_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container536)
		/// </summary>
		/// <returns>The Visible State of wt_Container536</returns>
		public bool cnt_Container536_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_TableCell162 Functions
		/// </summary>
		public void wt_TableCell162_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell162_setInlineAttributes(sender, e);
		}
		public string wt_TableCell162_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container476 Functions
		/// </summary>
		public void cnt_Container476_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container476_setInlineAttributes(sender, e);
		}
		public string cnt_Container476_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container476_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container476)
		/// </summary>
		/// <returns>The Visible State of wt_Container476</returns>
		public bool cnt_Container476_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_TableCell376 Functions
		/// </summary>
		public void wt_TableCell376_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell376_setInlineAttributes(sender, e);
		}
		public string wt_TableCell376_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container284 Functions
		/// </summary>
		public void cnt_Container284_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container284_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container284_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container284_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container284
		/// </summary>
		public void cnt_Container284_AjaxClick(object sender, System.EventArgs e) {
			if (CommandRefreshStudentTable(heContext
			, false, false, false, false, "Math", "ASC", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container284)
		/// </summary>
		/// <returns>The Visible State of wt_Container284</returns>
		public bool cnt_Container284_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container337 Functions
		/// </summary>
		public void cnt_Container337_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container337_setInlineAttributes(sender, e);
		}
		public string cnt_Container337_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "Float:right";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container337_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container337)
		/// </summary>
		/// <returns>The Visible State of wt_Container337</returns>
		public bool cnt_Container337_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance267 Functions
		/// </summary>
		public void webBlck_WebBlockInstance267_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort) sender;
			widget.inParamColumn = "Math";
			widget.inParamTop = "0";
			widget.inParamLeft = "49";
		}
		/// <summary>
		/// wt_TableCell448 Functions
		/// </summary>
		public void wt_TableCell448_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell448_setInlineAttributes(sender, e);
		}
		public string wt_TableCell448_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container207 Functions
		/// </summary>
		public void cnt_Container207_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container207_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container207_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container207_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container207
		/// </summary>
		public void cnt_Container207_AjaxClick(object sender, System.EventArgs e) {
			if (CommandRefreshStudentTable(heContext
			, false, false, false, false, "English", "ASC", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container207)
		/// </summary>
		/// <returns>The Visible State of wt_Container207</returns>
		public bool cnt_Container207_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text535 Functions
		/// </summary>
		public void wt_Text535_onDataBinding(object sender, System.EventArgs e) {
			wt_Text535_setInlineAttributes(sender, e);
		}
		public string wt_Text535_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "English" .ToString());
			return "";
		}
		/// <summary>
		/// wt_Container126 Functions
		/// </summary>
		public void cnt_Container126_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container126_setInlineAttributes(sender, e);
		}
		public string cnt_Container126_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "Float:right";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container126_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container126)
		/// </summary>
		/// <returns>The Visible State of wt_Container126</returns>
		public bool cnt_Container126_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance360 Functions
		/// </summary>
		public void webBlck_WebBlockInstance360_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort) sender;
			widget.inParamColumn = "English";
			widget.inParamTop = "0";
			widget.inParamLeft = "49";
		}
		/// <summary>
		/// wt_Container18 Functions
		/// </summary>
		public void cnt_Container18_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container18_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container18_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ("width: 65px;cursor:pointer;" + (((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderBy== "VOC")) ?("font-weight: bold"):("")));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container18_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container18
		/// </summary>
		public void cnt_Container18_AjaxClick(object sender, System.EventArgs e) {
			if (CommandRefreshStudentTable(heContext
			, false, false, false, false, "VOC", "ASC", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container18)
		/// </summary>
		/// <returns>The Visible State of wt_Container18</returns>
		public bool cnt_Container18_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_TableCell385 Functions
		/// </summary>
		public void wt_TableCell385_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell385_setInlineAttributes(sender, e);
		}
		public string wt_TableCell385_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container371 Functions
		/// </summary>
		public void cnt_Container371_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container371_setInlineAttributes(sender, e);
		}
		public string cnt_Container371_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container371_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container371)
		/// </summary>
		/// <returns>The Visible State of wt_Container371</returns>
		public bool cnt_Container371_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_TableCell503 Functions
		/// </summary>
		public void wt_TableCell503_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell503_setInlineAttributes(sender, e);
		}
		public string wt_TableCell503_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container462 Functions
		/// </summary>
		public void cnt_Container462_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container462_setInlineAttributes(sender, e);
		}
		public string cnt_Container462_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container462_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container462)
		/// </summary>
		/// <returns>The Visible State of wt_Container462</returns>
		public bool cnt_Container462_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container465 Functions
		/// </summary>
		public void cnt_Container465_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container465_setInlineAttributes(sender, e);
		}
		public string cnt_Container465_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "Float:right;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container465_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container465)
		/// </summary>
		/// <returns>The Visible State of wt_Container465</returns>
		public bool cnt_Container465_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance423 Functions
		/// </summary>
		public void webBlck_WebBlockInstance423_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort) sender;
			widget.inParamColumn = "VOC";
			widget.inParamTop = "0";
			widget.inParamLeft = "49";
		}
		/// <summary>
		/// wt_Container321 Functions
		/// </summary>
		public void cnt_Container321_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container321_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container321_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ("width: 67px;cursor:pointer;" + (((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderBy== "MLW")) ?("font-weight: bold"):("")));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container321_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container321
		/// </summary>
		public void cnt_Container321_AjaxClick(object sender, System.EventArgs e) {
			if (CommandRefreshStudentTable(heContext
			, false, false, false, false, "MLW", "ASC", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container321)
		/// </summary>
		/// <returns>The Visible State of wt_Container321</returns>
		public bool cnt_Container321_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_TableCell124 Functions
		/// </summary>
		public void wt_TableCell124_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell124_setInlineAttributes(sender, e);
		}
		public string wt_TableCell124_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container57 Functions
		/// </summary>
		public void cnt_Container57_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container57_setInlineAttributes(sender, e);
		}
		public string cnt_Container57_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container57_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container57)
		/// </summary>
		/// <returns>The Visible State of wt_Container57</returns>
		public bool cnt_Container57_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_TableCell53 Functions
		/// </summary>
		public void wt_TableCell53_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell53_setInlineAttributes(sender, e);
		}
		public string wt_TableCell53_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container375 Functions
		/// </summary>
		public void cnt_Container375_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container375_setInlineAttributes(sender, e);
		}
		public string cnt_Container375_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container375_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container375)
		/// </summary>
		/// <returns>The Visible State of wt_Container375</returns>
		public bool cnt_Container375_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text274 Functions
		/// </summary>
		public void wt_Text274_onDataBinding(object sender, System.EventArgs e) {
			wt_Text274_setInlineAttributes(sender, e);
		}
		public string wt_Text274_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Making Learning Work" .ToString());
			return "";
		}
		/// <summary>
		/// wt_Container82 Functions
		/// </summary>
		public void cnt_Container82_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container82_setInlineAttributes(sender, e);
		}
		public string cnt_Container82_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "Float:right";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container82_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container82)
		/// </summary>
		/// <returns>The Visible State of wt_Container82</returns>
		public bool cnt_Container82_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance316 Functions
		/// </summary>
		public void webBlck_WebBlockInstance316_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort) sender;
			widget.inParamColumn = "MLW";
			widget.inParamTop = "0";
			widget.inParamLeft = "49";
		}
		/// <summary>
		/// wt_Container10 Functions
		/// </summary>
		public void cnt_Container10_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container10_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container10_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ("margin-left:32px;width: 67px;cursor:pointer;" + (((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderBy== "Attendance")) ?("font-weight: bold"):("")));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container10_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container10
		/// </summary>
		public void cnt_Container10_AjaxClick(object sender, System.EventArgs e) {
			if (CommandRefreshStudentTable(heContext
			, false, false, false, false, "Attendance", "ASC", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container10)
		/// </summary>
		/// <returns>The Visible State of wt_Container10</returns>
		public bool cnt_Container10_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_TableCell514 Functions
		/// </summary>
		public void wt_TableCell514_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell514_setInlineAttributes(sender, e);
		}
		public string wt_TableCell514_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container412 Functions
		/// </summary>
		public void cnt_Container412_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container412_setInlineAttributes(sender, e);
		}
		public string cnt_Container412_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container412_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container412)
		/// </summary>
		/// <returns>The Visible State of wt_Container412</returns>
		public bool cnt_Container412_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text394 Functions
		/// </summary>
		public void wt_Text394_onDataBinding(object sender, System.EventArgs e) {
			wt_Text394_setInlineAttributes(sender, e);
		}
		public string wt_Text394_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Attendance" .ToString());
			return "";
		}
		/// <summary>
		/// wt_Container511 Functions
		/// </summary>
		public void cnt_Container511_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container511_setInlineAttributes(sender, e);
		}
		public string cnt_Container511_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "Float:right";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container511_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container511)
		/// </summary>
		/// <returns>The Visible State of wt_Container511</returns>
		public bool cnt_Container511_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance81 Functions
		/// </summary>
		public void webBlck_WebBlockInstance81_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort) sender;
			widget.inParamColumn = "Attendance";
			widget.inParamTop = "13";
			widget.inParamLeft = "50";
		}
		/// <summary>
		/// wt_Container334 Functions
		/// </summary>
		public void cnt_Container334_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container334_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container334_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ("width: 67px;cursor:pointer;" + (((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderBy== "Punctuality")) ?("font-weight: bold"):("")));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container334_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container334
		/// </summary>
		public void cnt_Container334_AjaxClick(object sender, System.EventArgs e) {
			if (CommandRefreshStudentTable(heContext
			, false, false, false, false, "Punctuality", "ASC", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container334)
		/// </summary>
		/// <returns>The Visible State of wt_Container334</returns>
		public bool cnt_Container334_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_TableCell51 Functions
		/// </summary>
		public void wt_TableCell51_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell51_setInlineAttributes(sender, e);
		}
		public string wt_TableCell51_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container434 Functions
		/// </summary>
		public void cnt_Container434_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container434_setInlineAttributes(sender, e);
		}
		public string cnt_Container434_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container434_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container434)
		/// </summary>
		/// <returns>The Visible State of wt_Container434</returns>
		public bool cnt_Container434_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text383 Functions
		/// </summary>
		public void wt_Text383_onDataBinding(object sender, System.EventArgs e) {
			wt_Text383_setInlineAttributes(sender, e);
		}
		public string wt_Text383_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Punctuality" .ToString());
			return "";
		}
		/// <summary>
		/// wt_Container214 Functions
		/// </summary>
		public void cnt_Container214_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container214_setInlineAttributes(sender, e);
		}
		public string cnt_Container214_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "Float:right;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container214_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container214)
		/// </summary>
		/// <returns>The Visible State of wt_Container214</returns>
		public bool cnt_Container214_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance297 Functions
		/// </summary>
		public void webBlck_WebBlockInstance297_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort) sender;
			widget.inParamColumn = "Punctuality";
			widget.inParamTop = "13";
			widget.inParamLeft = "51";
		}
		/// <summary>
		/// wt_Container402 Functions
		/// </summary>
		public void cnt_Container402_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container402_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container402_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ("width: 41px;cursor:pointer;" + (((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderBy== "Concern")) ?("font-weight: bold"):("")));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container402_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container402
		/// </summary>
		public void cnt_Container402_AjaxClick(object sender, System.EventArgs e) {
			if (CommandRefreshStudentTable(heContext
			, false, false, false, false, "Concern", "DESC", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container402)
		/// </summary>
		/// <returns>The Visible State of wt_Container402</returns>
		public bool cnt_Container402_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_TableCell259 Functions
		/// </summary>
		public void wt_TableCell259_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell259_setInlineAttributes(sender, e);
		}
		public string wt_TableCell259_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container322 Functions
		/// </summary>
		public void cnt_Container322_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container322_setInlineAttributes(sender, e);
		}
		public string cnt_Container322_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container322_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container322)
		/// </summary>
		/// <returns>The Visible State of wt_Container322</returns>
		public bool cnt_Container322_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text464 Functions
		/// </summary>
		public void wt_Text464_onDataBinding(object sender, System.EventArgs e) {
			wt_Text464_setInlineAttributes(sender, e);
		}
		public string wt_Text464_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Cause for Concern" .ToString());
			return "";
		}
		/// <summary>
		/// wt_Container332 Functions
		/// </summary>
		public void cnt_Container332_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container332_setInlineAttributes(sender, e);
		}
		public string cnt_Container332_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "Float:right";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container332_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container332)
		/// </summary>
		/// <returns>The Visible State of wt_Container332</returns>
		public bool cnt_Container332_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance229 Functions
		/// </summary>
		public void webBlck_WebBlockInstance229_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort) sender;
			widget.inParamColumn = "Concern";
			widget.inParamTop = "13";
			widget.inParamLeft = "28";
		}
		/// <summary>
		/// wt_Container377 Functions
		/// </summary>
		public void cnt_Container377_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container377_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container377_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ("width: 44px;cursor:pointer;" + (((((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Filter.ssOrderBy== "Reward")) ?("font-weight: bold"):("")));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container377_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container377
		/// </summary>
		public void cnt_Container377_AjaxClick(object sender, System.EventArgs e) {
			if (CommandRefreshStudentTable(heContext
			, false, false, false, false, "Reward", "DESC", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container377)
		/// </summary>
		/// <returns>The Visible State of wt_Container377</returns>
		public bool cnt_Container377_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_TableCell341 Functions
		/// </summary>
		public void wt_TableCell341_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell341_setInlineAttributes(sender, e);
		}
		public string wt_TableCell341_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container43 Functions
		/// </summary>
		public void cnt_Container43_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container43_setInlineAttributes(sender, e);
		}
		public string cnt_Container43_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container43_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container43)
		/// </summary>
		/// <returns>The Visible State of wt_Container43</returns>
		public bool cnt_Container43_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container216 Functions
		/// </summary>
		public void cnt_Container216_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container216_setInlineAttributes(sender, e);
		}
		public string cnt_Container216_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "Float:right;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container216_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container216)
		/// </summary>
		/// <returns>The Visible State of wt_Container216</returns>
		public bool cnt_Container216_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance9 Functions
		/// </summary>
		public void webBlck_WebBlockInstance9_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStaffView_Sort) sender;
			widget.inParamColumn = "Reward";
			widget.inParamTop = "13";
			widget.inParamLeft = "27";
		}
		/// <summary>
		/// wt_Container285 Functions
		/// </summary>
		public void cnt_Container285_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container285_setInlineAttributes(sender, e);
		}
		public string cnt_Container285_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding-right: 140px;padding-top: 25px;position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container285_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container285)
		/// </summary>
		/// <returns>The Visible State of wt_Container285</returns>
		public bool cnt_Container285_isVisible() {
			return (!queryResGetMyTimetabledClasses_outParamList.Empty);
		}

		/// <summary>
		/// wt_Container74 Functions
		/// </summary>
		public void cnt_Container74_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container74_setInlineAttributes(sender, e);
		}
		public string cnt_Container74_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container74_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container74)
		/// </summary>
		/// <returns>The Visible State of wt_Container74</returns>
		public bool cnt_Container74_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container46 Functions
		/// </summary>
		public void cnt_Container46_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container46_setInlineAttributes(sender, e);
		}
		public string cnt_Container46_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container46_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container46)
		/// </summary>
		/// <returns>The Visible State of wt_Container46</returns>
		public bool cnt_Container46_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_ComboBox490 Functions
		/// </summary>
		public void sel_ComboBox490_onDataBinding(object sender, System.EventArgs e) {
			sel_ComboBox490_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
			if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

			RLTimetabledClassesDropdownRecordList Rt_wt_ComboBox490_reclist = queryResGetMyTimetabledClasses_outParamList;
			Rt_wt_ComboBox490_reclist.StartIteration();
			try {
				while (!Rt_wt_ComboBox490_reclist.Eof) {
					((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wt_ComboBox490_reclist.CurrentRec.ssSTTimetabledClassesDropdown.ssDisplayValue, Rt_wt_ComboBox490_reclist.CurrentRec.ssSTTimetabledClassesDropdown.ssOfferingCode));
					if (inParamCourseCode == Convert.ToString(Rt_wt_ComboBox490_reclist.CurrentRec.ssSTTimetabledClassesDropdown.ssOfferingCode)) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
					}
					Rt_wt_ComboBox490_reclist.Advance();
				}
			} finally {
				Rt_wt_ComboBox490_reclist.EndIteration();
			}
		}
		public string sel_ComboBox490_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "align:left;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxChange event handler for widget wt_ComboBox490
		/// </summary>
		public void sel_ComboBox490_AjaxChange(object sender, System.EventArgs e) {
			if (CommandRefreshStudentTable(heContext
			, false, false, false, false, "", "", true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		public void sel_ComboBox490_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wt_ComboBox490.SpecialListVal = dropDown.SelectedValue.Substring(8);
				inParamCourseCode = "";
			}
			else {
				Rt_wt_ComboBox490.SpecialListVal = "";
				try {
					inParamCourseCode = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_ComboBox490)
		/// </summary>
		/// <returns>The Visible State of wt_ComboBox490</returns>
		public bool sel_ComboBox490_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_ComboBox490)
		/// </summary>
		/// <returns>The Enabled State of wt_ComboBox490</returns>
		public bool sel_ComboBox490_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (sel_ComboBox490)
		/// </summary>
		/// <returns>The Mandatory Value of sel_ComboBox490</returns>
		public bool sel_ComboBox490_isMandatory() {
			return false;
		}

		/// <summary>
		/// wt_Container433 Functions
		/// </summary>
		public void cnt_Container433_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container433_setInlineAttributes(sender, e);
		}
		public string cnt_Container433_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container433_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container433)
		/// </summary>
		/// <returns>The Visible State of wt_Container433</returns>
		public bool cnt_Container433_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance202 Functions
		/// </summary>
		public void webBlck_WebBlockInstance202_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowCaseConference.WBlkCCSessionActionsFloatingPanel widget = (ssCaseConferencing.Flows.FlowCaseConference.WBlkCCSessionActionsFloatingPanel) sender;
			widget.inParamCCSessionId = inParamSessionID;
			widget.inParamStepId = 3;
			widget.inParamIsStaffView = true;
			widget.inParamCourseCode = inParamCourseCode;
		}
		/// <summary>
		/// AjaxNotify event handler for widget wt_WebBlockInstance202
		/// </summary>
		public void webBlck_WebBlockInstance202_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandRefreshStudentTable(heContext
			, false, false, true, false, "", "", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wtHeaderFilter Functions
		/// </summary>
		public void webBlckHeaderFilter_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowStaffView.WBlkHeaderFilter widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkHeaderFilter) sender;
		}
		/// <summary>
		/// AjaxNotify event handler for widget wtHeaderFilter
		/// </summary>
		public void webBlckHeaderFilter_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandRefreshStudentTable(heContext
			, false, false, false, false, "", "", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wtWrapperContent Functions
		/// </summary>
		bool if_wtWrapperContent_hasRun=false;
		bool if_wtWrapperContent_evalResult;
		public bool if_wtWrapperContent() {
			if (if_wtWrapperContent_hasRun) {
				if_wtWrapperContent_hasRun = false;
				return if_wtWrapperContent_evalResult;
			}
			if_wtWrapperContent_hasRun = true;
			if_wtWrapperContent_evalResult = ((((!getWtActiveEnrolmentsListList().Empty) || (!getWtCompletedEnrolmentsListList().Empty)) || (!getWtWithdrawnEnrolmentsListList().Empty)) || (!getWtTransferredEnrolmentsListList().Empty));
			return if_wtWrapperContent_evalResult;
		}

		/// <summary>
		/// wtAllLearners Functions
		/// </summary>
		public void cntAllLearners_onDataBinding(object sender, System.EventArgs e) {
			cntAllLearners_setInlineAttributes(sender, e);
		}
		public string cntAllLearners_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntAllLearners_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtAllLearners)
		/// </summary>
		/// <returns>The Visible State of wtAllLearners</returns>
		public bool cntAllLearners_isVisible() {
			return true;
		}

		/// <summary>
		/// wtStaffViewNormal Functions
		/// </summary>
		public void cntStaffViewNormal_onDataBinding(object sender, System.EventArgs e) {
			cntStaffViewNormal_setInlineAttributes(sender, e);
		}
		public string cntStaffViewNormal_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntStaffViewNormal_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStaffViewNormal)
		/// </summary>
		/// <returns>The Visible State of wtStaffViewNormal</returns>
		public bool cntStaffViewNormal_isVisible() {
			return true;
		}

		/// <summary>
		/// wtActiveEnrolmentsWrapper Functions
		/// </summary>
		public void cntActiveEnrolmentsWrapper_onDataBinding(object sender, System.EventArgs e) {
			cntActiveEnrolmentsWrapper_setInlineAttributes(sender, e);
		}
		public string cntActiveEnrolmentsWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntActiveEnrolmentsWrapper_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtActiveEnrolmentsWrapper)
		/// </summary>
		/// <returns>The Visible State of wtActiveEnrolmentsWrapper</returns>
		public bool cntActiveEnrolmentsWrapper_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container102 Functions
		/// </summary>
		public void cnt_Container102_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container102_setInlineAttributes(sender, e);
		}
		public string cnt_Container102_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container102_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container102)
		/// </summary>
		/// <returns>The Visible State of wt_Container102</returns>
		public bool cnt_Container102_isVisible() {
			return varLcEnrolmentsSplit;
		}

		/// <summary>
		/// wt_InlineExpression164 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 8MQURa0Mr0+RNUINVcvFtA) Expression: "Active Learner Enrolments
		///  on " + internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression164() {
			return ("Active Learner Enrolments on " + (((inParamCourseCode!= "")) ?(queryResGetGroups_outParamList.CurrentRec.ssENGroup.ssGroupDescription):(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssGroupDescription)));
		}
		/// <summary>
		/// wtActiveEnrolmentsList Functions
		/// </summary>
		public void recListActiveEnrolmentsList_onDataBinding(object sender, System.EventArgs e) {
			// widget wtActiveEnrolmentsList
			ssActiveEnrolmentsListList = varLcActiveEnrolments;
			ssActiveEnrolmentsListListDoDataBind = false;
			ssActiveEnrolmentsListListDataBound = true;
		}
		public void recListActiveEnrolmentsList_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssActiveEnrolmentsListList.Length > 0) {
					ssActiveEnrolmentsListList.CurrentRec = ssActiveEnrolmentsListList[ssActiveEnrolmentsListList.CurrentRowNumber];
				}
				if (ssActiveEnrolmentsListList.Length > e.SelectedIndex) {
					ssActiveEnrolmentsListList.CurrentRec = ssActiveEnrolmentsListList[e.SelectedIndex];
					ssActiveEnrolmentsListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListActiveEnrolmentsList_Store(object dataItem, int index) {
			RCStaffViewRecordRecord tmprec = (RCStaffViewRecordRecord) dataItem;
			ArrayList tmpFields = new ArrayList();
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentReference == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentReference);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssForenames == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssForenames);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssSurname == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssSurname);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssMainOfferingName == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssMainOfferingName);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentPhotoURL == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentPhotoURL);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssDisability == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssDisability);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssLearningDifficulty == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssLearningDifficulty);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStaffStudentFavouriteId == 0?(object) null: tmprec.ssSTStaffViewRecord.ssStaffStudentFavouriteId);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentRAG == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentRAG);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentRAGUpdateAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentRAGUpdateAt);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentRAGUUpdatedBy == 0?(object) null: tmprec.ssSTStaffViewRecord.ssStudentRAGUUpdatedBy);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssLastWeekPunctuality == 0?(object) null: tmprec.ssSTStaffViewRecord.ssLastWeekPunctuality);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssOverallPunctuality == 0?(object) null: tmprec.ssSTStaffViewRecord.ssOverallPunctuality);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssLastWeekAttendance == 0?(object) null: tmprec.ssSTStaffViewRecord.ssLastWeekAttendance);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssOverallAttendance == 0?(object) null: tmprec.ssSTStaffViewRecord.ssOverallAttendance);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssCauseOfConcernRAG == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssCauseOfConcernRAG);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssCauseOfConcernNumber == 0?(object) null: tmprec.ssSTStaffViewRecord.ssCauseOfConcernNumber);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssSafeguardIdList == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssSafeguardIdList);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssSupportIdList == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssSupportIdList);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssRewardsGoldNumber == 0?(object) null: tmprec.ssSTStaffViewRecord.ssRewardsGoldNumber);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssRewardsGreenNumber == 0?(object) null: tmprec.ssSTStaffViewRecord.ssRewardsGreenNumber);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssVocPeriodRAG == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssVocPeriodRAG);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssVocOverallRAG == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssVocOverallRAG);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssVocCompletedUnits == 0?(object) null: tmprec.ssSTStaffViewRecord.ssVocCompletedUnits);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssVocRegisteredUnits == 0?(object) null: tmprec.ssSTStaffViewRecord.ssVocRegisteredUnits);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssMathPeriodRAG == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssMathPeriodRAG);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssMathOverallRAG == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssMathOverallRAG);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssMathCompletedUnits == 0?(object) null: tmprec.ssSTStaffViewRecord.ssMathCompletedUnits);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssMathRegisteredUnits == 0?(object) null: tmprec.ssSTStaffViewRecord.ssMathRegisteredUnits);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssEngPeriodRAG == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssEngPeriodRAG);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssEngOverallRAG == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssEngOverallRAG);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssEngCompletedUnits == 0?(object) null: tmprec.ssSTStaffViewRecord.ssEngCompletedUnits);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssEngRegisteredUnits == 0?(object) null: tmprec.ssSTStaffViewRecord.ssEngRegisteredUnits);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssMLWPeriodRAG == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssMLWPeriodRAG);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssMLWOverallRAG == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssMLWOverallRAG);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssMLWCompletedUnits == 0?(object) null: tmprec.ssSTStaffViewRecord.ssMLWCompletedUnits);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssMLWRegisteredUnits == 0?(object) null: tmprec.ssSTStaffViewRecord.ssMLWRegisteredUnits);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssRewardType == false?(object) null: tmprec.ssSTStaffViewRecord.ssRewardType);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssDescriptionType == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssDescriptionType);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssDisciplinaryTypeNumber == 0?(object) null: tmprec.ssSTStaffViewRecord.ssDisciplinaryTypeNumber);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssDisciplinaryType == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssDisciplinaryType);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssFinancial == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssFinancial);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssTransport == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssTransport);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssAcademic == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssAcademic);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssPersonal == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssPersonal);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatVocShortTermLastUpdatedBy == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatVocShortTermLastUpdatedBy);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatVocShortTermUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatVocShortTermUpdatedAt);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatVocOverallLastUpdatedBy == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatVocOverallLastUpdatedBy);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatVocOverallUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatVocOverallUpdatedAt);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatMathShortTermLastUpdatedBy == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatMathShortTermLastUpdatedBy);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatMathShortTermUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatMathShortTermUpdatedAt);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatMathOverallLastUpdatedBy == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatMathOverallLastUpdatedBy);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatMathOverallUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatMathOverallUpdatedAt);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatEngShortTermLastUpdatedBy == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatEngShortTermLastUpdatedBy);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatEngShortTermUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatEngShortTermUpdatedAt);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatEngOverallLastUpdatedBy == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatEngOverallLastUpdatedBy);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatEngOverallUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatEngOverallUpdatedAt);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatMLWShortTermLastUpdatedBy == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatMLWShortTermLastUpdatedBy);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatMLWShortTermUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatMLWShortTermUpdatedAt);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatMLWOverallLastUpdatedBy == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatMLWOverallLastUpdatedBy);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssStudentCatMLWOverallUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: tmprec.ssSTStaffViewRecord.ssStudentCatMLWOverallUpdatedAt);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssEnrolmentStatus == "" ?(object) null: tmprec.ssSTStaffViewRecord.ssEnrolmentStatus);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssNotesNr == 0?(object) null: tmprec.ssSTStaffViewRecord.ssNotesNr);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssIsSessionReviewed == false?(object) null: tmprec.ssSTStaffViewRecord.ssIsSessionReviewed);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssIsMathExempt == false?(object) null: tmprec.ssSTStaffViewRecord.ssIsMathExempt);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssIsEnglishExempt == false?(object) null: tmprec.ssSTStaffViewRecord.ssIsEnglishExempt);
			tmpFields.Add(tmprec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment == false?(object) null: tmprec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment);
			if (index < wtActiveEnrolmentsList_storage.Count) {
				wtActiveEnrolmentsList_storage[index] = tmpFields;
			} else {
				wtActiveEnrolmentsList_storage.Add(tmpFields);
			}
			return "";
		}
		public void recListActiveEnrolmentsList_Restore() {

			#region fetch ssActiveEnrolmentsListList.

			// Read the needed fields of ssActiveEnrolmentsListList from storewtActiveEnrolmentsList_list
			ssActiveEnrolmentsListList = new RLStaffViewRecordRecordList();
			ArrayList storewtActiveEnrolmentsList_list;
			storewtActiveEnrolmentsList_list = (ArrayList) ViewStateAttributes.GetFromViewState("wtActiveEnrolmentsList_list", null);
			if (storewtActiveEnrolmentsList_list == null) {
				return;
			} else {

				foreach(ArrayList tmpFieldswtActiveEnrolmentsList_list in storewtActiveEnrolmentsList_list) {
					if (tmpFieldswtActiveEnrolmentsList_list != null) {
						// Aux current record variable
						RCStaffViewRecordRecord tmpAuxCurrentRecordwtActiveEnrolmentsList_list = new RCStaffViewRecordRecord(null);
						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentReference = (string) (tmpFieldswtActiveEnrolmentsList_list[0] == null ? "": tmpFieldswtActiveEnrolmentsList_list[0]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssForenames = (string) (tmpFieldswtActiveEnrolmentsList_list[1] == null ? "": tmpFieldswtActiveEnrolmentsList_list[1]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssSurname = (string) (tmpFieldswtActiveEnrolmentsList_list[2] == null ? "": tmpFieldswtActiveEnrolmentsList_list[2]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssMainOfferingName = (string) (tmpFieldswtActiveEnrolmentsList_list[3] == null ? "": tmpFieldswtActiveEnrolmentsList_list[3]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentPhotoURL = (string) (tmpFieldswtActiveEnrolmentsList_list[4] == null ? "": tmpFieldswtActiveEnrolmentsList_list[4]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssDisability = (string) (tmpFieldswtActiveEnrolmentsList_list[5] == null ? "": tmpFieldswtActiveEnrolmentsList_list[5]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssLearningDifficulty = (string) (tmpFieldswtActiveEnrolmentsList_list[6] == null ? "": tmpFieldswtActiveEnrolmentsList_list[6]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStaffStudentFavouriteId = (int) (tmpFieldswtActiveEnrolmentsList_list[7] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[7]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentRAG = (string) (tmpFieldswtActiveEnrolmentsList_list[8] == null ? "": tmpFieldswtActiveEnrolmentsList_list[8]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentRAGUpdateAt = (DateTime) (tmpFieldswtActiveEnrolmentsList_list[9] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldswtActiveEnrolmentsList_list[9]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentRAGUUpdatedBy = (int) (tmpFieldswtActiveEnrolmentsList_list[10] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[10]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssLastWeekPunctuality = (int) (tmpFieldswtActiveEnrolmentsList_list[11] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[11]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssOverallPunctuality = (int) (tmpFieldswtActiveEnrolmentsList_list[12] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[12]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssLastWeekAttendance = (int) (tmpFieldswtActiveEnrolmentsList_list[13] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[13]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssOverallAttendance = (int) (tmpFieldswtActiveEnrolmentsList_list[14] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[14]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssCauseOfConcernRAG = (string) (tmpFieldswtActiveEnrolmentsList_list[15] == null ? "": tmpFieldswtActiveEnrolmentsList_list[15]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssCauseOfConcernNumber = (int) (tmpFieldswtActiveEnrolmentsList_list[16] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[16]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssSafeguardIdList = (string) (tmpFieldswtActiveEnrolmentsList_list[17] == null ? "": tmpFieldswtActiveEnrolmentsList_list[17]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssSupportIdList = (string) (tmpFieldswtActiveEnrolmentsList_list[18] == null ? "": tmpFieldswtActiveEnrolmentsList_list[18]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssRewardsGoldNumber = (int) (tmpFieldswtActiveEnrolmentsList_list[19] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[19]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssRewardsGreenNumber = (int) (tmpFieldswtActiveEnrolmentsList_list[20] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[20]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssVocPeriodRAG = (string) (tmpFieldswtActiveEnrolmentsList_list[21] == null ? "": tmpFieldswtActiveEnrolmentsList_list[21]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssVocOverallRAG = (string) (tmpFieldswtActiveEnrolmentsList_list[22] == null ? "": tmpFieldswtActiveEnrolmentsList_list[22]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssVocCompletedUnits = (int) (tmpFieldswtActiveEnrolmentsList_list[23] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[23]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssVocRegisteredUnits = (int) (tmpFieldswtActiveEnrolmentsList_list[24] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[24]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssMathPeriodRAG = (string) (tmpFieldswtActiveEnrolmentsList_list[25] == null ? "": tmpFieldswtActiveEnrolmentsList_list[25]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssMathOverallRAG = (string) (tmpFieldswtActiveEnrolmentsList_list[26] == null ? "": tmpFieldswtActiveEnrolmentsList_list[26]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssMathCompletedUnits = (int) (tmpFieldswtActiveEnrolmentsList_list[27] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[27]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssMathRegisteredUnits = (int) (tmpFieldswtActiveEnrolmentsList_list[28] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[28]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssEngPeriodRAG = (string) (tmpFieldswtActiveEnrolmentsList_list[29] == null ? "": tmpFieldswtActiveEnrolmentsList_list[29]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssEngOverallRAG = (string) (tmpFieldswtActiveEnrolmentsList_list[30] == null ? "": tmpFieldswtActiveEnrolmentsList_list[30]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssEngCompletedUnits = (int) (tmpFieldswtActiveEnrolmentsList_list[31] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[31]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssEngRegisteredUnits = (int) (tmpFieldswtActiveEnrolmentsList_list[32] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[32]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssMLWPeriodRAG = (string) (tmpFieldswtActiveEnrolmentsList_list[33] == null ? "": tmpFieldswtActiveEnrolmentsList_list[33]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssMLWOverallRAG = (string) (tmpFieldswtActiveEnrolmentsList_list[34] == null ? "": tmpFieldswtActiveEnrolmentsList_list[34]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssMLWCompletedUnits = (int) (tmpFieldswtActiveEnrolmentsList_list[35] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[35]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssMLWRegisteredUnits = (int) (tmpFieldswtActiveEnrolmentsList_list[36] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[36]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssRewardType = (bool) (tmpFieldswtActiveEnrolmentsList_list[37] == null ? false: tmpFieldswtActiveEnrolmentsList_list[37]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssDescriptionType = (string) (tmpFieldswtActiveEnrolmentsList_list[38] == null ? "": tmpFieldswtActiveEnrolmentsList_list[38]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssDisciplinaryTypeNumber = (int) (tmpFieldswtActiveEnrolmentsList_list[39] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[39]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssDisciplinaryType = (string) (tmpFieldswtActiveEnrolmentsList_list[40] == null ? "": tmpFieldswtActiveEnrolmentsList_list[40]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssFinancial = (string) (tmpFieldswtActiveEnrolmentsList_list[41] == null ? "": tmpFieldswtActiveEnrolmentsList_list[41]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssTransport = (string) (tmpFieldswtActiveEnrolmentsList_list[42] == null ? "": tmpFieldswtActiveEnrolmentsList_list[42]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssAcademic = (string) (tmpFieldswtActiveEnrolmentsList_list[43] == null ? "": tmpFieldswtActiveEnrolmentsList_list[43]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssPersonal = (string) (tmpFieldswtActiveEnrolmentsList_list[44] == null ? "": tmpFieldswtActiveEnrolmentsList_list[44]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatVocShortTermLastUpdatedBy = (string) (tmpFieldswtActiveEnrolmentsList_list[45] == null ? "": tmpFieldswtActiveEnrolmentsList_list[45]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatVocShortTermUpdatedAt = (DateTime) (tmpFieldswtActiveEnrolmentsList_list[46] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldswtActiveEnrolmentsList_list[46]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatVocOverallLastUpdatedBy = (string) (tmpFieldswtActiveEnrolmentsList_list[47] == null ? "": tmpFieldswtActiveEnrolmentsList_list[47]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatVocOverallUpdatedAt = (DateTime) (tmpFieldswtActiveEnrolmentsList_list[48] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldswtActiveEnrolmentsList_list[48]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatMathShortTermLastUpdatedBy = (string) (tmpFieldswtActiveEnrolmentsList_list[49] == null ? "": tmpFieldswtActiveEnrolmentsList_list[49]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatMathShortTermUpdatedAt = (DateTime) (tmpFieldswtActiveEnrolmentsList_list[50] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldswtActiveEnrolmentsList_list[50]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatMathOverallLastUpdatedBy = (string) (tmpFieldswtActiveEnrolmentsList_list[51] == null ? "": tmpFieldswtActiveEnrolmentsList_list[51]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatMathOverallUpdatedAt = (DateTime) (tmpFieldswtActiveEnrolmentsList_list[52] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldswtActiveEnrolmentsList_list[52]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatEngShortTermLastUpdatedBy = (string) (tmpFieldswtActiveEnrolmentsList_list[53] == null ? "": tmpFieldswtActiveEnrolmentsList_list[53]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatEngShortTermUpdatedAt = (DateTime) (tmpFieldswtActiveEnrolmentsList_list[54] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldswtActiveEnrolmentsList_list[54]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatEngOverallLastUpdatedBy = (string) (tmpFieldswtActiveEnrolmentsList_list[55] == null ? "": tmpFieldswtActiveEnrolmentsList_list[55]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatEngOverallUpdatedAt = (DateTime) (tmpFieldswtActiveEnrolmentsList_list[56] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldswtActiveEnrolmentsList_list[56]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatMLWShortTermLastUpdatedBy = (string) (tmpFieldswtActiveEnrolmentsList_list[57] == null ? "": tmpFieldswtActiveEnrolmentsList_list[57]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatMLWShortTermUpdatedAt = (DateTime) (tmpFieldswtActiveEnrolmentsList_list[58] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldswtActiveEnrolmentsList_list[58]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatMLWOverallLastUpdatedBy = (string) (tmpFieldswtActiveEnrolmentsList_list[59] == null ? "": tmpFieldswtActiveEnrolmentsList_list[59]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssStudentCatMLWOverallUpdatedAt = (DateTime) (tmpFieldswtActiveEnrolmentsList_list[60] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldswtActiveEnrolmentsList_list[60]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssEnrolmentStatus = (string) (tmpFieldswtActiveEnrolmentsList_list[61] == null ? "": tmpFieldswtActiveEnrolmentsList_list[61]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssNotesNr = (int) (tmpFieldswtActiveEnrolmentsList_list[62] == null ? 0: tmpFieldswtActiveEnrolmentsList_list[62]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssIsSessionReviewed = (bool) (tmpFieldswtActiveEnrolmentsList_list[63] == null ? false: tmpFieldswtActiveEnrolmentsList_list[63]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssIsMathExempt = (bool) (tmpFieldswtActiveEnrolmentsList_list[64] == null ? false: tmpFieldswtActiveEnrolmentsList_list[64]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssIsEnglishExempt = (bool) (tmpFieldswtActiveEnrolmentsList_list[65] == null ? false: tmpFieldswtActiveEnrolmentsList_list[65]);

						tmpAuxCurrentRecordwtActiveEnrolmentsList_list.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment = (bool) (tmpFieldswtActiveEnrolmentsList_list[66] == null ? false: tmpFieldswtActiveEnrolmentsList_list[66]);

						ssActiveEnrolmentsListList.Append(tmpAuxCurrentRecordwtActiveEnrolmentsList_list);
					}
				}
			}
			ssActiveEnrolmentsListList.CurrentRowNumber = -1;
			#endregion


			#region fetch ssActiveEnrolmentsListList runtime properties state.


			if (storewtActiveEnrolmentsList_list.Count > 0) {
				ssActiveEnrolmentsListList.RestoreRecordListState(storewtActiveEnrolmentsList_list.Count - 1, false);
			} else {
				ssActiveEnrolmentsListList.CurrentRowNumber = 0;
			}

			#endregion

			wtActiveEnrolmentsList_storage = storewtActiveEnrolmentsList_list;
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListActiveEnrolmentsList_Clear(object sender, EventArgs e) {
			wtActiveEnrolmentsList_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListActiveEnrolmentsList_Rebuild(int startIndex, int lineCount) {
			if (ssActiveEnrolmentsListList.Length != -1) {
				wtActiveEnrolmentsList_storage.Clear();
				for (int i=startIndex; i<ssActiveEnrolmentsListList.Data.Count && i<startIndex+lineCount; i++) {
					recListActiveEnrolmentsList_Store(ssActiveEnrolmentsListList.Data[i], wtActiveEnrolmentsList_storage.Count);
				}
			}
		}
		public void recListActiveEnrolmentsList_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtActiveEnrolmentsList widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStaffViewRecordRecordList getWtActiveEnrolmentsListList() {
			if (ssActiveEnrolmentsListListDoDataBind) {
				recListActiveEnrolmentsList_onDataBinding(this, null);
			}

			return ssActiveEnrolmentsListList;
		}
		/// <summary>
		/// wtLineWrapper Functions
		/// </summary>
		public void cntLineWrapper_onDataBinding(object sender, System.EventArgs e) {
			cntLineWrapper_setInlineAttributes(sender, e);
		}
		public string cntLineWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			((WebControl) sender).CssClass = ("LineWrapper_Line" +Convert.ToString(getWtActiveEnrolmentsListList().CurrentRowNumber)) + " OSInline";
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment) ?("LineWrapper_Line"):("LineWrapper_Line BlackAndWhiteFilter"));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntLineWrapper_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtLineWrapper)
		/// </summary>
		/// <returns>The Visible State of wtLineWrapper</returns>
		public bool cntLineWrapper_isVisible() {
			return true;
		}

		/// <summary>
		/// wtStudentFavourite Functions
		/// </summary>
		public void cntStudentFavourite_onDataBinding(object sender, System.EventArgs e) {
			cntStudentFavourite_setInlineAttributes(sender, e);
		}
		public string cntStudentFavourite_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntStudentFavourite_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentFavourite)
		/// </summary>
		/// <returns>The Visible State of wtStudentFavourite</returns>
		public bool cntStudentFavourite_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If15 Functions
		/// </summary>
		bool if_wt_If15_hasRun=false;
		bool if_wt_If15_evalResult;
		public bool if_wt_If15() {
			if (if_wt_If15_hasRun) {
				if_wt_If15_hasRun = false;
				return if_wt_If15_evalResult;
			}
			if_wt_If15_hasRun = true;
			if_wt_If15_evalResult = (inParamSessionID==BuiltInFunction.NullIdentifier());
			return if_wt_If15_evalResult;
		}

		/// <summary>
		/// wt_If409 Functions
		/// </summary>
		bool if_wt_If409_hasRun=false;
		bool if_wt_If409_evalResult;
		public bool if_wt_If409() {
			if (if_wt_If409_hasRun) {
				if_wt_If409_hasRun = false;
				return if_wt_If409_evalResult;
			}
			if_wt_If409_hasRun = true;
			if_wt_If409_evalResult = (getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStaffStudentFavouriteId!=BuiltInFunction.NullIdentifier());
			return if_wt_If409_evalResult;
		}

		/// <summary>
		/// wt_Link199 Functions
		/// </summary>
		public void lnk_Link199_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link199_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link199_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#FFD700;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link199_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandToogleFavourite(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link199)
		/// </summary>
		/// <returns>title of the Link (wt_Link199)</returns>
		public string
		lnk_Link199_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link199)
		/// </summary>
		/// <returns>The Visible State of wt_Link199</returns>
		public bool lnk_Link199_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link199)
		/// </summary>
		/// <returns>The Enabled State of wt_Link199</returns>
		public bool lnk_Link199_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance246 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance246_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("qKwz4ZaPnkmbJYnyFjRtFg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Link262 Functions
		/// </summary>
		public void lnk_Link262_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link262_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link262_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#DADADA;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link262_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandToogleFavourite(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link262)
		/// </summary>
		/// <returns>title of the Link (wt_Link262)</returns>
		public string
		lnk_Link262_getTitle() {
			return "set as favourite";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link262)
		/// </summary>
		/// <returns>The Visible State of wt_Link262</returns>
		public bool lnk_Link262_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link262)
		/// </summary>
		/// <returns>The Enabled State of wt_Link262</returns>
		public bool lnk_Link262_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance313 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance313_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("ycc7nxlWj0WSykMfq37k4A")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_If281 Functions
		/// </summary>
		bool if_wt_If281_hasRun=false;
		bool if_wt_If281_evalResult;
		public bool if_wt_If281() {
			if (if_wt_If281_hasRun) {
				if_wt_If281_hasRun = false;
				return if_wt_If281_evalResult;
			}
			if_wt_If281_hasRun = true;
			if_wt_If281_evalResult = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssIsSessionReviewed;
			return if_wt_If281_evalResult;
		}

		/// <summary>
		/// wt_Container436 Functions
		/// </summary>
		public void cnt_Container436_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container436_setInlineAttributes(sender, e);
		}
		public string cnt_Container436_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color:green;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container436_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container436)
		/// </summary>
		/// <returns>The Visible State of wt_Container436</returns>
		public bool cnt_Container436_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance109 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance109_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("CVlsDr+2eEWplbMTBcZihQ")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container158 Functions
		/// </summary>
		public void cnt_Container158_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container158_setInlineAttributes(sender, e);
		}
		public string cnt_Container158_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color:#DADADA;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container158_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container158)
		/// </summary>
		/// <returns>The Visible State of wt_Container158</returns>
		public bool cnt_Container158_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance447 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance447_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("CVlsDr+2eEWplbMTBcZihQ")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wtStudentRAG Functions
		/// </summary>
		public void cntStudentRAG_onDataBinding(object sender, System.EventArgs e) {
			cntStudentRAG_setInlineAttributes(sender, e);
		}
		public string cntStudentRAG_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((IAttributeAccessor) sender).SetAttribute("title", (((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAGUUpdatedBy!=BuiltInFunction.NullIdentifier())) ?(((((((("RAG last updated by " +Functions.ssGetUser(heContext, getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAGUUpdatedBy).ssENUser.ssName) + "\r\n") + "On ") +BuiltInFunction.FormatFullDate(Convert.ToDateTime(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAGUpdateAt.ToString("yyyy-M-d")), "-")) + " (") +Convert.ToString(BuiltInFunction.DiffDays(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAGUpdateAt, BuiltInFunction.CurrDate()))) + " days ago.)")):("RAG has never been set")).ToString());
			if (!cntStudentRAG_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentRAG)
		/// </summary>
		/// <returns>The Visible State of wtStudentRAG</returns>
		public bool cntStudentRAG_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container522 Functions
		/// </summary>
		public void cnt_Container522_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container522_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container522_setInlineAttributes(object sender, System.EventArgs e) {
			((WebControl) sender).CssClass = (((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("REDRAGList"):((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("AmberRAGList"):(((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("7ZW1jAUCgkSdtFYbaM8RSQ")).ssId) || (getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==BuiltInFunction.NullTextIdentifier()))) ?("BlueNotSetRAG_List"):("GreenRAG_List")))))) + " OSInline";
			((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +this.FindControl("wtileft").ClientID) + "\').value = $(this).parent().offset().left;\r\ndocument.getElementById(\'") +this.FindControl("wtitop").ClientID) + "\').value = $(this).parent().offset().top;").ToString());
			if (!cnt_Container522_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container522
		/// </summary>
		public void cnt_Container522_AjaxClick(object sender, System.EventArgs e) {
			if (CommandOpenStudentRAG(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container522)
		/// </summary>
		/// <returns>The Visible State of wt_Container522</returns>
		public bool cnt_Container522_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression47 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = KXKeFspgakin_9nLjpys3Q) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression47() {
			return (((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("A"):((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("R"):(((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("7ZW1jAUCgkSdtFYbaM8RSQ")).ssId) || (getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==BuiltInFunction.NullTextIdentifier()))) ?("ns"):("G"))))));
		}
		/// <summary>
		/// wt_If541 Functions
		/// </summary>
		bool if_wt_If541_hasRun=false;
		bool if_wt_If541_evalResult;
		public bool if_wt_If541() {
			if (if_wt_If541_hasRun) {
				if_wt_If541_hasRun = false;
				return if_wt_If541_evalResult;
			}
			if_wt_If541_hasRun = true;
			if_wt_If541_evalResult = (BuiltInFunction.AddDays(BuiltInFunction.CurrDate(), ( - (((inParamSessionID==BuiltInFunction.NullIdentifier())) ?(((int) Global.SiteProperties["RAG_MaxDays_Alert"])):(((int) Global.SiteProperties["RAG_Session_MaxDays_Alert"]))))) >getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAGUpdateAt);
			return if_wt_If541_evalResult;
		}

		/// <summary>
		/// wt_Container372 Functions
		/// </summary>
		public void cnt_Container372_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container372_setInlineAttributes(sender, e);
		}
		public string cnt_Container372_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container372_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container372)
		/// </summary>
		/// <returns>The Visible State of wt_Container372</returns>
		public bool cnt_Container372_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance540 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance540_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wtRAGStudentWrapper Functions
		/// </summary>
		public void cntRAGStudentWrapper_onDataBinding(object sender, System.EventArgs e) {
			cntRAGStudentWrapper_setInlineAttributes(sender, e);
		}
		public string cntRAGStudentWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			((WebControl) sender).CssClass = ((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment) ?(Functions.ActionGetStudentRAGStyle(heContext, getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG)):("StudentRAGSilver"));
			if (!cntRAGStudentWrapper_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtRAGStudentWrapper)
		/// </summary>
		/// <returns>The Visible State of wtRAGStudentWrapper</returns>
		public bool cntRAGStudentWrapper_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapStudentLine Functions
		/// </summary>
		public void cntWrapStudentLine_onDataBinding(object sender, System.EventArgs e) {
			cntWrapStudentLine_setInlineAttributes(sender, e);
		}
		public string cntWrapStudentLine_setInlineAttributes(object sender, System.EventArgs e) {
			((WebControl) sender).CssClass = ("StudentLine " + (((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("RedStudentLine"):((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("AmberStudentLine"):(""))))) + " OSInline";
			if (!cntWrapStudentLine_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapStudentLine)
		/// </summary>
		/// <returns>The Visible State of wtWrapStudentLine</returns>
		public bool cntWrapStudentLine_isVisible() {
			return true;
		}

		/// <summary>
		/// wtStudentPhotoWrapper Functions
		/// </summary>
		public void cntStudentPhotoWrapper_onDataBinding(object sender, System.EventArgs e) {
			cntStudentPhotoWrapper_setInlineAttributes(sender, e);
		}
		public string cntStudentPhotoWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntStudentPhotoWrapper_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentPhotoWrapper)
		/// </summary>
		/// <returns>The Visible State of wtStudentPhotoWrapper</returns>
		public bool cntStudentPhotoWrapper_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container235 Functions
		/// </summary>
		public void cnt_Container235_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container235_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container235_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container235_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container235
		/// </summary>
		public void cnt_Container235_AjaxClick(object sender, System.EventArgs e) {
			if (CommandShowLearnerDetail(heContext
			, getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container235)
		/// </summary>
		/// <returns>The Visible State of wt_Container235</returns>
		public bool cnt_Container235_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Image149 Functions
		/// </summary>
		public void img_Image149_onDataBinding(object sender, System.EventArgs e) {
			img_Image149_setInlineAttributes(sender, e);
		}
		public string img_Image149_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("onerror", "this.src=\'img/missingphoto.png\';" .ToString());
			((WebControl) sender).CssClass = ("StudentPhoto " + ((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment) ?((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("RedBorder"):((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("AmberBorder"):((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("GreenBorder"):("BlueBorder"))))))):("StudentPhoto SilverBorder BlackAndWhiteFilter")));
			return "";
		}

		/// <summary>
		/// Gets the URL of the image (wt_Image149)
		/// </summary>
		/// <returns>URL of the Image (wt_Image149)</returns>
		public string img_Image149_getURL() {
			string url = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentPhotoURL;
			url = url.Replace("&amp;", "&");
			return url; 
		}
		/// <summary>
		/// wt_Container519 Functions
		/// </summary>
		public void cnt_Container519_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container519_setInlineAttributes(sender, e);
		}
		public string cnt_Container519_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container519_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container519)
		/// </summary>
		/// <returns>The Visible State of wt_Container519</returns>
		public bool cnt_Container519_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container55 Functions
		/// </summary>
		public void cnt_Container55_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container55_setInlineAttributes(sender, e);
		}
		public string cnt_Container55_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:absolute; top:0px; right: 0px;height: 20px;line-height:initial;color:#D0021B;font-size:14px;z-index:2;padding-top:4px;padding-right:2px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container55_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container55)
		/// </summary>
		/// <returns>The Visible State of wt_Container55</returns>
		public bool cnt_Container55_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container170 Functions
		/// </summary>
		public void cnt_Container170_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container170_setInlineAttributes(sender, e);
		}
		public string cnt_Container170_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = (((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("color:#D0021B; "):((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("color:#F5A623;"):(""))));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container170_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container170)
		/// </summary>
		/// <returns>The Visible State of wt_Container170</returns>
		public bool cnt_Container170_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapperIconNotes Functions
		/// </summary>
		public void cntWrapperIconNotes_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperIconNotes_setInlineAttributes(sender, e);
		}
		public string cntWrapperIconNotes_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ("position:relative;" + (((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssNotesNr==0)) ?("color:#DADADA"):((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("color:#D0021B; "):((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("color:#F5A623;"):("color:#84AA19")))))));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperIconNotes_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperIconNotes)
		/// </summary>
		/// <returns>The Visible State of wtWrapperIconNotes</returns>
		public bool cntWrapperIconNotes_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container404 Functions
		/// </summary>
		public void cnt_Container404_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container404_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container404_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +this.FindControl("wtileft").ClientID) + "\').value = $(this).parent().offset().left;\r\ndocument.getElementById(\'") +this.FindControl("wtitop").ClientID) + "\').value = $(this).parent().offset().top;").ToString());
			if (!cnt_Container404_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container404
		/// </summary>
		public void cnt_Container404_AjaxClick(object sender, System.EventArgs e) {
			if (CommandOpenNotesPopup(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container404)
		/// </summary>
		/// <returns>The Visible State of wt_Container404</returns>
		public bool cnt_Container404_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance44 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance44_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("aJhmQBcsXUKV6ol9A3EDEA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container31 Functions
		/// </summary>
		public void cnt_Container31_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container31_setInlineAttributes(sender, e);
		}
		public string cnt_Container31_setInlineAttributes(object sender, System.EventArgs e) {
			((WebControl) sender).CssClass = ("SName " + ((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment) ?((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("RedSemiBold"):((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("AmberColor"):((((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("GreenColor"):("BlueColor"))))))):("SilverColor"))) + " OSInline";
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container31_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container31)
		/// </summary>
		/// <returns>The Visible State of wt_Container31</returns>
		public bool cnt_Container31_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container311 Functions
		/// </summary>
		public void cnt_Container311_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container311_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container311_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:230px;position:relative;line-height: 45px;cursor:pointer;height:65px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container311_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container311
		/// </summary>
		public void cnt_Container311_AjaxClick(object sender, System.EventArgs e) {
			if (CommandShowLearnerDetail(heContext
			, getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container311)
		/// </summary>
		/// <returns>The Visible State of wt_Container311</returns>
		public bool cnt_Container311_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression87 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = mbsaKaNuvEWUF9nEQVDg2A) Expression: ToUpper + ", " +
		///  ActiveEnrolmentsList.List.Current.StaffViewRecord.Forenames
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression87() {
			return ((BuiltInFunction.ToUpper(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssSurname) + ", ") +getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssForenames);
		}
		/// <summary>
		/// wt_InlineExpression150 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = Sd7KPqZ1y0myfPw+IhcWaw) Expression:
		///  ActiveEnrolmentsList.List.Current.StaffViewRecord.MainOfferingName
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression150() {
			return getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMainOfferingName;
		}
		/// <summary>
		/// wt_WebBlockInstance292 Functions
		/// </summary>
		public void webBlck_WebBlockInstance292_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffViewListIcons widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStaffViewListIcons) sender;
			widget.inParamStaffViewRecord = getWtActiveEnrolmentsListList().CurrentRec;
			widget.inParamLeftId = this.FindControl("wtileft").ClientID;
			widget.inParamTopId = this.FindControl("wtitop").ClientID;
			widget.inParamCurrentRowNumber = getWtActiveEnrolmentsListList().CurrentRowNumber;
			widget.inParamIsActive = true;
			widget.inParamHasCurrentActiveEnrolments = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment;
		}
		/// <summary>
		/// AjaxNotify event handler for widget wt_WebBlockInstance292
		/// </summary>
		public void webBlck_WebBlockInstance292_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOpenTooltipPopup(heContext
			, Functions.rssespaceservicecenter_NotifyWidgetGetMessage(heContext))) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wt_Container254 Functions
		/// </summary>
		public void cnt_Container254_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container254_setInlineAttributes(sender, e);
		}
		public string cnt_Container254_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:465px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container254_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container254)
		/// </summary>
		/// <returns>The Visible State of wt_Container254</returns>
		public bool cnt_Container254_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container220 Functions
		/// </summary>
		public void cnt_Container220_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container220_setInlineAttributes(sender, e);
		}
		public string cnt_Container220_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container220_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container220)
		/// </summary>
		/// <returns>The Visible State of wt_Container220</returns>
		public bool cnt_Container220_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container331 Functions
		/// </summary>
		public void cnt_Container331_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container331_setInlineAttributes(sender, e);
		}
		public string cnt_Container331_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container331_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container331)
		/// </summary>
		/// <returns>The Visible State of wt_Container331</returns>
		public bool cnt_Container331_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text136 Functions
		/// </summary>
		public void wt_Text136_onDataBinding(object sender, System.EventArgs e) {
			wt_Text136_setInlineAttributes(sender, e);
		}
		public string wt_Text136_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Curriculum Concern" .ToString());
			return "";
		}
		/// <summary>
		/// wt_Container52 Functions
		/// </summary>
		public void cnt_Container52_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container52_setInlineAttributes(sender, e);
		}
		public string cnt_Container52_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container52_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container52)
		/// </summary>
		/// <returns>The Visible State of wt_Container52</returns>
		public bool cnt_Container52_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text539 Functions
		/// </summary>
		public void wt_Text539_onDataBinding(object sender, System.EventArgs e) {
			wt_Text539_setInlineAttributes(sender, e);
		}
		public string wt_Text539_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Overall" .ToString());
			return "";
		}
		/// <summary>
		/// wtIndicatorColumn_Voc Functions
		/// </summary>
		public void cntIndicatorColumn_Voc_onDataBinding(object sender, System.EventArgs e) {
			cntIndicatorColumn_Voc_setInlineAttributes(sender, e);
		}
		public string cntIndicatorColumn_Voc_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:264px;vertical-align:top;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntIndicatorColumn_Voc_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtIndicatorColumn_Voc)
		/// </summary>
		/// <returns>The Visible State of wtIndicatorColumn_Voc</returns>
		public bool cntIndicatorColumn_Voc_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container530 Functions
		/// </summary>
		public void cnt_Container530_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container530_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container530_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +this.FindControl("wtileft").ClientID) + "\').value = $(this).offset().left;\r\ndocument.getElementById(\'") +this.FindControl("wtitop").ClientID) + "\').value = $(this).offset().top;").ToString());
			if (!cnt_Container530_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container530
		/// </summary>
		public void cnt_Container530_AjaxClick(object sender, System.EventArgs e) {
			if (CommandOpenCategoryRAGPopUp(heContext
			, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("9J+4M6ZeU0+g4qKAzSFbVg")).ssId)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container530)
		/// </summary>
		/// <returns>The Visible State of wt_Container530</returns>
		public bool cnt_Container530_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance66 Functions
		/// </summary>
		public void webBlck_WebBlockInstance66_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathPeriodRAG;
			widget.inParamOverallRAG = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathOverallRAG;
			widget.inParamFirstColumn = false;
			widget.inParamLastColumn = false;
			widget.inParamOverallUnit = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathCompletedUnits;
			widget.inParamOverallTotalUnit = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathOverallUpdatedAt;
			widget.inParamGreyOut = (!getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment);
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssIsMathExempt;
		}
		/// <summary>
		/// wt_Container470 Functions
		/// </summary>
		public void cnt_Container470_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container470_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container470_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +this.FindControl("wtileft").ClientID) + "\').value = $(this).offset().left;\r\ndocument.getElementById(\'") +this.FindControl("wtitop").ClientID) + "\').value = $(this).offset().top;").ToString());
			if (!cnt_Container470_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container470
		/// </summary>
		public void cnt_Container470_AjaxClick(object sender, System.EventArgs e) {
			if (CommandOpenCategoryRAGPopUp(heContext
			, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("hh0WWQ2FF0acLTzRV4EL3Q")).ssId)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container470)
		/// </summary>
		/// <returns>The Visible State of wt_Container470</returns>
		public bool cnt_Container470_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance54 Functions
		/// </summary>
		public void webBlck_WebBlockInstance54_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngPeriodRAG;
			widget.inParamOverallRAG = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngOverallRAG;
			widget.inParamFirstColumn = false;
			widget.inParamLastColumn = false;
			widget.inParamOverallUnit = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngCompletedUnits;
			widget.inParamOverallTotalUnit = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngOverallUpdatedAt;
			widget.inParamGreyOut = (!getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment);
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssIsEnglishExempt;
		}
		/// <summary>
		/// wt_Container90 Functions
		/// </summary>
		public void cnt_Container90_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container90_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container90_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +this.FindControl("wtileft").ClientID) + "\').value = $(this).offset().left;\r\ndocument.getElementById(\'") +this.FindControl("wtitop").ClientID) + "\').value = $(this).offset().top;").ToString());
			if (!cnt_Container90_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container90
		/// </summary>
		public void cnt_Container90_AjaxClick(object sender, System.EventArgs e) {
			if (CommandOpenCategoryRAGPopUp(heContext
			, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container90)
		/// </summary>
		/// <returns>The Visible State of wt_Container90</returns>
		public bool cnt_Container90_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance411 Functions
		/// </summary>
		public void webBlck_WebBlockInstance411_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocPeriodRAG;
			widget.inParamOverallRAG = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocOverallRAG;
			widget.inParamFirstColumn = true;
			widget.inParamLastColumn = false;
			widget.inParamOverallUnit = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocCompletedUnits;
			widget.inParamOverallTotalUnit = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocOverallUpdatedAt;
			widget.inParamGreyOut = (!getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment);
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = false;
		}
		/// <summary>
		/// wt_Container174 Functions
		/// </summary>
		public void cnt_Container174_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container174_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container174_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +this.FindControl("wtileft").ClientID) + "\').value = $(this).offset().left;\r\ndocument.getElementById(\'") +this.FindControl("wtitop").ClientID) + "\').value = $(this).offset().top;").ToString());
			if (!cnt_Container174_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container174
		/// </summary>
		public void cnt_Container174_AjaxClick(object sender, System.EventArgs e) {
			if (CommandOpenCategoryRAGPopUp(heContext
			, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("iy5u49fNYkGR3K77QLSz4g")).ssId)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container174)
		/// </summary>
		/// <returns>The Visible State of wt_Container174</returns>
		public bool cnt_Container174_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance408 Functions
		/// </summary>
		public void webBlck_WebBlockInstance408_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWPeriodRAG;
			widget.inParamOverallRAG = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWOverallRAG;
			widget.inParamFirstColumn = false;
			widget.inParamLastColumn = true;
			widget.inParamOverallUnit = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWCompletedUnits;
			widget.inParamOverallTotalUnit = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWOverallUpdatedAt;
			widget.inParamGreyOut = (!getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment);
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = false;
		}
		/// <summary>
		/// wt_Container405 Functions
		/// </summary>
		public void cnt_Container405_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container405_setInlineAttributes(sender, e);
		}
		public string cnt_Container405_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container405_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container405)
		/// </summary>
		/// <returns>The Visible State of wt_Container405</returns>
		public bool cnt_Container405_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container526 Functions
		/// </summary>
		public void cnt_Container526_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container526_setInlineAttributes(sender, e);
		}
		public string cnt_Container526_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container526_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container526)
		/// </summary>
		/// <returns>The Visible State of wt_Container526</returns>
		public bool cnt_Container526_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text544 Functions
		/// </summary>
		public void wt_Text544_onDataBinding(object sender, System.EventArgs e) {
			wt_Text544_setInlineAttributes(sender, e);
		}
		public string wt_Text544_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Last Week" .ToString());
			return "";
		}
		/// <summary>
		/// wt_Container422 Functions
		/// </summary>
		public void cnt_Container422_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container422_setInlineAttributes(sender, e);
		}
		public string cnt_Container422_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container422_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container422)
		/// </summary>
		/// <returns>The Visible State of wt_Container422</returns>
		public bool cnt_Container422_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text507 Functions
		/// </summary>
		public void wt_Text507_onDataBinding(object sender, System.EventArgs e) {
			wt_Text507_setInlineAttributes(sender, e);
		}
		public string wt_Text507_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Overall" .ToString());
			return "";
		}
		/// <summary>
		/// wt_Container348 Functions
		/// </summary>
		public void cnt_Container348_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container348_setInlineAttributes(sender, e);
		}
		public string cnt_Container348_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:136px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container348_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container348)
		/// </summary>
		/// <returns>The Visible State of wt_Container348</returns>
		public bool cnt_Container348_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container406 Functions
		/// </summary>
		public void cnt_Container406_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container406_setInlineAttributes(sender, e);
		}
		public string cnt_Container406_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container406_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container406)
		/// </summary>
		/// <returns>The Visible State of wt_Container406</returns>
		public bool cnt_Container406_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance328 Functions
		/// </summary>
		public void webBlck_WebBlockInstance328_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssLastWeekAttendance;
			widget.inParamGreyOut = (!getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment);
		}
		/// <summary>
		/// wt_WebBlockInstance230 Functions
		/// </summary>
		public void webBlck_WebBlockInstance230_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssLastWeekPunctuality;
			widget.inParamGreyOut = (!getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment);
		}
		/// <summary>
		/// wt_Container552 Functions
		/// </summary>
		public void cnt_Container552_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container552_setInlineAttributes(sender, e);
		}
		public string cnt_Container552_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container552_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container552)
		/// </summary>
		/// <returns>The Visible State of wt_Container552</returns>
		public bool cnt_Container552_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance168 Functions
		/// </summary>
		public void webBlck_WebBlockInstance168_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssOverallAttendance;
			widget.inParamGreyOut = (!getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment);
		}
		/// <summary>
		/// wt_WebBlockInstance131 Functions
		/// </summary>
		public void webBlck_WebBlockInstance131_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssOverallPunctuality;
			widget.inParamGreyOut = (!getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment);
		}
		/// <summary>
		/// wt_Container395 Functions
		/// </summary>
		public void cnt_Container395_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container395_setInlineAttributes(sender, e);
		}
		public string cnt_Container395_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:83px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container395_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container395)
		/// </summary>
		/// <returns>The Visible State of wt_Container395</returns>
		public bool cnt_Container395_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container240 Functions
		/// </summary>
		public void cnt_Container240_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container240_setInlineAttributes(sender, e);
		}
		public string cnt_Container240_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:40px;line-height:72px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container240_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container240)
		/// </summary>
		/// <returns>The Visible State of wt_Container240</returns>
		public bool cnt_Container240_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapperIcon3 Functions
		/// </summary>
		public void cntWrapperIcon3_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperIcon3_setInlineAttributes(sender, e);
		}
		public string cntWrapperIcon3_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperIcon3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperIcon3)
		/// </summary>
		/// <returns>The Visible State of wtWrapperIcon3</returns>
		public bool cntWrapperIcon3_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container260 Functions
		/// </summary>
		public void cnt_Container260_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container260_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container260_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +this.FindControl("wtileft").ClientID) + "\').value = $(this).parent().offset().left;\r\ndocument.getElementById(\'") +this.FindControl("wtitop").ClientID) + "\').value = $(this).parent().offset().top;").ToString());
			if (!cnt_Container260_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container260
		/// </summary>
		public void cnt_Container260_AjaxClick(object sender, System.EventArgs e) {
			if (CommandOpenCauseOfConcernPopUp(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container260)
		/// </summary>
		/// <returns>The Visible State of wt_Container260</returns>
		public bool cnt_Container260_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If450 Functions
		/// </summary>
		bool if_wt_If450_hasRun=false;
		bool if_wt_If450_evalResult;
		public bool if_wt_If450() {
			if (if_wt_If450_hasRun) {
				if_wt_If450_hasRun = false;
				return if_wt_If450_evalResult;
			}
			if_wt_If450_hasRun = true;
			if_wt_If450_evalResult = (getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId);
			return if_wt_If450_evalResult;
		}

		/// <summary>
		/// wt_If294 Functions
		/// </summary>
		bool if_wt_If294_hasRun=false;
		bool if_wt_If294_evalResult;
		public bool if_wt_If294() {
			if (if_wt_If294_hasRun) {
				if_wt_If294_hasRun = false;
				return if_wt_If294_evalResult;
			}
			if_wt_If294_hasRun = true;
			if_wt_If294_evalResult = (getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId);
			return if_wt_If294_evalResult;
		}

		/// <summary>
		/// wt_If110 Functions
		/// </summary>
		bool if_wt_If110_hasRun=false;
		bool if_wt_If110_evalResult;
		public bool if_wt_If110() {
			if (if_wt_If110_hasRun) {
				if_wt_If110_hasRun = false;
				return if_wt_If110_evalResult;
			}
			if_wt_If110_hasRun = true;
			if_wt_If110_evalResult = (getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId);
			return if_wt_If110_evalResult;
		}

		/// <summary>
		/// wt_If556 Functions
		/// </summary>
		bool if_wt_If556_hasRun=false;
		bool if_wt_If556_evalResult;
		public bool if_wt_If556() {
			if (if_wt_If556_hasRun) {
				if_wt_If556_hasRun = false;
				return if_wt_If556_evalResult;
			}
			if_wt_If556_hasRun = true;
			if_wt_If556_evalResult = (getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId);
			return if_wt_If556_evalResult;
		}

		/// <summary>
		/// wt_Container133 Functions
		/// </summary>
		public void cnt_Container133_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container133_setInlineAttributes(sender, e);
		}
		public string cnt_Container133_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:40px;line-height:72px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container133_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container133)
		/// </summary>
		/// <returns>The Visible State of wt_Container133</returns>
		public bool cnt_Container133_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapperIcon2 Functions
		/// </summary>
		public void cntWrapperIcon2_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperIcon2_setInlineAttributes(sender, e);
		}
		public string cntWrapperIcon2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperIcon2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperIcon2)
		/// </summary>
		/// <returns>The Visible State of wtWrapperIcon2</returns>
		public bool cntWrapperIcon2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container171 Functions
		/// </summary>
		public void cnt_Container171_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container171_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container171_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +this.FindControl("wtileft").ClientID) + "\').value = $(this).parent().offset().left;\r\ndocument.getElementById(\'") +this.FindControl("wtitop").ClientID) + "\').value = $(this).parent().offset().top;").ToString());
			if (!cnt_Container171_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container171
		/// </summary>
		public void cnt_Container171_AjaxClick(object sender, System.EventArgs e) {
			if (CommandOpenRewardsPopUp(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container171)
		/// </summary>
		/// <returns>The Visible State of wt_Container171</returns>
		public bool cnt_Container171_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If167 Functions
		/// </summary>
		bool if_wt_If167_hasRun=false;
		bool if_wt_If167_evalResult;
		public bool if_wt_If167() {
			if (if_wt_If167_hasRun) {
				if_wt_If167_hasRun = false;
				return if_wt_If167_evalResult;
			}
			if_wt_If167_hasRun = true;
			if_wt_If167_evalResult = ((getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGoldNumber==0) && (getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGreenNumber==0));
			return if_wt_If167_evalResult;
		}

		/// <summary>
		/// wt_If390 Functions
		/// </summary>
		bool if_wt_If390_hasRun=false;
		bool if_wt_If390_evalResult;
		public bool if_wt_If390() {
			if (if_wt_If390_hasRun) {
				if_wt_If390_hasRun = false;
				return if_wt_If390_evalResult;
			}
			if_wt_If390_hasRun = true;
			if_wt_If390_evalResult = (getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGoldNumber>0);
			return if_wt_If390_evalResult;
		}

		/// <summary>
		/// wt_If430 Functions
		/// </summary>
		bool if_wt_If430_hasRun=false;
		bool if_wt_If430_evalResult;
		public bool if_wt_If430() {
			if (if_wt_If430_hasRun) {
				if_wt_If430_hasRun = false;
				return if_wt_If430_evalResult;
			}
			if_wt_If430_hasRun = true;
			if_wt_If430_evalResult = (getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGreenNumber>0);
			return if_wt_If430_evalResult;
		}

		/// <summary>
		/// wt_Container449 Functions
		/// </summary>
		public void cnt_Container449_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container449_setInlineAttributes(sender, e);
		}
		public string cnt_Container449_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container449_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container449)
		/// </summary>
		/// <returns>The Visible State of wt_Container449</returns>
		public bool cnt_Container449_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWithdrawnEnrolmentsWrapper Functions
		/// </summary>
		public void cntWithdrawnEnrolmentsWrapper_onDataBinding(object sender, System.EventArgs e) {
			cntWithdrawnEnrolmentsWrapper_setInlineAttributes(sender, e);
		}
		public string cntWithdrawnEnrolmentsWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntWithdrawnEnrolmentsWrapper_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWithdrawnEnrolmentsWrapper)
		/// </summary>
		/// <returns>The Visible State of wtWithdrawnEnrolmentsWrapper</returns>
		public bool cntWithdrawnEnrolmentsWrapper_isVisible() {
			return (!varLcWithdrawnEnrolments.Empty);
		}

		/// <summary>
		/// wt_Container177 Functions
		/// </summary>
		public void cnt_Container177_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container177_setInlineAttributes(sender, e);
		}
		public string cnt_Container177_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container177_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container177)
		/// </summary>
		/// <returns>The Visible State of wt_Container177</returns>
		public bool cnt_Container177_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression173 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = ALTmR7l4ZkiiDn005jiJpQ) Expression: "Learners that have
		///  Withdrawn from " + internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression173() {
			return ("Learners that have Withdrawn from " + (((inParamCourseCode!= "")) ?(queryResGetGroups_outParamList.CurrentRec.ssENGroup.ssGroupDescription):(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssGroupDescription)));
		}
		/// <summary>
		/// wtWithdrawnEnrolmentsList Functions
		/// </summary>
		public void recListWithdrawnEnrolmentsList_onDataBinding(object sender, System.EventArgs e) {
			// widget wtWithdrawnEnrolmentsList
			ssWithdrawnEnrolmentsListList = varLcWithdrawnEnrolments;
			ssWithdrawnEnrolmentsListListDoDataBind = false;
			ssWithdrawnEnrolmentsListListDataBound = true;
		}
		public void recListWithdrawnEnrolmentsList_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssWithdrawnEnrolmentsListList.Length > 0) {
					ssWithdrawnEnrolmentsListList.CurrentRec = ssWithdrawnEnrolmentsListList[ssWithdrawnEnrolmentsListList.CurrentRowNumber];
				}
				if (ssWithdrawnEnrolmentsListList.Length > e.SelectedIndex) {
					ssWithdrawnEnrolmentsListList.CurrentRec = ssWithdrawnEnrolmentsListList[e.SelectedIndex];
					ssWithdrawnEnrolmentsListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListWithdrawnEnrolmentsList_Store(object dataItem, int index) {
			RCStaffViewRecordRecord tmprec = (RCStaffViewRecordRecord) dataItem;
			return "";
		}
		public void recListWithdrawnEnrolmentsList_Restore() {

			#region fetch ssWithdrawnEnrolmentsListList runtime properties state.

			ssWithdrawnEnrolmentsListList = new RLStaffViewRecordRecordList();
			bool tmpstorewtWithdrawnEnrolmentsList_list_empty;
			tmpstorewtWithdrawnEnrolmentsList_list_empty = (bool) ViewStateAttributes.GetFromViewState("wtWithdrawnEnrolmentsList_list_empty", null);
			int tmpstorewtWithdrawnEnrolmentsList_list_length;
			tmpstorewtWithdrawnEnrolmentsList_list_length = (int) ViewStateAttributes.GetFromViewState("wtWithdrawnEnrolmentsList_list_length", null);
			while (tmpstorewtWithdrawnEnrolmentsList_list_length-- > 0) {
				ssWithdrawnEnrolmentsListList.Append(new RCStaffViewRecordRecord(null));
			}

			ssWithdrawnEnrolmentsListList.CurrentRowNumber = -1;

			if (tmpstorewtWithdrawnEnrolmentsList_list_length > 0) {
				ssWithdrawnEnrolmentsListList.RestoreRecordListState(tmpstorewtWithdrawnEnrolmentsList_list_length - 1, false);
			} else {
				ssWithdrawnEnrolmentsListList.CurrentRowNumber = 0;
			}

			#endregion

		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListWithdrawnEnrolmentsList_Clear(object sender, EventArgs e) {
			wtWithdrawnEnrolmentsList_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListWithdrawnEnrolmentsList_Rebuild(int startIndex, int lineCount) {
			if (ssWithdrawnEnrolmentsListList.Length != -1) {
				wtWithdrawnEnrolmentsList_storage.Clear();
				for (int i=startIndex; i<ssWithdrawnEnrolmentsListList.Data.Count && i<startIndex+lineCount; i++) {
					recListWithdrawnEnrolmentsList_Store(ssWithdrawnEnrolmentsListList.Data[i], wtWithdrawnEnrolmentsList_storage.Count);
				}
			}
		}
		public void recListWithdrawnEnrolmentsList_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtWithdrawnEnrolmentsList widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStaffViewRecordRecordList getWtWithdrawnEnrolmentsListList() {
			if (ssWithdrawnEnrolmentsListListDoDataBind) {
				recListWithdrawnEnrolmentsList_onDataBinding(this, null);
			}

			return ssWithdrawnEnrolmentsListList;
		}
		/// <summary>
		/// wtLineWrapper2 Functions
		/// </summary>
		public void cntLineWrapper2_onDataBinding(object sender, System.EventArgs e) {
			cntLineWrapper2_setInlineAttributes(sender, e);
		}
		public string cntLineWrapper2_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntLineWrapper2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtLineWrapper2)
		/// </summary>
		/// <returns>The Visible State of wtLineWrapper2</returns>
		public bool cntLineWrapper2_isVisible() {
			return true;
		}

		/// <summary>
		/// wtStudentFavourite2 Functions
		/// </summary>
		public void cntStudentFavourite2_onDataBinding(object sender, System.EventArgs e) {
			cntStudentFavourite2_setInlineAttributes(sender, e);
		}
		public string cntStudentFavourite2_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntStudentFavourite2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentFavourite2)
		/// </summary>
		/// <returns>The Visible State of wtStudentFavourite2</returns>
		public bool cntStudentFavourite2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If374 Functions
		/// </summary>
		bool if_wt_If374_hasRun=false;
		bool if_wt_If374_evalResult;
		public bool if_wt_If374() {
			if (if_wt_If374_hasRun) {
				if_wt_If374_hasRun = false;
				return if_wt_If374_evalResult;
			}
			if_wt_If374_hasRun = true;
			if_wt_If374_evalResult = (getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStaffStudentFavouriteId!=BuiltInFunction.NullIdentifier());
			return if_wt_If374_evalResult;
		}

		/// <summary>
		/// wt_Link365 Functions
		/// </summary>
		public void lnk_Link365_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link365_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link365_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#FFD700;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link365_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandToogleFavourite(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link365)
		/// </summary>
		/// <returns>title of the Link (wt_Link365)</returns>
		public string
		lnk_Link365_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link365)
		/// </summary>
		/// <returns>The Visible State of wt_Link365</returns>
		public bool lnk_Link365_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link365)
		/// </summary>
		/// <returns>The Enabled State of wt_Link365</returns>
		public bool lnk_Link365_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance93 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance93_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("qKwz4ZaPnkmbJYnyFjRtFg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Link327 Functions
		/// </summary>
		public void lnk_Link327_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link327_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link327_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#DADADA;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link327_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandToogleFavourite(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link327)
		/// </summary>
		/// <returns>title of the Link (wt_Link327)</returns>
		public string
		lnk_Link327_getTitle() {
			return "set as favourite";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link327)
		/// </summary>
		/// <returns>The Visible State of wt_Link327</returns>
		public bool lnk_Link327_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link327)
		/// </summary>
		/// <returns>The Enabled State of wt_Link327</returns>
		public bool lnk_Link327_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance123 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance123_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("ycc7nxlWj0WSykMfq37k4A")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wtStudentRAG2 Functions
		/// </summary>
		public void cntStudentRAG2_onDataBinding(object sender, System.EventArgs e) {
			cntStudentRAG2_setInlineAttributes(sender, e);
		}
		public string cntStudentRAG2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntStudentRAG2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentRAG2)
		/// </summary>
		/// <returns>The Visible State of wtStudentRAG2</returns>
		public bool cntStudentRAG2_isVisible() {
			return true;
		}

		/// <summary>
		/// wtRAGStudentWrapper2 Functions
		/// </summary>
		public void cntRAGStudentWrapper2_onDataBinding(object sender, System.EventArgs e) {
			cntRAGStudentWrapper2_setInlineAttributes(sender, e);
		}
		public string cntRAGStudentWrapper2_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntRAGStudentWrapper2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtRAGStudentWrapper2)
		/// </summary>
		/// <returns>The Visible State of wtRAGStudentWrapper2</returns>
		public bool cntRAGStudentWrapper2_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapStudentLine2 Functions
		/// </summary>
		public void cntWrapStudentLine2_onDataBinding(object sender, System.EventArgs e) {
			cntWrapStudentLine2_setInlineAttributes(sender, e);
		}
		public string cntWrapStudentLine2_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntWrapStudentLine2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapStudentLine2)
		/// </summary>
		/// <returns>The Visible State of wtWrapStudentLine2</returns>
		public bool cntWrapStudentLine2_isVisible() {
			return true;
		}

		/// <summary>
		/// wtStudentPhotoWrapper2 Functions
		/// </summary>
		public void cntStudentPhotoWrapper2_onDataBinding(object sender, System.EventArgs e) {
			cntStudentPhotoWrapper2_setInlineAttributes(sender, e);
		}
		public string cntStudentPhotoWrapper2_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntStudentPhotoWrapper2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentPhotoWrapper2)
		/// </summary>
		/// <returns>The Visible State of wtStudentPhotoWrapper2</returns>
		public bool cntStudentPhotoWrapper2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link256 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link256)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link256)</returns>
		public string lnk_Link256_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsOverview", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link256)
		/// </summary>
		/// <returns>title of the Link (wt_Link256)</returns>
		public string
		lnk_Link256_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link256)
		/// </summary>
		/// <returns>The Visible State of wt_Link256</returns>
		public bool lnk_Link256_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link256)
		/// </summary>
		/// <returns>The Enabled State of wt_Link256</returns>
		public bool lnk_Link256_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container175 Functions
		/// </summary>
		public void cnt_Container175_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container175_setInlineAttributes(sender, e);
		}
		public string cnt_Container175_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container175_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container175)
		/// </summary>
		/// <returns>The Visible State of wt_Container175</returns>
		public bool cnt_Container175_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Image64 Functions
		/// </summary>
		public void img_Image64_onDataBinding(object sender, System.EventArgs e) {
			img_Image64_setInlineAttributes(sender, e);
		}
		public string img_Image64_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("onerror", "this.src=\'img/missingphoto.png\';" .ToString());
			((WebControl) sender).CssClass = "StudentPhoto SilverBorder BlackAndWhiteFilter";
			return "";
		}

		/// <summary>
		/// Gets the URL of the image (wt_Image64)
		/// </summary>
		/// <returns>URL of the Image (wt_Image64)</returns>
		public string img_Image64_getURL() {
			string url = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentPhotoURL;
			url = url.Replace("&amp;", "&");
			return url; 
		}
		/// <summary>
		/// wt_Container349 Functions
		/// </summary>
		public void cnt_Container349_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container349_setInlineAttributes(sender, e);
		}
		public string cnt_Container349_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container349_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container349)
		/// </summary>
		/// <returns>The Visible State of wt_Container349</returns>
		public bool cnt_Container349_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container237 Functions
		/// </summary>
		public void cnt_Container237_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container237_setInlineAttributes(sender, e);
		}
		public string cnt_Container237_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:absolute; top:0px; right: 0px;height: 20px;line-height:initial;color:#C0C0C0;font-size:14px;z-index:2;padding-top:4px;padding-right:2px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container237_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container237)
		/// </summary>
		/// <returns>The Visible State of wt_Container237</returns>
		public bool cnt_Container237_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container345 Functions
		/// </summary>
		public void cnt_Container345_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container345_setInlineAttributes(sender, e);
		}
		public string cnt_Container345_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color:#C0C0C0;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container345_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container345)
		/// </summary>
		/// <returns>The Visible State of wt_Container345</returns>
		public bool cnt_Container345_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapperIcon4 Functions
		/// </summary>
		public void cntWrapperIcon4_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperIcon4_setInlineAttributes(sender, e);
		}
		public string cntWrapperIcon4_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;color:#C0C0C0;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperIcon4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperIcon4)
		/// </summary>
		/// <returns>The Visible State of wtWrapperIcon4</returns>
		public bool cntWrapperIcon4_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container443 Functions
		/// </summary>
		public void cnt_Container443_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container443_setInlineAttributes(sender, e);
		}
		public string cnt_Container443_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container443_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container443)
		/// </summary>
		/// <returns>The Visible State of wt_Container443</returns>
		public bool cnt_Container443_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance103 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance103_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("aJhmQBcsXUKV6ol9A3EDEA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container278 Functions
		/// </summary>
		public void cnt_Container278_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container278_setInlineAttributes(sender, e);
		}
		public string cnt_Container278_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container278_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container278)
		/// </summary>
		/// <returns>The Visible State of wt_Container278</returns>
		public bool cnt_Container278_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link236 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link236)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link236)</returns>
		public string lnk_Link236_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsOverview", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link236)
		/// </summary>
		/// <returns>title of the Link (wt_Link236)</returns>
		public string
		lnk_Link236_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link236)
		/// </summary>
		/// <returns>The Visible State of wt_Link236</returns>
		public bool lnk_Link236_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link236)
		/// </summary>
		/// <returns>The Enabled State of wt_Link236</returns>
		public bool lnk_Link236_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container416 Functions
		/// </summary>
		public void cnt_Container416_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container416_setInlineAttributes(sender, e);
		}
		public string cnt_Container416_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:230px;position:relative;line-height: 45px;height:65px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container416_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container416)
		/// </summary>
		/// <returns>The Visible State of wt_Container416</returns>
		public bool cnt_Container416_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression551 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = rb8L+jYZ60aTxSLfZmjDFQ) Expression: ToUpper + ", " +
		///  WithdrawnEnrolmentsList.List.Current.StaffViewRecord.Forenames
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression551() {
			return ((BuiltInFunction.ToUpper(getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssSurname) + ", ") +getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssForenames);
		}
		/// <summary>
		/// wt_InlineExpression161 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = ZirFQ0Ml_EitciBYtN_nVA) Expression:
		///  WithdrawnEnrolmentsList.List.Current.StaffViewRecord.MainOfferingName
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression161() {
			return getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMainOfferingName;
		}
		/// <summary>
		/// wt_WebBlockInstance495 Functions
		/// </summary>
		public void webBlck_WebBlockInstance495_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffViewListIcons widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStaffViewListIcons) sender;
			widget.inParamStaffViewRecord = getWtWithdrawnEnrolmentsListList().CurrentRec;
			widget.inParamLeftId = this.FindControl("wtileft").ClientID;
			widget.inParamTopId = this.FindControl("wtitop").ClientID;
			widget.inParamCurrentRowNumber = getWtWithdrawnEnrolmentsListList().CurrentRowNumber;
			widget.inParamIsActive = false;
			widget.inParamHasCurrentActiveEnrolments = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment;
		}
		/// <summary>
		/// AjaxNotify event handler for widget wt_WebBlockInstance495
		/// </summary>
		public void webBlck_WebBlockInstance495_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOpenTooltipPopup(heContext
			, Functions.rssespaceservicecenter_NotifyWidgetGetMessage(heContext))) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wt_Container487 Functions
		/// </summary>
		public void cnt_Container487_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container487_setInlineAttributes(sender, e);
		}
		public string cnt_Container487_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:465px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container487_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container487)
		/// </summary>
		/// <returns>The Visible State of wt_Container487</returns>
		public bool cnt_Container487_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container188 Functions
		/// </summary>
		public void cnt_Container188_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container188_setInlineAttributes(sender, e);
		}
		public string cnt_Container188_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container188_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container188)
		/// </summary>
		/// <returns>The Visible State of wt_Container188</returns>
		public bool cnt_Container188_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container68 Functions
		/// </summary>
		public void cnt_Container68_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container68_setInlineAttributes(sender, e);
		}
		public string cnt_Container68_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container68_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container68)
		/// </summary>
		/// <returns>The Visible State of wt_Container68</returns>
		public bool cnt_Container68_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text92 Functions
		/// </summary>
		public void wt_Text92_onDataBinding(object sender, System.EventArgs e) {
			wt_Text92_setInlineAttributes(sender, e);
		}
		public string wt_Text92_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Curriculum Concern" .ToString());
			return "";
		}
		/// <summary>
		/// wt_Container129 Functions
		/// </summary>
		public void cnt_Container129_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container129_setInlineAttributes(sender, e);
		}
		public string cnt_Container129_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container129_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container129)
		/// </summary>
		/// <returns>The Visible State of wt_Container129</returns>
		public bool cnt_Container129_isVisible() {
			return true;
		}

		/// <summary>
		/// wtIndicatorColumn_Voc2 Functions
		/// </summary>
		public void cntIndicatorColumn_Voc2_onDataBinding(object sender, System.EventArgs e) {
			cntIndicatorColumn_Voc2_setInlineAttributes(sender, e);
		}
		public string cntIndicatorColumn_Voc2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:264px;vertical-align:top;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntIndicatorColumn_Voc2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtIndicatorColumn_Voc2)
		/// </summary>
		/// <returns>The Visible State of wtIndicatorColumn_Voc2</returns>
		public bool cntIndicatorColumn_Voc2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container543 Functions
		/// </summary>
		public void cnt_Container543_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container543_setInlineAttributes(sender, e);
		}
		public string cnt_Container543_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container543_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container543)
		/// </summary>
		/// <returns>The Visible State of wt_Container543</returns>
		public bool cnt_Container543_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance387 Functions
		/// </summary>
		public void webBlck_WebBlockInstance387_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathPeriodRAG;
			widget.inParamOverallRAG = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathOverallRAG;
			widget.inParamFirstColumn = false;
			widget.inParamLastColumn = false;
			widget.inParamOverallUnit = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathCompletedUnits;
			widget.inParamOverallTotalUnit = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathOverallUpdatedAt;
			widget.inParamGreyOut = true;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssIsMathExempt;
		}
		/// <summary>
		/// wt_Container318 Functions
		/// </summary>
		public void cnt_Container318_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container318_setInlineAttributes(sender, e);
		}
		public string cnt_Container318_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container318_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container318)
		/// </summary>
		/// <returns>The Visible State of wt_Container318</returns>
		public bool cnt_Container318_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance527 Functions
		/// </summary>
		public void webBlck_WebBlockInstance527_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngPeriodRAG;
			widget.inParamOverallRAG = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngOverallRAG;
			widget.inParamFirstColumn = false;
			widget.inParamLastColumn = false;
			widget.inParamOverallUnit = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngCompletedUnits;
			widget.inParamOverallTotalUnit = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngOverallUpdatedAt;
			widget.inParamGreyOut = true;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssIsEnglishExempt;
		}
		/// <summary>
		/// wt_Container70 Functions
		/// </summary>
		public void cnt_Container70_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container70_setInlineAttributes(sender, e);
		}
		public string cnt_Container70_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container70_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container70)
		/// </summary>
		/// <returns>The Visible State of wt_Container70</returns>
		public bool cnt_Container70_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance187 Functions
		/// </summary>
		public void webBlck_WebBlockInstance187_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocPeriodRAG;
			widget.inParamOverallRAG = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocOverallRAG;
			widget.inParamFirstColumn = true;
			widget.inParamLastColumn = false;
			widget.inParamOverallUnit = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocCompletedUnits;
			widget.inParamOverallTotalUnit = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocOverallUpdatedAt;
			widget.inParamGreyOut = true;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = false;
		}
		/// <summary>
		/// wt_Container279 Functions
		/// </summary>
		public void cnt_Container279_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container279_setInlineAttributes(sender, e);
		}
		public string cnt_Container279_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container279_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container279)
		/// </summary>
		/// <returns>The Visible State of wt_Container279</returns>
		public bool cnt_Container279_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance141 Functions
		/// </summary>
		public void webBlck_WebBlockInstance141_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWPeriodRAG;
			widget.inParamOverallRAG = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWOverallRAG;
			widget.inParamFirstColumn = false;
			widget.inParamLastColumn = true;
			widget.inParamOverallUnit = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWCompletedUnits;
			widget.inParamOverallTotalUnit = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWOverallUpdatedAt;
			widget.inParamGreyOut = true;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = false;
		}
		/// <summary>
		/// wt_Container5 Functions
		/// </summary>
		public void cnt_Container5_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container5_setInlineAttributes(sender, e);
		}
		public string cnt_Container5_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container5_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container5)
		/// </summary>
		/// <returns>The Visible State of wt_Container5</returns>
		public bool cnt_Container5_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container232 Functions
		/// </summary>
		public void cnt_Container232_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container232_setInlineAttributes(sender, e);
		}
		public string cnt_Container232_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container232_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container232)
		/// </summary>
		/// <returns>The Visible State of wt_Container232</returns>
		public bool cnt_Container232_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container211 Functions
		/// </summary>
		public void cnt_Container211_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container211_setInlineAttributes(sender, e);
		}
		public string cnt_Container211_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container211_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container211)
		/// </summary>
		/// <returns>The Visible State of wt_Container211</returns>
		public bool cnt_Container211_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container23 Functions
		/// </summary>
		public void cnt_Container23_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container23_setInlineAttributes(sender, e);
		}
		public string cnt_Container23_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:136px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container23_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container23)
		/// </summary>
		/// <returns>The Visible State of wt_Container23</returns>
		public bool cnt_Container23_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container228 Functions
		/// </summary>
		public void cnt_Container228_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container228_setInlineAttributes(sender, e);
		}
		public string cnt_Container228_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container228_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container228)
		/// </summary>
		/// <returns>The Visible State of wt_Container228</returns>
		public bool cnt_Container228_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance500 Functions
		/// </summary>
		public void webBlck_WebBlockInstance500_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssLastWeekAttendance;
			widget.inParamGreyOut = true;
		}
		/// <summary>
		/// wt_WebBlockInstance263 Functions
		/// </summary>
		public void webBlck_WebBlockInstance263_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssLastWeekPunctuality;
			widget.inParamGreyOut = true;
		}
		/// <summary>
		/// wt_Container532 Functions
		/// </summary>
		public void cnt_Container532_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container532_setInlineAttributes(sender, e);
		}
		public string cnt_Container532_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container532_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container532)
		/// </summary>
		/// <returns>The Visible State of wt_Container532</returns>
		public bool cnt_Container532_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance269 Functions
		/// </summary>
		public void webBlck_WebBlockInstance269_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssOverallAttendance;
			widget.inParamGreyOut = true;
		}
		/// <summary>
		/// wt_WebBlockInstance560 Functions
		/// </summary>
		public void webBlck_WebBlockInstance560_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssOverallPunctuality;
			widget.inParamGreyOut = true;
		}
		/// <summary>
		/// wt_Container456 Functions
		/// </summary>
		public void cnt_Container456_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container456_setInlineAttributes(sender, e);
		}
		public string cnt_Container456_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:83px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container456_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container456)
		/// </summary>
		/// <returns>The Visible State of wt_Container456</returns>
		public bool cnt_Container456_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container366 Functions
		/// </summary>
		public void cnt_Container366_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container366_setInlineAttributes(sender, e);
		}
		public string cnt_Container366_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:40px;line-height:72px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container366_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container366)
		/// </summary>
		/// <returns>The Visible State of wt_Container366</returns>
		public bool cnt_Container366_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapperIcon5 Functions
		/// </summary>
		public void cntWrapperIcon5_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperIcon5_setInlineAttributes(sender, e);
		}
		public string cntWrapperIcon5_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperIcon5_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperIcon5)
		/// </summary>
		/// <returns>The Visible State of wtWrapperIcon5</returns>
		public bool cntWrapperIcon5_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container275 Functions
		/// </summary>
		public void cnt_Container275_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container275_setInlineAttributes(sender, e);
		}
		public string cnt_Container275_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container275_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container275)
		/// </summary>
		/// <returns>The Visible State of wt_Container275</returns>
		public bool cnt_Container275_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If42 Functions
		/// </summary>
		bool if_wt_If42_hasRun=false;
		bool if_wt_If42_evalResult;
		public bool if_wt_If42() {
			if (if_wt_If42_hasRun) {
				if_wt_If42_hasRun = false;
				return if_wt_If42_evalResult;
			}
			if_wt_If42_hasRun = true;
			if_wt_If42_evalResult = (getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId);
			return if_wt_If42_evalResult;
		}

		/// <summary>
		/// wt_If265 Functions
		/// </summary>
		bool if_wt_If265_hasRun=false;
		bool if_wt_If265_evalResult;
		public bool if_wt_If265() {
			if (if_wt_If265_hasRun) {
				if_wt_If265_hasRun = false;
				return if_wt_If265_evalResult;
			}
			if_wt_If265_hasRun = true;
			if_wt_If265_evalResult = (getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId);
			return if_wt_If265_evalResult;
		}

		/// <summary>
		/// wt_If329 Functions
		/// </summary>
		bool if_wt_If329_hasRun=false;
		bool if_wt_If329_evalResult;
		public bool if_wt_If329() {
			if (if_wt_If329_hasRun) {
				if_wt_If329_hasRun = false;
				return if_wt_If329_evalResult;
			}
			if_wt_If329_hasRun = true;
			if_wt_If329_evalResult = (getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId);
			return if_wt_If329_evalResult;
		}

		/// <summary>
		/// wt_If72 Functions
		/// </summary>
		bool if_wt_If72_hasRun=false;
		bool if_wt_If72_evalResult;
		public bool if_wt_If72() {
			if (if_wt_If72_hasRun) {
				if_wt_If72_hasRun = false;
				return if_wt_If72_evalResult;
			}
			if_wt_If72_hasRun = true;
			if_wt_If72_evalResult = (getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId);
			return if_wt_If72_evalResult;
		}

		/// <summary>
		/// wt_Container291 Functions
		/// </summary>
		public void cnt_Container291_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container291_setInlineAttributes(sender, e);
		}
		public string cnt_Container291_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:40px;line-height:72px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container291_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container291)
		/// </summary>
		/// <returns>The Visible State of wt_Container291</returns>
		public bool cnt_Container291_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapperIcon6 Functions
		/// </summary>
		public void cntWrapperIcon6_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperIcon6_setInlineAttributes(sender, e);
		}
		public string cntWrapperIcon6_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperIcon6_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperIcon6)
		/// </summary>
		/// <returns>The Visible State of wtWrapperIcon6</returns>
		public bool cntWrapperIcon6_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container358 Functions
		/// </summary>
		public void cnt_Container358_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container358_setInlineAttributes(sender, e);
		}
		public string cnt_Container358_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container358_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container358)
		/// </summary>
		/// <returns>The Visible State of wt_Container358</returns>
		public bool cnt_Container358_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If343 Functions
		/// </summary>
		bool if_wt_If343_hasRun=false;
		bool if_wt_If343_evalResult;
		public bool if_wt_If343() {
			if (if_wt_If343_hasRun) {
				if_wt_If343_hasRun = false;
				return if_wt_If343_evalResult;
			}
			if_wt_If343_hasRun = true;
			if_wt_If343_evalResult = ((getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGoldNumber==0) && (getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGreenNumber==0));
			return if_wt_If343_evalResult;
		}

		/// <summary>
		/// wt_If382 Functions
		/// </summary>
		bool if_wt_If382_hasRun=false;
		bool if_wt_If382_evalResult;
		public bool if_wt_If382() {
			if (if_wt_If382_hasRun) {
				if_wt_If382_hasRun = false;
				return if_wt_If382_evalResult;
			}
			if_wt_If382_hasRun = true;
			if_wt_If382_evalResult = (getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGoldNumber>0);
			return if_wt_If382_evalResult;
		}

		/// <summary>
		/// wt_If393 Functions
		/// </summary>
		bool if_wt_If393_hasRun=false;
		bool if_wt_If393_evalResult;
		public bool if_wt_If393() {
			if (if_wt_If393_hasRun) {
				if_wt_If393_hasRun = false;
				return if_wt_If393_evalResult;
			}
			if_wt_If393_hasRun = true;
			if_wt_If393_evalResult = (getWtWithdrawnEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGreenNumber>0);
			return if_wt_If393_evalResult;
		}

		/// <summary>
		/// wt_Container159 Functions
		/// </summary>
		public void cnt_Container159_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container159_setInlineAttributes(sender, e);
		}
		public string cnt_Container159_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container159_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container159)
		/// </summary>
		/// <returns>The Visible State of wt_Container159</returns>
		public bool cnt_Container159_isVisible() {
			return true;
		}

		/// <summary>
		/// wtCompletedEnrolmentsWrapper Functions
		/// </summary>
		public void cntCompletedEnrolmentsWrapper_onDataBinding(object sender, System.EventArgs e) {
			cntCompletedEnrolmentsWrapper_setInlineAttributes(sender, e);
		}
		public string cntCompletedEnrolmentsWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntCompletedEnrolmentsWrapper_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtCompletedEnrolmentsWrapper)
		/// </summary>
		/// <returns>The Visible State of wtCompletedEnrolmentsWrapper</returns>
		public bool cntCompletedEnrolmentsWrapper_isVisible() {
			return (!varLcCompletedEnrolments.Empty);
		}

		/// <summary>
		/// wt_Container347 Functions
		/// </summary>
		public void cnt_Container347_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container347_setInlineAttributes(sender, e);
		}
		public string cnt_Container347_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container347_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container347)
		/// </summary>
		/// <returns>The Visible State of wt_Container347</returns>
		public bool cnt_Container347_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression96 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 8RKgLQqFsky0lFJyrLHkHg) Expression: "Learners that have
		///  Completed " + internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression96() {
			return ("Learners that have Completed " + (((inParamCourseCode!= "")) ?(queryResGetGroups_outParamList.CurrentRec.ssENGroup.ssGroupDescription):(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssGroupDescription)));
		}
		/// <summary>
		/// wtCompletedEnrolmentsList Functions
		/// </summary>
		public void recListCompletedEnrolmentsList_onDataBinding(object sender, System.EventArgs e) {
			// widget wtCompletedEnrolmentsList
			ssCompletedEnrolmentsListList = varLcCompletedEnrolments;
			ssCompletedEnrolmentsListListDoDataBind = false;
			ssCompletedEnrolmentsListListDataBound = true;
		}
		public void recListCompletedEnrolmentsList_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssCompletedEnrolmentsListList.Length > 0) {
					ssCompletedEnrolmentsListList.CurrentRec = ssCompletedEnrolmentsListList[ssCompletedEnrolmentsListList.CurrentRowNumber];
				}
				if (ssCompletedEnrolmentsListList.Length > e.SelectedIndex) {
					ssCompletedEnrolmentsListList.CurrentRec = ssCompletedEnrolmentsListList[e.SelectedIndex];
					ssCompletedEnrolmentsListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListCompletedEnrolmentsList_Store(object dataItem, int index) {
			RCStaffViewRecordRecord tmprec = (RCStaffViewRecordRecord) dataItem;
			return "";
		}
		public void recListCompletedEnrolmentsList_Restore() {

			#region fetch ssCompletedEnrolmentsListList runtime properties state.

			ssCompletedEnrolmentsListList = new RLStaffViewRecordRecordList();
			bool tmpstorewtCompletedEnrolmentsList_list_empty;
			tmpstorewtCompletedEnrolmentsList_list_empty = (bool) ViewStateAttributes.GetFromViewState("wtCompletedEnrolmentsList_list_empty", null);
			int tmpstorewtCompletedEnrolmentsList_list_length;
			tmpstorewtCompletedEnrolmentsList_list_length = (int) ViewStateAttributes.GetFromViewState("wtCompletedEnrolmentsList_list_length", null);
			while (tmpstorewtCompletedEnrolmentsList_list_length-- > 0) {
				ssCompletedEnrolmentsListList.Append(new RCStaffViewRecordRecord(null));
			}

			ssCompletedEnrolmentsListList.CurrentRowNumber = -1;

			if (tmpstorewtCompletedEnrolmentsList_list_length > 0) {
				ssCompletedEnrolmentsListList.RestoreRecordListState(tmpstorewtCompletedEnrolmentsList_list_length - 1, false);
			} else {
				ssCompletedEnrolmentsListList.CurrentRowNumber = 0;
			}

			#endregion

		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListCompletedEnrolmentsList_Clear(object sender, EventArgs e) {
			wtCompletedEnrolmentsList_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListCompletedEnrolmentsList_Rebuild(int startIndex, int lineCount) {
			if (ssCompletedEnrolmentsListList.Length != -1) {
				wtCompletedEnrolmentsList_storage.Clear();
				for (int i=startIndex; i<ssCompletedEnrolmentsListList.Data.Count && i<startIndex+lineCount; i++) {
					recListCompletedEnrolmentsList_Store(ssCompletedEnrolmentsListList.Data[i], wtCompletedEnrolmentsList_storage.Count);
				}
			}
		}
		public void recListCompletedEnrolmentsList_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtCompletedEnrolmentsList widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStaffViewRecordRecordList getWtCompletedEnrolmentsListList() {
			if (ssCompletedEnrolmentsListListDoDataBind) {
				recListCompletedEnrolmentsList_onDataBinding(this, null);
			}

			return ssCompletedEnrolmentsListList;
		}
		/// <summary>
		/// wtLineWrapper3 Functions
		/// </summary>
		public void cntLineWrapper3_onDataBinding(object sender, System.EventArgs e) {
			cntLineWrapper3_setInlineAttributes(sender, e);
		}
		public string cntLineWrapper3_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntLineWrapper3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtLineWrapper3)
		/// </summary>
		/// <returns>The Visible State of wtLineWrapper3</returns>
		public bool cntLineWrapper3_isVisible() {
			return true;
		}

		/// <summary>
		/// wtStudentFavourite3 Functions
		/// </summary>
		public void cntStudentFavourite3_onDataBinding(object sender, System.EventArgs e) {
			cntStudentFavourite3_setInlineAttributes(sender, e);
		}
		public string cntStudentFavourite3_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntStudentFavourite3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentFavourite3)
		/// </summary>
		/// <returns>The Visible State of wtStudentFavourite3</returns>
		public bool cntStudentFavourite3_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If508 Functions
		/// </summary>
		bool if_wt_If508_hasRun=false;
		bool if_wt_If508_evalResult;
		public bool if_wt_If508() {
			if (if_wt_If508_hasRun) {
				if_wt_If508_hasRun = false;
				return if_wt_If508_evalResult;
			}
			if_wt_If508_hasRun = true;
			if_wt_If508_evalResult = (getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStaffStudentFavouriteId!=BuiltInFunction.NullIdentifier());
			return if_wt_If508_evalResult;
		}

		/// <summary>
		/// wt_Link474 Functions
		/// </summary>
		public void lnk_Link474_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link474_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link474_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#FFD700;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link474_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandToogleFavourite(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link474)
		/// </summary>
		/// <returns>title of the Link (wt_Link474)</returns>
		public string
		lnk_Link474_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link474)
		/// </summary>
		/// <returns>The Visible State of wt_Link474</returns>
		public bool lnk_Link474_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link474)
		/// </summary>
		/// <returns>The Enabled State of wt_Link474</returns>
		public bool lnk_Link474_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance40 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance40_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("qKwz4ZaPnkmbJYnyFjRtFg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Link554 Functions
		/// </summary>
		public void lnk_Link554_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link554_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link554_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#DADADA;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link554_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandToogleFavourite(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link554)
		/// </summary>
		/// <returns>title of the Link (wt_Link554)</returns>
		public string
		lnk_Link554_getTitle() {
			return "set as favourite";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link554)
		/// </summary>
		/// <returns>The Visible State of wt_Link554</returns>
		public bool lnk_Link554_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link554)
		/// </summary>
		/// <returns>The Enabled State of wt_Link554</returns>
		public bool lnk_Link554_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance95 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance95_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("ycc7nxlWj0WSykMfq37k4A")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wtStudentRAG3 Functions
		/// </summary>
		public void cntStudentRAG3_onDataBinding(object sender, System.EventArgs e) {
			cntStudentRAG3_setInlineAttributes(sender, e);
		}
		public string cntStudentRAG3_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntStudentRAG3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentRAG3)
		/// </summary>
		/// <returns>The Visible State of wtStudentRAG3</returns>
		public bool cntStudentRAG3_isVisible() {
			return true;
		}

		/// <summary>
		/// wtRAGStudentWrapper3 Functions
		/// </summary>
		public void cntRAGStudentWrapper3_onDataBinding(object sender, System.EventArgs e) {
			cntRAGStudentWrapper3_setInlineAttributes(sender, e);
		}
		public string cntRAGStudentWrapper3_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntRAGStudentWrapper3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtRAGStudentWrapper3)
		/// </summary>
		/// <returns>The Visible State of wtRAGStudentWrapper3</returns>
		public bool cntRAGStudentWrapper3_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapStudentLine3 Functions
		/// </summary>
		public void cntWrapStudentLine3_onDataBinding(object sender, System.EventArgs e) {
			cntWrapStudentLine3_setInlineAttributes(sender, e);
		}
		public string cntWrapStudentLine3_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntWrapStudentLine3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapStudentLine3)
		/// </summary>
		/// <returns>The Visible State of wtWrapStudentLine3</returns>
		public bool cntWrapStudentLine3_isVisible() {
			return true;
		}

		/// <summary>
		/// wtStudentPhotoWrapper3 Functions
		/// </summary>
		public void cntStudentPhotoWrapper3_onDataBinding(object sender, System.EventArgs e) {
			cntStudentPhotoWrapper3_setInlineAttributes(sender, e);
		}
		public string cntStudentPhotoWrapper3_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntStudentPhotoWrapper3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentPhotoWrapper3)
		/// </summary>
		/// <returns>The Visible State of wtStudentPhotoWrapper3</returns>
		public bool cntStudentPhotoWrapper3_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link238 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link238)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link238)</returns>
		public string lnk_Link238_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsOverview", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link238)
		/// </summary>
		/// <returns>title of the Link (wt_Link238)</returns>
		public string
		lnk_Link238_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link238)
		/// </summary>
		/// <returns>The Visible State of wt_Link238</returns>
		public bool lnk_Link238_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link238)
		/// </summary>
		/// <returns>The Enabled State of wt_Link238</returns>
		public bool lnk_Link238_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container49 Functions
		/// </summary>
		public void cnt_Container49_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container49_setInlineAttributes(sender, e);
		}
		public string cnt_Container49_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container49_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container49)
		/// </summary>
		/// <returns>The Visible State of wt_Container49</returns>
		public bool cnt_Container49_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Image516 Functions
		/// </summary>
		public void img_Image516_onDataBinding(object sender, System.EventArgs e) {
			img_Image516_setInlineAttributes(sender, e);
		}
		public string img_Image516_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("onerror", "this.src=\'img/missingphoto.png\';" .ToString());
			((WebControl) sender).CssClass = "StudentPhoto SilverBorder BlackAndWhiteFilter";
			return "";
		}

		/// <summary>
		/// Gets the URL of the image (wt_Image516)
		/// </summary>
		/// <returns>URL of the Image (wt_Image516)</returns>
		public string img_Image516_getURL() {
			string url = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentPhotoURL;
			url = url.Replace("&amp;", "&");
			return url; 
		}
		/// <summary>
		/// wt_Container517 Functions
		/// </summary>
		public void cnt_Container517_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container517_setInlineAttributes(sender, e);
		}
		public string cnt_Container517_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container517_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container517)
		/// </summary>
		/// <returns>The Visible State of wt_Container517</returns>
		public bool cnt_Container517_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container223 Functions
		/// </summary>
		public void cnt_Container223_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container223_setInlineAttributes(sender, e);
		}
		public string cnt_Container223_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:absolute; top:0px; right: 0px;height: 20px;line-height:initial;color:#C0C0C0;font-size:14px;z-index:2;padding-top:4px;padding-right:2px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container223_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container223)
		/// </summary>
		/// <returns>The Visible State of wt_Container223</returns>
		public bool cnt_Container223_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container50 Functions
		/// </summary>
		public void cnt_Container50_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container50_setInlineAttributes(sender, e);
		}
		public string cnt_Container50_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color:#C0C0C0;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container50_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container50)
		/// </summary>
		/// <returns>The Visible State of wt_Container50</returns>
		public bool cnt_Container50_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapperIcon7 Functions
		/// </summary>
		public void cntWrapperIcon7_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperIcon7_setInlineAttributes(sender, e);
		}
		public string cntWrapperIcon7_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;color:#C0C0C0;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperIcon7_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperIcon7)
		/// </summary>
		/// <returns>The Visible State of wtWrapperIcon7</returns>
		public bool cntWrapperIcon7_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container104 Functions
		/// </summary>
		public void cnt_Container104_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container104_setInlineAttributes(sender, e);
		}
		public string cnt_Container104_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container104_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container104)
		/// </summary>
		/// <returns>The Visible State of wt_Container104</returns>
		public bool cnt_Container104_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance304 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance304_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("aJhmQBcsXUKV6ol9A3EDEA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container391 Functions
		/// </summary>
		public void cnt_Container391_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container391_setInlineAttributes(sender, e);
		}
		public string cnt_Container391_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container391_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container391)
		/// </summary>
		/// <returns>The Visible State of wt_Container391</returns>
		public bool cnt_Container391_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link435 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link435)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link435)</returns>
		public string lnk_Link435_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsOverview", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link435)
		/// </summary>
		/// <returns>title of the Link (wt_Link435)</returns>
		public string
		lnk_Link435_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link435)
		/// </summary>
		/// <returns>The Visible State of wt_Link435</returns>
		public bool lnk_Link435_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link435)
		/// </summary>
		/// <returns>The Enabled State of wt_Link435</returns>
		public bool lnk_Link435_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container117 Functions
		/// </summary>
		public void cnt_Container117_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container117_setInlineAttributes(sender, e);
		}
		public string cnt_Container117_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:230px;position:relative;line-height: 45px;height:65px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container117_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container117)
		/// </summary>
		/// <returns>The Visible State of wt_Container117</returns>
		public bool cnt_Container117_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression243 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = yf8pbj2ogEqaVajvV7EH7A) Expression: ToUpper + ", " +
		///  CompletedEnrolmentsList.List.Current.StaffViewRecord.Forenames
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression243() {
			return ((BuiltInFunction.ToUpper(getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssSurname) + ", ") +getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssForenames);
		}
		/// <summary>
		/// wt_InlineExpression253 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = sxUicnONhEaoShIKGARdjA) Expression:
		///  CompletedEnrolmentsList.List.Current.StaffViewRecord.MainOfferingName
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression253() {
			return getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMainOfferingName;
		}
		/// <summary>
		/// wt_WebBlockInstance397 Functions
		/// </summary>
		public void webBlck_WebBlockInstance397_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffViewListIcons widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStaffViewListIcons) sender;
			widget.inParamStaffViewRecord = getWtCompletedEnrolmentsListList().CurrentRec;
			widget.inParamLeftId = this.FindControl("wtileft").ClientID;
			widget.inParamTopId = this.FindControl("wtitop").ClientID;
			widget.inParamCurrentRowNumber = getWtCompletedEnrolmentsListList().CurrentRowNumber;
			widget.inParamIsActive = false;
			widget.inParamHasCurrentActiveEnrolments = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment;
		}
		/// <summary>
		/// AjaxNotify event handler for widget wt_WebBlockInstance397
		/// </summary>
		public void webBlck_WebBlockInstance397_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOpenTooltipPopup(heContext
			, Functions.rssespaceservicecenter_NotifyWidgetGetMessage(heContext))) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wt_Container361 Functions
		/// </summary>
		public void cnt_Container361_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container361_setInlineAttributes(sender, e);
		}
		public string cnt_Container361_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:465px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container361_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container361)
		/// </summary>
		/// <returns>The Visible State of wt_Container361</returns>
		public bool cnt_Container361_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container427 Functions
		/// </summary>
		public void cnt_Container427_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container427_setInlineAttributes(sender, e);
		}
		public string cnt_Container427_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container427_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container427)
		/// </summary>
		/// <returns>The Visible State of wt_Container427</returns>
		public bool cnt_Container427_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container355 Functions
		/// </summary>
		public void cnt_Container355_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container355_setInlineAttributes(sender, e);
		}
		public string cnt_Container355_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container355_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container355)
		/// </summary>
		/// <returns>The Visible State of wt_Container355</returns>
		public bool cnt_Container355_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text505 Functions
		/// </summary>
		public void wt_Text505_onDataBinding(object sender, System.EventArgs e) {
			wt_Text505_setInlineAttributes(sender, e);
		}
		public string wt_Text505_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Curriculum Concern" .ToString());
			return "";
		}
		/// <summary>
		/// wt_Container425 Functions
		/// </summary>
		public void cnt_Container425_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container425_setInlineAttributes(sender, e);
		}
		public string cnt_Container425_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container425_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container425)
		/// </summary>
		/// <returns>The Visible State of wt_Container425</returns>
		public bool cnt_Container425_isVisible() {
			return true;
		}

		/// <summary>
		/// wtIndicatorColumn_Voc3 Functions
		/// </summary>
		public void cntIndicatorColumn_Voc3_onDataBinding(object sender, System.EventArgs e) {
			cntIndicatorColumn_Voc3_setInlineAttributes(sender, e);
		}
		public string cntIndicatorColumn_Voc3_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:264px;vertical-align:top;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntIndicatorColumn_Voc3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtIndicatorColumn_Voc3)
		/// </summary>
		/// <returns>The Visible State of wtIndicatorColumn_Voc3</returns>
		public bool cntIndicatorColumn_Voc3_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container424 Functions
		/// </summary>
		public void cnt_Container424_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container424_setInlineAttributes(sender, e);
		}
		public string cnt_Container424_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container424_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container424)
		/// </summary>
		/// <returns>The Visible State of wt_Container424</returns>
		public bool cnt_Container424_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance380 Functions
		/// </summary>
		public void webBlck_WebBlockInstance380_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathPeriodRAG;
			widget.inParamOverallRAG = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathOverallRAG;
			widget.inParamFirstColumn = false;
			widget.inParamLastColumn = false;
			widget.inParamOverallUnit = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathCompletedUnits;
			widget.inParamOverallTotalUnit = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathOverallUpdatedAt;
			widget.inParamGreyOut = true;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssIsMathExempt;
		}
		/// <summary>
		/// wt_Container323 Functions
		/// </summary>
		public void cnt_Container323_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container323_setInlineAttributes(sender, e);
		}
		public string cnt_Container323_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container323_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container323)
		/// </summary>
		/// <returns>The Visible State of wt_Container323</returns>
		public bool cnt_Container323_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance459 Functions
		/// </summary>
		public void webBlck_WebBlockInstance459_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngPeriodRAG;
			widget.inParamOverallRAG = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngOverallRAG;
			widget.inParamFirstColumn = false;
			widget.inParamLastColumn = false;
			widget.inParamOverallUnit = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngCompletedUnits;
			widget.inParamOverallTotalUnit = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngOverallUpdatedAt;
			widget.inParamGreyOut = true;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssIsEnglishExempt;
		}
		/// <summary>
		/// wt_Container359 Functions
		/// </summary>
		public void cnt_Container359_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container359_setInlineAttributes(sender, e);
		}
		public string cnt_Container359_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container359_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container359)
		/// </summary>
		/// <returns>The Visible State of wt_Container359</returns>
		public bool cnt_Container359_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance41 Functions
		/// </summary>
		public void webBlck_WebBlockInstance41_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocPeriodRAG;
			widget.inParamOverallRAG = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocOverallRAG;
			widget.inParamFirstColumn = true;
			widget.inParamLastColumn = false;
			widget.inParamOverallUnit = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocCompletedUnits;
			widget.inParamOverallTotalUnit = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocOverallUpdatedAt;
			widget.inParamGreyOut = true;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = false;
		}
		/// <summary>
		/// wt_Container121 Functions
		/// </summary>
		public void cnt_Container121_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container121_setInlineAttributes(sender, e);
		}
		public string cnt_Container121_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container121_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container121)
		/// </summary>
		/// <returns>The Visible State of wt_Container121</returns>
		public bool cnt_Container121_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance169 Functions
		/// </summary>
		public void webBlck_WebBlockInstance169_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWPeriodRAG;
			widget.inParamOverallRAG = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWOverallRAG;
			widget.inParamFirstColumn = false;
			widget.inParamLastColumn = true;
			widget.inParamOverallUnit = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWCompletedUnits;
			widget.inParamOverallTotalUnit = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWOverallUpdatedAt;
			widget.inParamGreyOut = true;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = false;
		}
		/// <summary>
		/// wt_Container221 Functions
		/// </summary>
		public void cnt_Container221_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container221_setInlineAttributes(sender, e);
		}
		public string cnt_Container221_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container221_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container221)
		/// </summary>
		/// <returns>The Visible State of wt_Container221</returns>
		public bool cnt_Container221_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container445 Functions
		/// </summary>
		public void cnt_Container445_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container445_setInlineAttributes(sender, e);
		}
		public string cnt_Container445_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container445_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container445)
		/// </summary>
		/// <returns>The Visible State of wt_Container445</returns>
		public bool cnt_Container445_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container339 Functions
		/// </summary>
		public void cnt_Container339_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container339_setInlineAttributes(sender, e);
		}
		public string cnt_Container339_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container339_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container339)
		/// </summary>
		/// <returns>The Visible State of wt_Container339</returns>
		public bool cnt_Container339_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text7 Functions
		/// </summary>
		public void wt_Text7_onDataBinding(object sender, System.EventArgs e) {
			wt_Text7_setInlineAttributes(sender, e);
		}
		public string wt_Text7_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Overall" .ToString());
			return "";
		}
		/// <summary>
		/// wt_Container463 Functions
		/// </summary>
		public void cnt_Container463_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container463_setInlineAttributes(sender, e);
		}
		public string cnt_Container463_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:136px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container463_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container463)
		/// </summary>
		/// <returns>The Visible State of wt_Container463</returns>
		public bool cnt_Container463_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container157 Functions
		/// </summary>
		public void cnt_Container157_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container157_setInlineAttributes(sender, e);
		}
		public string cnt_Container157_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container157_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container157)
		/// </summary>
		/// <returns>The Visible State of wt_Container157</returns>
		public bool cnt_Container157_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance529 Functions
		/// </summary>
		public void webBlck_WebBlockInstance529_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssLastWeekAttendance;
			widget.inParamGreyOut = true;
		}
		/// <summary>
		/// wt_WebBlockInstance200 Functions
		/// </summary>
		public void webBlck_WebBlockInstance200_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssLastWeekPunctuality;
			widget.inParamGreyOut = true;
		}
		/// <summary>
		/// wt_Container524 Functions
		/// </summary>
		public void cnt_Container524_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container524_setInlineAttributes(sender, e);
		}
		public string cnt_Container524_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container524_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container524)
		/// </summary>
		/// <returns>The Visible State of wt_Container524</returns>
		public bool cnt_Container524_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance176 Functions
		/// </summary>
		public void webBlck_WebBlockInstance176_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssOverallAttendance;
			widget.inParamGreyOut = true;
		}
		/// <summary>
		/// wt_WebBlockInstance320 Functions
		/// </summary>
		public void webBlck_WebBlockInstance320_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssOverallPunctuality;
			widget.inParamGreyOut = true;
		}
		/// <summary>
		/// wt_Container521 Functions
		/// </summary>
		public void cnt_Container521_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container521_setInlineAttributes(sender, e);
		}
		public string cnt_Container521_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:83px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container521_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container521)
		/// </summary>
		/// <returns>The Visible State of wt_Container521</returns>
		public bool cnt_Container521_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container271 Functions
		/// </summary>
		public void cnt_Container271_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container271_setInlineAttributes(sender, e);
		}
		public string cnt_Container271_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:40px;line-height:72px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container271_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container271)
		/// </summary>
		/// <returns>The Visible State of wt_Container271</returns>
		public bool cnt_Container271_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapperIcon8 Functions
		/// </summary>
		public void cntWrapperIcon8_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperIcon8_setInlineAttributes(sender, e);
		}
		public string cntWrapperIcon8_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperIcon8_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperIcon8)
		/// </summary>
		/// <returns>The Visible State of wtWrapperIcon8</returns>
		public bool cntWrapperIcon8_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container346 Functions
		/// </summary>
		public void cnt_Container346_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container346_setInlineAttributes(sender, e);
		}
		public string cnt_Container346_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container346_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container346)
		/// </summary>
		/// <returns>The Visible State of wt_Container346</returns>
		public bool cnt_Container346_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If25 Functions
		/// </summary>
		bool if_wt_If25_hasRun=false;
		bool if_wt_If25_evalResult;
		public bool if_wt_If25() {
			if (if_wt_If25_hasRun) {
				if_wt_If25_hasRun = false;
				return if_wt_If25_evalResult;
			}
			if_wt_If25_hasRun = true;
			if_wt_If25_evalResult = (getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId);
			return if_wt_If25_evalResult;
		}

		/// <summary>
		/// wt_If439 Functions
		/// </summary>
		bool if_wt_If439_hasRun=false;
		bool if_wt_If439_evalResult;
		public bool if_wt_If439() {
			if (if_wt_If439_hasRun) {
				if_wt_If439_hasRun = false;
				return if_wt_If439_evalResult;
			}
			if_wt_If439_hasRun = true;
			if_wt_If439_evalResult = (getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId);
			return if_wt_If439_evalResult;
		}

		/// <summary>
		/// wt_If289 Functions
		/// </summary>
		bool if_wt_If289_hasRun=false;
		bool if_wt_If289_evalResult;
		public bool if_wt_If289() {
			if (if_wt_If289_hasRun) {
				if_wt_If289_hasRun = false;
				return if_wt_If289_evalResult;
			}
			if_wt_If289_hasRun = true;
			if_wt_If289_evalResult = (getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId);
			return if_wt_If289_evalResult;
		}

		/// <summary>
		/// wt_If239 Functions
		/// </summary>
		bool if_wt_If239_hasRun=false;
		bool if_wt_If239_evalResult;
		public bool if_wt_If239() {
			if (if_wt_If239_hasRun) {
				if_wt_If239_hasRun = false;
				return if_wt_If239_evalResult;
			}
			if_wt_If239_hasRun = true;
			if_wt_If239_evalResult = (getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId);
			return if_wt_If239_evalResult;
		}

		/// <summary>
		/// wt_Container441 Functions
		/// </summary>
		public void cnt_Container441_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container441_setInlineAttributes(sender, e);
		}
		public string cnt_Container441_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:40px;line-height:72px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container441_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container441)
		/// </summary>
		/// <returns>The Visible State of wt_Container441</returns>
		public bool cnt_Container441_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapperIcon9 Functions
		/// </summary>
		public void cntWrapperIcon9_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperIcon9_setInlineAttributes(sender, e);
		}
		public string cntWrapperIcon9_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperIcon9_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperIcon9)
		/// </summary>
		/// <returns>The Visible State of wtWrapperIcon9</returns>
		public bool cntWrapperIcon9_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container288 Functions
		/// </summary>
		public void cnt_Container288_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container288_setInlineAttributes(sender, e);
		}
		public string cnt_Container288_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container288_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container288)
		/// </summary>
		/// <returns>The Visible State of wt_Container288</returns>
		public bool cnt_Container288_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If86 Functions
		/// </summary>
		bool if_wt_If86_hasRun=false;
		bool if_wt_If86_evalResult;
		public bool if_wt_If86() {
			if (if_wt_If86_hasRun) {
				if_wt_If86_hasRun = false;
				return if_wt_If86_evalResult;
			}
			if_wt_If86_hasRun = true;
			if_wt_If86_evalResult = ((getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGoldNumber==0) && (getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGreenNumber==0));
			return if_wt_If86_evalResult;
		}

		/// <summary>
		/// wt_If249 Functions
		/// </summary>
		bool if_wt_If249_hasRun=false;
		bool if_wt_If249_evalResult;
		public bool if_wt_If249() {
			if (if_wt_If249_hasRun) {
				if_wt_If249_hasRun = false;
				return if_wt_If249_evalResult;
			}
			if_wt_If249_hasRun = true;
			if_wt_If249_evalResult = (getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGoldNumber>0);
			return if_wt_If249_evalResult;
		}

		/// <summary>
		/// wt_If183 Functions
		/// </summary>
		bool if_wt_If183_hasRun=false;
		bool if_wt_If183_evalResult;
		public bool if_wt_If183() {
			if (if_wt_If183_hasRun) {
				if_wt_If183_hasRun = false;
				return if_wt_If183_evalResult;
			}
			if_wt_If183_hasRun = true;
			if_wt_If183_evalResult = (getWtCompletedEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGreenNumber>0);
			return if_wt_If183_evalResult;
		}

		/// <summary>
		/// wt_Container502 Functions
		/// </summary>
		public void cnt_Container502_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container502_setInlineAttributes(sender, e);
		}
		public string cnt_Container502_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container502_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container502)
		/// </summary>
		/// <returns>The Visible State of wt_Container502</returns>
		public bool cnt_Container502_isVisible() {
			return true;
		}

		/// <summary>
		/// wtTransferredEnrolmentsWrapper Functions
		/// </summary>
		public void cntTransferredEnrolmentsWrapper_onDataBinding(object sender, System.EventArgs e) {
			cntTransferredEnrolmentsWrapper_setInlineAttributes(sender, e);
		}
		public string cntTransferredEnrolmentsWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntTransferredEnrolmentsWrapper_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtTransferredEnrolmentsWrapper)
		/// </summary>
		/// <returns>The Visible State of wtTransferredEnrolmentsWrapper</returns>
		public bool cntTransferredEnrolmentsWrapper_isVisible() {
			return (!varLcTransferredEnrolments.Empty);
		}

		/// <summary>
		/// wt_Container99 Functions
		/// </summary>
		public void cnt_Container99_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container99_setInlineAttributes(sender, e);
		}
		public string cnt_Container99_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container99_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container99)
		/// </summary>
		/// <returns>The Visible State of wt_Container99</returns>
		public bool cnt_Container99_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression112 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = ErN+MdlfrkuAlpqR5ladXg) Expression: "Learners that have
		///  Transferred away from " + internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression112() {
			return ("Learners that have Transferred away from " + (((inParamCourseCode!= "")) ?(queryResGetGroups_outParamList.CurrentRec.ssENGroup.ssGroupDescription):(((RCStaffView_SearchStaffView_FilterRecord) Global.App.OsContext.Session["CaseConferencing.StaffView_Search"]).ssSTStaffView_Search.ssGroupDescription)));
		}
		/// <summary>
		/// wtTransferredEnrolmentsList Functions
		/// </summary>
		public void recListTransferredEnrolmentsList_onDataBinding(object sender, System.EventArgs e) {
			// widget wtTransferredEnrolmentsList
			ssTransferredEnrolmentsListList = varLcTransferredEnrolments;
			ssTransferredEnrolmentsListListDoDataBind = false;
			ssTransferredEnrolmentsListListDataBound = true;
		}
		public void recListTransferredEnrolmentsList_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssTransferredEnrolmentsListList.Length > 0) {
					ssTransferredEnrolmentsListList.CurrentRec = ssTransferredEnrolmentsListList[ssTransferredEnrolmentsListList.CurrentRowNumber];
				}
				if (ssTransferredEnrolmentsListList.Length > e.SelectedIndex) {
					ssTransferredEnrolmentsListList.CurrentRec = ssTransferredEnrolmentsListList[e.SelectedIndex];
					ssTransferredEnrolmentsListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListTransferredEnrolmentsList_Store(object dataItem, int index) {
			RCStaffViewRecordRecord tmprec = (RCStaffViewRecordRecord) dataItem;
			return "";
		}
		public void recListTransferredEnrolmentsList_Restore() {

			#region fetch ssTransferredEnrolmentsListList runtime properties state.

			ssTransferredEnrolmentsListList = new RLStaffViewRecordRecordList();
			bool tmpstorewtTransferredEnrolmentsList_list_empty;
			tmpstorewtTransferredEnrolmentsList_list_empty = (bool) ViewStateAttributes.GetFromViewState("wtTransferredEnrolmentsList_list_empty", null);
			int tmpstorewtTransferredEnrolmentsList_list_length;
			tmpstorewtTransferredEnrolmentsList_list_length = (int) ViewStateAttributes.GetFromViewState("wtTransferredEnrolmentsList_list_length", null);
			while (tmpstorewtTransferredEnrolmentsList_list_length-- > 0) {
				ssTransferredEnrolmentsListList.Append(new RCStaffViewRecordRecord(null));
			}

			ssTransferredEnrolmentsListList.CurrentRowNumber = -1;

			if (tmpstorewtTransferredEnrolmentsList_list_length > 0) {
				ssTransferredEnrolmentsListList.RestoreRecordListState(tmpstorewtTransferredEnrolmentsList_list_length - 1, false);
			} else {
				ssTransferredEnrolmentsListList.CurrentRowNumber = 0;
			}

			#endregion

		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListTransferredEnrolmentsList_Clear(object sender, EventArgs e) {
			wtTransferredEnrolmentsList_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListTransferredEnrolmentsList_Rebuild(int startIndex, int lineCount) {
			if (ssTransferredEnrolmentsListList.Length != -1) {
				wtTransferredEnrolmentsList_storage.Clear();
				for (int i=startIndex; i<ssTransferredEnrolmentsListList.Data.Count && i<startIndex+lineCount; i++) {
					recListTransferredEnrolmentsList_Store(ssTransferredEnrolmentsListList.Data[i], wtTransferredEnrolmentsList_storage.Count);
				}
			}
		}
		public void recListTransferredEnrolmentsList_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtTransferredEnrolmentsList widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStaffViewRecordRecordList getWtTransferredEnrolmentsListList() {
			if (ssTransferredEnrolmentsListListDoDataBind) {
				recListTransferredEnrolmentsList_onDataBinding(this, null);
			}

			return ssTransferredEnrolmentsListList;
		}
		/// <summary>
		/// wtLineWrapper4 Functions
		/// </summary>
		public void cntLineWrapper4_onDataBinding(object sender, System.EventArgs e) {
			cntLineWrapper4_setInlineAttributes(sender, e);
		}
		public string cntLineWrapper4_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntLineWrapper4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtLineWrapper4)
		/// </summary>
		/// <returns>The Visible State of wtLineWrapper4</returns>
		public bool cntLineWrapper4_isVisible() {
			return true;
		}

		/// <summary>
		/// wtStudentFavourite4 Functions
		/// </summary>
		public void cntStudentFavourite4_onDataBinding(object sender, System.EventArgs e) {
			cntStudentFavourite4_setInlineAttributes(sender, e);
		}
		public string cntStudentFavourite4_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntStudentFavourite4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentFavourite4)
		/// </summary>
		/// <returns>The Visible State of wtStudentFavourite4</returns>
		public bool cntStudentFavourite4_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If399 Functions
		/// </summary>
		bool if_wt_If399_hasRun=false;
		bool if_wt_If399_evalResult;
		public bool if_wt_If399() {
			if (if_wt_If399_hasRun) {
				if_wt_If399_hasRun = false;
				return if_wt_If399_evalResult;
			}
			if_wt_If399_hasRun = true;
			if_wt_If399_evalResult = (getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStaffStudentFavouriteId!=BuiltInFunction.NullIdentifier());
			return if_wt_If399_evalResult;
		}

		/// <summary>
		/// wt_Link429 Functions
		/// </summary>
		public void lnk_Link429_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link429_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link429_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#FFD700;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link429_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandToogleFavourite(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link429)
		/// </summary>
		/// <returns>title of the Link (wt_Link429)</returns>
		public string
		lnk_Link429_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link429)
		/// </summary>
		/// <returns>The Visible State of wt_Link429</returns>
		public bool lnk_Link429_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link429)
		/// </summary>
		/// <returns>The Enabled State of wt_Link429</returns>
		public bool lnk_Link429_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance340 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance340_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("qKwz4ZaPnkmbJYnyFjRtFg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Link548 Functions
		/// </summary>
		public void lnk_Link548_onDataBinding(object sender, System.EventArgs e) {
			lnk_Link548_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string lnk_Link548_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-decoration:none;color:#DADADA;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link548_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandToogleFavourite(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link548)
		/// </summary>
		/// <returns>title of the Link (wt_Link548)</returns>
		public string
		lnk_Link548_getTitle() {
			return "set as favourite";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link548)
		/// </summary>
		/// <returns>The Visible State of wt_Link548</returns>
		public bool lnk_Link548_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link548)
		/// </summary>
		/// <returns>The Enabled State of wt_Link548</returns>
		public bool lnk_Link548_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance119 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance119_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("ycc7nxlWj0WSykMfq37k4A")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wtStudentRAG4 Functions
		/// </summary>
		public void cntStudentRAG4_onDataBinding(object sender, System.EventArgs e) {
			cntStudentRAG4_setInlineAttributes(sender, e);
		}
		public string cntStudentRAG4_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntStudentRAG4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentRAG4)
		/// </summary>
		/// <returns>The Visible State of wtStudentRAG4</returns>
		public bool cntStudentRAG4_isVisible() {
			return true;
		}

		/// <summary>
		/// wtRAGStudentWrapper4 Functions
		/// </summary>
		public void cntRAGStudentWrapper4_onDataBinding(object sender, System.EventArgs e) {
			cntRAGStudentWrapper4_setInlineAttributes(sender, e);
		}
		public string cntRAGStudentWrapper4_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntRAGStudentWrapper4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtRAGStudentWrapper4)
		/// </summary>
		/// <returns>The Visible State of wtRAGStudentWrapper4</returns>
		public bool cntRAGStudentWrapper4_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapStudentLine4 Functions
		/// </summary>
		public void cntWrapStudentLine4_onDataBinding(object sender, System.EventArgs e) {
			cntWrapStudentLine4_setInlineAttributes(sender, e);
		}
		public string cntWrapStudentLine4_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntWrapStudentLine4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapStudentLine4)
		/// </summary>
		/// <returns>The Visible State of wtWrapStudentLine4</returns>
		public bool cntWrapStudentLine4_isVisible() {
			return true;
		}

		/// <summary>
		/// wtStudentPhotoWrapper4 Functions
		/// </summary>
		public void cntStudentPhotoWrapper4_onDataBinding(object sender, System.EventArgs e) {
			cntStudentPhotoWrapper4_setInlineAttributes(sender, e);
		}
		public string cntStudentPhotoWrapper4_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntStudentPhotoWrapper4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtStudentPhotoWrapper4)
		/// </summary>
		/// <returns>The Visible State of wtStudentPhotoWrapper4</returns>
		public bool cntStudentPhotoWrapper4_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link454 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link454)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link454)</returns>
		public string lnk_Link454_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsOverview", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link454)
		/// </summary>
		/// <returns>title of the Link (wt_Link454)</returns>
		public string
		lnk_Link454_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link454)
		/// </summary>
		/// <returns>The Visible State of wt_Link454</returns>
		public bool lnk_Link454_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link454)
		/// </summary>
		/// <returns>The Enabled State of wt_Link454</returns>
		public bool lnk_Link454_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container33 Functions
		/// </summary>
		public void cnt_Container33_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container33_setInlineAttributes(sender, e);
		}
		public string cnt_Container33_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container33_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container33)
		/// </summary>
		/// <returns>The Visible State of wt_Container33</returns>
		public bool cnt_Container33_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Image234 Functions
		/// </summary>
		public void img_Image234_onDataBinding(object sender, System.EventArgs e) {
			img_Image234_setInlineAttributes(sender, e);
		}
		public string img_Image234_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("onerror", "this.src=\'img/missingphoto.png\';" .ToString());
			((WebControl) sender).CssClass = "StudentPhoto SilverBorder BlackAndWhiteFilter";
			return "";
		}

		/// <summary>
		/// Gets the URL of the image (wt_Image234)
		/// </summary>
		/// <returns>URL of the Image (wt_Image234)</returns>
		public string img_Image234_getURL() {
			string url = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentPhotoURL;
			url = url.Replace("&amp;", "&");
			return url; 
		}
		/// <summary>
		/// wt_Container36 Functions
		/// </summary>
		public void cnt_Container36_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container36_setInlineAttributes(sender, e);
		}
		public string cnt_Container36_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container36_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container36)
		/// </summary>
		/// <returns>The Visible State of wt_Container36</returns>
		public bool cnt_Container36_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container392 Functions
		/// </summary>
		public void cnt_Container392_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container392_setInlineAttributes(sender, e);
		}
		public string cnt_Container392_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:absolute; top:0px; right: 0px;height: 20px;line-height:initial;color:#C0C0C0;font-size:14px;z-index:2;padding-top:4px;padding-right:2px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container392_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container392)
		/// </summary>
		/// <returns>The Visible State of wt_Container392</returns>
		public bool cnt_Container392_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container78 Functions
		/// </summary>
		public void cnt_Container78_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container78_setInlineAttributes(sender, e);
		}
		public string cnt_Container78_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color:#C0C0C0;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container78_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container78)
		/// </summary>
		/// <returns>The Visible State of wt_Container78</returns>
		public bool cnt_Container78_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapperIcon10 Functions
		/// </summary>
		public void cntWrapperIcon10_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperIcon10_setInlineAttributes(sender, e);
		}
		public string cntWrapperIcon10_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;color:#C0C0C0;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperIcon10_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperIcon10)
		/// </summary>
		/// <returns>The Visible State of wtWrapperIcon10</returns>
		public bool cntWrapperIcon10_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container181 Functions
		/// </summary>
		public void cnt_Container181_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container181_setInlineAttributes(sender, e);
		}
		public string cnt_Container181_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container181_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container181)
		/// </summary>
		/// <returns>The Visible State of wt_Container181</returns>
		public bool cnt_Container181_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance428 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance428_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("aJhmQBcsXUKV6ol9A3EDEA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container308 Functions
		/// </summary>
		public void cnt_Container308_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container308_setInlineAttributes(sender, e);
		}
		public string cnt_Container308_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container308_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container308)
		/// </summary>
		/// <returns>The Visible State of wt_Container308</returns>
		public bool cnt_Container308_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link533 Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link533)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link533)</returns>
		public string lnk_Link533_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsOverview", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link533)
		/// </summary>
		/// <returns>title of the Link (wt_Link533)</returns>
		public string
		lnk_Link533_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link533)
		/// </summary>
		/// <returns>The Visible State of wt_Link533</returns>
		public bool lnk_Link533_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link533)
		/// </summary>
		/// <returns>The Enabled State of wt_Link533</returns>
		public bool lnk_Link533_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container30 Functions
		/// </summary>
		public void cnt_Container30_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container30_setInlineAttributes(sender, e);
		}
		public string cnt_Container30_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:230px;position:relative;line-height: 45px;height:65px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container30_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container30)
		/// </summary>
		/// <returns>The Visible State of wt_Container30</returns>
		public bool cnt_Container30_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression546 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = v3st+PmhlUGyw_XqtTRQ3Q) Expression: ToUpper + ", " +
		///  TransferredEnrolmentsList.List.Current.StaffViewRecord.Forenames
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression546() {
			return ((BuiltInFunction.ToUpper(getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssSurname) + ", ") +getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssForenames);
		}
		/// <summary>
		/// wt_InlineExpression379 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = eJ80pX6Oo0iHrlBm0YR3+A) Expression:
		///  TransferredEnrolmentsList.List.Current.StaffViewRecord.MainOfferingName
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression379() {
			return getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMainOfferingName;
		}
		/// <summary>
		/// wt_WebBlockInstance138 Functions
		/// </summary>
		public void webBlck_WebBlockInstance138_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowStaffView.WBlkStaffViewListIcons widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStaffViewListIcons) sender;
			widget.inParamStaffViewRecord = getWtTransferredEnrolmentsListList().CurrentRec;
			widget.inParamLeftId = this.FindControl("wtileft").ClientID;
			widget.inParamTopId = this.FindControl("wtitop").ClientID;
			widget.inParamCurrentRowNumber = getWtTransferredEnrolmentsListList().CurrentRowNumber;
			widget.inParamIsActive = false;
			widget.inParamHasCurrentActiveEnrolments = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment;
		}
		/// <summary>
		/// AjaxNotify event handler for widget wt_WebBlockInstance138
		/// </summary>
		public void webBlck_WebBlockInstance138_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOpenTooltipPopup(heContext
			, Functions.rssespaceservicecenter_NotifyWidgetGetMessage(heContext))) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wt_Container130 Functions
		/// </summary>
		public void cnt_Container130_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container130_setInlineAttributes(sender, e);
		}
		public string cnt_Container130_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:465px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container130_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container130)
		/// </summary>
		/// <returns>The Visible State of wt_Container130</returns>
		public bool cnt_Container130_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container94 Functions
		/// </summary>
		public void cnt_Container94_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container94_setInlineAttributes(sender, e);
		}
		public string cnt_Container94_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container94_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container94)
		/// </summary>
		/// <returns>The Visible State of wt_Container94</returns>
		public bool cnt_Container94_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container276 Functions
		/// </summary>
		public void cnt_Container276_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container276_setInlineAttributes(sender, e);
		}
		public string cnt_Container276_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container276_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container276)
		/// </summary>
		/// <returns>The Visible State of wt_Container276</returns>
		public bool cnt_Container276_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text473 Functions
		/// </summary>
		public void wt_Text473_onDataBinding(object sender, System.EventArgs e) {
			wt_Text473_setInlineAttributes(sender, e);
		}
		public string wt_Text473_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Curriculum Concern" .ToString());
			return "";
		}
		/// <summary>
		/// wt_Container557 Functions
		/// </summary>
		public void cnt_Container557_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container557_setInlineAttributes(sender, e);
		}
		public string cnt_Container557_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container557_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container557)
		/// </summary>
		/// <returns>The Visible State of wt_Container557</returns>
		public bool cnt_Container557_isVisible() {
			return true;
		}

		/// <summary>
		/// wtIndicatorColumn_Voc4 Functions
		/// </summary>
		public void cntIndicatorColumn_Voc4_onDataBinding(object sender, System.EventArgs e) {
			cntIndicatorColumn_Voc4_setInlineAttributes(sender, e);
		}
		public string cntIndicatorColumn_Voc4_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:264px;vertical-align:top;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntIndicatorColumn_Voc4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtIndicatorColumn_Voc4)
		/// </summary>
		/// <returns>The Visible State of wtIndicatorColumn_Voc4</returns>
		public bool cntIndicatorColumn_Voc4_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container324 Functions
		/// </summary>
		public void cnt_Container324_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container324_setInlineAttributes(sender, e);
		}
		public string cnt_Container324_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container324_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container324)
		/// </summary>
		/// <returns>The Visible State of wt_Container324</returns>
		public bool cnt_Container324_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance312 Functions
		/// </summary>
		public void webBlck_WebBlockInstance312_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathPeriodRAG;
			widget.inParamOverallRAG = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathOverallRAG;
			widget.inParamFirstColumn = false;
			widget.inParamLastColumn = false;
			widget.inParamOverallUnit = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathCompletedUnits;
			widget.inParamOverallTotalUnit = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMathOverallUpdatedAt;
			widget.inParamGreyOut = true;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssIsMathExempt;
		}
		/// <summary>
		/// wt_Container457 Functions
		/// </summary>
		public void cnt_Container457_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container457_setInlineAttributes(sender, e);
		}
		public string cnt_Container457_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container457_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container457)
		/// </summary>
		/// <returns>The Visible State of wt_Container457</returns>
		public bool cnt_Container457_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance34 Functions
		/// </summary>
		public void webBlck_WebBlockInstance34_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngPeriodRAG;
			widget.inParamOverallRAG = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngOverallRAG;
			widget.inParamFirstColumn = false;
			widget.inParamLastColumn = false;
			widget.inParamOverallUnit = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngCompletedUnits;
			widget.inParamOverallTotalUnit = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatEngOverallUpdatedAt;
			widget.inParamGreyOut = true;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssIsEnglishExempt;
		}
		/// <summary>
		/// wt_Container58 Functions
		/// </summary>
		public void cnt_Container58_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container58_setInlineAttributes(sender, e);
		}
		public string cnt_Container58_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container58_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container58)
		/// </summary>
		/// <returns>The Visible State of wt_Container58</returns>
		public bool cnt_Container58_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance198 Functions
		/// </summary>
		public void webBlck_WebBlockInstance198_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocPeriodRAG;
			widget.inParamOverallRAG = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocOverallRAG;
			widget.inParamFirstColumn = true;
			widget.inParamLastColumn = false;
			widget.inParamOverallUnit = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocCompletedUnits;
			widget.inParamOverallTotalUnit = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatVocOverallUpdatedAt;
			widget.inParamGreyOut = true;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = false;
		}
		/// <summary>
		/// wt_Container160 Functions
		/// </summary>
		public void cnt_Container160_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container160_setInlineAttributes(sender, e);
		}
		public string cnt_Container160_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container160_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container160)
		/// </summary>
		/// <returns>The Visible State of wt_Container160</returns>
		public bool cnt_Container160_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance504 Functions
		/// </summary>
		public void webBlck_WebBlockInstance504_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudent_CategoryRAG) sender;
			widget.inParamShortTermRAG = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWPeriodRAG;
			widget.inParamOverallRAG = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWOverallRAG;
			widget.inParamFirstColumn = false;
			widget.inParamLastColumn = true;
			widget.inParamOverallUnit = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWCompletedUnits;
			widget.inParamOverallTotalUnit = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWRegisteredUnits;
			widget.inParamShortTermRAGLastUpdatedBy = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWShortTermLastUpdatedBy;
			widget.inParamShortTermRAGLastUpdatedDate = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWShortTermUpdatedAt;
			widget.inParamOverallRAGLastUpdateBy = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWOverallLastUpdatedBy;
			widget.inParamOverallRAGLastUpdatedDate = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWOverallUpdatedAt;
			widget.inParamGreyOut = true;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamIsExempt = false;
		}
		/// <summary>
		/// wt_Container363 Functions
		/// </summary>
		public void cnt_Container363_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container363_setInlineAttributes(sender, e);
		}
		public string cnt_Container363_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container363_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container363)
		/// </summary>
		/// <returns>The Visible State of wt_Container363</returns>
		public bool cnt_Container363_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container317 Functions
		/// </summary>
		public void cnt_Container317_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container317_setInlineAttributes(sender, e);
		}
		public string cnt_Container317_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container317_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container317)
		/// </summary>
		/// <returns>The Visible State of wt_Container317</returns>
		public bool cnt_Container317_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container558 Functions
		/// </summary>
		public void cnt_Container558_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container558_setInlineAttributes(sender, e);
		}
		public string cnt_Container558_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container558_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container558)
		/// </summary>
		/// <returns>The Visible State of wt_Container558</returns>
		public bool cnt_Container558_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text553 Functions
		/// </summary>
		public void wt_Text553_onDataBinding(object sender, System.EventArgs e) {
			wt_Text553_setInlineAttributes(sender, e);
		}
		public string wt_Text553_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Overall" .ToString());
			return "";
		}
		/// <summary>
		/// wt_Container455 Functions
		/// </summary>
		public void cnt_Container455_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container455_setInlineAttributes(sender, e);
		}
		public string cnt_Container455_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:136px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container455_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container455)
		/// </summary>
		/// <returns>The Visible State of wt_Container455</returns>
		public bool cnt_Container455_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container65 Functions
		/// </summary>
		public void cnt_Container65_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container65_setInlineAttributes(sender, e);
		}
		public string cnt_Container65_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container65_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container65)
		/// </summary>
		/// <returns>The Visible State of wt_Container65</returns>
		public bool cnt_Container65_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance466 Functions
		/// </summary>
		public void webBlck_WebBlockInstance466_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssLastWeekAttendance;
			widget.inParamGreyOut = true;
		}
		/// <summary>
		/// wt_WebBlockInstance270 Functions
		/// </summary>
		public void webBlck_WebBlockInstance270_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssLastWeekPunctuality;
			widget.inParamGreyOut = true;
		}
		/// <summary>
		/// wt_Container144 Functions
		/// </summary>
		public void cnt_Container144_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container144_setInlineAttributes(sender, e);
		}
		public string cnt_Container144_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container144_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container144)
		/// </summary>
		/// <returns>The Visible State of wt_Container144</returns>
		public bool cnt_Container144_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance336 Functions
		/// </summary>
		public void webBlck_WebBlockInstance336_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssOverallAttendance;
			widget.inParamGreyOut = true;
		}
		/// <summary>
		/// wt_WebBlockInstance370 Functions
		/// </summary>
		public void webBlck_WebBlockInstance370_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkStudentAttendanceIndicator) sender;
			widget.inParamValue = getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssOverallPunctuality;
			widget.inParamGreyOut = true;
		}
		/// <summary>
		/// wt_Container17 Functions
		/// </summary>
		public void cnt_Container17_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container17_setInlineAttributes(sender, e);
		}
		public string cnt_Container17_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:83px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container17_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container17)
		/// </summary>
		/// <returns>The Visible State of wt_Container17</returns>
		public bool cnt_Container17_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container437 Functions
		/// </summary>
		public void cnt_Container437_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container437_setInlineAttributes(sender, e);
		}
		public string cnt_Container437_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:40px;line-height:72px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container437_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container437)
		/// </summary>
		/// <returns>The Visible State of wt_Container437</returns>
		public bool cnt_Container437_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapperIcon11 Functions
		/// </summary>
		public void cntWrapperIcon11_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperIcon11_setInlineAttributes(sender, e);
		}
		public string cntWrapperIcon11_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperIcon11_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperIcon11)
		/// </summary>
		/// <returns>The Visible State of wtWrapperIcon11</returns>
		public bool cntWrapperIcon11_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container367 Functions
		/// </summary>
		public void cnt_Container367_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container367_setInlineAttributes(sender, e);
		}
		public string cnt_Container367_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container367_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container367)
		/// </summary>
		/// <returns>The Visible State of wt_Container367</returns>
		public bool cnt_Container367_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If298 Functions
		/// </summary>
		bool if_wt_If298_hasRun=false;
		bool if_wt_If298_evalResult;
		public bool if_wt_If298() {
			if (if_wt_If298_hasRun) {
				if_wt_If298_hasRun = false;
				return if_wt_If298_evalResult;
			}
			if_wt_If298_hasRun = true;
			if_wt_If298_evalResult = (getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId);
			return if_wt_If298_evalResult;
		}

		/// <summary>
		/// wt_If342 Functions
		/// </summary>
		bool if_wt_If342_hasRun=false;
		bool if_wt_If342_evalResult;
		public bool if_wt_If342() {
			if (if_wt_If342_hasRun) {
				if_wt_If342_hasRun = false;
				return if_wt_If342_evalResult;
			}
			if_wt_If342_hasRun = true;
			if_wt_If342_evalResult = (getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId);
			return if_wt_If342_evalResult;
		}

		/// <summary>
		/// wt_If101 Functions
		/// </summary>
		bool if_wt_If101_hasRun=false;
		bool if_wt_If101_evalResult;
		public bool if_wt_If101() {
			if (if_wt_If101_hasRun) {
				if_wt_If101_hasRun = false;
				return if_wt_If101_evalResult;
			}
			if_wt_If101_hasRun = true;
			if_wt_If101_evalResult = (getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId);
			return if_wt_If101_evalResult;
		}

		/// <summary>
		/// wt_If513 Functions
		/// </summary>
		bool if_wt_If513_hasRun=false;
		bool if_wt_If513_evalResult;
		public bool if_wt_If513() {
			if (if_wt_If513_hasRun) {
				if_wt_If513_hasRun = false;
				return if_wt_If513_evalResult;
			}
			if_wt_If513_hasRun = true;
			if_wt_If513_evalResult = (getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId);
			return if_wt_If513_evalResult;
		}

		/// <summary>
		/// wt_Container155 Functions
		/// </summary>
		public void cnt_Container155_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container155_setInlineAttributes(sender, e);
		}
		public string cnt_Container155_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:40px;line-height:72px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container155_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container155)
		/// </summary>
		/// <returns>The Visible State of wt_Container155</returns>
		public bool cnt_Container155_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWrapperIcon12 Functions
		/// </summary>
		public void cntWrapperIcon12_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperIcon12_setInlineAttributes(sender, e);
		}
		public string cntWrapperIcon12_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperIcon12_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperIcon12)
		/// </summary>
		/// <returns>The Visible State of wtWrapperIcon12</returns>
		public bool cntWrapperIcon12_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container21 Functions
		/// </summary>
		public void cnt_Container21_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container21_setInlineAttributes(sender, e);
		}
		public string cnt_Container21_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container21_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container21)
		/// </summary>
		/// <returns>The Visible State of wt_Container21</returns>
		public bool cnt_Container21_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If250 Functions
		/// </summary>
		bool if_wt_If250_hasRun=false;
		bool if_wt_If250_evalResult;
		public bool if_wt_If250() {
			if (if_wt_If250_hasRun) {
				if_wt_If250_hasRun = false;
				return if_wt_If250_evalResult;
			}
			if_wt_If250_hasRun = true;
			if_wt_If250_evalResult = ((getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGoldNumber==0) && (getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGreenNumber==0));
			return if_wt_If250_evalResult;
		}

		/// <summary>
		/// wt_If116 Functions
		/// </summary>
		bool if_wt_If116_hasRun=false;
		bool if_wt_If116_evalResult;
		public bool if_wt_If116() {
			if (if_wt_If116_hasRun) {
				if_wt_If116_hasRun = false;
				return if_wt_If116_evalResult;
			}
			if_wt_If116_hasRun = true;
			if_wt_If116_evalResult = (getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGoldNumber>0);
			return if_wt_If116_evalResult;
		}

		/// <summary>
		/// wt_If483 Functions
		/// </summary>
		bool if_wt_If483_hasRun=false;
		bool if_wt_If483_evalResult;
		public bool if_wt_If483() {
			if (if_wt_If483_hasRun) {
				if_wt_If483_hasRun = false;
				return if_wt_If483_evalResult;
			}
			if_wt_If483_hasRun = true;
			if_wt_If483_evalResult = (getWtTransferredEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGreenNumber>0);
			return if_wt_If483_evalResult;
		}

		/// <summary>
		/// wt_Container142 Functions
		/// </summary>
		public void cnt_Container142_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container142_setInlineAttributes(sender, e);
		}
		public string cnt_Container142_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container142_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container142)
		/// </summary>
		/// <returns>The Visible State of wt_Container142</returns>
		public bool cnt_Container142_isVisible() {
			return true;
		}

		/// <summary>
		/// wtMoreRowsWrapper Functions
		/// </summary>
		public void cntMoreRowsWrapper_onDataBinding(object sender, System.EventArgs e) {
			cntMoreRowsWrapper_setInlineAttributes(sender, e);
		}
		public string cntMoreRowsWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntMoreRowsWrapper_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtMoreRowsWrapper)
		/// </summary>
		/// <returns>The Visible State of wtMoreRowsWrapper</returns>
		public bool cntMoreRowsWrapper_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If201 Functions
		/// </summary>
		bool if_wt_If201_hasRun=false;
		bool if_wt_If201_evalResult;
		public bool if_wt_If201() {
			if (if_wt_If201_hasRun) {
				if_wt_If201_hasRun = false;
				return if_wt_If201_evalResult;
			}
			if_wt_If201_hasRun = true;
			if_wt_If201_evalResult = (((int) Global.App.OsContext.Session["CaseConferencing.StaffViewMaxRecords"]) <queryResGetMyStudents_outParamList.Length);
			return if_wt_If201_evalResult;
		}

		/// <summary>
		/// wtMoreRow Functions
		/// </summary>
		public void cntMoreRow_onDataBinding(object sender, System.EventArgs e) {
			cntMoreRow_setInlineAttributes(sender, e);
		}
		public string cntMoreRow_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding:10px;opacity:.75;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntMoreRow_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtMoreRow)
		/// </summary>
		/// <returns>The Visible State of wtMoreRow</returns>
		public bool cntMoreRow_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance520 Functions
		/// </summary>
		public void webBlck_WebBlockInstance520_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowCommon.WBlkInfiniteScroll widget = (ssCaseConferencing.Flows.FlowCommon.WBlkInfiniteScroll) sender;
		}
		/// <summary>
		/// AjaxNotify event handler for widget wt_WebBlockInstance520
		/// </summary>
		public void webBlck_WebBlockInstance520_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandRefreshStudentTable(heContext
			, false, true, false, false, "", "", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wt_Container20 Functions
		/// </summary>
		public void cnt_Container20_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container20_setInlineAttributes(sender, e);
		}
		public string cnt_Container20_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight:600;color:#444;font-size:20px;padding:40px;text-shadow:1px 1px 2px #b1b1b1;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container20_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container20)
		/// </summary>
		/// <returns>The Visible State of wt_Container20</returns>
		public bool cnt_Container20_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container251 Functions
		/// </summary>
		public void cnt_Container251_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container251_setInlineAttributes(sender, e);
		}
		public string cnt_Container251_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container251_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container251)
		/// </summary>
		/// <returns>The Visible State of wt_Container251</returns>
		public bool cnt_Container251_isVisible() {
			return false;
		}

		/// <summary>
		/// wtileft Functions
		/// </summary>
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtileft_input_value() {
			if ((0.0M!=varLcleft)) {
				return RuntimePlatformUtils.RemoveTrailingZeros(varLcleft.ToString("N", FormatInfo.InputNumber), FormatInfo.InputNumber);
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtileft");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDecimalInputValidate, validate)) {
					return RuntimePlatformUtils.RemoveTrailingZeros(varLcleft.ToString("N", FormatInfo.InputNumber), FormatInfo.InputNumber);
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtileft_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					varLcleft = 0.0M; 
				} else {
					varLcleft = OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDecimalInput(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				varLcleft = 0.0M; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtileft)
		/// </summary>
		/// <returns>The Visible State of wtileft</returns>
		public bool inputwtileft_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtileft)
		/// </summary>
		/// <returns>The Enabled State of wtileft</returns>
		public bool inputwtileft_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtileft)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtileft</returns>
		public bool inputwtileft_isMandatory() {
			return false;
		}

		/// <summary>
		/// wtitop Functions
		/// </summary>
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtitop_input_value() {
			if ((0.0M!=varLctop)) {
				return RuntimePlatformUtils.RemoveTrailingZeros(varLctop.ToString("N", FormatInfo.InputNumber), FormatInfo.InputNumber);
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtitop");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDecimalInputValidate, validate)) {
					return RuntimePlatformUtils.RemoveTrailingZeros(varLctop.ToString("N", FormatInfo.InputNumber), FormatInfo.InputNumber);
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtitop_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					varLctop = 0.0M; 
				} else {
					varLctop = OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDecimalInput(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				varLctop = 0.0M; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtitop)
		/// </summary>
		/// <returns>The Visible State of wtitop</returns>
		public bool inputwtitop_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtitop)
		/// </summary>
		/// <returns>The Enabled State of wtitop</returns>
		public bool inputwtitop_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtitop)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtitop</returns>
		public bool inputwtitop_isMandatory() {
			return false;
		}

		/// <summary>
		/// wtButtonInvisibleSearch Functions
		/// </summary>
		public void btnButtonInvisibleSearch_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Button submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wtButtonInvisibleSearch_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), true);
			if (CommandRefreshStudentTable(heContext, false, false, false, false, "", "", false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the label of the button (wtButtonInvisibleSearch)
		/// </summary>
		/// <returns>Label of the Button (wtButtonInvisibleSearch)</returns>
		public string
		btnButtonInvisibleSearch_getLabel() {
			return "Invisible Default Search";
		}
		/// <summary>
		/// Gets the visible state of component (wtButtonInvisibleSearch)
		/// </summary>
		/// <returns>The Visible State of wtButtonInvisibleSearch</returns>
		public bool btnButtonInvisibleSearch_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtButtonInvisibleSearch)
		/// </summary>
		/// <returns>The Enabled State of wtButtonInvisibleSearch</returns>
		public bool btnButtonInvisibleSearch_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_InlineExpression145 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = ttYxPFurS0WVurGE6iuZcg) Expression: "<script>     var
		///  sticky_page_scroll = function(){     var sticky_element_id=""" + StaffViewHeader.Id + """; //ente
		/// r your sticky element's ID here...     var min_y_distance=0; //enter the number of px from the
		///  viewport edge you wish to pad your sticky element by...     var initial_y_pos;     var initialize
		/// = function(){         if(!document.getElementById(sticky_element_id)){
		///  setTimeout(function(){sticky_page_scroll.initialize();},5);         }         else{
		///   //save the initial vertical position of the element so we can find our threshold again later on..
		/// .             initial_y_pos=find_pos(document.getElementById(sticky_element_id))[1];
		///  //attach event handlers to watch changes in page scroll or dimensions...
		///   if(window.addEventListener){                 //for modern versions of IE and for FF, etc.
		///          window.addEventListener(""scroll"",scroll);
		///           window.addEventListener(""resize"",scroll);             }             else{
		///      //for older versions of IE that support this method rather than addEventListener...
		///       window.attachEvent(""onscroll"",scroll);                 window.attachEvent(""onresize"",scro
		/// ll);             }             //go ahead and do the scroll check once right now before anything
		///  else happens (in case we've refreshed the page and are already scrolled down the page, for example
		/// )             scroll();         }         //congratualtions, you are now initialized!     }     var
		///  find_pos = function(element){         var curleft = curtop = 0;         if(element.offsetParent){
		///             do{                 curleft += element.offsetLeft;                 curtop += element.of
		/// fsetTop;             }while(element = element.offsetParent);         }         return
		///  [curleft,curtop];     }     var posTop = function(){         return typeof window.pageYOffset !
		/// = 'undefined' ?  window.pageYOffset : document.documentElement &&
		///  document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop
		/// ? document.body.scrollTop : 0;     };     var scroll = function(){         var y = posTop();
		///  //number of px we have so far scrolled down the page         if(y>initial_y_pos-min_y_distance-1){
		///              //if we have scrolled more than our initial position, less the padding, less 1, then
		///  we switch up to fixed positioning and set our ""top"" value to the amount of padding we wanted...
		///             document.getElementById(sticky_element_id).style.position=""fixed"";
		///              document.getElementById(sticky_element_id).style.top=min_y_distance + ""px"";
		///     }         else{             //otherwise, we assign absolute positioning and clear out the ""t
		/// op"" value (setting it to zero, for my needs)...
		///  document.getElementById(sticky_element_id).style.position=""absolute"";
		///   document.getElementById(sticky_element_id).style.top=""90px"";         }     };     return{
		///    //make the initialize and scroll functions public so that we can use them...
		///     initialize:initialize,         scroll:scroll     };
		/// }(); window.onload=function(){sticky_page_scroll.initialize();}; </script>"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression145() {
			return (("<script>\r\n    var sticky_page_scroll = function(){\r\n    var sticky_element_id=\"" +wtStaffViewHeader.ClientID) + "\"; //enter your sticky element\'s ID here...\r\n    var min_y_distance=0; //enter the number of px from the viewport edge you wish to pad your sticky element by...\r\n    var initial_y_pos;\r\n    var initialize = function(){\r\n        if(!document.getElementById(sticky_element_id)){\r\n            setTimeout(function(){sticky_page_scroll.initialize();},5);\r\n        }\r\n        else{\r\n            //save the initial vertical position of the element so we can find our threshold again later on...\r\n            initial_y_pos=find_pos(document.getElementById(sticky_element_id))[1];\r\n            //attach event handlers to watch changes in page scroll or dimensions...\r\n            if(window.addEventListener){\r\n                //for modern versions of IE and for FF, etc.\r\n                window.addEventListener(\"scroll\",scroll);\r\n                window.addEventListener(\"resize\",scroll);\r\n            }\r\n            else{\r\n                //for older versions of IE that support this method " +
			 "rather than addEventListener...\r\n                window.attachEvent(\"onscroll\",scroll);\r\n                window.attachEvent(\"onresize\",scroll);\r\n            }\r\n            //go ahead and do the scroll check once right now before anything else happens (in case we\'ve refreshed the page and are already scrolled down the page, for example)\r\n            scroll();\r\n        }\r\n        //congratualtions, you are now initialized!\r\n    }\r\n    var find_pos = function(element){\r\n        var curleft = curtop = 0;\r\n        if(element.offsetParent){\r\n            do{\r\n                curleft += element.offsetLeft;\r\n                curtop += element.offsetTop;\r\n            }while(element = element.offsetParent);\r\n        }\r\n        return [curleft,curtop];\r\n    }\r\n    var posTop = function(){\r\n        return typeof window.pageYOffset != \'undefined\' ?  window.pageYOffset : document.documentElement && document.documentElement.scrollTop ? document.documentElement.scrollTop : documen" +
			 "t.body.scrollTop ? document.body.scrollTop : 0;\r\n    };\r\n    var scroll = function(){\r\n        var y = posTop(); //number of px we have so far scrolled down the page\r\n        if(y>initial_y_pos-min_y_distance-1){\r\n            //if we have scrolled more than our initial position, less the padding, less 1, then we switch up to fixed positioning and set our \"top\" value to the amount of padding we wanted...\r\n            document.getElementById(sticky_element_id).style.position=\"fixed\";\r\n            document.getElementById(sticky_element_id).style.top=min_y_distance + \"px\";\r\n        }\r\n        else{\r\n            //otherwise, we assign absolute positioning and clear out the \"top\" value (setting it to zero, for my needs)...\r\n            document.getElementById(sticky_element_id).style.position=\"absolute\";\r\n            document.getElementById(sticky_element_id).style.top=\"90px\";\r\n        }\r\n    };\r\n    return{\r\n        //make the initialize and scroll functions public so th" +
			 "at we can use them...\r\n        initialize:initialize,\r\n        scroll:scroll\r\n    };\r\n}();\r\nwindow.onload=function(){sticky_page_scroll.initialize();};\r\n</script>");
		}
		/// <summary>
		/// wtPopUpStudenRAG Functions
		/// </summary>
		public void webBlckPopUpStudenRAG_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_StudentRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_StudentRAG) sender;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamRAGStatusId = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG;
			widget.inParamStudentReference = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference;
			widget.inParamVisible = varLcshow;
			widget.inParamtop = varLctop;
			widget.inParamleft = varLcleft;
		}
		/// <summary>
		/// AjaxNotify event handler for widget wtPopUpStudenRAG
		/// </summary>
		public void webBlckPopUpStudenRAG_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOnNotifyRAGChange(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wtPopUpNotes Functions
		/// </summary>
		public void webBlckPopUpNotes_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_Notes widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_Notes) sender;
			widget.inParamStudentReference = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference;
			widget.inParamRAGStatusId = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentRAG;
			widget.inParamVisible = varLcshow;
			widget.inParamtop = varLctop;
			widget.inParamleft = varLcleft;
		}
		/// <summary>
		/// AjaxNotify event handler for widget wtPopUpNotes
		/// </summary>
		public void webBlckPopUpNotes_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOnPopUpNotesNotify(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wtPopUpCategoryRAG Functions
		/// </summary>
		public void webBlckPopUpCategoryRAG_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_CategoryRAG widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_CategoryRAG) sender;
			widget.inParamStudentReference = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference;
			widget.inParamShortTermRAG = (((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocPeriodRAG):((((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("9J+4M6ZeU0+g4qKAzSFbVg")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathPeriodRAG):((((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("hh0WWQ2FF0acLTzRV4EL3Q")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngPeriodRAG):((((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("iy5u49fNYkGR3K77QLSz4g")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWPeriodRAG):(BuiltInFunction.NullTextIdentifier()))))))));
			widget.inParamOverallRAG = (((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocOverallRAG):((((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("9J+4M6ZeU0+g4qKAzSFbVg")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathOverallRAG):((((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("hh0WWQ2FF0acLTzRV4EL3Q")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngOverallRAG):((((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("iy5u49fNYkGR3K77QLSz4g")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWOverallRAG):(BuiltInFunction.NullTextIdentifier()))))))));
			widget.inParamCategoryId = varLccurrentcategoryid;
			widget.inParamOverallCompletedUnit = (((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocCompletedUnits):((((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("9J+4M6ZeU0+g4qKAzSFbVg")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathCompletedUnits):((((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("hh0WWQ2FF0acLTzRV4EL3Q")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngCompletedUnits):((((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("iy5u49fNYkGR3K77QLSz4g")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWCompletedUnits):(0))))))));
			widget.inParamOverallTotalUnit = (((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssVocRegisteredUnits):((((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("9J+4M6ZeU0+g4qKAzSFbVg")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMathRegisteredUnits):((((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("hh0WWQ2FF0acLTzRV4EL3Q")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssEngRegisteredUnits):((((varLccurrentcategoryid==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("iy5u49fNYkGR3K77QLSz4g")).ssId)) ?(getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssMLWRegisteredUnits):(0))))))));
			widget.inParamVisible = varLcshow;
			widget.inParamtop = varLctop;
			widget.inParamleft = varLcleft;
		}
		/// <summary>
		/// AjaxNotify event handler for widget wtPopUpCategoryRAG
		/// </summary>
		public void webBlckPopUpCategoryRAG_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOnNotifyCategoryChange(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wtPopUp_CauseOfConcern Functions
		/// </summary>
		public void webBlckPopUp_CauseOfConcern_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_CauseOfConcern widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_CauseOfConcern) sender;
			widget.inParamStudentReference = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference;
			widget.inParamRAGStatusId = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG;
			widget.inParamVisible = varLcshow;
			widget.inParamtop = ((int) varLctop);
			widget.inParamleft = ((int) varLcleft);
		}
		/// <summary>
		/// AjaxNotify event handler for widget wtPopUp_CauseOfConcern
		/// </summary>
		public void webBlckPopUp_CauseOfConcern_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOnNotifyCauseOfConcern(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wtPopUpRewards Functions
		/// </summary>
		public void webBlckPopUpRewards_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_Rewards widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkPopUp_Rewards) sender;
			widget.inParamStudentReference = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssStudentReference;
			widget.inParamRewardsGoldNumber = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGoldNumber;
			widget.inParamRewardsGreenNumber = getWtActiveEnrolmentsListList().CurrentRec.ssSTStaffViewRecord.ssRewardsGreenNumber;
			widget.inParamVisible = varLcshow;
			widget.inParamtop = ((int) varLctop);
			widget.inParamleft = ((int) varLcleft);
		}
		/// <summary>
		/// AjaxNotify event handler for widget wtPopUpRewards
		/// </summary>
		public void webBlckPopUpRewards_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOnNotifyRewards(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wt_Container295 Functions
		/// </summary>
		public void cnt_Container295_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container295_setInlineAttributes(sender, e);
		}
		public string cnt_Container295_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container295_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container295)
		/// </summary>
		/// <returns>The Visible State of wt_Container295</returns>
		public bool cnt_Container295_isVisible() {
			return true;
		}

		/// <summary>
		/// wtPopUp_Tootip Functions
		/// </summary>
		public void webBlckPopUp_Tootip_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkPopUp_Tootip widget = (ssCaseConferencing.Flows.FlowCommon.WBlkPopUp_Tootip) sender;
			widget.inParamTooltip = varLctooltip;
			widget.inParamVisible = varLcshow;
			widget.inParamtop = varLctop;
			widget.inParamleft = varLcleft;
		}
		/// <summary>
		/// wt_Container277 Functions
		/// </summary>
		public void cnt_Container277_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container277_setInlineAttributes(sender, e);
		}
		public string cnt_Container277_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container277_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container277)
		/// </summary>
		/// <returns>The Visible State of wt_Container277</returns>
		public bool cnt_Container277_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression83 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = l5ZcJtoN60qL0HCDv9bTrg) Expression:
		///  GetScrollToJavascript.JavascriptText
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression83() {
			return resGetScrollToJavascript.outParamJavascriptText;
		}
		/// <summary>
		/// wt_Container107 Functions
		/// </summary>
		public void cnt_Container107_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container107_setInlineAttributes(sender, e);
		}
		public string cnt_Container107_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container107_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container107)
		/// </summary>
		/// <returns>The Visible State of wt_Container107</returns>
		public bool cnt_Container107_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance353 Functions
		/// </summary>
		public void webBlck_WebBlockInstance353_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkjQuerySelectric widget = (ssCaseConferencing.Flows.FlowCommon.WBlkjQuerySelectric) sender;
			widget.inParamCssStyle = ".selectric";
		}


		public static class FuncCommandOpenCategoryRAGPopUp {
		}
		public static class FuncCommandOnNotifyCategoryChange {
		}
		public static class FuncCommandOnPopUpNotesNotify {

			/// <summary>
			/// Query Function "GetNotesByStudentId" of Action "OnPopUpNotesNotify"
			/// </summary>
			public static RLNoteRecordList datasetGetNotesByStudentId(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Multiple {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8");
				fromBuilder.Append(" FROM {Note} ENNote");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENNote.[STUDENTID] = @qpstP) AND (ENNote.[STUDENTID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENNote.[STUDENTID] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLNoteRecordList outParamList = new RLNoteRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLNoteRecordList _tmp = new RLNoteRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.OnPopUpNotesNotify.GetNotesByStudentId.List");
						outParamList = (RLNoteRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.OnPopUpNotesNotify.GetNotesByStudentId.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLNoteRecordList _tmp = new RLNoteRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.OnPopUpNotesNotify.GetNotesByStudentId.List");
							outParamList = (RLNoteRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.OnPopUpNotesNotify.GetNotesByStudentId.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}
		public static class FuncCommandOpenNotesPopup {
		}
		public static class FuncCommandShowLearnerDetail {
		}
		public static class FuncCommandRefreshStudentTable {

			/// <summary>
			/// Query Function "GetStudentGroups2" of Action "RefreshStudentTable"
			/// </summary>
			public static RLStudent_GroupRecordList QueryGetStudentGroups2(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstGroupName) {
				// Query Iterations: Multiple {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords == 1));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				sqlCmd.CreateParameter("@qpstGroupName", DbType.String, qpstGroupName);
				string advSql = "SELECT  {Student_Group}.[ID], {Student_Group}.[STUDENTREFERENCE], {Student_Group}.[GROUPID], {Student_Group}.[ENROLMENTSTATUS], {Student_Group}.[STARTDATE], {Student_Group}.[ENDDATE], {Student_Group}.[ACADEMICYEAR], {Student_Group}.[ENROLMENTPLANNEDLEARNINGHOUR], {Student_Group}.[TMG] FROM  {Student_Group}   " +
				 "INNER JOIN  {Group} ON  {Group}.[ID] =  {Student_Group}.[GROUPID]  " +
				 "WHERE  {Group}.[GROUPNAME] LIKE @qpstGroupName";
				string sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				AppUtils.Instance.CheckReadOnlyEntityReferences(advSql);
				sqlCmd.CommandText = sql;
				try {
					RLStudent_GroupRecordList outParamList = new RLStudent_GroupRecordList();
					outParamList.Transaction = trans;
					BitArray[] opt = new BitArray[1];
					opt[0] = new BitArray(new bool[] {
						false, false, false, false, false, false, false, false, false
					}
					);
					outParamList.AllOptimizedAttributes = opt;
					if (multiplicity == IterationMultiplicity.Multiple) {
						RLStudent_GroupRecordList _tmp = new RLStudent_GroupRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						_tmp.MaxRecords = maxRecords;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.RefreshStudentTable.GetStudentGroups2.List");
							outParamList = (RLStudent_GroupRecordList) _tmp.Duplicate();
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else if (multiplicity == IterationMultiplicity.Never) {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.RefreshStudentTable.GetStudentGroups2.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							outParamList.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.RefreshStudentTable.GetStudentGroups2.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				} catch (System.InvalidOperationException aqExcep) {
					if (aqExcep.Message.StartsWith("Command parameter[")) {
						throw new DataBaseException("Problems accessing parameters in advanced query GetStudentGroups2 in RefreshStudentTable in StaffView in StaffView in CaseConferencing (SELECT {Student_Group}.* FROM {Student_Group}   INNER JOIN {Group} ON {Group}.[Id] = {Student_Group}.[GroupId]  WHERE {Group}.[GroupName] LIKE @GroupName): " + aqExcep.Message);
					}
					throw new DataBaseException("Error in advanced query GetStudentGroups2 in RefreshStudentTable in StaffView in StaffView in CaseConferencing (SELECT {Student_Group}.* FROM {Student_Group}   INNER JOIN {Group} ON {Group}.[Id] = {Student_Group}.[GroupId]  WHERE {Group}.[GroupName] LIKE @GroupName): " + aqExcep.Message);
				} catch (Exception aqExcep) {
					throw new DataBaseException("Error in advanced query GetStudentGroups2 in RefreshStudentTable in StaffView in StaffView in CaseConferencing (SELECT {Student_Group}.* FROM {Student_Group}   INNER JOIN {Group} ON {Group}.[Id] = {Student_Group}.[GroupId]  WHERE {Group}.[GroupName] LIKE @GroupName): " + aqExcep.Message);
				}
			}
		}
		public static class FuncCommandOpenStudentRAG {
		}
		public static class FuncCommandOpenTooltipPopup {
		}
		public static class FuncCommandToogleFavourite {

			/// <summary>
			/// Query Function "GetNewFavourite" of Action "ToogleFavourite"
			/// </summary>
			public static RLStaffStudentFavouriteRecordList datasetGetNewFavourite(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("ENStaffStudentFavourite.[ID] o1, NULL o2, NULL o3");
				fromBuilder.Append(" FROM {StaffStudentFavourite} ENStaffStudentFavourite");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStaffStudentFavourite.[STUDENTREFERENCE] = @qpstP) AND (ENStaffStudentFavourite.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStaffStudentFavourite.[STUDENTREFERENCE] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStaffStudentFavouriteRecordList outParamList = new RLStaffStudentFavouriteRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					false, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStaffStudentFavouriteRecordList _tmp = new RLStaffStudentFavouriteRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.ToogleFavourite.GetNewFavourite.List");
						outParamList = (RLStaffStudentFavouriteRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.ToogleFavourite.GetNewFavourite.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStaffStudentFavouriteRecordList _tmp = new RLStaffStudentFavouriteRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.ToogleFavourite.GetNewFavourite.List");
							outParamList = (RLStaffStudentFavouriteRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.ToogleFavourite.GetNewFavourite.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}
		public static class FuncCommandOpenCauseOfConcernPopUp {
		}
		public static class FuncCommandOnNotifyRAGChange {

			/// <summary>
			/// Query Function "GetStudentByStudentReference" of Action "OnNotifyRAGChange"
			/// </summary>
			public static RLStudentRAGRecordList datasetGetStudentByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENStudentRAG.[RAG] o2, NULL o3, ENStudentRAG.[UPDATEDBY] o4, ENStudentRAG.[UPDATEDAT] o5");
				fromBuilder.Append(" FROM {StudentRAG} ENStudentRAG");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudentRAG.[STUDENTREFERENCE] = @qpstP) AND (ENStudentRAG.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudentRAG.[STUDENTREFERENCE] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentRAGRecordList outParamList = new RLStudentRAGRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					true, false, true, false, false
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentRAGRecordList _tmp = new RLStudentRAGRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.OnNotifyRAGChange.GetStudentByStudentReference.List");
						outParamList = (RLStudentRAGRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.OnNotifyRAGChange.GetStudentByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentRAGRecordList _tmp = new RLStudentRAGRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.OnNotifyRAGChange.GetStudentByStudentReference.List");
							outParamList = (RLStudentRAGRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.OnNotifyRAGChange.GetStudentByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}
		public static class FuncCommandOpenRewardsPopUp {
		}
		public static class FuncCommandOnNotifyRewards {
		}
		public static class FuncCommandOnNotifyCauseOfConcern {
		}
		public static class FuncCommandOpenFilters {
		}
		public static class FuncssPreparation {

			private static void datasetGetCCSessionByIdReadDB(ref RCClusterCCSessionRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENCCSession.Read(r, ref index);
				rec.ssENCluster.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetCCSessionById" of Action "Preparation"
			/// </summary>
			public static RLClusterCCSessionRecordList datasetGetCCSessionById(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENCCSession.[DESCRIPTION] o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, ENCluster.[CLUSTERDESCRIPTION] o11, NULL o12, NULL o13, NULL o14, NULL o15");
				fromBuilder.Append(" FROM ({Cluster} ENCluster Inner JOIN {CCSession} ENCCSession ON (ENCCSession.[CLUSTERID] = ENCluster.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENCCSession.[ID] = @qpinP) AND (ENCCSession.[ID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENCCSession.[ID] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLClusterCCSessionRecordList outParamList = new RLClusterCCSessionRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetCCSessionByIdReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[2];
				opt[0] = new BitArray(new bool[] {
					true, true, false, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, false, true, true, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLClusterCCSessionRecordList _tmp = new RLClusterCCSessionRecordList();
					_tmp.AlternateReadDBMethod = datasetGetCCSessionByIdReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.Preparation.GetCCSessionById.List");
						outParamList = (RLClusterCCSessionRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.Preparation.GetCCSessionById.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLClusterCCSessionRecordList _tmp = new RLClusterCCSessionRecordList();
						_tmp.AlternateReadDBMethod = datasetGetCCSessionByIdReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.Preparation.GetCCSessionById.List");
							outParamList = (RLClusterCCSessionRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.Preparation.GetCCSessionById.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			/// <summary>
			/// Query Function "GetMyTimetabledClasses" of Action "Preparation"
			/// </summary>
			public static RLTimetabledClassesDropdownRecordList QueryGetMyTimetabledClasses(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstStaffADName) {
				// Query Iterations: Single {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords == 1));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				sqlCmd.CreateParameter("@qpstStaffADName", DbType.String, qpstStaffADName);
				string advSql = "SELECT DISTINCT  {Group}.[GROUPNAME] + ' - ' +  {Group}.[GROUPDESCRIPTION],  " +
				 "     {Group}.[GROUPNAME]  " +
				 "FROM  {Group}   " +
				 "INNER JOIN  {Staff_Group} ON  {Group}.[ID] =  {Staff_Group}.[GROUPID]  " +
				 "INNER JOIN  {Staff} ON  {Staff_Group}.[STAFFID] =  {Staff}.[ID]  " +
				 "INNER JOIN  {Student_Group} ON  {Group}.[ID] =  {Student_Group}.[GROUPID]  " +
				 "WHERE  {Staff}.[ADNAME] LIKE @qpstStaffADName  " +
				 "ORDER BY  {Group}.[GROUPNAME]";
				string sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				AppUtils.Instance.CheckReadOnlyEntityReferences(advSql);
				sqlCmd.CommandText = sql;
				try {
					RLTimetabledClassesDropdownRecordList outParamList = new RLTimetabledClassesDropdownRecordList();
					outParamList.Transaction = trans;
					BitArray[] opt = new BitArray[1];
					opt[0] = new BitArray(new bool[] {
						false, false
					}
					);
					outParamList.AllOptimizedAttributes = opt;
					if (multiplicity == IterationMultiplicity.Multiple) {
						RLTimetabledClassesDropdownRecordList _tmp = new RLTimetabledClassesDropdownRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						_tmp.MaxRecords = maxRecords;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.Preparation.GetMyTimetabledClasses.List");
							outParamList = (RLTimetabledClassesDropdownRecordList) _tmp.Duplicate();
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else if (multiplicity == IterationMultiplicity.Never) {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.Preparation.GetMyTimetabledClasses.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							outParamList.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.Preparation.GetMyTimetabledClasses.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				} catch (System.InvalidOperationException aqExcep) {
					if (aqExcep.Message.StartsWith("Command parameter[")) {
						throw new DataBaseException("Problems accessing parameters in advanced query GetMyTimetabledClasses in Preparation in StaffView in StaffView in CaseConferencing (SELECT DISTINCT {Group}.[GroupName] + ' - ' + {Group}.[GroupDescription],      {Group}.[GroupName]  FROM {Group}   INNER JOIN {Staff_Group} ON {Group}.[Id] = {Staff_Group}.[GroupId]  INNER JOIN {Staff} ON {Staff_Group}.[StaffId] = {Staff}.[Id]  INNER JOIN {Student_Group} ON {Group}.[Id] = {Student_Group}.[GroupId]  WHERE {Staff}.[ADName] LIKE @StaffADName  ORDER BY {Group}.[GroupName]): " + aqExcep.Message);
					}
					throw new DataBaseException("Error in advanced query GetMyTimetabledClasses in Preparation in StaffView in StaffView in CaseConferencing (SELECT DISTINCT {Group}.[GroupName] + ' - ' + {Group}.[GroupDescription],      {Group}.[GroupName]  FROM {Group}   INNER JOIN {Staff_Group} ON {Group}.[Id] = {Staff_Group}.[GroupId]  INNER JOIN {Staff} ON {Staff_Group}.[StaffId] = {Staff}.[Id]  INNER JOIN {Student_Group} ON {Group}.[Id] = {Student_Group}.[GroupId]  WHERE {Staff}.[ADName] LIKE @StaffADName  ORDER BY {Group}.[GroupName]): " + aqExcep.Message);
				} catch (Exception aqExcep) {
					throw new DataBaseException("Error in advanced query GetMyTimetabledClasses in Preparation in StaffView in StaffView in CaseConferencing (SELECT DISTINCT {Group}.[GroupName] + ' - ' + {Group}.[GroupDescription],      {Group}.[GroupName]  FROM {Group}   INNER JOIN {Staff_Group} ON {Group}.[Id] = {Staff_Group}.[GroupId]  INNER JOIN {Staff} ON {Staff_Group}.[StaffId] = {Staff}.[Id]  INNER JOIN {Student_Group} ON {Group}.[Id] = {Student_Group}.[GroupId]  WHERE {Staff}.[ADName] LIKE @StaffADName  ORDER BY {Group}.[GroupName]): " + aqExcep.Message);
				}
			}

			/// <summary>
			/// Query Function "GetGroups" of Action "Preparation"
			/// </summary>
			public static RLGroupRecordList datasetGetGroups(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Refresh Query IUTN5R8SAUOMwuGjSC+9tg Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, ENGroup.[GROUPDESCRIPTION] o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9");
				fromBuilder.Append(" FROM {Group} ENGroup");
				whereBuilder.Append(" WHERE (ENGroup.[GROUPNAME] = @qpstP)");
				sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLGroupRecordList outParamList = new RLGroupRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					true, true, false, true, true, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLGroupRecordList _tmp = new RLGroupRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.Preparation.GetGroups.List");
						outParamList = (RLGroupRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.Preparation.GetGroups.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLGroupRecordList _tmp = new RLGroupRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.Preparation.GetGroups.List");
							outParamList = (RLGroupRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.Preparation.GetGroups.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			/// <summary>
			/// Query Function "GetStudentGroups" of Action "Preparation"
			/// </summary>
			public static RLStudent_GroupRecordList QueryGetStudentGroups(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstGroupName) {
				// Query Iterations: Multiple {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords == 1));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				sqlCmd.CreateParameter("@qpstGroupName", DbType.String, qpstGroupName);
				string advSql = "SELECT  {Student_Group}.[ID], {Student_Group}.[STUDENTREFERENCE], {Student_Group}.[GROUPID], {Student_Group}.[ENROLMENTSTATUS], {Student_Group}.[STARTDATE], {Student_Group}.[ENDDATE], {Student_Group}.[ACADEMICYEAR], {Student_Group}.[ENROLMENTPLANNEDLEARNINGHOUR], {Student_Group}.[TMG] FROM  {Student_Group}   " +
				 "INNER JOIN  {Group} ON  {Group}.[ID] =  {Student_Group}.[GROUPID]  " +
				 "WHERE  {Group}.[GROUPNAME] LIKE @qpstGroupName";
				string sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				AppUtils.Instance.CheckReadOnlyEntityReferences(advSql);
				sqlCmd.CommandText = sql;
				try {
					RLStudent_GroupRecordList outParamList = new RLStudent_GroupRecordList();
					outParamList.Transaction = trans;
					BitArray[] opt = new BitArray[1];
					opt[0] = new BitArray(new bool[] {
						false, false, false, false, false, false, false, false, false
					}
					);
					outParamList.AllOptimizedAttributes = opt;
					if (multiplicity == IterationMultiplicity.Multiple) {
						RLStudent_GroupRecordList _tmp = new RLStudent_GroupRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						_tmp.MaxRecords = maxRecords;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.Preparation.GetStudentGroups.List");
							outParamList = (RLStudent_GroupRecordList) _tmp.Duplicate();
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else if (multiplicity == IterationMultiplicity.Never) {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.Preparation.GetStudentGroups.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							outParamList.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.Preparation.GetStudentGroups.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				} catch (System.InvalidOperationException aqExcep) {
					if (aqExcep.Message.StartsWith("Command parameter[")) {
						throw new DataBaseException("Problems accessing parameters in advanced query GetStudentGroups in Preparation in StaffView in StaffView in CaseConferencing (SELECT {Student_Group}.* FROM {Student_Group}   INNER JOIN {Group} ON {Group}.[Id] = {Student_Group}.[GroupId]  WHERE {Group}.[GroupName] LIKE @GroupName): " + aqExcep.Message);
					}
					throw new DataBaseException("Error in advanced query GetStudentGroups in Preparation in StaffView in StaffView in CaseConferencing (SELECT {Student_Group}.* FROM {Student_Group}   INNER JOIN {Group} ON {Group}.[Id] = {Student_Group}.[GroupId]  WHERE {Group}.[GroupName] LIKE @GroupName): " + aqExcep.Message);
				} catch (Exception aqExcep) {
					throw new DataBaseException("Error in advanced query GetStudentGroups in Preparation in StaffView in StaffView in CaseConferencing (SELECT {Student_Group}.* FROM {Student_Group}   INNER JOIN {Group} ON {Group}.[Id] = {Student_Group}.[GroupId]  WHERE {Group}.[GroupName] LIKE @GroupName): " + aqExcep.Message);
				}
			}

			/// <summary>
			/// Query Function "GetMyStudents" of Action "Preparation"
			/// </summary>
			public static RLStaffViewRecordRecordList QueryGetMyStudents(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstADName, string qpstGroupName, string qpstSearchKeyword, int qpinSearchTypeId, DateTime qpdaNullDatetime, int qpinUserId, int qpinSafeGuardingStatusOpen, bool qpboIsRAGStatusFilter, string qpstRAGStatus_FilterIds, int qpinFilter_AttRed, int qpinFilter_AttAmber, int qpinFilter_AttGreen, int qpinFilter_PonctRed, int qpinFilter_PonctAmber, int qpinFilter_PoncGreen, bool qpboFilter_CFC, bool qpboFilter_SafeGuard, bool qpboFilter_Reward, int qpinEngCategoryId, int qpinVocCategoryId, int qpinMathCategoryId, int qpinMLWCategoryId, bool qpboVOCFilter, string qpstVOC_Red, string qpstVOC_Green, string qpstVOC_Amber, bool qpboMathFilter, string qpstMath_Red, string qpstMath_Green, string qpstMath_Amber, bool qpboEnglishFilter, string qpstEnglish_Red, string qpstEnglish_Green, string qpstEnglish_Amber, bool qpboMLWFilter, string qpstMLW_Red, string qpstMLW_Green, string qpstMLW_Amber, string qpstOrderBy, string qpstOrderByDirection, string qpstSupportCategory, bool qpboSupportFilter, string qpstAcademicYear, int qpinSessionId, int qpinShowRevised, DateTime qpdaBirthDate, int qpinMaxRecords, DateTime qpdaAcademicYearStartDate, string qpstMLWChargeStep1, string qpstMLWChargeStep2, int qpinMLW_CloseLevel, string qpstAcademicYearForAttendance) {
				// Query Iterations: Multiple {-unbound-}
				// Refresh Query g+0KBGj450qKc05Sfp7HMA Iterations: Multiple {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords == 1));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				sqlCmd.CreateParameter("@qpinMaxRecords", DbType.Int32, qpinMaxRecords);
				sqlCmd.CreateParameter("@qpdaAcademicYearStartDate", DbType.DateTime, qpdaAcademicYearStartDate);
				sqlCmd.CreateParameter("@qpdaNullDatetime", DbType.DateTime, qpdaNullDatetime);
				sqlCmd.CreateParameter("@qpstAcademicYear", DbType.String, qpstAcademicYear);
				sqlCmd.CreateParameter("@qpinVocCategoryId", DbType.Int32, qpinVocCategoryId);
				sqlCmd.CreateParameter("@qpinMathCategoryId", DbType.Int32, qpinMathCategoryId);
				sqlCmd.CreateParameter("@qpinEngCategoryId", DbType.Int32, qpinEngCategoryId);
				sqlCmd.CreateParameter("@qpinMLW_CloseLevel", DbType.Int32, qpinMLW_CloseLevel);
				sqlCmd.CreateParameter("@qpstMLWChargeStep1", DbType.String, qpstMLWChargeStep1);
				sqlCmd.CreateParameter("@qpstMLWChargeStep2", DbType.String, qpstMLWChargeStep2);
				sqlCmd.CreateParameter("@qpstAcademicYearForAttendance", DbType.String, qpstAcademicYearForAttendance);
				sqlCmd.CreateParameter("@qpinUserId", DbType.Int32, qpinUserId);
				sqlCmd.CreateParameter("@qpinMLWCategoryId", DbType.Int32, qpinMLWCategoryId);
				sqlCmd.CreateParameter("@qpinSafeGuardingStatusOpen", DbType.Int32, qpinSafeGuardingStatusOpen);
				sqlCmd.CreateParameter("@qpinSessionId", DbType.Int32, qpinSessionId);
				sqlCmd.CreateParameter("@qpstGroupName", DbType.String, qpstGroupName);
				sqlCmd.CreateParameter("@qpstSearchKeyword", DbType.String, qpstSearchKeyword);
				sqlCmd.CreateParameter("@qpdaBirthDate", DbType.DateTime, qpdaBirthDate);
				sqlCmd.CreateParameter("@qpinSearchTypeId", DbType.Int32, qpinSearchTypeId);
				sqlCmd.CreateParameter("@qpstADName", DbType.String, qpstADName);
				sqlCmd.CreateParameter("@qpboIsRAGStatusFilter", DbType.Boolean, qpboIsRAGStatusFilter);
				sqlCmd.CreateParameter("@qpinFilter_AttRed", DbType.Int32, qpinFilter_AttRed);
				sqlCmd.CreateParameter("@qpinFilter_AttAmber", DbType.Int32, qpinFilter_AttAmber);
				sqlCmd.CreateParameter("@qpinFilter_AttGreen", DbType.Int32, qpinFilter_AttGreen);
				sqlCmd.CreateParameter("@qpinFilter_PonctRed", DbType.Int32, qpinFilter_PonctRed);
				sqlCmd.CreateParameter("@qpinFilter_PonctAmber", DbType.Int32, qpinFilter_PonctAmber);
				sqlCmd.CreateParameter("@qpinFilter_PoncGreen", DbType.Int32, qpinFilter_PoncGreen);
				sqlCmd.CreateParameter("@qpboFilter_Reward", DbType.Boolean, qpboFilter_Reward);
				sqlCmd.CreateParameter("@qpboFilter_CFC", DbType.Boolean, qpboFilter_CFC);
				sqlCmd.CreateParameter("@qpboFilter_SafeGuard", DbType.Boolean, qpboFilter_SafeGuard);
				sqlCmd.CreateParameter("@qpboVOCFilter", DbType.Boolean, qpboVOCFilter);
				sqlCmd.CreateParameter("@qpboMathFilter", DbType.Boolean, qpboMathFilter);
				sqlCmd.CreateParameter("@qpboEnglishFilter", DbType.Boolean, qpboEnglishFilter);
				sqlCmd.CreateParameter("@qpboMLWFilter", DbType.Boolean, qpboMLWFilter);
				sqlCmd.CreateParameter("@qpboSupportFilter", DbType.Boolean, qpboSupportFilter);
				sqlCmd.CreateParameter("@qpinShowRevised", DbType.Int32, qpinShowRevised);
				string advSql = "SELECT TOP (@qpinMaxRecords)   " +
				 "        {Student}.[STUDENTREFERENCE],  " +
				 "        {Student}.[FORENAMES],  " +
				 "        {Student}.[SURNAME],  " +
				 "        {Student}.[MAINOFFERINGNAME],  " +
				 "        {Student}.[STUDENTPHOTOURL],  " +
				 "        {StudentAnnualValues}.[DISABILITY],  " +
				 "        {StudentAnnualValues}.[LEARNINGDIFFICULTY],  " +
				 "        {StaffStudentFavourite}.[ID],  " +
				 "        {StudentRAG}.[RAG],  " +
				 "        {StudentRAG}.[UPDATEDAT],  " +
				 "        {StudentRAG}.[UPDATEDBY],  " +
				 "       IsNULL(StudentAttendanceAgg.[LASTWEEKPUNCTUALITY],-1),  " +
				 "       IsNULL(StudentAttendanceAgg.[OVERALLPUNCTUALITY],-1),  " +
				 "       IsNULL(StudentAttendanceAgg.[LASTWEEKATTENDANCE],-1),  " +
				 "       IsNULL(StudentAttendanceAgg.[OVERALLATTENDANCE],-1),  " +
				 "       CauseOfConcernAgg.[CAUSEOFCONCERNRAG],  " +
				 "       CauseOfConcernAgg.[CAUSEOFCONCERNNUMBER],  " +
				 "        (  " +
				 "        select Convert(nvarchar(10), {SafeguardingIssue}.[ID]) + ';' as 'data()'   " +
				 "            FROM  {SafeguardingIssue} where  {SafeguardingIssue}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE]   " +
				 "        for xml path('')  " +
				 "        ) [SAFEGUARDIDLIST],  " +
				 "       (  " +
				 "           select  {SupportType}.[CATEGORY] + '|'  +  {SupportType}.[LABEL]  + ';' as 'data()'   " +
				 "            from  {Support} INNER JOIN  {SupportType} ON  {SupportType}.[ID] =  {Support}.[SUPPORTTYPEID] where  {Support}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE]  " +
				 "            for xml path('')  " +
				 "        ) [SUPPORTIDLIST],    " +
				 "       (SELECT count(*) FROM  {Reward} WHERE  {Reward}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE] AND  {Reward}.[TYPE] = 1 AND  {Reward}.[CREATEDAT]>=@qpdaAcademicYearStartDate) [REWARDSGOLDNUMBER],   " +
				 "       (SELECT count(*) FROM  {Reward} WHERE  {Reward}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE] AND  {Reward}.[TYPE] = 0 AND  {Reward}.[CREATEDAT] >=@qpdaAcademicYearStartDate) [REWARDSGREENNUMBER],  " +
				 "       IsNull(StudentCatVoc.[SHORTTERMRAGID],'NotSet'),   " +
				 "       IsNull(StudentCatVoc.[OVERALLRAGID],''),   " +
				 "       VocUnit.StudentUnitVoc,   " +
				 "       VocUnit.StudentUnitTotalVoc,   " +
				 "       IsNull(StudentCatMath.[SHORTTERMRAGID],'NotSet'),   " +
				 "       IsNull( StudentCatMath.[OVERALLRAGID],''),  " +
				 "       MathUnit.StudentUnitMath,   " +
				 "       MathUnit.StudentUnitTotalMath,   " +
				 "       IsNull(StudentCatEng.[SHORTTERMRAGID],'NotSet'),   " +
				 "       IsNull(StudentCatEng.[OVERALLRAGID],''),  " +
				 "       EngUnit.StudentUnitEng,   " +
				 "       EngUnit.StudentUnitTotalEng,  " +
				 "       IsNull(StudentCatMLW.[SHORTTERMRAGID],'NotSet'),  " +
				 "       IsNull(StudentCatMLW.[OVERALLRAGID],''),   " +
				 "       IsNull(MLWUnit.StudentUnitMLW,0) [MLWCOMPLETEDUNITS],  " +
				 "       IsNull(MLWUnit.StudentUnitTotalMLW,7) [MLWREGISTEREDUNITS],  " +
				 "       0 [REWARDTYPE],  " +
				 "       '' [DESCRIPTIONTYPE],  " +
				 "       StudentDisciplinary.HasDisciplinary,  " +
				 "        0,  " +
				 "       '','','','',  " +
				 "       IsNull(StudentCatVoc.[SHORTTERMLASTUPDATEDBY],''),  " +
				 "       IsNull(StudentCatVoc.[SHORTTERMUPDATEDAT],@qpdaNullDatetime),  " +
				 "       IsNull(StudentCatVoc.[OVERALLLASTUPDATEDBY],''),  " +
				 "       IsNull(StudentCatVoc.[OVERALLUPDATEDAT],@qpdaNullDatetime),  " +
				 "       IsNull(StudentCatMath.[SHORTTERMLASTUPDATEDBY],''),  " +
				 "       IsNull(StudentCatMath.[SHORTTERMUPDATEDAT],@qpdaNullDatetime),  " +
				 "       IsNull(StudentCatMath.[OVERALLLASTUPDATEDBY],''),  " +
				 "       IsNull(StudentCatMath.[OVERALLUPDATEDAT],@qpdaNullDatetime),   " +
				 "       IsNull(StudentCatEng.[SHORTTERMLASTUPDATEDBY],''),  " +
				 "       IsNull(StudentCatEng.[SHORTTERMUPDATEDAT],@qpdaNullDatetime),  " +
				 "       IsNull(StudentCatEng.[OVERALLLASTUPDATEDBY],''),  " +
				 "       IsNull(StudentCatEng.[OVERALLUPDATEDAT],@qpdaNullDatetime),   " +
				 "       IsNull(StudentCatMLW.[SHORTTERMLASTUPDATEDBY],''),  " +
				 "       IsNull(StudentCatMLW.[SHORTTERMUPDATEDAT],@qpdaNullDatetime),  " +
				 "       IsNull(StudentCatMLW.[OVERALLLASTUPDATEDBY],''),  " +
				 "       IsNull(StudentCatMLW.[OVERALLUPDATEDAT],@qpdaNullDatetime),  " +
				 "        '',  " +
				 "       (SELECT COUNT( {Note}.[ID]) FROM  {Note} WHERE  {Note}.[STUDENTID] =  {Student}.[STUDENTREFERENCE] AND  {Note}.[ISACTIVE] = 1) as NotesNr,  " +
				 "       (CASE WHEN ISNULL(StudentLogSessionReview.IsSessionReview,0) > 0 THEN 1 ELSE 0 END ) as SessionStudenReview,  " +
				 "        {StudentExemption}.[ISMATHEXEMPTION] IsMathExemption,  " +
				 "        {StudentExemption}.[ISENGLISHEXEMPTION]  IsEnglishExemption,  " +
				 "         {Student}.[HASCURRENTACTIVEENROLMENT]  " +
				 "      " +
				 "FROM  {Student}  " +
				 "LEFT JOIN  {StudentRAG} ON  {StudentRAG}.[STUDENTREFERENCE] =   {Student}.[STUDENTREFERENCE]  " +
				 "LEFT JOIN  {RAGStatus} ON  {StudentRAG}.[RAG] =  {RAGStatus}.[ID]  " +
				 "LEFT JOIN  {StudentAnnualValues} ON  {Student}.[STUDENTREFERENCE] =  {StudentAnnualValues}.[STUDENTREFERENCE] AND  {StudentAnnualValues}.[ACADEMICYEAR] = @qpstAcademicYear  " +
				 "LEFT JOIN   " +
				 "    (SELECT  " +
				 "         {Tracking}.[STUDENTREFERENCE],  " +
				 "        (COUNT( {Tracking}.[STUDENTUNITID])) StudentUnitTotalVoc ,  " +
				 "        SUM(CASE WHEN ISNULL( {Tracking}.[COMPLETIONDATE], '1900-01-01') = '1900-01-01' THEN 0 ELSE 1 END) StudentUnitVoc   " +
				 "      FROM  {Tracking}  " +
				 "      WHERE  {Tracking}.[OFFERINGCATEGORY] = @qpinVocCategoryId  " +
				 "      OR ISNULL( {Tracking}.[OFFERINGCATEGORY],0) = 0    " +
				 "      GROUP BY  {Tracking}.[STUDENTREFERENCE]  " +
				 "    ) VocUnit ON (VocUnit.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE])  " +
				 "  " +
				 "LEFT JOIN   " +
				 "    (SELECT  " +
				 "         {Tracking}.[STUDENTREFERENCE],  " +
				 "        (COUNT( {Tracking}.[STUDENTUNITID])) StudentUnitTotalMath ,  " +
				 "        SUM(CASE WHEN ISNULL( {Tracking}.[COMPLETIONDATE], '1900-01-01') = '1900-01-01' THEN 0 ELSE 1 END) StudentUnitMath  " +
				 "      FROM  {Tracking}  " +
				 "      WHERE  {Tracking}.[OFFERINGCATEGORY] = @qpinMathCategoryId  " +
				 "      GROUP BY  {Tracking}.[STUDENTREFERENCE]  " +
				 "    ) MathUnit ON (MathUnit.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE])  " +
				 "  " +
				 "LEFT JOIN   " +
				 "    (SELECT  " +
				 "         {Tracking}.[STUDENTREFERENCE],  " +
				 "        (COUNT( {Tracking}.[STUDENTUNITID])) StudentUnitTotalEng ,  " +
				 "        SUM(CASE WHEN ISNULL( {Tracking}.[COMPLETIONDATE], '1900-01-01') = '1900-01-01' THEN 0 ELSE 1 END) StudentUnitEng  " +
				 "      FROM  {Tracking}  " +
				 "      WHERE  {Tracking}.[OFFERINGCATEGORY] = @qpinEngCategoryId  " +
				 "      GROUP BY  {Tracking}.[STUDENTREFERENCE]  " +
				 "    ) EngUnit ON (EngUnit.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE])  " +
				 "  " +
				 "LEFT JOIN   " +
				 "    (  " +
				 "          " +
				 "        SELECT   " +
				 "             {StudentMLWProcess}.[STUDENTID] as StudentReference,  " +
				 "            (  " +
				 "                SELECT count( {StudentMLWProcessCompetencies}.[ID])   " +
				 "                FROM  {StudentMLWProcessCompetencies}   " +
				 "                WHERE  {StudentMLWProcessCompetencies}.[STUDENTMLWID] =  {StudentMLWProcess}.[ID]  " +
				 "                AND  {StudentMLWProcessCompetencies}.[CURRENTLEVEL] >=  @qpinMLW_CloseLevel   " +
				 "            ) as StudentUnitMLW  " +
				 "            ,(  " +
				 "            CASE   " +
				 "                WHEN  {StudentMLWProcess}.[CURRENTSTAGEID] = @qpstMLWChargeStep1 OR  {StudentMLWProcess}.[CURRENTSTAGEID] IS NULL   " +
				 "                    THEN   " +
				 "                        (SELECT COUNT(*) FROM   {MLWCompetencies} WHERE  {MLWCompetencies}.[MLWSTAGEID] = @qpstMLWChargeStep1 )  " +
				 "                    ELSE   " +
				 "               CASE WHEN  {StudentMLWProcess}.[CURRENTSTAGEID] = @qpstMLWChargeStep2   " +
				 "                    THEN   " +
				 "                        (SELECT COUNT(*) FROM   {MLWCompetencies} WHERE  {MLWCompetencies}.[MLWSTAGEID] = @qpstMLWChargeStep2 or  {MLWCompetencies}.[MLWSTAGEID] = @qpstMLWChargeStep1 )  " +
				 "                    ELSE     " +
				 "                         (SELECT COUNT(*) FROM   {MLWCompetencies} WHERE  {MLWCompetencies}.[IS_ACTIVE] = 1)  " +
				 "                END  " +
				 "            END  " +
				 "        ) as  StudentUnitTotalMLW  " +
				 "                  " +
				 "                  " +
				 "            FROM  " +
				 "             {StudentMLWProcess}   " +
				 "            GROUP BY  {StudentMLWProcess}.[STUDENTID],  {StudentMLWProcess}.[ID],  {StudentMLWProcess}.[CURRENTSTAGEID]  " +
				 "    ) MLWUnit ON (MLWUnit.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE])  " +
				 "  " +
				 "LEFT JOIN   " +
				 "    (  " +
				 "        SELECT *,  " +
				 "                 " +
				 "                (Case when ([LASTWEEKATTENDANCE] < 90 AND [LASTWEEKATTENDANCE] >-1) OR ([OVERALLATTENDANCE] < 90 AND [OVERALLATTENDANCE] > -1) THEN 1 ELSE 0 END) AS RED_Attendance,  " +
				 "                (Case when [LASTWEEKATTENDANCE] between 90 AND 95 OR [OVERALLATTENDANCE] between 90 AND 95 THEN 1 ELSE 0 END) AS Amber_Attendance,  " +
				 "                (Case when [LASTWEEKATTENDANCE] > 95 OR [OVERALLATTENDANCE] > 95 THEN 1 ELSE 0 END) AS Green_Attendance,  " +
				 "                (Case when ([LASTWEEKPUNCTUALITY] < 90 AND [LASTWEEKPUNCTUALITY] > -1) OR ([OVERALLPUNCTUALITY] < 90 AND [OVERALLPUNCTUALITY] > -1) THEN 1 ELSE 0 END) AS RED_Ponctuality,  " +
				 "                (Case when [LASTWEEKPUNCTUALITY] between 90 AND 95 OR [OVERALLPUNCTUALITY] between 90 AND 95 THEN 1 ELSE 0 END) AS Amber_Ponctuality,  " +
				 "                (Case when [OVERALLPUNCTUALITY] > 95 OR [OVERALLPUNCTUALITY] > 95 THEN 1 ELSE 0 END) AS Green_Ponctuality,  " +
				 "  " +
				 "                [OVERALLATTENDANCE] * 10 + [LASTWEEKATTENDANCE] as ATTENDANCEAvg,  " +
				 "                [OVERALLPUNCTUALITY] * 10 + [LASTWEEKPUNCTUALITY] as PUNCTUALITYAvg  " +
				 "                  " +
				 "        FROM (  " +
				 "            SELECT    " +
				 "                 {StudentAttendance}.[STUDENTREFERENCE],  " +
				 "                (  " +
				 "                    CASE  " +
				 "                        WHEN  {StudentAttendance}.[STUDENTREFERENCE] IS NULL OR   {StudentAttendance}.[LASTWEEKPERCENTAGEATTENDANCE] = 0 THEN -1   " +
				 "                        ELSE 100 -  {StudentAttendance}.[LASTWEEKPERCENTAGELATE]  " +
				 "                    END  " +
				 "                ) [LASTWEEKPUNCTUALITY],  " +
				 "                (  " +
				 "                    CASE  " +
				 "                        WHEN  {StudentAttendance}.[STUDENTREFERENCE] IS NULL OR  {StudentAttendance}.[OVERALLPERCENTAGEATTENDANCE] = 0 THEN -1   " +
				 "                        ELSE 100- {StudentAttendance}.[OVERALLPERCENTAGELATE]  " +
				 "                    END  " +
				 "                ) [OVERALLPUNCTUALITY],  " +
				 "                (  " +
				 "                    CASE  " +
				 "                        WHEN   {StudentAttendance}.[STUDENTREFERENCE] IS NULL OR   {StudentAttendance}.[LASTWEEKPERCENTAGEATTENDANCE] = 0 THEN -1   " +
				 "                        ELSE  {StudentAttendance}.[LASTWEEKPERCENTAGEATTENDANCE]  " +
				 "                     END  " +
				 "                ) [LASTWEEKATTENDANCE],  " +
				 "                (  " +
				 "                    CASE   " +
				 "                        WHEN  {StudentAttendance}.[STUDENTREFERENCE] IS NULL OR  {StudentAttendance}.[OVERALLPERCENTAGEATTENDANCE] = 0 THEN -1   " +
				 "                        ELSE  {StudentAttendance}.[OVERALLPERCENTAGEATTENDANCE]  " +
				 "                END  " +
				 "                ) [OVERALLATTENDANCE]  " +
				 "              " +
				 "  " +
				 "       FROM  {StudentAttendance}   " +
				 "         " +
				 "        WHERE    {StudentAttendance}.[ACADEMICYEAR] = @qpstAcademicYearForAttendance  " +
				 "        AND  {StudentAttendance}.[OFFERINGCODE] = 'Overall'  " +
				 "  " +
				 "        ) C  " +
				 "    ) StudentAttendanceAgg ON (StudentAttendanceAgg.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE])  " +
				 "  " +
				 "LEFT JOIN  " +
				 "    (  " +
				 "        SELECT   " +
				 "             {CauseOfConcern}.[STUDENTREFERENCE],   " +
				 "            count( {CauseOfConcern}.[ID]) as CAUSEOFCONCERNNumber,  " +
				 "            (select RA.[ID] FROM  {RAGStatus} RA where RA.[ORDER] =  MIN( {RAGStatus}.[ORDER])) as CAUSEOFCONCERNRAG  " +
				 "        FROM  {CauseOfConcern}   " +
				 "        LEFT JOIN  {RAGStatus} ON  {RAGStatus}.[ID] =  {CauseOfConcern}.[RAGSTATUSID]   " +
				 "        WHERE   ( {CauseOfConcern}.[RAGSTATUSID] is null OR   {CauseOfConcern}.[RAGSTATUSID] in ('Amber','Red','Raised'))  " +
				 "        GROUP BY  {CauseOfConcern}.[STUDENTREFERENCE]  " +
				 "    ) CauseOfConcernAgg ON CauseOfConcernAgg.[STUDENTREFERENCE] =   {Student}.[STUDENTREFERENCE]  " +
				 "LEFT JOIN  {StaffStudentFavourite} ON  {Student}.[STUDENTREFERENCE] =  {StaffStudentFavourite}.[STUDENTREFERENCE] AND  {StaffStudentFavourite}.[USERID] = @qpinUserId   " +
				 "LEFT JOIN (  " +
				 "                     " +
				 "  " +
				 "                SELECT  {StudentCategoryRAG}.[ID], {StudentCategoryRAG}.[STUDENTREFERENCE], {StudentCategoryRAG}.[CATEGORYID], {StudentCategoryRAG}.[SHORTTERMRAGID], {StudentCategoryRAG}.[SHORTTERMDESCRIPTION], {StudentCategoryRAG}.[SHORTTERMUPDATEDBY], {StudentCategoryRAG}.[SHORTTERMUPDATEDAT], {StudentCategoryRAG}.[OVERALLRAGID], {StudentCategoryRAG}.[OVERALLDESCRIPTION], {StudentCategoryRAG}.[OVERALLUPDATEDBY], {StudentCategoryRAG}.[OVERALLUPDATEDAT], {StudentCategoryRAG}.[SHORTTERMRAGSTATUS] ,ShortTerm.[ORDER]  ShortTermOrder,   LongTerm.[ORDER]  LongTermOrder, ShortTermLastUpdatedBy.[NAME]  ShortTermLastUpdatedBy, OverallLastUpdatedBy.[NAME] OverallLastUpdatedBy  FROM  {StudentCategoryRAG}   " +
				 "                LEFT JOIN  {RAGStatus} ShortTerm ON ShortTerm.[ID] =   {StudentCategoryRAG}.[SHORTTERMRAGID]  " +
				 "                LEFT JOIN  {RAGStatus} LongTerm ON  LongTerm.[ID] =   {StudentCategoryRAG}.[OVERALLRAGID]  " +
				 "                LEFT JOIN  {User} ShortTermLastUpdatedBy ON ShortTermLastUpdatedBy.[ID] =  {StudentCategoryRAG}.[SHORTTERMUPDATEDBY]  " +
				 "                LEFT JOIN  {User} OverallLastUpdatedBy ON OverallLastUpdatedBy.[ID] =  {StudentCategoryRAG}.[OVERALLUPDATEDBY]  " +
				 "                WHERE  {StudentCategoryRAG}.[CATEGORYID] = @qpinEngCategoryId  " +
				 "            ) StudentCatEng ON StudentCatEng.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE]  " +
				 "LEFT JOIN (  " +
				 "                SELECT  {StudentCategoryRAG}.[ID], {StudentCategoryRAG}.[STUDENTREFERENCE], {StudentCategoryRAG}.[CATEGORYID], {StudentCategoryRAG}.[SHORTTERMRAGID], {StudentCategoryRAG}.[SHORTTERMDESCRIPTION], {StudentCategoryRAG}.[SHORTTERMUPDATEDBY], {StudentCategoryRAG}.[SHORTTERMUPDATEDAT], {StudentCategoryRAG}.[OVERALLRAGID], {StudentCategoryRAG}.[OVERALLDESCRIPTION], {StudentCategoryRAG}.[OVERALLUPDATEDBY], {StudentCategoryRAG}.[OVERALLUPDATEDAT], {StudentCategoryRAG}.[SHORTTERMRAGSTATUS],ShortTerm.[ORDER]  ShortTermOrder,   LongTerm.[ORDER]  LongTermOrder, ShortTermLastUpdatedBy.[NAME]  ShortTermLastUpdatedBy, OverallLastUpdatedBy.[NAME] OverallLastUpdatedBy    FROM  {StudentCategoryRAG}   " +
				 "                LEFT JOIN  {RAGStatus} ShortTerm ON ShortTerm.[ID] =   {StudentCategoryRAG}.[SHORTTERMRAGID]  " +
				 "                LEFT JOIN  {RAGStatus} LongTerm ON  LongTerm.[ID] =   {StudentCategoryRAG}.[OVERALLRAGID]  " +
				 "                LEFT JOIN  {User} ShortTermLastUpdatedBy ON ShortTermLastUpdatedBy.[ID] =  {StudentCategoryRAG}.[SHORTTERMUPDATEDBY]  " +
				 "                LEFT JOIN  {User} OverallLastUpdatedBy ON OverallLastUpdatedBy.[ID] =  {StudentCategoryRAG}.[OVERALLUPDATEDBY]  " +
				 "                WHERE  {StudentCategoryRAG}.[CATEGORYID] = @qpinVocCategoryId  " +
				 "            ) StudentCatVoc ON StudentCatVoc.[STUDENTREFERENCE]= {Student}.[STUDENTREFERENCE]  " +
				 "LEFT JOIN (  " +
				 "                SELECT  {StudentCategoryRAG}.[ID], {StudentCategoryRAG}.[STUDENTREFERENCE], {StudentCategoryRAG}.[CATEGORYID], {StudentCategoryRAG}.[SHORTTERMRAGID], {StudentCategoryRAG}.[SHORTTERMDESCRIPTION], {StudentCategoryRAG}.[SHORTTERMUPDATEDBY], {StudentCategoryRAG}.[SHORTTERMUPDATEDAT], {StudentCategoryRAG}.[OVERALLRAGID], {StudentCategoryRAG}.[OVERALLDESCRIPTION], {StudentCategoryRAG}.[OVERALLUPDATEDBY], {StudentCategoryRAG}.[OVERALLUPDATEDAT], {StudentCategoryRAG}.[SHORTTERMRAGSTATUS] ,ShortTerm.[ORDER]  ShortTermOrder,   LongTerm.[ORDER]  LongTermOrder, ShortTermLastUpdatedBy.[NAME]  ShortTermLastUpdatedBy, OverallLastUpdatedBy.[NAME] OverallLastUpdatedBy    FROM  {StudentCategoryRAG}   " +
				 "                LEFT JOIN  {RAGStatus} ShortTerm ON ShortTerm.[ID] =   {StudentCategoryRAG}.[SHORTTERMRAGID]  " +
				 "                LEFT JOIN  {RAGStatus} LongTerm ON  LongTerm.[ID] =   {StudentCategoryRAG}.[OVERALLRAGID]  " +
				 "                LEFT JOIN  {User} ShortTermLastUpdatedBy ON ShortTermLastUpdatedBy.[ID] =  {StudentCategoryRAG}.[SHORTTERMUPDATEDBY]  " +
				 "                LEFT JOIN  {User} OverallLastUpdatedBy ON OverallLastUpdatedBy.[ID] =  {StudentCategoryRAG}.[OVERALLUPDATEDBY]  " +
				 "                WHERE  {StudentCategoryRAG}.[CATEGORYID] = @qpinMathCategoryId  " +
				 "            ) StudentCatMath ON StudentCatMath.[STUDENTREFERENCE]= {Student}.[STUDENTREFERENCE]  " +
				 "LEFT JOIN (  " +
				 "                SELECT  {StudentCategoryRAG}.[ID], {StudentCategoryRAG}.[STUDENTREFERENCE], {StudentCategoryRAG}.[CATEGORYID], {StudentCategoryRAG}.[SHORTTERMRAGID], {StudentCategoryRAG}.[SHORTTERMDESCRIPTION], {StudentCategoryRAG}.[SHORTTERMUPDATEDBY], {StudentCategoryRAG}.[SHORTTERMUPDATEDAT], {StudentCategoryRAG}.[OVERALLRAGID], {StudentCategoryRAG}.[OVERALLDESCRIPTION], {StudentCategoryRAG}.[OVERALLUPDATEDBY], {StudentCategoryRAG}.[OVERALLUPDATEDAT], {StudentCategoryRAG}.[SHORTTERMRAGSTATUS] ,ShortTerm.[ORDER]  ShortTermOrder,   LongTerm.[ORDER]  LongTermOrder, ShortTermLastUpdatedBy.[NAME]  ShortTermLastUpdatedBy, OverallLastUpdatedBy.[NAME] OverallLastUpdatedBy    FROM  {StudentCategoryRAG}   " +
				 "                LEFT JOIN  {RAGStatus} ShortTerm ON ShortTerm.[ID] =   {StudentCategoryRAG}.[SHORTTERMRAGID]  " +
				 "                LEFT JOIN  {RAGStatus} LongTerm ON  LongTerm.[ID] =   {StudentCategoryRAG}.[OVERALLRAGID]  " +
				 "                LEFT JOIN  {User} ShortTermLastUpdatedBy ON ShortTermLastUpdatedBy.[ID] =  {StudentCategoryRAG}.[SHORTTERMUPDATEDBY]  " +
				 "                LEFT JOIN  {User} OverallLastUpdatedBy ON OverallLastUpdatedBy.[ID] =  {StudentCategoryRAG}.[OVERALLUPDATEDBY]  " +
				 "                WHERE  {StudentCategoryRAG}.[CATEGORYID] = @qpinMLWCategoryId  " +
				 "            ) StudentCatMLW ON StudentCatMLW.[STUDENTREFERENCE]= {Student}.[STUDENTREFERENCE]  " +
				 "LEFT JOIN (SELECT COUNT(*) as SGCount ,[STUDENTREFERENCE]   FROM  {Safeguarding} WHERE  {Safeguarding}.[SAFEGUARDINGSTATUSID] = @qpinSafeGuardingStatusOpen group by [STUDENTREFERENCE]  ) StudentSafeGuarding ON   {Student}.[STUDENTREFERENCE] = StudentSafeGuarding.[STUDENTREFERENCE]  " +
				 "LEFT JOIN (SELECT COUNT(*) as HasDisciplinary,[STUDENTREFERENCE] FROM  {Disciplinary} GROUP BY [STUDENTREFERENCE]) StudentDisciplinary ON  {Student}.[STUDENTREFERENCE] =  StudentDisciplinary.[STUDENTREFERENCE]  " +
				 "LEFT JOIN (SELECT COUNT(*) as IsSessionReview ,  {StudentLog}.[STUDENTREFERENCE] FROM  {StudentLog} WHERE  {StudentLog}.[SESSIONID] = @qpinSessionId GROUP BY [STUDENTREFERENCE]) StudentLogSessionReview ON  {Student}.[STUDENTREFERENCE] = StudentLogSessionReview.StudentReference  " +
				 "LEFT JOIN  {StudentExemption} ON  {Student}.[STUDENTREFERENCE] =  {StudentExemption}.[STUDENTID]  " +
				 "WHERE    " +
				 "    (  " +
				 "        @qpstGroupName  = '' OR EXISTS   " +
				 "            (   " +
				 "                SELECT  {Student_Group}.[ID] FROM  {Student_Group}  " +
				 "                INNER JOIN  {Group} ON   {Student_Group}.[GROUPID] =   {Group}.[ID]   " +
				 "                WHERE  {Group}.[GROUPNAME] = @qpstGroupName AND  {Student_Group}.[STUDENTREFERENCE]=  {Student}.[STUDENTREFERENCE]   " +
				 "            )   " +
				 "     )  " +
				 "AND   " +
				 "    (  " +
				 "        @qpstSearchKeyword = ''   " +
				 "        OR  {Student}.[FORENAMES] like '%' + @qpstSearchKeyword  + '%'    " +
				 "        OR  {Student}.[SURNAME] like '%' + @qpstSearchKeyword  + '%'   " +
				 "        OR (  " +
				 "                 {Student}.[FORENAMES] +' ' +  {Student}.[SURNAME]  " +
				 "            ) like '%' + @qpstSearchKeyword  + '%'    " +
				 "        OR  {Student}.[MAINOFFERINGCODE] like '%' + @qpstSearchKeyword  + '%'   " +
				 "        OR  {Student}.[MAINOFFERINGNAME] like '%' + @qpstSearchKeyword  + '%'   " +
				 "        OR  {Student}.[DATEOFBIRTH] = @qpdaBirthDate   " +
				 "    )  " +
				 "AND (@qpinSearchTypeId  IN ( 1, 2,3)  OR EXISTS ( SELECT  {Staff}.[ID] FROM  {Staff}   " +
				 "                                                    INNER JOIN  {Staff_Group} ON  {Staff}.[ID] =  {Staff_Group}.[STAFFID]   " +
				 "                                                    INNER JOIN  {Student_Group} ON  {Student_Group}.[GROUPID] =   {Staff_Group}.[GROUPID]  " +
				 "                                                WHERE  {Staff}.[ADNAME] LIKE @qpstADName AND  {Student_Group}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE]  " +
				 "                                                    AND  {Student_Group}.[ENROLMENTSTATUS] = 'Active'  " +
				 "                                    )  " +
				 "    )  " +
				 "AND (@qpinSearchTypeId  IN ( 0, 2,3) OR EXISTS (   " +
				 "                                            SELECT * FROM  {StaffStudentFavourite}   " +
				 "                                            WHERE  {StaffStudentFavourite}.[USERID] = @qpinUserId AND  {StaffStudentFavourite}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE]  " +
				 "                                        )  " +
				 "    )  " +
				 "AND (@qpinSearchTypeId IN (0,1,2) OR EXISTS (  " +
				 "                                                   SELECT * FROM  {Student} PLAStudents WHERE PLAStudents.StudentReference =  {Student}.[STUDENTREFERENCE] AND RTRIM( {Student}.[PERSONALTUTOR]) = @qpstADName)  " +
				 "                                        )  " +
				 " " +
				 "AND  {Student}.[STUDENTREFERENCE] <> ''  " +
				 "  " +
				 "AND (@qpboIsRAGStatusFilter = 0 OR  ( {StudentRAG}.[RAG] IN ( " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstRAGStatus_FilterIds) + " )  OR ( {StudentRAG}.[STUDENTREFERENCE] IS NULL AND 'Green' in (" + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstRAGStatus_FilterIds) + ") )  ) )   " +
				 "AND (@qpinFilter_AttRed     = 0 OR  (StudentAttendanceAgg.RED_Attendance   = 1  OR (@qpinFilter_AttAmber = 1 AND (StudentAttendanceAgg.Amber_Attendance = 1)) OR (@qpinFilter_AttGreen   = 1 AND  (StudentAttendanceAgg.Green_Attendance = 1))))  " +
				 "AND (@qpinFilter_AttAmber   = 0 OR  (StudentAttendanceAgg.Amber_Attendance = 1  OR (@qpinFilter_AttRed = 1 AND (StudentAttendanceAgg.RED_Attendance = 1)) OR (@qpinFilter_AttGreen   = 1 AND  (StudentAttendanceAgg.Green_Attendance = 1))))  " +
				 "AND (@qpinFilter_AttGreen   = 0 OR  (StudentAttendanceAgg.Green_Attendance = 1  OR (@qpinFilter_AttRed = 1 AND (StudentAttendanceAgg.RED_Attendance = 1)) OR (@qpinFilter_AttAmber   = 1 AND  (StudentAttendanceAgg.Amber_Attendance = 1))))  " +
				 "AND (@qpinFilter_PonctRed     = 0 OR  (StudentAttendanceAgg.RED_Ponctuality   = 1  OR (@qpinFilter_PonctAmber = 1 AND (StudentAttendanceAgg.Amber_Ponctuality = 1)) OR (@qpinFilter_PoncGreen   = 1 AND  (StudentAttendanceAgg.Green_Ponctuality = 1))))  " +
				 "AND (@qpinFilter_PonctAmber   = 0 OR  (StudentAttendanceAgg.Amber_Ponctuality = 1  OR (@qpinFilter_PonctRed = 1 AND (StudentAttendanceAgg.RED_Ponctuality = 1)) OR (@qpinFilter_PoncGreen   = 1 AND  (StudentAttendanceAgg.Green_Ponctuality = 1))))  " +
				 "AND (@qpinFilter_PoncGreen    = 0 OR  (StudentAttendanceAgg.Green_Ponctuality = 1  OR (@qpinFilter_PonctRed = 1 AND (StudentAttendanceAgg.RED_Ponctuality = 1)) OR (@qpinFilter_PonctAmber   = 1 AND  (StudentAttendanceAgg.Amber_Ponctuality = 1))))  " +
				 "  " +
				 " " +
				 "AND (@qpboFilter_Reward = 0 OR Exists ( (SELECT  {Reward}.[ID] FROM  {Reward} WHERE  {Reward}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE] AND  {Reward}.[CREATEDAT]>=@qpdaAcademicYearStartDate) ) )  " +
				 " " +
				 "AND (@qpboFilter_CFC  = 0 OR  CauseOfConcernAgg.[STUDENTREFERENCE] IS NOT NULL )  " +
				 " " +
				 "AND (@qpboFilter_SafeGuard   = 0 OR  Exists ( SELECT  {Safeguarding}.[STUDENTREFERENCE] FROM  {Safeguarding} WHERE  {Safeguarding}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE] AND  {Safeguarding}.[SAFEGUARDINGSTATUSID] = @qpinSafeGuardingStatusOpen and  {Safeguarding}.[SAFEGUARDINGTYPEID] is not null) )  " +
				 "  " +
				 " " +
				 "AND (@qpboVOCFilter = 0 OR (ISNULL(StudentCatVoc.[OVERALLRAGID], 'GREEN') IN (" + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstVOC_Green) + "," + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstVOC_Amber) + "," + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstVOC_Red) + ")))  " +
				 " " +
				 "AND (@qpboMathFilter = 0 OR (ISNULL(StudentCatMath.[OVERALLRAGID], 'GREEN') IN ( " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstMath_Green) + " , " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstMath_Amber) + " , " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstMath_Red) + " )))  " +
				 " " +
				 "AND (@qpboEnglishFilter = 0 OR (ISNULL(StudentCatEng.[OVERALLRAGID], 'GREEN') IN ( " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstEnglish_Green) + " , " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstEnglish_Amber) + " , " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstEnglish_Red) + " )))  " +
				 " " +
				 "AND (@qpboMLWFilter = 0 OR (ISNULL(StudentCatMLW.[OVERALLRAGID], 'GREEN') IN ( " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstMLW_Green) + " , " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstMLW_Amber) + " , " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstMLW_Red) + " )))  " +
				 "  " +
				 "  " +
				 "AND ( @qpboSupportFilter  = '0' OR EXISTS ( SELECT  {Support}.[ID] FROM  {Support} INNER JOIN  {SupportType} ON  {Support}.[SUPPORTTYPEID] =  {SupportType}.[ID] WHERE  {SupportType}.[CATEGORY] IN ( " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstSupportCategory) + " ) AND  {Support}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE]) )  " +
				 "  " +
				 "AND (@qpinShowRevised = -1 OR ((ISNULL(StudentLogSessionReview.IsSessionReview,0) > 0 AND @qpinShowRevised =1)) OR ((@qpinShowRevised =0 AND ISNULL(StudentLogSessionReview.IsSessionReview,0) = 0)))  " +
				 "order by   " +
				 "     {Student}.[HASCURRENTACTIVEENROLMENT] DESC,  " +
				 "      " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstOrderBy) + "   " +
				 "      " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstOrderByDirection) + "  ,  {Student}.[SURNAME] +  {Student}.[FORENAMES] ASC";
				string sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				AppUtils.Instance.CheckReadOnlyEntityReferences(advSql);
				sqlCmd.CommandText = sql;
				try {
					RLStaffViewRecordRecordList outParamList = new RLStaffViewRecordRecordList();
					outParamList.Transaction = trans;
					BitArray[] opt = new BitArray[1];
					opt[0] = new BitArray(new bool[] {
						false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
					}
					);
					outParamList.AllOptimizedAttributes = opt;
					if (multiplicity == IterationMultiplicity.Multiple) {
						RLStaffViewRecordRecordList _tmp = new RLStaffViewRecordRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						_tmp.MaxRecords = maxRecords;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.StaffView.Preparation.GetMyStudents.List");
							outParamList = (RLStaffViewRecordRecordList) _tmp.Duplicate();
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else if (multiplicity == IterationMultiplicity.Never) {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.Preparation.GetMyStudents.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							outParamList.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.StaffView.Preparation.GetMyStudents.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				} catch (System.InvalidOperationException aqExcep) {
					if (aqExcep.Message.StartsWith("Command parameter[")) {
						throw new DataBaseException("Problems accessing parameters in advanced query GetMyStudents in Preparation in StaffView in StaffView in CaseConferencing (SELECT TOP (@MaxRecords)          {Student}.[StudentReference],         {Student}.[Forenames],         {Student}.[Surname],         {Student}.[MainOfferingName],         {Student}.[StudentPhotoURL],         {StudentAnnualValues}.[Disability],         {StudentAnnualValues}.[LearningDifficulty],         {StaffStudentFavourite}.[Id],         {StudentRAG}.[RAG],         {StudentRAG}.[UpdatedAt],         {StudentRAG}.[UpdatedBy],         IsNULL(StudentAttendanceAgg.[LASTWEEKPUNCTUALITY],-1),         IsNULL(StudentAttendanceAgg.[OVERALLPUNCTUALITY],-1),         IsNULL(StudentAttendanceAgg.[LASTWEEKATTENDANCE],-1),         IsNULL(StudentAttendanceAgg.[OVERALLATTENDANCE],-1),         CauseOfConcernAgg.[CAUSEOFCONCERNRAG],         CauseOfConcernAgg.[CAUSEOFCONCERNNUMBER],          (          select Convert(nvarchar(10),{SafeguardingIssue}.[Id]) + ';' as 'data()'               FROM {SafeguardingIssue} where {SafeguardingIssue}.[StudentReference] = {Student}.[StudentReference]           for xml p ...): " + aqExcep.Message);
					}
					throw new DataBaseException("Error in advanced query GetMyStudents in Preparation in StaffView in StaffView in CaseConferencing (SELECT TOP (@MaxRecords)          {Student}.[StudentReference],         {Student}.[Forenames],         {Student}.[Surname],         {Student}.[MainOfferingName],         {Student}.[StudentPhotoURL],         {StudentAnnualValues}.[Disability],         {StudentAnnualValues}.[LearningDifficulty],         {StaffStudentFavourite}.[Id],         {StudentRAG}.[RAG],         {StudentRAG}.[UpdatedAt],         {StudentRAG}.[UpdatedBy],         IsNULL(StudentAttendanceAgg.[LASTWEEKPUNCTUALITY],-1),         IsNULL(StudentAttendanceAgg.[OVERALLPUNCTUALITY],-1),         IsNULL(StudentAttendanceAgg.[LASTWEEKATTENDANCE],-1),         IsNULL(StudentAttendanceAgg.[OVERALLATTENDANCE],-1),         CauseOfConcernAgg.[CAUSEOFCONCERNRAG],         CauseOfConcernAgg.[CAUSEOFCONCERNNUMBER],          (          select Convert(nvarchar(10),{SafeguardingIssue}.[Id]) + ';' as 'data()'               FROM {SafeguardingIssue} where {SafeguardingIssue}.[StudentReference] = {Student}.[StudentReference]           for xml p ...): " + aqExcep.Message);
				} catch (Exception aqExcep) {
					throw new DataBaseException("Error in advanced query GetMyStudents in Preparation in StaffView in StaffView in CaseConferencing (SELECT TOP (@MaxRecords)          {Student}.[StudentReference],         {Student}.[Forenames],         {Student}.[Surname],         {Student}.[MainOfferingName],         {Student}.[StudentPhotoURL],         {StudentAnnualValues}.[Disability],         {StudentAnnualValues}.[LearningDifficulty],         {StaffStudentFavourite}.[Id],         {StudentRAG}.[RAG],         {StudentRAG}.[UpdatedAt],         {StudentRAG}.[UpdatedBy],         IsNULL(StudentAttendanceAgg.[LASTWEEKPUNCTUALITY],-1),         IsNULL(StudentAttendanceAgg.[OVERALLPUNCTUALITY],-1),         IsNULL(StudentAttendanceAgg.[LASTWEEKATTENDANCE],-1),         IsNULL(StudentAttendanceAgg.[OVERALLATTENDANCE],-1),         CauseOfConcernAgg.[CAUSEOFCONCERNRAG],         CauseOfConcernAgg.[CAUSEOFCONCERNNUMBER],          (          select Convert(nvarchar(10),{SafeguardingIssue}.[Id]) + ';' as 'data()'               FROM {SafeguardingIssue} where {SafeguardingIssue}.[StudentReference] = {Student}.[StudentReference]           for xml p ...): " + aqExcep.Message);
				}
			}
		}



		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}


		public LocalState PushStack() {
			return null;
		}

		public void doRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				Preparation(heContext);

				Title = "StaffView"; ssActiveEnrolmentsListListDoDataBind = true;
				ssWithdrawnEnrolmentsListListDoDataBind = true;
				ssCompletedEnrolmentsListListDoDataBind = true;
				ssTransferredEnrolmentsListListDoDataBind = true;
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "StaffView", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// Perform the partial databind
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "StaffView", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Ajax", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}



		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();
			ViewStateAttributes.SetInViewState("resSplitDomainAndUser_outParamUsername", resSplitDomainAndUser_outParamUsername, "");

			#region store queryResGetCCSessionById_outParamList.

			int tmpcurrentrownumberqueryResGetCCSessionById_outParamList = queryResGetCCSessionById_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetCCSessionById_outParamList = queryResGetCCSessionById_outParamList.Eof;
			ArrayList storequeryResGetCCSessionById_outParamList = new ArrayList();

			// Write the needed fields of queryResGetCCSessionById_outParamList to the storequeryResGetCCSessionById_outParamList
			if (!queryResGetCCSessionById_outParamList.Empty) {
				try {
					queryResGetCCSessionById_outParamList.StartIteration();

					while (!queryResGetCCSessionById_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetCCSessionById_outParamList = new ArrayList();
						tmpFieldsqueryResGetCCSessionById_outParamList.Add(queryResGetCCSessionById_outParamList.CurrentRec.ssENCluster.ssClusterDescription == "" ?(object) null: queryResGetCCSessionById_outParamList.CurrentRec.ssENCluster.ssClusterDescription);
						tmpFieldsqueryResGetCCSessionById_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCCSessionById_outParamList.CurrentRec.ssENCluster.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetCCSessionById_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCCSessionById_outParamList.CurrentRec.ssENCluster.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, true, true
						}
						))));
						tmpFieldsqueryResGetCCSessionById_outParamList.Add(queryResGetCCSessionById_outParamList.CurrentRec.ssENCCSession.ssDescription == "" ?(object) null: queryResGetCCSessionById_outParamList.CurrentRec.ssENCCSession.ssDescription);
						tmpFieldsqueryResGetCCSessionById_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCCSessionById_outParamList.CurrentRec.ssENCCSession.ChangedAttributes, new BitArray(new bool[] {
							false, true, false, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetCCSessionById_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCCSessionById_outParamList.CurrentRec.ssENCCSession.OptimizedAttributes, new BitArray(new bool[] {
							true, false, true, true, true, true, true, true
						}
						))));
						storequeryResGetCCSessionById_outParamList.Add(tmpFieldsqueryResGetCCSessionById_outParamList);
						queryResGetCCSessionById_outParamList.Advance();
					}
				} finally {
					queryResGetCCSessionById_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetCCSessionById_outParamList", storequeryResGetCCSessionById_outParamList, null);

			#endregion


			#region store queryResGetCCSessionById_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetCCSessionById_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetCCSessionById_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetCCSessionById_outParamList_eof", tmpeofqueryResGetCCSessionById_outParamList, false);
			queryResGetCCSessionById_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCCSessionById_outParamList, tmpeofqueryResGetCCSessionById_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_ssYY_YY", resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssYY_YY, "");
			ViewStateAttributes.SetInViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_ssDD_MMMM_YYYY", resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssDD_MMMM_YYYY, "");
			ViewStateAttributes.SetInViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_ssYYYY_Academic", resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssYYYY_Academic, "");
			ViewStateAttributes.SetInViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ChangedAttributes, new BitArray(new bool[] {
				false, false, false, false, false, true, false, true, true, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.OptimizedAttributes, new BitArray(new bool[] {
				true, true, true, true, true, false, true, false, false, true, true
			}
			)))), null);
			ViewStateAttributes.SetInViewState("inParamCourseCode", inParamCourseCode, "");
			ViewStateAttributes.SetInViewState("inParamSessionID", inParamSessionID, 0);
			ViewStateAttributes.SetInViewState("varLctop", varLctop, 0.0M);
			ViewStateAttributes.SetInViewState("varLcleft", varLcleft, 0.0M);
			ViewStateAttributes.SetInViewState("varLcshow", varLcshow, false);
			ViewStateAttributes.SetInViewState("varLccurrentrow_popup", varLccurrentrow_popup, 0);
			ViewStateAttributes.SetInViewState("varLccurrentcategoryid", varLccurrentcategoryid, 0);
			ViewStateAttributes.SetInViewState("varLctooltip", varLctooltip, "");
			ViewStateAttributes.SetInViewState("varLcEnrolmentsSplit", varLcEnrolmentsSplit, false);

			#region store varLcBlankStaffViewRecordList.

			int tmpcurrentrownumbervarLcBlankStaffViewRecordList = varLcBlankStaffViewRecordList.CurrentRowNumber;
			bool tmpeofvarLcBlankStaffViewRecordList = varLcBlankStaffViewRecordList.Eof;
			ArrayList storevarLcBlankStaffViewRecordList = new ArrayList();

			// Write the needed fields of varLcBlankStaffViewRecordList to the storevarLcBlankStaffViewRecordList
			if (!varLcBlankStaffViewRecordList.Empty) {
				try {
					varLcBlankStaffViewRecordList.StartIteration();

					while (!varLcBlankStaffViewRecordList.Eof) {
						ArrayList tmpFieldsvarLcBlankStaffViewRecordList = new ArrayList();
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentReference == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentReference);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssForenames == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssForenames);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssSurname == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssSurname);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMainOfferingName == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMainOfferingName);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentPhotoURL == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentPhotoURL);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssDisability == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssDisability);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssLearningDifficulty == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssLearningDifficulty);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStaffStudentFavouriteId == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStaffStudentFavouriteId);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentRAG == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentRAG);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentRAGUpdateAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentRAGUpdateAt);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentRAGUUpdatedBy == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentRAGUUpdatedBy);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssLastWeekPunctuality == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssLastWeekPunctuality);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssOverallPunctuality == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssOverallPunctuality);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssLastWeekAttendance == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssLastWeekAttendance);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssOverallAttendance == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssOverallAttendance);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernRAG);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernNumber == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssCauseOfConcernNumber);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssSafeguardIdList == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssSafeguardIdList);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssSupportIdList == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssSupportIdList);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssRewardsGoldNumber == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssRewardsGoldNumber);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssRewardsGreenNumber == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssRewardsGreenNumber);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssVocPeriodRAG == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssVocPeriodRAG);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssVocOverallRAG == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssVocOverallRAG);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssVocCompletedUnits == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssVocCompletedUnits);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssVocRegisteredUnits == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssVocRegisteredUnits);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMathPeriodRAG == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMathPeriodRAG);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMathOverallRAG == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMathOverallRAG);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMathCompletedUnits == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMathCompletedUnits);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMathRegisteredUnits == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMathRegisteredUnits);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssEngPeriodRAG == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssEngPeriodRAG);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssEngOverallRAG == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssEngOverallRAG);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssEngCompletedUnits == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssEngCompletedUnits);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssEngRegisteredUnits == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssEngRegisteredUnits);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMLWPeriodRAG == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMLWPeriodRAG);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMLWOverallRAG == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMLWOverallRAG);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMLWCompletedUnits == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMLWCompletedUnits);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMLWRegisteredUnits == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssMLWRegisteredUnits);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssRewardType == false?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssRewardType);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssDescriptionType == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssDescriptionType);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssDisciplinaryTypeNumber == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssDisciplinaryTypeNumber);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssDisciplinaryType == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssDisciplinaryType);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssFinancial == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssFinancial);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssTransport == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssTransport);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssAcademic == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssAcademic);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssPersonal == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssPersonal);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatVocShortTermLastUpdatedBy == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatVocShortTermLastUpdatedBy);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatVocShortTermUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatVocShortTermUpdatedAt);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatVocOverallLastUpdatedBy == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatVocOverallLastUpdatedBy);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatVocOverallUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatVocOverallUpdatedAt);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMathShortTermLastUpdatedBy == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMathShortTermLastUpdatedBy);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMathShortTermUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMathShortTermUpdatedAt);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMathOverallLastUpdatedBy == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMathOverallLastUpdatedBy);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMathOverallUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMathOverallUpdatedAt);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatEngShortTermLastUpdatedBy == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatEngShortTermLastUpdatedBy);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatEngShortTermUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatEngShortTermUpdatedAt);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatEngOverallLastUpdatedBy == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatEngOverallLastUpdatedBy);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatEngOverallUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatEngOverallUpdatedAt);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWShortTermLastUpdatedBy == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWShortTermLastUpdatedBy);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWShortTermUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWShortTermUpdatedAt);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWOverallLastUpdatedBy == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWOverallLastUpdatedBy);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWOverallUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssStudentCatMLWOverallUpdatedAt);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssEnrolmentStatus == "" ?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssEnrolmentStatus);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssNotesNr == 0?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssNotesNr);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssIsSessionReviewed == false?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssIsSessionReviewed);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssIsMathExempt == false?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssIsMathExempt);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssIsEnglishExempt == false?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssIsEnglishExempt);
						tmpFieldsvarLcBlankStaffViewRecordList.Add(varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment == false?(object) null: varLcBlankStaffViewRecordList.CurrentRec.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment);
						storevarLcBlankStaffViewRecordList.Add(tmpFieldsvarLcBlankStaffViewRecordList);
						varLcBlankStaffViewRecordList.Advance();
					}
				} finally {
					varLcBlankStaffViewRecordList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("varLcBlankStaffViewRecordList", storevarLcBlankStaffViewRecordList, null);

			#endregion


			#region store varLcBlankStaffViewRecordList runtime properties state.

			ViewStateAttributes.SetInViewState("varLcBlankStaffViewRecordList_currentrownumber", tmpcurrentrownumbervarLcBlankStaffViewRecordList, 0);
			ViewStateAttributes.SetInViewState("varLcBlankStaffViewRecordList_eof", tmpeofvarLcBlankStaffViewRecordList, false);
			varLcBlankStaffViewRecordList.RestoreRecordListState(tmpcurrentrownumbervarLcBlankStaffViewRecordList, tmpeofvarLcBlankStaffViewRecordList);

			#endregion

			ViewStateAttributes.SetInViewState("wt_ComboBox490_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wt_ComboBox490")).Mandatory, false);
			if (IsAjaxRequest) {
				recListActiveEnrolmentsList_Rebuild((ssActiveEnrolmentsListListDataBound ? wtActiveEnrolmentsList.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtActiveEnrolmentsList.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtActiveEnrolmentsList_list", wtActiveEnrolmentsList_storage, null);
			if (IsAjaxRequest) {
				recListWithdrawnEnrolmentsList_Rebuild((ssWithdrawnEnrolmentsListListDataBound ? wtWithdrawnEnrolmentsList.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtWithdrawnEnrolmentsList.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtWithdrawnEnrolmentsList_list_empty", getWtWithdrawnEnrolmentsListList().Empty, null);
			ViewStateAttributes.SetInViewState("wtWithdrawnEnrolmentsList_list_length", Math.Min(getWtWithdrawnEnrolmentsListList().Length, wtWithdrawnEnrolmentsList.LineCount), null);
			if (IsAjaxRequest) {
				recListCompletedEnrolmentsList_Rebuild((ssCompletedEnrolmentsListListDataBound ? wtCompletedEnrolmentsList.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtCompletedEnrolmentsList.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtCompletedEnrolmentsList_list_empty", getWtCompletedEnrolmentsListList().Empty, null);
			ViewStateAttributes.SetInViewState("wtCompletedEnrolmentsList_list_length", Math.Min(getWtCompletedEnrolmentsListList().Length, wtCompletedEnrolmentsList.LineCount), null);
			if (IsAjaxRequest) {
				recListTransferredEnrolmentsList_Rebuild((ssTransferredEnrolmentsListListDataBound ? wtTransferredEnrolmentsList.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtTransferredEnrolmentsList.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtTransferredEnrolmentsList_list_empty", getWtTransferredEnrolmentsListList().Empty, null);
			ViewStateAttributes.SetInViewState("wtTransferredEnrolmentsList_list_length", Math.Min(getWtTransferredEnrolmentsListList().Length, wtTransferredEnrolmentsList.LineCount), null);
			ViewStateAttributes.SetInViewState("wtileft_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtileft")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtitop_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtitop")).Mandatory, false);
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			try {
				resSplitDomainAndUser_outParamUsername = (string) ViewStateAttributes.GetFromViewState("resSplitDomainAndUser_outParamUsername", "");

				#region fetch queryResGetCCSessionById_outParamList.

				// Read the needed fields of queryResGetCCSessionById_outParamList from storequeryResGetCCSessionById_outParamList
				queryResGetCCSessionById_outParamList = new RLClusterCCSessionRecordList();
				ArrayList storequeryResGetCCSessionById_outParamList;
				storequeryResGetCCSessionById_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetCCSessionById_outParamList", null);
				if (storequeryResGetCCSessionById_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetCCSessionById_outParamList in storequeryResGetCCSessionById_outParamList) {
						if (tmpFieldsqueryResGetCCSessionById_outParamList != null) {
							// Aux current record variable
							RCClusterCCSessionRecord tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList = new RCClusterCCSessionRecord(null);
							tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList.ssENCluster.ssClusterDescription = (string) (tmpFieldsqueryResGetCCSessionById_outParamList[0] == null ? "": tmpFieldsqueryResGetCCSessionById_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList.ssENCluster.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCCSessionById_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList.ssENCluster.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCCSessionById_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList.ssENCCSession.ssDescription = (string) (tmpFieldsqueryResGetCCSessionById_outParamList[3] == null ? "": tmpFieldsqueryResGetCCSessionById_outParamList[3]);

							tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList.ssENCCSession.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCCSessionById_outParamList[4]);

							tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList.ssENCCSession.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCCSessionById_outParamList[5]);

							queryResGetCCSessionById_outParamList.Append(tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList);
						}
					}
				}
				queryResGetCCSessionById_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetCCSessionById_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetCCSessionById_outParamList;
				tmpcurrentrownumberqueryResGetCCSessionById_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetCCSessionById_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetCCSessionById_outParamList;
				tmpeofqueryResGetCCSessionById_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetCCSessionById_outParamList_eof", false);
				queryResGetCCSessionById_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCCSessionById_outParamList, tmpeofqueryResGetCCSessionById_outParamList);

				#endregion

				resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssYY_YY = (string) ViewStateAttributes.GetFromViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_ssYY_YY", "");
				resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssDD_MMMM_YYYY = (string) ViewStateAttributes.GetFromViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_ssDD_MMMM_YYYY", "");
				resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssYYYY_Academic = (string) ViewStateAttributes.GetFromViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_ssYYYY_Academic", "");
				resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_ChangedAttributes", null));
				resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("resGetAcademicYearValues2_outParamAcademicYear_ssENAcademicYear2_OptimizedAttributes", null));
				inParamCourseCode = (string) ViewStateAttributes.GetFromViewState("inParamCourseCode", "");
				inParamSessionID = (int) ViewStateAttributes.GetFromViewState("inParamSessionID", 0);
				varLctop = (decimal) ViewStateAttributes.GetFromViewState("varLctop", 0.0M);
				varLcleft = (decimal) ViewStateAttributes.GetFromViewState("varLcleft", 0.0M);
				varLcshow = (bool) ViewStateAttributes.GetFromViewState("varLcshow", false);
				varLccurrentrow_popup = (int) ViewStateAttributes.GetFromViewState("varLccurrentrow_popup", 0);
				varLccurrentcategoryid = (int) ViewStateAttributes.GetFromViewState("varLccurrentcategoryid", 0);
				varLctooltip = (string) ViewStateAttributes.GetFromViewState("varLctooltip", "");
				varLcEnrolmentsSplit = (bool) ViewStateAttributes.GetFromViewState("varLcEnrolmentsSplit", false);

				#region fetch varLcBlankStaffViewRecordList.

				// Read the needed fields of varLcBlankStaffViewRecordList from storevarLcBlankStaffViewRecordList
				varLcBlankStaffViewRecordList = new RLStaffViewRecordRecordList();
				ArrayList storevarLcBlankStaffViewRecordList;
				storevarLcBlankStaffViewRecordList = (ArrayList) ViewStateAttributes.GetFromViewState("varLcBlankStaffViewRecordList", null);
				if (storevarLcBlankStaffViewRecordList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsvarLcBlankStaffViewRecordList in storevarLcBlankStaffViewRecordList) {
						if (tmpFieldsvarLcBlankStaffViewRecordList != null) {
							// Aux current record variable
							RCStaffViewRecordRecord tmpAuxCurrentRecordvarLcBlankStaffViewRecordList = new RCStaffViewRecordRecord(null);
							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentReference = (string) (tmpFieldsvarLcBlankStaffViewRecordList[0] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[0]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssForenames = (string) (tmpFieldsvarLcBlankStaffViewRecordList[1] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[1]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssSurname = (string) (tmpFieldsvarLcBlankStaffViewRecordList[2] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[2]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssMainOfferingName = (string) (tmpFieldsvarLcBlankStaffViewRecordList[3] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[3]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentPhotoURL = (string) (tmpFieldsvarLcBlankStaffViewRecordList[4] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[4]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssDisability = (string) (tmpFieldsvarLcBlankStaffViewRecordList[5] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[5]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssLearningDifficulty = (string) (tmpFieldsvarLcBlankStaffViewRecordList[6] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[6]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStaffStudentFavouriteId = (int) (tmpFieldsvarLcBlankStaffViewRecordList[7] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[7]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentRAG = (string) (tmpFieldsvarLcBlankStaffViewRecordList[8] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[8]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentRAGUpdateAt = (DateTime) (tmpFieldsvarLcBlankStaffViewRecordList[9] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcBlankStaffViewRecordList[9]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentRAGUUpdatedBy = (int) (tmpFieldsvarLcBlankStaffViewRecordList[10] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[10]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssLastWeekPunctuality = (int) (tmpFieldsvarLcBlankStaffViewRecordList[11] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[11]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssOverallPunctuality = (int) (tmpFieldsvarLcBlankStaffViewRecordList[12] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[12]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssLastWeekAttendance = (int) (tmpFieldsvarLcBlankStaffViewRecordList[13] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[13]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssOverallAttendance = (int) (tmpFieldsvarLcBlankStaffViewRecordList[14] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[14]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssCauseOfConcernRAG = (string) (tmpFieldsvarLcBlankStaffViewRecordList[15] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[15]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssCauseOfConcernNumber = (int) (tmpFieldsvarLcBlankStaffViewRecordList[16] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[16]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssSafeguardIdList = (string) (tmpFieldsvarLcBlankStaffViewRecordList[17] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[17]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssSupportIdList = (string) (tmpFieldsvarLcBlankStaffViewRecordList[18] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[18]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssRewardsGoldNumber = (int) (tmpFieldsvarLcBlankStaffViewRecordList[19] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[19]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssRewardsGreenNumber = (int) (tmpFieldsvarLcBlankStaffViewRecordList[20] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[20]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssVocPeriodRAG = (string) (tmpFieldsvarLcBlankStaffViewRecordList[21] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[21]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssVocOverallRAG = (string) (tmpFieldsvarLcBlankStaffViewRecordList[22] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[22]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssVocCompletedUnits = (int) (tmpFieldsvarLcBlankStaffViewRecordList[23] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[23]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssVocRegisteredUnits = (int) (tmpFieldsvarLcBlankStaffViewRecordList[24] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[24]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssMathPeriodRAG = (string) (tmpFieldsvarLcBlankStaffViewRecordList[25] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[25]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssMathOverallRAG = (string) (tmpFieldsvarLcBlankStaffViewRecordList[26] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[26]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssMathCompletedUnits = (int) (tmpFieldsvarLcBlankStaffViewRecordList[27] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[27]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssMathRegisteredUnits = (int) (tmpFieldsvarLcBlankStaffViewRecordList[28] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[28]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssEngPeriodRAG = (string) (tmpFieldsvarLcBlankStaffViewRecordList[29] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[29]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssEngOverallRAG = (string) (tmpFieldsvarLcBlankStaffViewRecordList[30] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[30]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssEngCompletedUnits = (int) (tmpFieldsvarLcBlankStaffViewRecordList[31] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[31]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssEngRegisteredUnits = (int) (tmpFieldsvarLcBlankStaffViewRecordList[32] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[32]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssMLWPeriodRAG = (string) (tmpFieldsvarLcBlankStaffViewRecordList[33] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[33]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssMLWOverallRAG = (string) (tmpFieldsvarLcBlankStaffViewRecordList[34] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[34]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssMLWCompletedUnits = (int) (tmpFieldsvarLcBlankStaffViewRecordList[35] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[35]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssMLWRegisteredUnits = (int) (tmpFieldsvarLcBlankStaffViewRecordList[36] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[36]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssRewardType = (bool) (tmpFieldsvarLcBlankStaffViewRecordList[37] == null ? false: tmpFieldsvarLcBlankStaffViewRecordList[37]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssDescriptionType = (string) (tmpFieldsvarLcBlankStaffViewRecordList[38] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[38]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssDisciplinaryTypeNumber = (int) (tmpFieldsvarLcBlankStaffViewRecordList[39] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[39]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssDisciplinaryType = (string) (tmpFieldsvarLcBlankStaffViewRecordList[40] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[40]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssFinancial = (string) (tmpFieldsvarLcBlankStaffViewRecordList[41] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[41]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssTransport = (string) (tmpFieldsvarLcBlankStaffViewRecordList[42] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[42]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssAcademic = (string) (tmpFieldsvarLcBlankStaffViewRecordList[43] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[43]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssPersonal = (string) (tmpFieldsvarLcBlankStaffViewRecordList[44] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[44]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatVocShortTermLastUpdatedBy = (string) (tmpFieldsvarLcBlankStaffViewRecordList[45] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[45]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatVocShortTermUpdatedAt = (DateTime) (tmpFieldsvarLcBlankStaffViewRecordList[46] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcBlankStaffViewRecordList[46]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatVocOverallLastUpdatedBy = (string) (tmpFieldsvarLcBlankStaffViewRecordList[47] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[47]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatVocOverallUpdatedAt = (DateTime) (tmpFieldsvarLcBlankStaffViewRecordList[48] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcBlankStaffViewRecordList[48]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatMathShortTermLastUpdatedBy = (string) (tmpFieldsvarLcBlankStaffViewRecordList[49] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[49]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatMathShortTermUpdatedAt = (DateTime) (tmpFieldsvarLcBlankStaffViewRecordList[50] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcBlankStaffViewRecordList[50]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatMathOverallLastUpdatedBy = (string) (tmpFieldsvarLcBlankStaffViewRecordList[51] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[51]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatMathOverallUpdatedAt = (DateTime) (tmpFieldsvarLcBlankStaffViewRecordList[52] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcBlankStaffViewRecordList[52]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatEngShortTermLastUpdatedBy = (string) (tmpFieldsvarLcBlankStaffViewRecordList[53] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[53]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatEngShortTermUpdatedAt = (DateTime) (tmpFieldsvarLcBlankStaffViewRecordList[54] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcBlankStaffViewRecordList[54]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatEngOverallLastUpdatedBy = (string) (tmpFieldsvarLcBlankStaffViewRecordList[55] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[55]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatEngOverallUpdatedAt = (DateTime) (tmpFieldsvarLcBlankStaffViewRecordList[56] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcBlankStaffViewRecordList[56]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatMLWShortTermLastUpdatedBy = (string) (tmpFieldsvarLcBlankStaffViewRecordList[57] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[57]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatMLWShortTermUpdatedAt = (DateTime) (tmpFieldsvarLcBlankStaffViewRecordList[58] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcBlankStaffViewRecordList[58]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatMLWOverallLastUpdatedBy = (string) (tmpFieldsvarLcBlankStaffViewRecordList[59] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[59]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssStudentCatMLWOverallUpdatedAt = (DateTime) (tmpFieldsvarLcBlankStaffViewRecordList[60] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcBlankStaffViewRecordList[60]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssEnrolmentStatus = (string) (tmpFieldsvarLcBlankStaffViewRecordList[61] == null ? "": tmpFieldsvarLcBlankStaffViewRecordList[61]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssNotesNr = (int) (tmpFieldsvarLcBlankStaffViewRecordList[62] == null ? 0: tmpFieldsvarLcBlankStaffViewRecordList[62]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssIsSessionReviewed = (bool) (tmpFieldsvarLcBlankStaffViewRecordList[63] == null ? false: tmpFieldsvarLcBlankStaffViewRecordList[63]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssIsMathExempt = (bool) (tmpFieldsvarLcBlankStaffViewRecordList[64] == null ? false: tmpFieldsvarLcBlankStaffViewRecordList[64]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssIsEnglishExempt = (bool) (tmpFieldsvarLcBlankStaffViewRecordList[65] == null ? false: tmpFieldsvarLcBlankStaffViewRecordList[65]);

							tmpAuxCurrentRecordvarLcBlankStaffViewRecordList.ssSTStaffViewRecord.ssHasCurrentActiveEnrolment = (bool) (tmpFieldsvarLcBlankStaffViewRecordList[66] == null ? false: tmpFieldsvarLcBlankStaffViewRecordList[66]);

							varLcBlankStaffViewRecordList.Append(tmpAuxCurrentRecordvarLcBlankStaffViewRecordList);
						}
					}
				}
				varLcBlankStaffViewRecordList.CurrentRowNumber = -1;
				#endregion


				#region fetch varLcBlankStaffViewRecordList runtime properties state.

				int tmpcurrentrownumbervarLcBlankStaffViewRecordList;
				tmpcurrentrownumbervarLcBlankStaffViewRecordList = (int) ViewStateAttributes.GetFromViewState("varLcBlankStaffViewRecordList_currentrownumber", 0);
				bool tmpeofvarLcBlankStaffViewRecordList;
				tmpeofvarLcBlankStaffViewRecordList = (bool) ViewStateAttributes.GetFromViewState("varLcBlankStaffViewRecordList_eof", false);
				varLcBlankStaffViewRecordList.RestoreRecordListState(tmpcurrentrownumbervarLcBlankStaffViewRecordList, tmpeofvarLcBlankStaffViewRecordList);

				#endregion

				((IWidgetRuntimeProperties) this.FindControl("wt_ComboBox490")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wt_ComboBox490_Mandatory", false);
				recListActiveEnrolmentsList_Restore();
				recListWithdrawnEnrolmentsList_Restore();
				recListCompletedEnrolmentsList_Restore();
				recListTransferredEnrolmentsList_Restore();
				((IWidgetRuntimeProperties) this.FindControl("wtileft")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtileft_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtitop")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtitop_Mandatory", false);
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}


		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			ValidationUtils.ValidateComboBox(this, "wt_ComboBox490", parentEditRecord, validate);
			ValidationUtils.ValidateInput(this, "wtileft", parentEditRecord, OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDecimalInputValidate, validate);
			ValidationUtils.ValidateInput(this, "wtitop", parentEditRecord, OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDecimalInputValidate, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}


		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}

		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			Page_Load(null, null); this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}


		public override void DataBind() {
			base.DataBind();
			StoreViewState();
			OutSystems.HubEdition.WebWidgets.Utils.addValidationScriptsToPage(this);
		}



	}




}
