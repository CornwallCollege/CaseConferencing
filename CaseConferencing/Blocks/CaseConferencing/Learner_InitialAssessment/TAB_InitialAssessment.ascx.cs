/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Web.SessionState;
using System.IO;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Runtime.Serialization;
using System.Web.Caching;
using System.Text;


namespace ssCaseConferencing.Flows.FlowLearner_InitialAssessment {
	public abstract class WBlkTAB_InitialAssessment: OSUserControl, IWebScreen, INegotiateTabIndexes, IAjaxNotifyEvent {

		/// <summary>
		/// Delegate Definitions
		/// </summary>
		/// <summary>
		/// Custom Events Definitions
		/// </summary>
		/// <summary>
		/// Parameters and Local Variables Definitions
		/// </summary>
		/// <summary>
		/// Screen Input Parameter inParamStudentReference. Description:
		/// </summary>
		public string inParamStudentReference = "";
		/// <summary>
		/// Variable <code>varLcIsEdit</code> that represents the Service Studio local variable
		///  <code>IsEdit</code> <p>Description: </p>
		/// </summary>
		bool varLcIsEdit = false;

		/// <summary>
		/// Variable <code>varLcInitialAssessment</code> that represents the Service Studio local variable
		///  <code>InitialAssessment</code> <p>Description: </p>
		/// </summary>
		RCInitialAssessementRecord varLcInitialAssessment = new RCInitialAssessementRecord(null);

		protected OutSystems.HubEdition.WebWidgets.Container wtLogContent;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container55;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container18;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperList;
		protected OutSystems.HubEdition.WebWidgets.Container wtContentWrapper;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container29;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container16;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container1;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container77;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container53;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container20;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container56;
		/// <summary>
		/// Variable "True" if the Widget wt_If120
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If120T;

		/// <summary>
		/// Variable "True" if the Widget wt_If120
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If120F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container141;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container121;
		/// <summary>
		/// Variable "True" if the Widget wt_If41
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If41T;

		/// <summary>
		/// Variable "True" if the Widget wt_If41
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If41F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container70;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container79;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container137;
		/// <summary>
		/// Variable "True" if the Widget wt_If85
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If85T;

		/// <summary>
		/// Variable "True" if the Widget wt_If85
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If85F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container68;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container17;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container7;
		/// <summary>
		/// Variable "True" if the Widget wt_If125
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If125T;

		/// <summary>
		/// Variable "True" if the Widget wt_If125
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If125F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container98;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container67;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container117;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container114;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtSIASInitialAssessment_LiteracyLevelValidatorRequired;
		protected SelectRtWidget Rt_wtSIASInitialAssessment_LiteracyLevel = new SelectRtWidget();
		RLIALevelsRecordList Rt_wtSIASInitialAssessment_LiteracyLevel_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container28;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtSIASInitialAssessment_NumeracyLevelValidatorRequired;
		protected SelectRtWidget Rt_wtSIASInitialAssessment_NumeracyLevel = new SelectRtWidget();
		RLIALevelsRecordList Rt_wtSIASInitialAssessment_NumeracyLevel_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container27;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtSIASInitialAssessment_ESOLLevelValidatorRequired;
		protected SelectRtWidget Rt_wtSIASInitialAssessment_ESOLLevel = new SelectRtWidget();
		RLIALevelsRecordList Rt_wtSIASInitialAssessment_ESOLLevel_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container12;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtSIASInitialAssessment_ITLevelValidatorRequired;
		protected SelectRtWidget Rt_wtSIASInitialAssessment_ITLevel = new SelectRtWidget();
		RLIALevelsRecordList Rt_wtSIASInitialAssessment_ITLevel_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container61;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container24;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container5;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container57;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container39;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtSIASInitialAssessment_LearningStyleValidatorRequired;
		protected SelectRtWidget Rt_wtSIASInitialAssessment_LearningStyle = new SelectRtWidget();
		RLIALearningStylesRecordList Rt_wtSIASInitialAssessment_LearningStyle_reclist = null;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtSIASInitialAssessment_NotesValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtSIASInitialAssessment_NotesValidatorType;
		/// <summary>
		/// Variable "True" if the Widget wt_If72
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If72T;

		/// <summary>
		/// Variable "True" if the Widget wt_If72
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If72F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container103;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container44;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container43;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container131;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container101;
		/// <summary>
		/// Auxiliar Edit Record record variable
		/// </summary>
		RCSIASInitialAssessmentRecord ssSIASInitialAssessmentEditRecord = new RCSIASInitialAssessmentRecord(null);

		/// <summary>
		/// Edit Record Valid Runtime Property
		/// </summary>
		public bool wtSIASInitialAssessmentEdit_Valid() {
			bool res = true &&
			ValidationUtils.IsValid(this, "wtSIASInitialAssessment_LiteracyLevel") &&
			ValidationUtils.IsValid(this, "wtSIASInitialAssessment_NumeracyLevel") &&
			ValidationUtils.IsValid(this, "wtSIASInitialAssessment_ESOLLevel") &&
			ValidationUtils.IsValid(this, "wtSIASInitialAssessment_ITLevel") &&
			ValidationUtils.IsValid(this, "wtSIASInitialAssessment_LearningStyle") &&
			ValidationUtils.IsValid(this, "wtSIASInitialAssessment_Notes");
			return res;
		}

		protected OutSystems.HubEdition.WebWidgets.Container wt_Container4;
		/// <summary>
		/// Variable (wtEdit) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wtEdit;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container134;
		/// <summary>
		/// Variable (wtSave) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wtSave;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container21;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container51;
		/// <summary>
		/// Variable (wt_Link71) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link71;
		private bool _isRendering = false;
		public HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();
		public string InstanceID;
		public string RuntimeID= "";
		RLGroupCategoryStudent_GroupIALevelsRecordList queryResGetEnglishEnrolmentLevel_outParamList = new RLGroupCategoryStudent_GroupIALevelsRecordList();
		int queryResGetEnglishEnrolmentLevel_outParamCount = 0;
		int resUserCheck_outParamPermissionType = 0;
		RLForSkillsInitialAssessmentRecordList resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentForLearner = new RLForSkillsInitialAssessmentRecordList();
		RCForSkillsInitialAssessmentSummaryRecord resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary = new RCForSkillsInitialAssessmentSummaryRecord(null);
		RLGroupCategoryStudent_GroupIALevelsRecordList queryResGetMathsEnrolmentLevel_outParamList = new RLGroupCategoryStudent_GroupIALevelsRecordList();
		int queryResGetMathsEnrolmentLevel_outParamCount = 0;
		RLSIASInitialAssessmentRecordList queryResGetSIASInitialAssessmentsByStudentId_outParamList = new RLSIASInitialAssessmentRecordList();
		int queryResGetSIASInitialAssessmentsByStudentId_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// UserCheck
			Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("BdSwjq8l9Uut8VgU4iW3KQ")).ssId, out resUserCheck_outParamPermissionType);
			// Query datasetGetSIASInitialAssessmentsByStudentId
			int datasetGetSIASInitialAssessmentsByStudentId_maxRecords = 0;
			queryResGetSIASInitialAssessmentsByStudentId_outParamList = FuncssPreparation.datasetGetSIASInitialAssessmentsByStudentId(heContext, datasetGetSIASInitialAssessmentsByStudentId_maxRecords, IterationMultiplicity.Never, out queryResGetSIASInitialAssessmentsByStudentId_outParamCount, inParamStudentReference
			);
			// GetForSkillsInitialAssessmentForLearner
			Actions.ActionGetForSkillsInitialAssessmentForLearner(heContext, inParamStudentReference, out resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentForLearner, out resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary);
			if ((resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssEnglishLevel!= "")) {
				varLcInitialAssessment.ssSTInitialAssessement.ssLiteracy = resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssEnglishLevel; // InitialAssessment.InitialAssessement.Literacy =
				// GetForSkillsInitialAssessmentForLearner.ForSkillsInitialAssessmentSummary.ForSkillsInitialAssessmentSummary.Englis
				// hLevel
				varLcInitialAssessment.ssSTInitialAssessement.ssLiteracySource = "ForSkills"; // InitialAssessment.InitialAssessement.LiteracySource = "ForSkills"

			} else {
				if ((queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssLiteracyInitialLevel!=BuiltInFunction.NullTextIdentifier())) {
					varLcInitialAssessment.ssSTInitialAssessement.ssLiteracy = Functions.ssGetIALevels(heContext, queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssLiteracyInitialLevel).ssENIALevels.ssLabel; // InitialAssessment.InitialAssessement.Literacy =
					// GetIALevels(GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.LiteracyInitialLevel).IALevels
					// .Label
					varLcInitialAssessment.ssSTInitialAssessement.ssLiteracySource = "BKSB"; // InitialAssessment.InitialAssessement.LiteracySource = "BKSB"

				}

			}
			if ((resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssMathsLevel!= "")) {
				varLcInitialAssessment.ssSTInitialAssessement.ssNumeracy = resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssMathsLevel; // InitialAssessment.InitialAssessement.Numeracy =
				// GetForSkillsInitialAssessmentForLearner.ForSkillsInitialAssessmentSummary.ForSkillsInitialAssessmentSummary.MathsL
				// evel
				varLcInitialAssessment.ssSTInitialAssessement.ssNumeracySource = "ForSkills"; // InitialAssessment.InitialAssessement.NumeracySource = "ForSkills"

			} else {
				if ((queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssNumeracyInitialLevel!=BuiltInFunction.NullTextIdentifier())) {
					varLcInitialAssessment.ssSTInitialAssessement.ssNumeracy = Functions.ssGetIALevels(heContext, queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssNumeracyInitialLevel).ssENIALevels.ssLabel; // InitialAssessment.InitialAssessement.Numeracy =
					// GetIALevels(GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.NumeracyInitialLevel).IALevels
					// .Label
					varLcInitialAssessment.ssSTInitialAssessement.ssNumeracySource = "BKSB"; // InitialAssessment.InitialAssessement.NumeracySource = "BKSB"

				}

			}
			if ((resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssItLevel!= "")) {
				varLcInitialAssessment.ssSTInitialAssessement.ssIT = resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssItLevel; // InitialAssessment.InitialAssessement.IT =
				// GetForSkillsInitialAssessmentForLearner.ForSkillsInitialAssessmentSummary.ForSkillsInitialAssessmentSummary.ItLeve
				// l
				varLcInitialAssessment.ssSTInitialAssessement.ssITSource = "ForSkills"; // InitialAssessment.InitialAssessement.ITSource = "ForSkills"

			} else {
				if ((queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssITInitialLevel!=BuiltInFunction.NullTextIdentifier())) {
					varLcInitialAssessment.ssSTInitialAssessement.ssIT = Functions.ssGetIALevels(heContext, queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssITInitialLevel).ssENIALevels.ssLabel; // InitialAssessment.InitialAssessement.IT =
					// GetIALevels(GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.ITInitialLevel).IALevels.Label
					varLcInitialAssessment.ssSTInitialAssessement.ssITSource = "BKSB"; // InitialAssessment.InitialAssessement.ITSource = "BKSB"

				}

			}
			if ((resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssESOLLevel!= "")) {
				varLcInitialAssessment.ssSTInitialAssessement.ssESOL = resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssESOLLevel; // InitialAssessment.InitialAssessement.ESOL =
				// GetForSkillsInitialAssessmentForLearner.ForSkillsInitialAssessmentSummary.ForSkillsInitialAssessmentSummary.ESOLLe
				// vel
				varLcInitialAssessment.ssSTInitialAssessement.ssESOLSoucre = "ForSkills"; // InitialAssessment.InitialAssessement.ESOLSoucre = "ForSkills"

			} else {
				if ((queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssESOLInitialLevel!=BuiltInFunction.NullTextIdentifier())) {
					varLcInitialAssessment.ssSTInitialAssessement.ssESOL = Functions.ssGetIALevels(heContext, queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssESOLInitialLevel).ssENIALevels.ssLabel; // InitialAssessment.InitialAssessement.ESOL =
					// GetIALevels(GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.ESOLInitialLevel).IALevels.Lab
					// el
					varLcInitialAssessment.ssSTInitialAssessement.ssESOLSoucre = "BKSB"; // InitialAssessment.InitialAssessement.ESOLSoucre = "BKSB"

				}

			}
			// Query datasetGetMathsEnrolmentLevel
			int datasetGetMathsEnrolmentLevel_maxRecords = 0;
			queryResGetMathsEnrolmentLevel_outParamList = FuncssPreparation.datasetGetMathsEnrolmentLevel(heContext, datasetGetMathsEnrolmentLevel_maxRecords, IterationMultiplicity.Never, out queryResGetMathsEnrolmentLevel_outParamCount, inParamStudentReference
			);
			// Query datasetGetEnglishEnrolmentLevel
			int datasetGetEnglishEnrolmentLevel_maxRecords = 0;
			queryResGetEnglishEnrolmentLevel_outParamList = FuncssPreparation.datasetGetEnglishEnrolmentLevel(heContext, datasetGetEnglishEnrolmentLevel_maxRecords, IterationMultiplicity.Never, out queryResGetEnglishEnrolmentLevel_outParamCount, inParamStudentReference
			);
			varLcInitialAssessment.ssSTInitialAssessement.ssEnglishEnrolmentLevel = queryResGetEnglishEnrolmentLevel_outParamList.CurrentRec.ssENIALevels.ssLabel; // InitialAssessment.InitialAssessement.EnglishEnrolmentLevel = GetEnglishEnrolmentLevel.List.Current.IALevels.Label
			varLcInitialAssessment.ssSTInitialAssessement.ssMathsEnrolmentLevel = queryResGetMathsEnrolmentLevel_outParamList.CurrentRec.ssENIALevels.ssLabel; // InitialAssessment.InitialAssessement.MathsEnrolmentLevel = GetMathsEnrolmentLevel.List.Current.IALevels.Label
		}
		static WBlkTAB_InitialAssessment() {
		}
		override protected void OnInit(EventArgs e) {
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			if (this.wtEdit != null) {
				this.wtEdit.Click += new System.EventHandler(this.wtEdit_Click);
			}
			if (this.wtSave != null) {
				this.wtSave.Click += new System.EventHandler(this.wtSave_Click);
			}
			if (this.wt_Link71 != null) {
				this.wt_Link71.Click += new System.EventHandler(this.wt_Link71_Click);
			}
			this.Load += new System.EventHandler(this.Page_Load);
			this.Unload += new System.EventHandler(this.Page_Unload);
		}
		private void Page_Load(object sender, System.EventArgs e) {
			((OSPageViewState) Page).EnableResetViewState();
			heContext = Global.App.OsContext;
			RuntimeID = ClientID;
			IncludeSpan = true;
			if (!Visible) return;
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!IsPostBack || _isRendering) {
					// register this block in the page so for later outputting the block javascript includes in their correct order
					((OSPage) Page).RegisterBlock(this);
					if (_isRendering) {
						Preparation(heContext);
					}
					bool bindEditRecords = IsViewStateEmpty;
					if (bindEditRecords) {
						wtSIASInitialAssessmentEdit_onDataBindingDataSource(this.FindControl("wtSIASInitialAssessmentEdit"), null);
					}
				} else {
					FetchViewState();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}
		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			if (!WasRendered) {
				return;
			}
			ValidationUtils.ValidateComboBox(this, "wtSIASInitialAssessment_LiteracyLevel", parentEditRecord, validate);
			ValidationUtils.ValidateComboBox(this, "wtSIASInitialAssessment_NumeracyLevel", parentEditRecord, validate);
			ValidationUtils.ValidateComboBox(this, "wtSIASInitialAssessment_ESOLLevel", parentEditRecord, validate);
			ValidationUtils.ValidateComboBox(this, "wtSIASInitialAssessment_ITLevel", parentEditRecord, validate);
			ValidationUtils.ValidateComboBox(this, "wtSIASInitialAssessment_LearningStyle", parentEditRecord, validate);
			ValidationUtils.ValidateInput(this, "wtSIASInitialAssessment_Notes", parentEditRecord, ValidationUtils.validateTrue, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}
		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}
		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}


		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();
			ViewStateAttributes.SetInViewState("resUserCheck_outParamPermissionType", resUserCheck_outParamPermissionType, 0);

			#region store queryResGetSIASInitialAssessmentsByStudentId_outParamList.

			int tmpcurrentrownumberqueryResGetSIASInitialAssessmentsByStudentId_outParamList = queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetSIASInitialAssessmentsByStudentId_outParamList = queryResGetSIASInitialAssessmentsByStudentId_outParamList.Eof;
			ArrayList storequeryResGetSIASInitialAssessmentsByStudentId_outParamList = new ArrayList();

			// Write the needed fields of queryResGetSIASInitialAssessmentsByStudentId_outParamList to the storequeryResGetSIASInitialAssessmentsByStudentId_outParamList
			if (!queryResGetSIASInitialAssessmentsByStudentId_outParamList.Empty) {
				try {
					queryResGetSIASInitialAssessmentsByStudentId_outParamList.StartIteration();

					while (!queryResGetSIASInitialAssessmentsByStudentId_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList = new ArrayList();
						tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList.Add(queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssId == 0?(object) null: queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssId);
						tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList.Add(queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssStudentId == "" ?(object) null: queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssStudentId);
						tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList.Add(queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssNumeracyLevel == "" ?(object) null: queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssNumeracyLevel);
						tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList.Add(queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssLiteracyLevel == "" ?(object) null: queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssLiteracyLevel);
						tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList.Add(queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssITLevel == "" ?(object) null: queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssITLevel);
						tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList.Add(queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssESOLLevel == "" ?(object) null: queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssESOLLevel);
						tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList.Add(queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssLearningStyle == "" ?(object) null: queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssLearningStyle);
						tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList.Add(queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssNotes == "" ?(object) null: queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssNotes);
						tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList.Add(queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssCreatedOn == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssCreatedOn);
						tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList.Add(queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssCreatedBy == 0?(object) null: queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssCreatedBy);
						tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ChangedAttributes, new BitArray(new bool[] {
							true, true, false, true, false, false, true, false, false, true, false, false, true, false, false, true, true, false, false, true, true, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.OptimizedAttributes, new BitArray(new bool[] {
							false, false, true, false, true, true, false, true, true, false, true, true, false, true, true, false, false, true, true, false, false, true, true, true, true
						}
						))));
						storequeryResGetSIASInitialAssessmentsByStudentId_outParamList.Add(tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList);
						queryResGetSIASInitialAssessmentsByStudentId_outParamList.Advance();
					}
				} finally {
					queryResGetSIASInitialAssessmentsByStudentId_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetSIASInitialAssessmentsByStudentId_outParamList", storequeryResGetSIASInitialAssessmentsByStudentId_outParamList, null);

			#endregion


			#region store queryResGetSIASInitialAssessmentsByStudentId_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetSIASInitialAssessmentsByStudentId_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetSIASInitialAssessmentsByStudentId_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetSIASInitialAssessmentsByStudentId_outParamList_eof", tmpeofqueryResGetSIASInitialAssessmentsByStudentId_outParamList, false);
			queryResGetSIASInitialAssessmentsByStudentId_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetSIASInitialAssessmentsByStudentId_outParamList, tmpeofqueryResGetSIASInitialAssessmentsByStudentId_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("inParamStudentReference", inParamStudentReference, "");
			ViewStateAttributes.SetInViewState("varLcIsEdit", varLcIsEdit, false);
			ViewStateAttributes.SetInViewState("varLcInitialAssessment_ssSTInitialAssessement_ssLiteracy", varLcInitialAssessment.ssSTInitialAssessement.ssLiteracy, "");
			ViewStateAttributes.SetInViewState("varLcInitialAssessment_ssSTInitialAssessement_ssNumeracy", varLcInitialAssessment.ssSTInitialAssessement.ssNumeracy, "");
			ViewStateAttributes.SetInViewState("varLcInitialAssessment_ssSTInitialAssessement_ssESOL", varLcInitialAssessment.ssSTInitialAssessement.ssESOL, "");
			ViewStateAttributes.SetInViewState("varLcInitialAssessment_ssSTInitialAssessement_ssIT", varLcInitialAssessment.ssSTInitialAssessement.ssIT, "");
			ViewStateAttributes.SetInViewState("varLcInitialAssessment_ssSTInitialAssessement_ssLiteracySource", varLcInitialAssessment.ssSTInitialAssessement.ssLiteracySource, "");
			ViewStateAttributes.SetInViewState("varLcInitialAssessment_ssSTInitialAssessement_ssNumeracySource", varLcInitialAssessment.ssSTInitialAssessement.ssNumeracySource, "");
			ViewStateAttributes.SetInViewState("varLcInitialAssessment_ssSTInitialAssessement_ssESOLSoucre", varLcInitialAssessment.ssSTInitialAssessement.ssESOLSoucre, "");
			ViewStateAttributes.SetInViewState("varLcInitialAssessment_ssSTInitialAssessement_ssITSource", varLcInitialAssessment.ssSTInitialAssessement.ssITSource, "");
			ViewStateAttributes.SetInViewState("varLcInitialAssessment_ssSTInitialAssessement_ssEnglishEnrolmentLevel", varLcInitialAssessment.ssSTInitialAssessement.ssEnglishEnrolmentLevel, "");
			ViewStateAttributes.SetInViewState("varLcInitialAssessment_ssSTInitialAssessement_ssMathsEnrolmentLevel", varLcInitialAssessment.ssSTInitialAssessement.ssMathsEnrolmentLevel, "");
			ViewStateAttributes.SetInViewState("varLcInitialAssessment_ssSTInitialAssessement_ssESOLEnrolmentLevel", varLcInitialAssessment.ssSTInitialAssessement.ssESOLEnrolmentLevel, "");
			ViewStateAttributes.SetInViewState("varLcInitialAssessment_ssSTInitialAssessement_ssITEnrolmentLevel", varLcInitialAssessment.ssSTInitialAssessement.ssITEnrolmentLevel, "");
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessment_LiteracyLevel_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtSIASInitialAssessment_LiteracyLevel")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessment_NumeracyLevel_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtSIASInitialAssessment_NumeracyLevel")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessment_ESOLLevel_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtSIASInitialAssessment_ESOLLevel")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessment_ITLevel_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtSIASInitialAssessment_ITLevel")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessment_LearningStyle_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtSIASInitialAssessment_LearningStyle")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessment_Notes_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtSIASInitialAssessment_Notes")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssId", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssId, 0);
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssStudentId", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssStudentId, "");
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssNumeracyLevel", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNumeracyLevel, "");
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssLiteracyLevel", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLiteracyLevel, "");
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssITLevel", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssITLevel, "");
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssESOLLevel", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssESOLLevel, "");
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssLearningStyle", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLearningStyle, "");
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssNotes", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNotes, "");
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssCreatedOn", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssCreatedOn, new DateTime(1900, 1, 1, 0, 0, 0));
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssCreatedBy", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssCreatedBy, 0);
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ChangedAttributes, new BitArray(new bool[] {
				true, true, false, true, false, false, true, false, false, true, false, false, true, false, false, true, true, false, false, true, true, false, false, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.OptimizedAttributes, new BitArray(new bool[] {
				false, false, true, false, true, true, false, true, true, false, true, true, false, true, true, false, false, true, true, false, false, true, true, true, true
			}
			)))), null);
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			if (IsViewStateEmpty) return;
			try {
				resUserCheck_outParamPermissionType = (int) ViewStateAttributes.GetFromViewState("resUserCheck_outParamPermissionType", 0);

				#region fetch queryResGetSIASInitialAssessmentsByStudentId_outParamList.

				// Read the needed fields of queryResGetSIASInitialAssessmentsByStudentId_outParamList from storequeryResGetSIASInitialAssessmentsByStudentId_outParamList
				queryResGetSIASInitialAssessmentsByStudentId_outParamList = new RLSIASInitialAssessmentRecordList();
				ArrayList storequeryResGetSIASInitialAssessmentsByStudentId_outParamList;
				storequeryResGetSIASInitialAssessmentsByStudentId_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetSIASInitialAssessmentsByStudentId_outParamList", null);
				if (storequeryResGetSIASInitialAssessmentsByStudentId_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList in storequeryResGetSIASInitialAssessmentsByStudentId_outParamList) {
						if (tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList != null) {
							// Aux current record variable
							RCSIASInitialAssessmentRecord tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList = new RCSIASInitialAssessmentRecord(null);
							tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList.ssENSIASInitialAssessment.ssId = (int) (tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[0] == null ? 0: tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList.ssENSIASInitialAssessment.ssStudentId = (string) (tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[1] == null ? "": tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList.ssENSIASInitialAssessment.ssNumeracyLevel = (string) (tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[2] == null ? "": tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList.ssENSIASInitialAssessment.ssLiteracyLevel = (string) (tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[3] == null ? "": tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[3]);

							tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList.ssENSIASInitialAssessment.ssITLevel = (string) (tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[4] == null ? "": tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[4]);

							tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList.ssENSIASInitialAssessment.ssESOLLevel = (string) (tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[5] == null ? "": tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[5]);

							tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList.ssENSIASInitialAssessment.ssLearningStyle = (string) (tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[6] == null ? "": tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[6]);

							tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList.ssENSIASInitialAssessment.ssNotes = (string) (tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[7] == null ? "": tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[7]);

							tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList.ssENSIASInitialAssessment.ssCreatedOn = (DateTime) (tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[8] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[8]);

							tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList.ssENSIASInitialAssessment.ssCreatedBy = (int) (tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[9] == null ? 0: tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[9]);

							tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList.ssENSIASInitialAssessment.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[10]);

							tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList.ssENSIASInitialAssessment.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetSIASInitialAssessmentsByStudentId_outParamList[11]);

							queryResGetSIASInitialAssessmentsByStudentId_outParamList.Append(tmpAuxCurrentRecordqueryResGetSIASInitialAssessmentsByStudentId_outParamList);
						}
					}
				}
				queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetSIASInitialAssessmentsByStudentId_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetSIASInitialAssessmentsByStudentId_outParamList;
				tmpcurrentrownumberqueryResGetSIASInitialAssessmentsByStudentId_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetSIASInitialAssessmentsByStudentId_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetSIASInitialAssessmentsByStudentId_outParamList;
				tmpeofqueryResGetSIASInitialAssessmentsByStudentId_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetSIASInitialAssessmentsByStudentId_outParamList_eof", false);
				queryResGetSIASInitialAssessmentsByStudentId_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetSIASInitialAssessmentsByStudentId_outParamList, tmpeofqueryResGetSIASInitialAssessmentsByStudentId_outParamList);

				#endregion

				inParamStudentReference = (string) ViewStateAttributes.GetFromViewState("inParamStudentReference", "");
				varLcIsEdit = (bool) ViewStateAttributes.GetFromViewState("varLcIsEdit", false);
				varLcInitialAssessment.ssSTInitialAssessement.ssLiteracy = (string) ViewStateAttributes.GetFromViewState("varLcInitialAssessment_ssSTInitialAssessement_ssLiteracy", "");
				varLcInitialAssessment.ssSTInitialAssessement.ssNumeracy = (string) ViewStateAttributes.GetFromViewState("varLcInitialAssessment_ssSTInitialAssessement_ssNumeracy", "");
				varLcInitialAssessment.ssSTInitialAssessement.ssESOL = (string) ViewStateAttributes.GetFromViewState("varLcInitialAssessment_ssSTInitialAssessement_ssESOL", "");
				varLcInitialAssessment.ssSTInitialAssessement.ssIT = (string) ViewStateAttributes.GetFromViewState("varLcInitialAssessment_ssSTInitialAssessement_ssIT", "");
				varLcInitialAssessment.ssSTInitialAssessement.ssLiteracySource = (string) ViewStateAttributes.GetFromViewState("varLcInitialAssessment_ssSTInitialAssessement_ssLiteracySource", "");
				varLcInitialAssessment.ssSTInitialAssessement.ssNumeracySource = (string) ViewStateAttributes.GetFromViewState("varLcInitialAssessment_ssSTInitialAssessement_ssNumeracySource", "");
				varLcInitialAssessment.ssSTInitialAssessement.ssESOLSoucre = (string) ViewStateAttributes.GetFromViewState("varLcInitialAssessment_ssSTInitialAssessement_ssESOLSoucre", "");
				varLcInitialAssessment.ssSTInitialAssessement.ssITSource = (string) ViewStateAttributes.GetFromViewState("varLcInitialAssessment_ssSTInitialAssessement_ssITSource", "");
				varLcInitialAssessment.ssSTInitialAssessement.ssEnglishEnrolmentLevel = (string) ViewStateAttributes.GetFromViewState("varLcInitialAssessment_ssSTInitialAssessement_ssEnglishEnrolmentLevel", "");
				varLcInitialAssessment.ssSTInitialAssessement.ssMathsEnrolmentLevel = (string) ViewStateAttributes.GetFromViewState("varLcInitialAssessment_ssSTInitialAssessement_ssMathsEnrolmentLevel", "");
				varLcInitialAssessment.ssSTInitialAssessement.ssESOLEnrolmentLevel = (string) ViewStateAttributes.GetFromViewState("varLcInitialAssessment_ssSTInitialAssessement_ssESOLEnrolmentLevel", "");
				varLcInitialAssessment.ssSTInitialAssessement.ssITEnrolmentLevel = (string) ViewStateAttributes.GetFromViewState("varLcInitialAssessment_ssSTInitialAssessement_ssITEnrolmentLevel", "");
				((IWidgetRuntimeProperties) this.FindControl("wtSIASInitialAssessment_LiteracyLevel")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessment_LiteracyLevel_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtSIASInitialAssessment_NumeracyLevel")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessment_NumeracyLevel_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtSIASInitialAssessment_ESOLLevel")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessment_ESOLLevel_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtSIASInitialAssessment_ITLevel")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessment_ITLevel_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtSIASInitialAssessment_LearningStyle")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessment_LearningStyle_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtSIASInitialAssessment_Notes")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessment_Notes_Mandatory", false);
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssId = (int) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssId", 0);
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssStudentId = (string) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssStudentId", "");
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNumeracyLevel = (string) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssNumeracyLevel", "");
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLiteracyLevel = (string) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssLiteracyLevel", "");
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssITLevel = (string) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssITLevel", "");
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssESOLLevel = (string) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssESOLLevel", "");
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLearningStyle = (string) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssLearningStyle", "");
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNotes = (string) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssNotes", "");
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssCreatedOn = (DateTime) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssCreatedOn", new DateTime(1900, 1, 1, 0, 0, 0));
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssCreatedBy = (int) ViewStateAttributes.GetFromViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ssCreatedBy", 0);
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_ChangedAttributes", null));
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtSIASInitialAssessmentEdit_record_ssENSIASInitialAssessment_OptimizedAttributes", null));
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}

		/// <summary>
		/// Store visibility information of the web block and input widgets in the viewstate
		/// </summary>
		protected override void StoreInputsAndWebBlockVisibility() {
			ControlVisibility.StoreChildControlVisibility("wtSIASInitialAssessment_Notes");
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore visibility information of the web block and input widgets from the viewstate
		/// </summary>
		protected override void RestoreInputsAndWebBlockVisibility() {
			WasRendered = true;
			ControlVisibility.RestoreChildControlVisibility("wtSIASInitialAssessment_Notes");
		}

		private void Page_Unload(object sender, System.EventArgs e) {
		}

		public LocalState PushStack() {
			throw new NotImplementedException();
		}

		public void doRefreshScreen(HeContext heContext) {
			((IWebScreen) this.Parent.Page).doRefreshScreen(heContext);
		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			StoreViewState();
			((IWebScreen) this.Parent.Page).doAJAXRefreshScreen(heContext);
		}

		public static void GetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			string blockId = "CaseConferencing.KUA21XlYyHkCQ3hMbEKd7Rg";
			if (visited.Contains(blockId)) {
				return; 
			}
			visited.Add(blockId);
			if (!inline) {
				GetCssIncludes(writer, visited);
			} else {
				GetInlineCss(writer, visited);
			}
		}

		private static void GetCssIncludes(TextWriter writer, HashSet<string> visited) {
			InnerGetCss(writer, false, visited);
			CssHelper.WriteCssInclude(writer, AppUtils.Instance.getImagePath() + "Blocks/CaseConferencing/Learner_InitialAssessment/TAB_InitialAssessment.css" + AppUtils.Instance.CacheInvalidationSuffix);
		}

		private static void GetInlineCss(TextWriter writer, HashSet<string> visited) {
			StringWriter localCssWriter = new StringWriter();
			localCssWriter.NewLine = writer.NewLine;
			string localCss = Environment.NewLine;
			InnerGetCss(localCssWriter, true, visited);
			localCss += localCssWriter.ToString();
			HashSet<string> cssVisited = new HashSet<string>();
			string read;
			AppUtils.getResourceFileContent(out read, "Blocks\\CaseConferencing\\Learner_InitialAssessment\\TAB_InitialAssessment.css");
			localCss += OutSystems.HubEdition.RuntimePlatform.Email.EmailHelper.FlattenCSSFile(read, "Blocks\\CaseConferencing\\Learner_InitialAssessment\\TAB_InitialAssessment.css", cssVisited);
			writer.Write(localCss);
		}

		private static void InnerGetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
		}

		private void Page_Error(object sender, System.EventArgs e) {
		}
		public void CheckPermissions(HeContext heContext) {
			((IWebScreen) this.Page).CheckPermissions(heContext);
		}
		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}

		public ObjectKey Key {
			get {
				return ObjectKey.Parse("UA21XlYyHkCQ3hMbEKd7Rg"); 
			}
		}
		public bool isSecure {
			get {
				return ((IWebScreen) Page).isSecure; 
			}
		}
		/// <summary>
		/// Action <code>CommandCancel</code> that represents the Service Studio screen action
		///  <code>Cancel</code> <p> Description: </p>
		/// </summary>
		private bool CommandCancel(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				varLcIsEdit = false; // IsEdit = False
				// Refresh Me
				((OSPageViewState) Page).AjaxRefresh(GetBlockSelfRefreshControl(), "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandEdit</code> that represents the Service Studio screen action <code>Edit</code>
		///  <p> Description: </p>
		/// </summary>
		private bool CommandEdit(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				varLcIsEdit = (!varLcIsEdit); // IsEdit = notIsEdit
				// Refresh Widget (wtContentWrapper)
				((OSPageViewState) Page).AjaxRefresh(wtContentWrapper, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvSave: VarsBag {
			public int resCreateOrUpdateSIASInitialAssessment_outParamId = 0;

			public int resStudentLog_Create_outParamStudentLogId = 0;

			public lcvSave() {
			}
		}
		/// <summary>
		/// Action <code>CommandSave</code> that represents the Service Studio screen action <code>Save</code>
		///  <p> Description: </p>
		/// </summary>
		private bool CommandSave(HeContext heContext) {
			CheckPermissions(heContext);
			lcvSave localVars = new lcvSave();
			try {
				// New
				if ((ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssId==BuiltInFunction.NullIdentifier())) {
					ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssCreatedOn = BuiltInFunction.CurrDateTime(); // SIASInitialAssessmentEdit.Record.SIASInitialAssessment.CreatedOn = CurrDateTime
					ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssCreatedBy = ((int) Global.App.OsContext.Session["UserID"]); // SIASInitialAssessmentEdit.Record.SIASInitialAssessment.CreatedBy = UserID
					ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssStudentId = inParamStudentReference; // SIASInitialAssessmentEdit.Record.SIASInitialAssessment.StudentId = StudentReference

				}
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLastUpdateOn = BuiltInFunction.CurrDateTime(); // SIASInitialAssessmentEdit.Record.SIASInitialAssessment.LastUpdateOn = CurrDateTime
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLastUpdateBy = ((int) Global.App.OsContext.Session["UserID"]); // SIASInitialAssessmentEdit.Record.SIASInitialAssessment.LastUpdateBy = UserID
				// CreateOrUpdateSIASInitialAssessment
				ExtendedActions.CreateOrUpdateSIASInitialAssessment(heContext, ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ChangedAttributes, ((RCSIASInitialAssessmentRecord) ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment), out localVars.resCreateOrUpdateSIASInitialAssessment_outParamId);
				// StudentLog_Create
				Actions.ActionStudentLog_Create(heContext, inParamStudentReference, ((int) Global.App.OsContext.Session["UserID"]), "SIAS - Initial Assessment Changed", ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("mPGE9uPol0Gohs+APspfug")).ssLogType, ("Initial Assessment Changed - " +ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNotes), BuiltInFunction.NullTextIdentifier(), false, 0, "Initial Assessment", "", 0, 0, "", 0, out localVars.resStudentLog_Create_outParamStudentLogId);
				varLcIsEdit = false; // IsEdit = False
				// Refresh Widget (wtContentWrapper)
				((OSPageViewState) Page).AjaxRefresh(wtContentWrapper, "None", StoreViewState);
				// NotifyWidget
				ExtendedActions.NotifyWidget(heContext, RuntimeID, "Refresh");
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public void cntLogContent_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntLogContent_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntLogContent_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntLogContent_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtLogContent)
		/// </summary>
		/// <returns>The Visible State of wtLogContent</returns>
		public bool cntLogContent_isVisible() {
			return true;
		}

		public void cnt_Container55_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container55_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container55_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "padding: 15px; font-size: 18px;text-shadow: 0px 1px 2px #dadada;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container55_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container55)
		/// </summary>
		/// <returns>The Visible State of wt_Container55</returns>
		public bool cnt_Container55_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container18_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container18_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container18_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container18_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container18)
		/// </summary>
		/// <returns>The Visible State of wt_Container18</returns>
		public bool cnt_Container18_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntWrapperList_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntWrapperList_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntWrapperList_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "style";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntWrapperList_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperList)
		/// </summary>
		/// <returns>The Visible State of wtWrapperList</returns>
		public bool cntWrapperList_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Table45_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Table45_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Table45_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin:2px;padding: 4px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void wt_TableCell26_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell26_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell26_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "padding-left: 10px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntContentWrapper_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntContentWrapper_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntContentWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntContentWrapper_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtContentWrapper)
		/// </summary>
		/// <returns>The Visible State of wtContentWrapper</returns>
		public bool cntContentWrapper_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container29_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container29_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container29_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container29_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container29)
		/// </summary>
		/// <returns>The Visible State of wt_Container29</returns>
		public bool cnt_Container29_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container16_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container16_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container16_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container16_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container16)
		/// </summary>
		/// <returns>The Visible State of wt_Container16</returns>
		public bool cnt_Container16_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container1_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container1_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container1_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container1_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container1)
		/// </summary>
		/// <returns>The Visible State of wt_Container1</returns>
		public bool cnt_Container1_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container77_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container77_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container77_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container77_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container77)
		/// </summary>
		/// <returns>The Visible State of wt_Container77</returns>
		public bool cnt_Container77_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container53_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container53_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container53_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container53_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container53)
		/// </summary>
		/// <returns>The Visible State of wt_Container53</returns>
		public bool cnt_Container53_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_TableCell46_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell46_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell46_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container20_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container20_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container20_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container20_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container20)
		/// </summary>
		/// <returns>The Visible State of wt_Container20</returns>
		public bool cnt_Container20_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container56_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container56_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container56_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container56_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container56)
		/// </summary>
		/// <returns>The Visible State of wt_Container56</returns>
		public bool cnt_Container56_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If120_hasRun=false;
		bool if_wt_If120_evalResult;
		public bool if_wt_If120() {
			if (if_wt_If120_hasRun) {
				if_wt_If120_hasRun = false;
				return if_wt_If120_evalResult;
			}
			if_wt_If120_hasRun = true;
			if_wt_If120_evalResult = (varLcInitialAssessment.ssSTInitialAssessement.ssLiteracy!= "");
			return if_wt_If120_evalResult;
		}

		public void cnt_Container2_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container2_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container2_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container2_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container2)
		/// </summary>
		/// <returns>The Visible State of wt_Container2</returns>
		public bool cnt_Container2_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = 3oAmGBD6Lku0g+nVYNJAeQ) Expression:
		///  InitialAssessment.InitialAssessement.Literacy
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression15() {
			return varLcInitialAssessment.ssSTInitialAssessement.ssLiteracy;
		}
		public void cnt_Container141_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container141_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container141_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container141_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container141)
		/// </summary>
		/// <returns>The Visible State of wt_Container141</returns>
		public bool cnt_Container141_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = Ta4U1Ozzek69_0t0jnqoGw) Expression: "(" +
		///  InitialAssessment.InitialAssessement.LiteracySource + ")"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression116() {
			return (("(" +varLcInitialAssessment.ssSTInitialAssessement.ssLiteracySource) + ")");
		}
		public void cnt_Container121_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container121_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container121_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container121_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container121)
		/// </summary>
		/// <returns>The Visible State of wt_Container121</returns>
		public bool cnt_Container121_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If41_hasRun=false;
		bool if_wt_If41_evalResult;
		public bool if_wt_If41() {
			if (if_wt_If41_hasRun) {
				if_wt_If41_hasRun = false;
				return if_wt_If41_evalResult;
			}
			if_wt_If41_hasRun = true;
			if_wt_If41_evalResult = (varLcInitialAssessment.ssSTInitialAssessement.ssNumeracy!= "");
			return if_wt_If41_evalResult;
		}

		public void cnt_Container70_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container70_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container70_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container70_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container70)
		/// </summary>
		/// <returns>The Visible State of wt_Container70</returns>
		public bool cnt_Container70_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = nrYk3koOlU2r7uis6F6AkA) Expression:
		///  InitialAssessment.InitialAssessement.Numeracy
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression119() {
			return varLcInitialAssessment.ssSTInitialAssessement.ssNumeracy;
		}
		public void cnt_Container79_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container79_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container79_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container79_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container79)
		/// </summary>
		/// <returns>The Visible State of wt_Container79</returns>
		public bool cnt_Container79_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = dyQTv3XOx0qqP8REjL9BYg) Expression: "(" +
		///  InitialAssessment.InitialAssessement.NumeracySource + ")"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression105() {
			return (("(" +varLcInitialAssessment.ssSTInitialAssessement.ssNumeracySource) + ")");
		}
		public void cnt_Container137_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container137_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container137_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container137_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container137)
		/// </summary>
		/// <returns>The Visible State of wt_Container137</returns>
		public bool cnt_Container137_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If85_hasRun=false;
		bool if_wt_If85_evalResult;
		public bool if_wt_If85() {
			if (if_wt_If85_hasRun) {
				if_wt_If85_hasRun = false;
				return if_wt_If85_evalResult;
			}
			if_wt_If85_hasRun = true;
			if_wt_If85_evalResult = (varLcInitialAssessment.ssSTInitialAssessement.ssESOL!= "");
			return if_wt_If85_evalResult;
		}

		public void cnt_Container68_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container68_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container68_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container68_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container68)
		/// </summary>
		/// <returns>The Visible State of wt_Container68</returns>
		public bool cnt_Container68_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = IxjwjEESu0C0jxTrp44xQg) Expression:
		///  InitialAssessment.InitialAssessement.ESOL
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression83() {
			return varLcInitialAssessment.ssSTInitialAssessement.ssESOL;
		}
		public void cnt_Container17_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container17_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container17_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container17_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container17)
		/// </summary>
		/// <returns>The Visible State of wt_Container17</returns>
		public bool cnt_Container17_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = hNTagrIqhU+wQbaBZfsXpQ) Expression: "(" +
		///  InitialAssessment.InitialAssessement.ESOLSoucre + ")"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression75() {
			return (("(" +varLcInitialAssessment.ssSTInitialAssessement.ssESOLSoucre) + ")");
		}
		public void cnt_Container7_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container7_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container7_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container7_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container7)
		/// </summary>
		/// <returns>The Visible State of wt_Container7</returns>
		public bool cnt_Container7_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If125_hasRun=false;
		bool if_wt_If125_evalResult;
		public bool if_wt_If125() {
			if (if_wt_If125_hasRun) {
				if_wt_If125_hasRun = false;
				return if_wt_If125_evalResult;
			}
			if_wt_If125_hasRun = true;
			if_wt_If125_evalResult = (varLcInitialAssessment.ssSTInitialAssessement.ssIT!= "");
			return if_wt_If125_evalResult;
		}

		public void cnt_Container98_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container98_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container98_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container98_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container98)
		/// </summary>
		/// <returns>The Visible State of wt_Container98</returns>
		public bool cnt_Container98_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = GIwkbV9lgkO7GO6GkugymA) Expression:
		///  InitialAssessment.InitialAssessement.IT
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression65() {
			return varLcInitialAssessment.ssSTInitialAssessement.ssIT;
		}
		public void cnt_Container67_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container67_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container67_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container67_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container67)
		/// </summary>
		/// <returns>The Visible State of wt_Container67</returns>
		public bool cnt_Container67_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = jqdjjqr1_0+K6fadEzEK9A) Expression: "(" +
		///  InitialAssessment.InitialAssessement.ITSource + ")"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression84() {
			return (("(" +varLcInitialAssessment.ssSTInitialAssessement.ssITSource) + ")");
		}
		public void wt_TableCell115_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell115_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell115_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container117_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container117_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container117_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container117_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container117)
		/// </summary>
		/// <returns>The Visible State of wt_Container117</returns>
		public bool cnt_Container117_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container114_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container114_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container114_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container114_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container114)
		/// </summary>
		/// <returns>The Visible State of wt_Container114</returns>
		public bool cnt_Container114_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void selSIASInitialAssessment_LiteracyLevel_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

				if (Rt_wtSIASInitialAssessment_LiteracyLevel_reclist == null) {
					using(Transaction wtSIASInitialAssessment_LiteracyLevel_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
						string wtSIASInitialAssessment_LiteracyLevel_sql = "SELECT [ID], [LABEL], NULL, NULL FROM " + ENIALevelsEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " WHERE [IS_ACTIVE] <> 0 OR [ID] = @Selection  ORDER BY [ORDER], [LABEL]";
						Command Rt_wtSIASInitialAssessment_LiteracyLevel_sqlCmd = wtSIASInitialAssessment_LiteracyLevel_trans.CreateCommand(wtSIASInitialAssessment_LiteracyLevel_sql);
						Rt_wtSIASInitialAssessment_LiteracyLevel_sqlCmd.CreateParameter("@Selection", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLiteracyLevel);
						Rt_wtSIASInitialAssessment_LiteracyLevel_sqlCmd.TransformParametersSyntax();
						Rt_wtSIASInitialAssessment_LiteracyLevel_reclist = new RLIALevelsRecordList();
						Rt_wtSIASInitialAssessment_LiteracyLevel_reclist.Transaction = wtSIASInitialAssessment_LiteracyLevel_trans;
						Rt_wtSIASInitialAssessment_LiteracyLevel_reclist.AllOptimizedAttributes = new BitArray[1] {
							new BitArray(4, false)
						}
						;
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wtSIASInitialAssessment_LiteracyLevel_sqlCmd, Rt_wtSIASInitialAssessment_LiteracyLevel_reclist, "WebSelectWidget load operation");
						Rt_wtSIASInitialAssessment_LiteracyLevel_reclist = (RLIALevelsRecordList) Rt_wtSIASInitialAssessment_LiteracyLevel_reclist.Duplicate();
					}
				}
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
				if (Rt_wtSIASInitialAssessment_LiteracyLevel.SpecialListVal == "0")
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
				Rt_wtSIASInitialAssessment_LiteracyLevel_reclist.StartIteration();
				try {
					while (!Rt_wtSIASInitialAssessment_LiteracyLevel_reclist.Eof) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wtSIASInitialAssessment_LiteracyLevel_reclist.CurrentRec.ssENIALevels.ssLabel, Rt_wtSIASInitialAssessment_LiteracyLevel_reclist.CurrentRec.ssENIALevels.ssId));
						if (ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLiteracyLevel == Convert.ToString(Rt_wtSIASInitialAssessment_LiteracyLevel_reclist.CurrentRec.ssENIALevels.ssId)) {
							((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
						}
						Rt_wtSIASInitialAssessment_LiteracyLevel_reclist.Advance();
					}
				} finally {
					Rt_wtSIASInitialAssessment_LiteracyLevel_reclist.EndIteration();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void selSIASInitialAssessment_LiteracyLevel_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wtSIASInitialAssessment_LiteracyLevel.SpecialListVal = dropDown.SelectedValue.Substring(8);
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLiteracyLevel = "";
			}
			else {
				Rt_wtSIASInitialAssessment_LiteracyLevel.SpecialListVal = "";
				try {
					ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLiteracyLevel = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtSIASInitialAssessment_LiteracyLevel)
		/// </summary>
		/// <returns>The Visible State of wtSIASInitialAssessment_LiteracyLevel</returns>
		public bool selSIASInitialAssessment_LiteracyLevel_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtSIASInitialAssessment_LiteracyLevel)
		/// </summary>
		/// <returns>The Enabled State of wtSIASInitialAssessment_LiteracyLevel</returns>
		public bool selSIASInitialAssessment_LiteracyLevel_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return varLcIsEdit; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (selSIASInitialAssessment_LiteracyLevel)
		/// </summary>
		/// <returns>The Mandatory Value of selSIASInitialAssessment_LiteracyLevel</returns>
		public bool selSIASInitialAssessment_LiteracyLevel_isMandatory() {
			return false;
		}

		public void cnt_Container28_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container28_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container28_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container28_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container28)
		/// </summary>
		/// <returns>The Visible State of wt_Container28</returns>
		public bool cnt_Container28_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void selSIASInitialAssessment_NumeracyLevel_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

				if (Rt_wtSIASInitialAssessment_NumeracyLevel_reclist == null) {
					using(Transaction wtSIASInitialAssessment_NumeracyLevel_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
						string wtSIASInitialAssessment_NumeracyLevel_sql = "SELECT [ID], [LABEL], NULL, NULL FROM " + ENIALevelsEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " WHERE [IS_ACTIVE] <> 0 OR [ID] = @Selection  ORDER BY [ORDER], [LABEL]";
						Command Rt_wtSIASInitialAssessment_NumeracyLevel_sqlCmd = wtSIASInitialAssessment_NumeracyLevel_trans.CreateCommand(wtSIASInitialAssessment_NumeracyLevel_sql);
						Rt_wtSIASInitialAssessment_NumeracyLevel_sqlCmd.CreateParameter("@Selection", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNumeracyLevel);
						Rt_wtSIASInitialAssessment_NumeracyLevel_sqlCmd.TransformParametersSyntax();
						Rt_wtSIASInitialAssessment_NumeracyLevel_reclist = new RLIALevelsRecordList();
						Rt_wtSIASInitialAssessment_NumeracyLevel_reclist.Transaction = wtSIASInitialAssessment_NumeracyLevel_trans;
						Rt_wtSIASInitialAssessment_NumeracyLevel_reclist.AllOptimizedAttributes = new BitArray[1] {
							new BitArray(4, false)
						}
						;
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wtSIASInitialAssessment_NumeracyLevel_sqlCmd, Rt_wtSIASInitialAssessment_NumeracyLevel_reclist, "WebSelectWidget load operation");
						Rt_wtSIASInitialAssessment_NumeracyLevel_reclist = (RLIALevelsRecordList) Rt_wtSIASInitialAssessment_NumeracyLevel_reclist.Duplicate();
					}
				}
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
				if (Rt_wtSIASInitialAssessment_NumeracyLevel.SpecialListVal == "0")
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
				Rt_wtSIASInitialAssessment_NumeracyLevel_reclist.StartIteration();
				try {
					while (!Rt_wtSIASInitialAssessment_NumeracyLevel_reclist.Eof) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wtSIASInitialAssessment_NumeracyLevel_reclist.CurrentRec.ssENIALevels.ssLabel, Rt_wtSIASInitialAssessment_NumeracyLevel_reclist.CurrentRec.ssENIALevels.ssId));
						if (ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNumeracyLevel == Convert.ToString(Rt_wtSIASInitialAssessment_NumeracyLevel_reclist.CurrentRec.ssENIALevels.ssId)) {
							((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
						}
						Rt_wtSIASInitialAssessment_NumeracyLevel_reclist.Advance();
					}
				} finally {
					Rt_wtSIASInitialAssessment_NumeracyLevel_reclist.EndIteration();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void selSIASInitialAssessment_NumeracyLevel_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wtSIASInitialAssessment_NumeracyLevel.SpecialListVal = dropDown.SelectedValue.Substring(8);
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNumeracyLevel = "";
			}
			else {
				Rt_wtSIASInitialAssessment_NumeracyLevel.SpecialListVal = "";
				try {
					ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNumeracyLevel = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtSIASInitialAssessment_NumeracyLevel)
		/// </summary>
		/// <returns>The Visible State of wtSIASInitialAssessment_NumeracyLevel</returns>
		public bool selSIASInitialAssessment_NumeracyLevel_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtSIASInitialAssessment_NumeracyLevel)
		/// </summary>
		/// <returns>The Enabled State of wtSIASInitialAssessment_NumeracyLevel</returns>
		public bool selSIASInitialAssessment_NumeracyLevel_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return varLcIsEdit; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (selSIASInitialAssessment_NumeracyLevel)
		/// </summary>
		/// <returns>The Mandatory Value of selSIASInitialAssessment_NumeracyLevel</returns>
		public bool selSIASInitialAssessment_NumeracyLevel_isMandatory() {
			return false;
		}

		public void cnt_Container27_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container27_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container27_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container27_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container27)
		/// </summary>
		/// <returns>The Visible State of wt_Container27</returns>
		public bool cnt_Container27_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void selSIASInitialAssessment_ESOLLevel_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

				if (Rt_wtSIASInitialAssessment_ESOLLevel_reclist == null) {
					using(Transaction wtSIASInitialAssessment_ESOLLevel_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
						string wtSIASInitialAssessment_ESOLLevel_sql = "SELECT [ID], [LABEL], NULL, NULL FROM " + ENIALevelsEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " WHERE [IS_ACTIVE] <> 0 OR [ID] = @Selection  ORDER BY [ORDER], [LABEL]";
						Command Rt_wtSIASInitialAssessment_ESOLLevel_sqlCmd = wtSIASInitialAssessment_ESOLLevel_trans.CreateCommand(wtSIASInitialAssessment_ESOLLevel_sql);
						Rt_wtSIASInitialAssessment_ESOLLevel_sqlCmd.CreateParameter("@Selection", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssESOLLevel);
						Rt_wtSIASInitialAssessment_ESOLLevel_sqlCmd.TransformParametersSyntax();
						Rt_wtSIASInitialAssessment_ESOLLevel_reclist = new RLIALevelsRecordList();
						Rt_wtSIASInitialAssessment_ESOLLevel_reclist.Transaction = wtSIASInitialAssessment_ESOLLevel_trans;
						Rt_wtSIASInitialAssessment_ESOLLevel_reclist.AllOptimizedAttributes = new BitArray[1] {
							new BitArray(4, false)
						}
						;
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wtSIASInitialAssessment_ESOLLevel_sqlCmd, Rt_wtSIASInitialAssessment_ESOLLevel_reclist, "WebSelectWidget load operation");
						Rt_wtSIASInitialAssessment_ESOLLevel_reclist = (RLIALevelsRecordList) Rt_wtSIASInitialAssessment_ESOLLevel_reclist.Duplicate();
					}
				}
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
				if (Rt_wtSIASInitialAssessment_ESOLLevel.SpecialListVal == "0")
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
				Rt_wtSIASInitialAssessment_ESOLLevel_reclist.StartIteration();
				try {
					while (!Rt_wtSIASInitialAssessment_ESOLLevel_reclist.Eof) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wtSIASInitialAssessment_ESOLLevel_reclist.CurrentRec.ssENIALevels.ssLabel, Rt_wtSIASInitialAssessment_ESOLLevel_reclist.CurrentRec.ssENIALevels.ssId));
						if (ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssESOLLevel == Convert.ToString(Rt_wtSIASInitialAssessment_ESOLLevel_reclist.CurrentRec.ssENIALevels.ssId)) {
							((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
						}
						Rt_wtSIASInitialAssessment_ESOLLevel_reclist.Advance();
					}
				} finally {
					Rt_wtSIASInitialAssessment_ESOLLevel_reclist.EndIteration();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void selSIASInitialAssessment_ESOLLevel_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wtSIASInitialAssessment_ESOLLevel.SpecialListVal = dropDown.SelectedValue.Substring(8);
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssESOLLevel = "";
			}
			else {
				Rt_wtSIASInitialAssessment_ESOLLevel.SpecialListVal = "";
				try {
					ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssESOLLevel = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtSIASInitialAssessment_ESOLLevel)
		/// </summary>
		/// <returns>The Visible State of wtSIASInitialAssessment_ESOLLevel</returns>
		public bool selSIASInitialAssessment_ESOLLevel_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtSIASInitialAssessment_ESOLLevel)
		/// </summary>
		/// <returns>The Enabled State of wtSIASInitialAssessment_ESOLLevel</returns>
		public bool selSIASInitialAssessment_ESOLLevel_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return varLcIsEdit; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (selSIASInitialAssessment_ESOLLevel)
		/// </summary>
		/// <returns>The Mandatory Value of selSIASInitialAssessment_ESOLLevel</returns>
		public bool selSIASInitialAssessment_ESOLLevel_isMandatory() {
			return false;
		}

		public void cnt_Container12_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container12_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container12_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container12_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container12)
		/// </summary>
		/// <returns>The Visible State of wt_Container12</returns>
		public bool cnt_Container12_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void selSIASInitialAssessment_ITLevel_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

				if (Rt_wtSIASInitialAssessment_ITLevel_reclist == null) {
					using(Transaction wtSIASInitialAssessment_ITLevel_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
						string wtSIASInitialAssessment_ITLevel_sql = "SELECT [ID], [LABEL], NULL, NULL FROM " + ENIALevelsEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " WHERE [IS_ACTIVE] <> 0 OR [ID] = @Selection  ORDER BY [ORDER], [LABEL]";
						Command Rt_wtSIASInitialAssessment_ITLevel_sqlCmd = wtSIASInitialAssessment_ITLevel_trans.CreateCommand(wtSIASInitialAssessment_ITLevel_sql);
						Rt_wtSIASInitialAssessment_ITLevel_sqlCmd.CreateParameter("@Selection", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssITLevel);
						Rt_wtSIASInitialAssessment_ITLevel_sqlCmd.TransformParametersSyntax();
						Rt_wtSIASInitialAssessment_ITLevel_reclist = new RLIALevelsRecordList();
						Rt_wtSIASInitialAssessment_ITLevel_reclist.Transaction = wtSIASInitialAssessment_ITLevel_trans;
						Rt_wtSIASInitialAssessment_ITLevel_reclist.AllOptimizedAttributes = new BitArray[1] {
							new BitArray(4, false)
						}
						;
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wtSIASInitialAssessment_ITLevel_sqlCmd, Rt_wtSIASInitialAssessment_ITLevel_reclist, "WebSelectWidget load operation");
						Rt_wtSIASInitialAssessment_ITLevel_reclist = (RLIALevelsRecordList) Rt_wtSIASInitialAssessment_ITLevel_reclist.Duplicate();
					}
				}
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
				if (Rt_wtSIASInitialAssessment_ITLevel.SpecialListVal == "0")
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
				Rt_wtSIASInitialAssessment_ITLevel_reclist.StartIteration();
				try {
					while (!Rt_wtSIASInitialAssessment_ITLevel_reclist.Eof) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wtSIASInitialAssessment_ITLevel_reclist.CurrentRec.ssENIALevels.ssLabel, Rt_wtSIASInitialAssessment_ITLevel_reclist.CurrentRec.ssENIALevels.ssId));
						if (ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssITLevel == Convert.ToString(Rt_wtSIASInitialAssessment_ITLevel_reclist.CurrentRec.ssENIALevels.ssId)) {
							((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
						}
						Rt_wtSIASInitialAssessment_ITLevel_reclist.Advance();
					}
				} finally {
					Rt_wtSIASInitialAssessment_ITLevel_reclist.EndIteration();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void selSIASInitialAssessment_ITLevel_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wtSIASInitialAssessment_ITLevel.SpecialListVal = dropDown.SelectedValue.Substring(8);
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssITLevel = "";
			}
			else {
				Rt_wtSIASInitialAssessment_ITLevel.SpecialListVal = "";
				try {
					ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssITLevel = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtSIASInitialAssessment_ITLevel)
		/// </summary>
		/// <returns>The Visible State of wtSIASInitialAssessment_ITLevel</returns>
		public bool selSIASInitialAssessment_ITLevel_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtSIASInitialAssessment_ITLevel)
		/// </summary>
		/// <returns>The Enabled State of wtSIASInitialAssessment_ITLevel</returns>
		public bool selSIASInitialAssessment_ITLevel_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return varLcIsEdit; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (selSIASInitialAssessment_ITLevel)
		/// </summary>
		/// <returns>The Mandatory Value of selSIASInitialAssessment_ITLevel</returns>
		public bool selSIASInitialAssessment_ITLevel_isMandatory() {
			return false;
		}

		public void wt_TableCell99_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell99_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell99_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container61_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container61_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container61_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container61_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container61)
		/// </summary>
		/// <returns>The Visible State of wt_Container61</returns>
		public bool cnt_Container61_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container24_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container24_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container24_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container24_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container24)
		/// </summary>
		/// <returns>The Visible State of wt_Container24</returns>
		public bool cnt_Container24_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = DsF8YM7t60uPCVp2vhhh1A) Expression:
		///  InitialAssessment.InitialAssessement.EnglishEnrolmentLevel
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression58() {
			return varLcInitialAssessment.ssSTInitialAssessement.ssEnglishEnrolmentLevel;
		}
		public void cnt_Container5_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container5_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container5_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container5_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container5)
		/// </summary>
		/// <returns>The Visible State of wt_Container5</returns>
		public bool cnt_Container5_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = Zy1MIU3ZDkW9Fk_XXKJDQg) Expression:
		///  InitialAssessment.InitialAssessement.MathsEnrolmentLevel
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression22() {
			return varLcInitialAssessment.ssSTInitialAssessement.ssMathsEnrolmentLevel;
		}
		public void cnt_Container57_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container57_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container57_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container57_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container57)
		/// </summary>
		/// <returns>The Visible State of wt_Container57</returns>
		public bool cnt_Container57_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = FJihTjk8uk2zZFNUTSGeYA) Expression:
		///  InitialAssessment.InitialAssessement.ESOLEnrolmentLevel
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression47() {
			return varLcInitialAssessment.ssSTInitialAssessement.ssESOLEnrolmentLevel;
		}
		public void cnt_Container39_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container39_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container39_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container39_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container39)
		/// </summary>
		/// <returns>The Visible State of wt_Container39</returns>
		public bool cnt_Container39_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = rL_sbZx+U06UiH_7IunbTg) Expression:
		///  InitialAssessment.InitialAssessement.ITEnrolmentLevel
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression66() {
			return varLcInitialAssessment.ssSTInitialAssessement.ssITEnrolmentLevel;
		}
		public void selSIASInitialAssessment_LearningStyle_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

				if (Rt_wtSIASInitialAssessment_LearningStyle_reclist == null) {
					using(Transaction wtSIASInitialAssessment_LearningStyle_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
						string wtSIASInitialAssessment_LearningStyle_sql = "SELECT [ID], [LABEL], NULL, NULL FROM " + ENIALearningStylesEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " WHERE [IS_ACTIVE] <> 0 OR [ID] = @Selection  ORDER BY [ORDER], [LABEL]";
						Command Rt_wtSIASInitialAssessment_LearningStyle_sqlCmd = wtSIASInitialAssessment_LearningStyle_trans.CreateCommand(wtSIASInitialAssessment_LearningStyle_sql);
						Rt_wtSIASInitialAssessment_LearningStyle_sqlCmd.CreateParameter("@Selection", ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLearningStyle);
						Rt_wtSIASInitialAssessment_LearningStyle_sqlCmd.TransformParametersSyntax();
						Rt_wtSIASInitialAssessment_LearningStyle_reclist = new RLIALearningStylesRecordList();
						Rt_wtSIASInitialAssessment_LearningStyle_reclist.Transaction = wtSIASInitialAssessment_LearningStyle_trans;
						Rt_wtSIASInitialAssessment_LearningStyle_reclist.AllOptimizedAttributes = new BitArray[1] {
							new BitArray(4, false)
						}
						;
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wtSIASInitialAssessment_LearningStyle_sqlCmd, Rt_wtSIASInitialAssessment_LearningStyle_reclist, "WebSelectWidget load operation");
						Rt_wtSIASInitialAssessment_LearningStyle_reclist = (RLIALearningStylesRecordList) Rt_wtSIASInitialAssessment_LearningStyle_reclist.Duplicate();
					}
				}
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
				if (Rt_wtSIASInitialAssessment_LearningStyle.SpecialListVal == "0")
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
				Rt_wtSIASInitialAssessment_LearningStyle_reclist.StartIteration();
				try {
					while (!Rt_wtSIASInitialAssessment_LearningStyle_reclist.Eof) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wtSIASInitialAssessment_LearningStyle_reclist.CurrentRec.ssENIALearningStyles.ssLabel, Rt_wtSIASInitialAssessment_LearningStyle_reclist.CurrentRec.ssENIALearningStyles.ssId));
						if (ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLearningStyle == Convert.ToString(Rt_wtSIASInitialAssessment_LearningStyle_reclist.CurrentRec.ssENIALearningStyles.ssId)) {
							((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
						}
						Rt_wtSIASInitialAssessment_LearningStyle_reclist.Advance();
					}
				} finally {
					Rt_wtSIASInitialAssessment_LearningStyle_reclist.EndIteration();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void selSIASInitialAssessment_LearningStyle_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wtSIASInitialAssessment_LearningStyle.SpecialListVal = dropDown.SelectedValue.Substring(8);
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLearningStyle = "";
			}
			else {
				Rt_wtSIASInitialAssessment_LearningStyle.SpecialListVal = "";
				try {
					ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssLearningStyle = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtSIASInitialAssessment_LearningStyle)
		/// </summary>
		/// <returns>The Visible State of wtSIASInitialAssessment_LearningStyle</returns>
		public bool selSIASInitialAssessment_LearningStyle_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtSIASInitialAssessment_LearningStyle)
		/// </summary>
		/// <returns>The Enabled State of wtSIASInitialAssessment_LearningStyle</returns>
		public bool selSIASInitialAssessment_LearningStyle_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return varLcIsEdit; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (selSIASInitialAssessment_LearningStyle)
		/// </summary>
		/// <returns>The Mandatory Value of selSIASInitialAssessment_LearningStyle</returns>
		public bool selSIASInitialAssessment_LearningStyle_isMandatory() {
			return false;
		}

		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtSIASInitialAssessment_Notes_input_value() {
			if (("" !=ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNotes)) {
				return ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNotes;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtSIASInitialAssessment_Notes");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNotes;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtSIASInitialAssessment_Notes_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNotes = ""; 
				} else {
					ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNotes = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				ssSIASInitialAssessmentEditRecord.ssENSIASInitialAssessment.ssNotes = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtSIASInitialAssessment_Notes)
		/// </summary>
		/// <returns>The Visible State of wtSIASInitialAssessment_Notes</returns>
		public bool inputwtSIASInitialAssessment_Notes_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtSIASInitialAssessment_Notes)
		/// </summary>
		/// <returns>The Enabled State of wtSIASInitialAssessment_Notes</returns>
		public bool inputwtSIASInitialAssessment_Notes_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return varLcIsEdit; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtSIASInitialAssessment_Notes)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtSIASInitialAssessment_Notes</returns>
		public bool inputwtSIASInitialAssessment_Notes_isMandatory() {
			return false;
		}

		bool if_wt_If72_hasRun=false;
		bool if_wt_If72_evalResult;
		public bool if_wt_If72() {
			if (if_wt_If72_hasRun) {
				if_wt_If72_hasRun = false;
				return if_wt_If72_evalResult;
			}
			if_wt_If72_hasRun = true;
			if_wt_If72_evalResult = (resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId);
			return if_wt_If72_evalResult;
		}

		public void cnt_Container103_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container103_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container103_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container103_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container103)
		/// </summary>
		/// <returns>The Visible State of wt_Container103</returns>
		public bool cnt_Container103_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container44_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container44_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container44_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container44_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container44)
		/// </summary>
		/// <returns>The Visible State of wt_Container44</returns>
		public bool cnt_Container44_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container43_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container43_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container43_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container43_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container43)
		/// </summary>
		/// <returns>The Visible State of wt_Container43</returns>
		public bool cnt_Container43_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return varLcIsEdit;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container131_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container131_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container131_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container131_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container131)
		/// </summary>
		/// <returns>The Visible State of wt_Container131</returns>
		public bool cnt_Container131_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void Hunspell_webBlck_WebBlockInstance140_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink widget = (proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink) sender;
				widget.inParamTextInputId = this.FindControl("wtSIASInitialAssessment_Notes").ClientID;
				widget.inParamExtraStyle = "";
				widget.inParamInPopupWindow = true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container101_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container101_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container101_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container101_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container101)
		/// </summary>
		/// <returns>The Visible State of wt_Container101</returns>
		public bool cnt_Container101_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance49_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon widget = (ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon) sender;
				widget.inParamTextInputId = this.FindControl("wtSIASInitialAssessment_Notes").ClientID;
				widget.inParamAutoCompleteType = ENAutoCompleteBankTypeEntity.GetRecordByKey(ObjectKey.Parse("jAIPmHz_R0SXwNBFiWjAnA")).ssId;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void wtSIASInitialAssessmentEdit_onDataBindingDataSource(object sender, System.EventArgs e) {
			if (!IsPostBack || IsViewStateEmpty) {
				ssSIASInitialAssessmentEditRecord = queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec;
			}
		}
		public void cnt_Container4_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container4_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container4_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container4_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container4)
		/// </summary>
		/// <returns>The Visible State of wt_Container4</returns>
		public bool cnt_Container4_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void lnkEdit_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wtEdit_Click(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (IsAjaxRequest && e.Equals(EventArgs.Empty) && ((OSPage) Page).TriggersBubbleUpEvents((Control) sender)) {
					return;
				}
				((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
				if (CommandEdit(heContext)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the title of the link (wtEdit)
		/// </summary>
		/// <returns>title of the Link (wtEdit)</returns>
		public string
		lnkEdit_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtEdit)
		/// </summary>
		/// <returns>The Visible State of wtEdit</returns>
		public bool lnkEdit_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtEdit)
		/// </summary>
		/// <returns>The Enabled State of wtEdit</returns>
		public bool lnkEdit_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container134_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container134_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container134_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container134_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container134)
		/// </summary>
		/// <returns>The Visible State of wt_Container134</returns>
		public bool cnt_Container134_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return (!varLcIsEdit);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance40_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("NcdYoHCZikuz1QH+Reihqg")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void lnkSave_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wtSave_Click(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (IsAjaxRequest && e.Equals(EventArgs.Empty) && ((OSPage) Page).TriggersBubbleUpEvents((Control) sender)) {
					return;
				}
				((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
				if (CommandSave(heContext)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the title of the link (wtSave)
		/// </summary>
		/// <returns>title of the Link (wtSave)</returns>
		public string
		lnkSave_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtSave)
		/// </summary>
		/// <returns>The Visible State of wtSave</returns>
		public bool lnkSave_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtSave)
		/// </summary>
		/// <returns>The Enabled State of wtSave</returns>
		public bool lnkSave_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container21_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container21_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container21_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container21_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container21)
		/// </summary>
		/// <returns>The Visible State of wt_Container21</returns>
		public bool cnt_Container21_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return varLcIsEdit;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance63_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("KWHNbVoiY0i7rCt0vNrlbA")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container51_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container51_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container51_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top:7px;margin-left:10px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container51_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container51)
		/// </summary>
		/// <returns>The Visible State of wt_Container51</returns>
		public bool cnt_Container51_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return varLcIsEdit;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void lnk_Link71_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				lnk_Link71_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string lnk_Link71_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color:#666;";
					oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
					} else {
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link71_Click(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (IsAjaxRequest && e.Equals(EventArgs.Empty) && ((OSPage) Page).TriggersBubbleUpEvents((Control) sender)) {
					return;
				}
				((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
				if (CommandCancel(heContext)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link71)
		/// </summary>
		/// <returns>title of the Link (wt_Link71)</returns>
		public string
		lnk_Link71_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link71)
		/// </summary>
		/// <returns>The Visible State of wt_Link71</returns>
		public bool lnk_Link71_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link71)
		/// </summary>
		/// <returns>The Enabled State of wt_Link71</returns>
		public bool lnk_Link71_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public static class FuncCommandCancel {
		}
		public static class FuncCommandEdit {
		}
		public static class FuncCommandSave {
		}
		public static class FuncssPreparation {

			private static void datasetGetEnglishEnrolmentLevelReadDB(ref RCGroupCategoryStudent_GroupIALevelsRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENCategory.Read(r, ref index);
				rec.ssENGroup.Read(r, ref index);
				rec.ssENIALevels.Read(r, ref index);
				rec.ssENStudent_Group.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetEnglishEnrolmentLevel" of Action "Preparation"
			/// </summary>
			public static RLGroupCategoryStudent_GroupIALevelsRecordList datasetGetEnglishEnrolmentLevel(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, ENIALevels.[LABEL] o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27");
				fromBuilder.Append(" FROM ((({Student_Group} ENStudent_Group Left JOIN {Group} ENGroup ON (ENStudent_Group.[GROUPID] = ENGroup.[ID]))  Left JOIN {Category} ENCategory ON (ENGroup.[CATEGORY] = ENCategory.[ID]))  Left JOIN {IALevels} ENIALevels ON (ENGroup.[IALEVEL] = ENIALevels.[ID])) ");
				whereBuilder.Append(" WHERE (ENGroup.[CATEGORY] = ");
				whereBuilder.Append(ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("hh0WWQ2FF0acLTzRV4EL3Q")).ssId);
				whereBuilder.Append(") AND ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudent_Group.[STUDENTREFERENCE] = @qpstP) AND (ENStudent_Group.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudent_Group.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (ENStudent_Group.[ENROLMENTSTATUS] = N'Active')");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLGroupCategoryStudent_GroupIALevelsRecordList outParamList = new RLGroupCategoryStudent_GroupIALevelsRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetEnglishEnrolmentLevelReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[4];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true
				}
				);
				opt[3] = new BitArray(new bool[] {
					true, false, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLGroupCategoryStudent_GroupIALevelsRecordList _tmp = new RLGroupCategoryStudent_GroupIALevelsRecordList();
					_tmp.AlternateReadDBMethod = datasetGetEnglishEnrolmentLevelReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.TAB_InitialAssessment.Preparation.GetEnglishEnrolmentLevel.List");
						outParamList = (RLGroupCategoryStudent_GroupIALevelsRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.TAB_InitialAssessment.Preparation.GetEnglishEnrolmentLevel.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLGroupCategoryStudent_GroupIALevelsRecordList _tmp = new RLGroupCategoryStudent_GroupIALevelsRecordList();
						_tmp.AlternateReadDBMethod = datasetGetEnglishEnrolmentLevelReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.TAB_InitialAssessment.Preparation.GetEnglishEnrolmentLevel.List");
							outParamList = (RLGroupCategoryStudent_GroupIALevelsRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.TAB_InitialAssessment.Preparation.GetEnglishEnrolmentLevel.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetMathsEnrolmentLevelReadDB(ref RCGroupCategoryStudent_GroupIALevelsRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENCategory.Read(r, ref index);
				rec.ssENGroup.Read(r, ref index);
				rec.ssENIALevels.Read(r, ref index);
				rec.ssENStudent_Group.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetMathsEnrolmentLevel" of Action "Preparation"
			/// </summary>
			public static RLGroupCategoryStudent_GroupIALevelsRecordList datasetGetMathsEnrolmentLevel(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, ENIALevels.[LABEL] o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27");
				fromBuilder.Append(" FROM ((({Student_Group} ENStudent_Group Left JOIN {Group} ENGroup ON (ENStudent_Group.[GROUPID] = ENGroup.[ID]))  Left JOIN {Category} ENCategory ON (ENGroup.[CATEGORY] = ENCategory.[ID]))  Left JOIN {IALevels} ENIALevels ON (ENGroup.[IALEVEL] = ENIALevels.[ID])) ");
				whereBuilder.Append(" WHERE (ENGroup.[CATEGORY] = ");
				whereBuilder.Append(ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("9J+4M6ZeU0+g4qKAzSFbVg")).ssId);
				whereBuilder.Append(") AND ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudent_Group.[STUDENTREFERENCE] = @qpstP) AND (ENStudent_Group.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudent_Group.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (ENStudent_Group.[ENROLMENTSTATUS] = N'Active')");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLGroupCategoryStudent_GroupIALevelsRecordList outParamList = new RLGroupCategoryStudent_GroupIALevelsRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetMathsEnrolmentLevelReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[4];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true
				}
				);
				opt[3] = new BitArray(new bool[] {
					true, false, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLGroupCategoryStudent_GroupIALevelsRecordList _tmp = new RLGroupCategoryStudent_GroupIALevelsRecordList();
					_tmp.AlternateReadDBMethod = datasetGetMathsEnrolmentLevelReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.TAB_InitialAssessment.Preparation.GetMathsEnrolmentLevel.List");
						outParamList = (RLGroupCategoryStudent_GroupIALevelsRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.TAB_InitialAssessment.Preparation.GetMathsEnrolmentLevel.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLGroupCategoryStudent_GroupIALevelsRecordList _tmp = new RLGroupCategoryStudent_GroupIALevelsRecordList();
						_tmp.AlternateReadDBMethod = datasetGetMathsEnrolmentLevelReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.TAB_InitialAssessment.Preparation.GetMathsEnrolmentLevel.List");
							outParamList = (RLGroupCategoryStudent_GroupIALevelsRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.TAB_InitialAssessment.Preparation.GetMathsEnrolmentLevel.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			/// <summary>
			/// Query Function "GetSIASInitialAssessmentsByStudentId" of Action "Preparation"
			/// </summary>
			public static RLSIASInitialAssessmentRecordList datasetGetSIASInitialAssessmentsByStudentId(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("ENSIASInitialAssessment.[ID] o1, ENSIASInitialAssessment.[STUDENTID] o2, ENSIASInitialAssessment.[NUMERACYINITIALLEVEL] o3, ENSIASInitialAssessment.[NUMERACYLEVEL] o4, NULL o5, ENSIASInitialAssessment.[LITERACYINITIALLEVEL] o6, ENSIASInitialAssessment.[LITERACYLEVEL] o7, NULL o8, ENSIASInitialAssessment.[ITINITIALLEVEL] o9, ENSIASInitialAssessment.[ITLEVEL] o10, NULL o11, ENSIASInitialAssessment.[ESOLINITIALLEVEL] o12, ENSIASInitialAssessment.[ESOLLEVEL] o13, NULL o14, NULL o15, ENSIASInitialAssessment.[LEARNINGSTYLE] o16, ENSIASInitialAssessment.[NOTES] o17, NULL o18, NULL o19, ENSIASInitialAssessment.[CREATEDON] o20, ENSIASInitialAssessment.[CREATEDBY] o21, NULL o22, NULL o23, NULL o24, NULL o25");
				fromBuilder.Append(" FROM {SIASInitialAssessment} ENSIASInitialAssessment");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENSIASInitialAssessment.[STUDENTID] = @qpstP) AND (ENSIASInitialAssessment.[STUDENTID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENSIASInitialAssessment.[STUDENTID] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLSIASInitialAssessmentRecordList outParamList = new RLSIASInitialAssessmentRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					false, false, false, false, true, false, false, true, false, false, true, false, false, true, true, false, false, true, true, false, false, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLSIASInitialAssessmentRecordList _tmp = new RLSIASInitialAssessmentRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.TAB_InitialAssessment.Preparation.GetSIASInitialAssessmentsByStudentId.List");
						outParamList = (RLSIASInitialAssessmentRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.TAB_InitialAssessment.Preparation.GetSIASInitialAssessmentsByStudentId.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLSIASInitialAssessmentRecordList _tmp = new RLSIASInitialAssessmentRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.TAB_InitialAssessment.Preparation.GetSIASInitialAssessmentsByStudentId.List");
							outParamList = (RLSIASInitialAssessmentRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.TAB_InitialAssessment.Preparation.GetSIASInitialAssessmentsByStudentId.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}

		public override Control FindControl(string id) {
			return base.FindControl(id);
		}
		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			_isRendering = true;
			Page_Load(null, null); _isRendering = false;
			this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}
		public override string WebBlockIdentifier {
			get {
				return "CaseConferencing.KUA21XlYyHkCQ3hMbEKd7Rg";
			}
		}
	}

}
