/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Web.SessionState;
using System.IO;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Runtime.Serialization;
using System.Web.Caching;
using System.Text;


namespace ssCaseConferencing.Flows.FlowLearner_InitialAssessment {
	public abstract class WBlkCourse_SIAS_IA: OSUserControl, IWebScreen, INegotiateTabIndexes, IAjaxNotifyEvent {

		/// <summary>
		/// Delegate Definitions
		/// </summary>
		/// <summary>
		/// Custom Events Definitions
		/// </summary>
		/// <summary>
		/// Parameters and Local Variables Definitions
		/// </summary>
		/// <summary>
		/// Screen Input Parameter inParamCourseCode. Description:
		/// </summary>
		public string inParamCourseCode = "";
		/// <summary>
		/// Variable <code>varLcInitialAssessmentRecord</code> that represents the Service Studio local
		///  variable <code>InitialAssessmentRecord</code> <p>Description: </p>
		/// </summary>
		RCStudentSIASInitialAssessmentRecord varLcInitialAssessmentRecord = new RCStudentSIASInitialAssessmentRecord(null);

		/// <summary>
		/// Variable <code>varLcInitialAssessmentRecordList</code> that represents the Service Studio local
		///  variable <code>InitialAssessmentRecordList</code> <p>Description: </p>
		/// </summary>
		RLStudentSIASInitialAssessmentRecordList varLcInitialAssessmentRecordList = new RLStudentSIASInitialAssessmentRecordList();

		/// <summary>
		/// Variable <code>varLcdummy</code> that represents the Service Studio local variable
		///  <code>dummy</code> <p>Description: </p>
		/// </summary>
		string varLcdummy = "";

		protected OutSystems.HubEdition.WebWidgets.Container wtLearnerListWrapper;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container79;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container63;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container60;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container112;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container95;
		private RLStudentSIASInitialAssessmentRecordList _ssLearnerListList = new RLStudentSIASInitialAssessmentRecordList();
		public RLStudentSIASInitialAssessmentRecordList ssLearnerListList {
			get {
				return _ssLearnerListList; 
			}
			set {
				_ssLearnerListList = value;
				wtLearnerList.DataSource = value;
				ssLearnerListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtLearnerList;
		public ArrayList wtLearnerList_storage = new ArrayList();
		protected bool ssLearnerListList_notUsedYet = true;
		protected bool ssLearnerListListDoDataBind;
		protected bool ssLearnerListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container106;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container110;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container31;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container71;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container44;
		/// <summary>
		/// Variable (wt_Link23) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link23;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container49;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container75;
		/// <summary>
		/// Variable "True" if the Widget wt_If115
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If115T;

		/// <summary>
		/// Variable "True" if the Widget wt_If115
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If115F;
		/// <summary>
		/// Variable "True" if the Widget wt_If7
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If7T;

		/// <summary>
		/// Variable "True" if the Widget wt_If7
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If7F;
		/// <summary>
		/// Variable "True" if the Widget wt_If100
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If100T;

		/// <summary>
		/// Variable "True" if the Widget wt_If100
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If100F;
		/// <summary>
		/// Variable "True" if the Widget wt_If15
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If15T;

		/// <summary>
		/// Variable "True" if the Widget wt_If15
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If15F;
		/// <summary>
		/// Variable "True" if the Widget wt_If53
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If53T;

		/// <summary>
		/// Variable "True" if the Widget wt_If53
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If53F;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_ComboBox56ValidatorRequired;
		protected SelectRtWidget Rt_wt_ComboBox56 = new SelectRtWidget();
		RLIALevelsRecordList Rt_wt_ComboBox56_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_ComboBox87ValidatorRequired;
		protected SelectRtWidget Rt_wt_ComboBox87 = new SelectRtWidget();
		RLIALevelsRecordList Rt_wt_ComboBox87_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_ComboBox26ValidatorRequired;
		protected SelectRtWidget Rt_wt_ComboBox26 = new SelectRtWidget();
		RLIALevelsRecordList Rt_wt_ComboBox26_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_ComboBox78ValidatorRequired;
		protected SelectRtWidget Rt_wt_ComboBox78 = new SelectRtWidget();
		RLIALevelsRecordList Rt_wt_ComboBox78_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_ComboBox67ValidatorRequired;
		protected SelectRtWidget Rt_wt_ComboBox67 = new SelectRtWidget();
		RLIALearningStylesRecordList Rt_wt_ComboBox67_reclist = null;
		/// <summary>
		/// Variable "True" if the Widget wt_If19
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If19T;

		/// <summary>
		/// Variable "True" if the Widget wt_If19
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If19F;
		/// <summary>
		/// Variable "True" if the Widget wt_If46
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If46T;

		/// <summary>
		/// Variable "True" if the Widget wt_If46
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If46F;
		/// <summary>
		/// Variable "True" if the Widget wt_If70
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If70T;

		/// <summary>
		/// Variable "True" if the Widget wt_If70
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If70F;
		/// <summary>
		/// Variable "True" if the Widget wt_If74
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If74T;

		/// <summary>
		/// Variable "True" if the Widget wt_If74
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If74F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container13;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container62;
		/// <summary>
		/// Variable (wtPopupNotesLnk) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wtPopupNotesLnk;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container22;
		private bool _isRendering = false;
		public HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();
		public string InstanceID;
		public string RuntimeID= "";
		int resUserCheck_outParamPermissionType = 0;
		RLForSkillsInitialAssessmentRecordList resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentForLearner = new RLForSkillsInitialAssessmentRecordList();
		RCForSkillsInitialAssessmentSummaryRecord resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary = new RCForSkillsInitialAssessmentSummaryRecord(null);
		RLGroupStudent_GroupStudentRecordList queryResGetGroup2s_outParamList = new RLGroupStudent_GroupStudentRecordList();
		int queryResGetGroup2s_outParamCount = 0;
		RLStudentSIASInitialAssessmentRecordList queryResGetSIASInitialAssessmentsByStudentId_outParamList = new RLStudentSIASInitialAssessmentRecordList();
		int queryResGetSIASInitialAssessmentsByStudentId_outParamCount = 0;
		RLGroupCategoryStudent_GroupIALevelsRecordList queryResGetEnglishEnrolmentLevel_outParamList = new RLGroupCategoryStudent_GroupIALevelsRecordList();
		int queryResGetEnglishEnrolmentLevel_outParamCount = 0;
		RLGroupCategoryStudent_GroupIALevelsRecordList queryResGetMathsEnrolmentLevel_outParamList = new RLGroupCategoryStudent_GroupIALevelsRecordList();
		int queryResGetMathsEnrolmentLevel_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// UserCheck
			Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("BdSwjq8l9Uut8VgU4iW3KQ")).ssId, out resUserCheck_outParamPermissionType);
			// Query datasetGetGroup2s
			int datasetGetGroup2s_maxRecords = 0;
			queryResGetGroup2s_outParamList = FuncssPreparation.datasetGetGroup2s(heContext, datasetGetGroup2s_maxRecords, IterationMultiplicity.Single, out queryResGetGroup2s_outParamCount, inParamCourseCode
			);
			// Foreach GetGroup2s.List
			queryResGetGroup2s_outParamList.StartIteration();
			try {
				while (! queryResGetGroup2s_outParamList.Eof) {
					if ((queryResGetGroup2s_outParamList.CurrentRec.ssENStudent_Group.ssStudentReference==BuiltInFunction.TextToEntityRefText("30477715"))) {
						varLcdummy = "dummy"; // dummy = "dummy"

					}
					// Query datasetGetSIASInitialAssessmentsByStudentId
					int datasetGetSIASInitialAssessmentsByStudentId_maxRecords = 0;
					queryResGetSIASInitialAssessmentsByStudentId_outParamList = FuncssPreparation.datasetGetSIASInitialAssessmentsByStudentId(heContext, datasetGetSIASInitialAssessmentsByStudentId_maxRecords, IterationMultiplicity.Never, out queryResGetSIASInitialAssessmentsByStudentId_outParamCount, queryResGetGroup2s_outParamList.CurrentRec.ssENStudent_Group.ssStudentReference
					);
					// GetForSkillsInitialAssessmentForLearner
					Actions.ActionGetForSkillsInitialAssessmentForLearner(heContext, BuiltInFunction.EntityRefTextToText(queryResGetGroup2s_outParamList.CurrentRec.ssENStudent_Group.ssStudentReference), out resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentForLearner, out resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary);
					if ((resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssEnglishLevel!= "")) {
						queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssLiteracyInitialLevel = Functions.ActionGetIALevel(heContext, resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssEnglishLevel); // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.LiteracyInitialLevel =
						// GetIALevel(GetForSkillsInitialAssessmentForLearner.ForSkillsInitialAssessmentSummary.ForSkillsInitialAssessmentSum
						// mary.EnglishLevel)
						queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssLiteracySource = "ForSkills"; // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.LiteracySource = "ForSkills"

					} else {
						if ((queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssLiteracyInitialLevel!=BuiltInFunction.NullTextIdentifier())) {
							queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssLiteracySource = "BKSB"; // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.LiteracySource = "BKSB"

						}

					}
					if ((resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssMathsLevel!= "")) {
						queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssNumeracyInitialLevel = Functions.ActionGetIALevel(heContext, resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssMathsLevel); // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.NumeracyInitialLevel =
						// GetIALevel(GetForSkillsInitialAssessmentForLearner.ForSkillsInitialAssessmentSummary.ForSkillsInitialAssessmentSum
						// mary.MathsLevel)
						queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssNumeracySource = "ForSkills"; // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.NumeracySource = "ForSkills"

					} else {
						if ((queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssNumeracyInitialLevel!=BuiltInFunction.NullTextIdentifier())) {
							queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssNumeracySource = "BKSB"; // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.NumeracySource = "BKSB"

						}

					}
					if ((resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssItLevel!= "")) {
						queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssITInitialLevel = Functions.ActionGetIALevel(heContext, resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssItLevel); // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.ITInitialLevel =
						// GetIALevel(GetForSkillsInitialAssessmentForLearner.ForSkillsInitialAssessmentSummary.ForSkillsInitialAssessmentSum
						// mary.ItLevel)
						queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssITSource = "ForSkills"; // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.ITSource = "ForSkills"

					} else {
						if ((queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssITInitialLevel!=BuiltInFunction.NullTextIdentifier())) {
							queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssITSource = "BKSB"; // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.ITSource = "BKSB"

						}

					}
					if ((resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssESOLLevel!= "")) {
						queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssESOLInitialLevel = Functions.ActionGetIALevel(heContext, resGetForSkillsInitialAssessmentForLearner_outParamForSkillsInitialAssessmentSummary.ssSTForSkillsInitialAssessmentSummary.ssESOLLevel); // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.ESOLInitialLevel =
						// GetIALevel(GetForSkillsInitialAssessmentForLearner.ForSkillsInitialAssessmentSummary.ForSkillsInitialAssessmentSum
						// mary.ESOLLevel)
						queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssESOLSource = "ForSkills"; // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.ESOLSource = "ForSkills"

					} else {
						if ((queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssESOLInitialLevel!=BuiltInFunction.NullTextIdentifier())) {
							queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssESOLSource = "BKSB"; // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.ESOLSource = "BKSB"

						}

					}
					// Query datasetGetMathsEnrolmentLevel
					int datasetGetMathsEnrolmentLevel_maxRecords = 0;
					queryResGetMathsEnrolmentLevel_outParamList = FuncssPreparation.datasetGetMathsEnrolmentLevel(heContext, datasetGetMathsEnrolmentLevel_maxRecords, IterationMultiplicity.Never, out queryResGetMathsEnrolmentLevel_outParamCount, queryResGetGroup2s_outParamList.CurrentRec.ssENStudent_Group.ssStudentReference
					);
					// Query datasetGetEnglishEnrolmentLevel
					int datasetGetEnglishEnrolmentLevel_maxRecords = 0;
					queryResGetEnglishEnrolmentLevel_outParamList = FuncssPreparation.datasetGetEnglishEnrolmentLevel(heContext, datasetGetEnglishEnrolmentLevel_maxRecords, IterationMultiplicity.Never, out queryResGetEnglishEnrolmentLevel_outParamCount, queryResGetGroup2s_outParamList.CurrentRec.ssENStudent_Group.ssStudentReference
					);
					queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssLiteracyInitialLevelEnroleme = Functions.ActionGetIALevel(heContext, queryResGetEnglishEnrolmentLevel_outParamList.CurrentRec.ssENIALevels.ssLabel); // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.LiteracyInitialLevelEnroleme =
					// GetIALevel(GetEnglishEnrolmentLevel.List.Current.IALevels.Label)
					queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec.ssENSIASInitialAssessment.ssNumeracyLevelEnrolement = Functions.ActionGetIALevel(heContext, queryResGetMathsEnrolmentLevel_outParamList.CurrentRec.ssENIALevels.ssLabel); // GetSIASInitialAssessmentsByStudentId.List.Current.SIASInitialAssessment.NumeracyLevelEnrolement =
					// GetIALevel(GetMathsEnrolmentLevel.List.Current.IALevels.Label)
					varLcInitialAssessmentRecord = queryResGetSIASInitialAssessmentsByStudentId_outParamList.CurrentRec; // InitialAssessmentRecord = GetSIASInitialAssessmentsByStudentId.List.Current
					// ListAppend
					ExtendedActions.ListAppend(heContext, varLcInitialAssessmentRecordList, varLcInitialAssessmentRecord);
					queryResGetGroup2s_outParamList.Advance();
				}
			} finally {
				queryResGetGroup2s_outParamList.EndIteration();
			}
		}
		static WBlkCourse_SIAS_IA() {
		}
		override protected void OnInit(EventArgs e) {
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wtLearnerList.StartIndexExpression = () => Functions.rssespacerichwidgets_ActionList_Navigation_GetStartIndex(heContext, wtLearnerList.ClientID, false, -1);
			wtLearnerList.LineCountExpression = () => 999;
			wtLearnerList.EmptyMessageExpression = () => "No items to show...";
			this.Load += new System.EventHandler(this.Page_Load);
			this.Unload += new System.EventHandler(this.Page_Unload);
		}
		private void Page_Load(object sender, System.EventArgs e) {
			((OSPageViewState) Page).EnableResetViewState();
			heContext = Global.App.OsContext;
			RuntimeID = ClientID;
			if (!Visible) return;
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!IsPostBack || _isRendering) {
					// register this block in the page so for later outputting the block javascript includes in their correct order
					((OSPage) Page).RegisterBlock(this);
					if (_isRendering) {
						Preparation(heContext);
					}
					bool bindEditRecords = IsViewStateEmpty;
					ssLearnerListListDoDataBind = true;
				} else {
					FetchViewState();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}
		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			if (!WasRendered) {
				return;
			}
			ValidationUtils.ValidateComboBox(FindControl("wtLearnerList"), "wt_ComboBox56", parentEditRecord, validate);
			ValidationUtils.ValidateComboBox(FindControl("wtLearnerList"), "wt_ComboBox87", parentEditRecord, validate);
			ValidationUtils.ValidateComboBox(FindControl("wtLearnerList"), "wt_ComboBox26", parentEditRecord, validate);
			ValidationUtils.ValidateComboBox(FindControl("wtLearnerList"), "wt_ComboBox78", parentEditRecord, validate);
			ValidationUtils.ValidateComboBox(FindControl("wtLearnerList"), "wt_ComboBox67", parentEditRecord, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}
		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}
		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}


		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();

			#region store varLcInitialAssessmentRecordList.

			int tmpcurrentrownumbervarLcInitialAssessmentRecordList = varLcInitialAssessmentRecordList.CurrentRowNumber;
			bool tmpeofvarLcInitialAssessmentRecordList = varLcInitialAssessmentRecordList.Eof;
			ArrayList storevarLcInitialAssessmentRecordList = new ArrayList();

			// Write the needed fields of varLcInitialAssessmentRecordList to the storevarLcInitialAssessmentRecordList
			if (!varLcInitialAssessmentRecordList.Empty) {
				try {
					varLcInitialAssessmentRecordList.StartIteration();

					while (!varLcInitialAssessmentRecordList.Eof) {
						ArrayList tmpFieldsvarLcInitialAssessmentRecordList = new ArrayList();
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENStudent.ssStudentReference == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENStudent.ssStudentReference);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENStudent.ssForenames == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENStudent.ssForenames);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENStudent.ssSurname == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENStudent.ssSurname);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENStudent.ssStudentPhotoURL == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENStudent.ssStudentPhotoURL);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(varLcInitialAssessmentRecordList.CurrentRec.ssENStudent.ChangedAttributes, new BitArray(new bool[] {
							true, true, true, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsvarLcInitialAssessmentRecordList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(varLcInitialAssessmentRecordList.CurrentRec.ssENStudent.OptimizedAttributes, new BitArray(new bool[] {
							false, false, false, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssId == 0?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssId);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssStudentId == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssStudentId);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssNumeracyInitialLevel == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssNumeracyInitialLevel);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssNumeracyLevel == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssNumeracyLevel);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssNumeracyLevelEnrolement == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssNumeracyLevelEnrolement);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLiteracyInitialLevel == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLiteracyInitialLevel);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLiteracyLevel == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLiteracyLevel);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLiteracyInitialLevelEnroleme == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLiteracyInitialLevelEnroleme);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssITInitialLevel == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssITInitialLevel);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssITLevel == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssITLevel);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssITLevelEnrolement == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssITLevelEnrolement);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssESOLInitialLevel == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssESOLInitialLevel);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssESOLLevel == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssESOLLevel);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssESOLLevelEnrolement == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssESOLLevelEnrolement);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLearningStyleInitial == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLearningStyleInitial);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLearningStyle == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLearningStyle);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssNotes == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssNotes);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLastUpdateOn == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLastUpdateOn);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLastUpdateBy == 0?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLastUpdateBy);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssCreatedOn == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssCreatedOn);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssCreatedBy == 0?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssCreatedBy);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssNumeracySource == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssNumeracySource);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLiteracySource == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssLiteracySource);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssESOLSource == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssESOLSource);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssITSource == "" ?(object) null: varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ssITSource);
						tmpFieldsvarLcInitialAssessmentRecordList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.ChangedAttributes, new BitArray(new bool[] {
							true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsvarLcInitialAssessmentRecordList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(varLcInitialAssessmentRecordList.CurrentRec.ssENSIASInitialAssessment.OptimizedAttributes, new BitArray(new bool[] {
							false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
						}
						))));
						storevarLcInitialAssessmentRecordList.Add(tmpFieldsvarLcInitialAssessmentRecordList);
						varLcInitialAssessmentRecordList.Advance();
					}
				} finally {
					varLcInitialAssessmentRecordList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("varLcInitialAssessmentRecordList", storevarLcInitialAssessmentRecordList, null);

			#endregion


			#region store varLcInitialAssessmentRecordList runtime properties state.

			ViewStateAttributes.SetInViewState("varLcInitialAssessmentRecordList_currentrownumber", tmpcurrentrownumbervarLcInitialAssessmentRecordList, 0);
			ViewStateAttributes.SetInViewState("varLcInitialAssessmentRecordList_eof", tmpeofvarLcInitialAssessmentRecordList, false);
			varLcInitialAssessmentRecordList.RestoreRecordListState(tmpcurrentrownumbervarLcInitialAssessmentRecordList, tmpeofvarLcInitialAssessmentRecordList);

			#endregion

			if (IsAjaxRequest) {
				recListLearnerList_Rebuild((ssLearnerListListDataBound ? wtLearnerList.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtLearnerList.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtLearnerList_list", wtLearnerList_storage, null);
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			if (IsViewStateEmpty) return;
			try {

				#region fetch varLcInitialAssessmentRecordList.

				// Read the needed fields of varLcInitialAssessmentRecordList from storevarLcInitialAssessmentRecordList
				varLcInitialAssessmentRecordList = new RLStudentSIASInitialAssessmentRecordList();
				ArrayList storevarLcInitialAssessmentRecordList;
				storevarLcInitialAssessmentRecordList = (ArrayList) ViewStateAttributes.GetFromViewState("varLcInitialAssessmentRecordList", null);
				if (storevarLcInitialAssessmentRecordList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsvarLcInitialAssessmentRecordList in storevarLcInitialAssessmentRecordList) {
						if (tmpFieldsvarLcInitialAssessmentRecordList != null) {
							// Aux current record variable
							RCStudentSIASInitialAssessmentRecord tmpAuxCurrentRecordvarLcInitialAssessmentRecordList = new RCStudentSIASInitialAssessmentRecord(null);
							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENStudent.ssStudentReference = (string) (tmpFieldsvarLcInitialAssessmentRecordList[0] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[0]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENStudent.ssForenames = (string) (tmpFieldsvarLcInitialAssessmentRecordList[1] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[1]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENStudent.ssSurname = (string) (tmpFieldsvarLcInitialAssessmentRecordList[2] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[2]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENStudent.ssStudentPhotoURL = (string) (tmpFieldsvarLcInitialAssessmentRecordList[3] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[3]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENStudent.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcInitialAssessmentRecordList[4]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENStudent.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcInitialAssessmentRecordList[5]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssId = (int) (tmpFieldsvarLcInitialAssessmentRecordList[6] == null ? 0: tmpFieldsvarLcInitialAssessmentRecordList[6]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssStudentId = (string) (tmpFieldsvarLcInitialAssessmentRecordList[7] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[7]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssNumeracyInitialLevel = (string) (tmpFieldsvarLcInitialAssessmentRecordList[8] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[8]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssNumeracyLevel = (string) (tmpFieldsvarLcInitialAssessmentRecordList[9] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[9]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssNumeracyLevelEnrolement = (string) (tmpFieldsvarLcInitialAssessmentRecordList[10] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[10]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssLiteracyInitialLevel = (string) (tmpFieldsvarLcInitialAssessmentRecordList[11] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[11]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssLiteracyLevel = (string) (tmpFieldsvarLcInitialAssessmentRecordList[12] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[12]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssLiteracyInitialLevelEnroleme = (string) (tmpFieldsvarLcInitialAssessmentRecordList[13] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[13]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssITInitialLevel = (string) (tmpFieldsvarLcInitialAssessmentRecordList[14] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[14]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssITLevel = (string) (tmpFieldsvarLcInitialAssessmentRecordList[15] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[15]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssITLevelEnrolement = (string) (tmpFieldsvarLcInitialAssessmentRecordList[16] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[16]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssESOLInitialLevel = (string) (tmpFieldsvarLcInitialAssessmentRecordList[17] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[17]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssESOLLevel = (string) (tmpFieldsvarLcInitialAssessmentRecordList[18] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[18]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssESOLLevelEnrolement = (string) (tmpFieldsvarLcInitialAssessmentRecordList[19] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[19]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssLearningStyleInitial = (string) (tmpFieldsvarLcInitialAssessmentRecordList[20] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[20]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssLearningStyle = (string) (tmpFieldsvarLcInitialAssessmentRecordList[21] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[21]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssNotes = (string) (tmpFieldsvarLcInitialAssessmentRecordList[22] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[22]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssLastUpdateOn = (DateTime) (tmpFieldsvarLcInitialAssessmentRecordList[23] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcInitialAssessmentRecordList[23]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssLastUpdateBy = (int) (tmpFieldsvarLcInitialAssessmentRecordList[24] == null ? 0: tmpFieldsvarLcInitialAssessmentRecordList[24]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssCreatedOn = (DateTime) (tmpFieldsvarLcInitialAssessmentRecordList[25] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcInitialAssessmentRecordList[25]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssCreatedBy = (int) (tmpFieldsvarLcInitialAssessmentRecordList[26] == null ? 0: tmpFieldsvarLcInitialAssessmentRecordList[26]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssNumeracySource = (string) (tmpFieldsvarLcInitialAssessmentRecordList[27] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[27]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssLiteracySource = (string) (tmpFieldsvarLcInitialAssessmentRecordList[28] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[28]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssESOLSource = (string) (tmpFieldsvarLcInitialAssessmentRecordList[29] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[29]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ssITSource = (string) (tmpFieldsvarLcInitialAssessmentRecordList[30] == null ? "": tmpFieldsvarLcInitialAssessmentRecordList[30]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcInitialAssessmentRecordList[31]);

							tmpAuxCurrentRecordvarLcInitialAssessmentRecordList.ssENSIASInitialAssessment.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcInitialAssessmentRecordList[32]);

							varLcInitialAssessmentRecordList.Append(tmpAuxCurrentRecordvarLcInitialAssessmentRecordList);
						}
					}
				}
				varLcInitialAssessmentRecordList.CurrentRowNumber = -1;
				#endregion


				#region fetch varLcInitialAssessmentRecordList runtime properties state.

				int tmpcurrentrownumbervarLcInitialAssessmentRecordList;
				tmpcurrentrownumbervarLcInitialAssessmentRecordList = (int) ViewStateAttributes.GetFromViewState("varLcInitialAssessmentRecordList_currentrownumber", 0);
				bool tmpeofvarLcInitialAssessmentRecordList;
				tmpeofvarLcInitialAssessmentRecordList = (bool) ViewStateAttributes.GetFromViewState("varLcInitialAssessmentRecordList_eof", false);
				varLcInitialAssessmentRecordList.RestoreRecordListState(tmpcurrentrownumbervarLcInitialAssessmentRecordList, tmpeofvarLcInitialAssessmentRecordList);

				#endregion

				recListLearnerList_Restore();
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}

		/// <summary>
		/// Store visibility information of the web block and input widgets in the viewstate
		/// </summary>
		protected override void StoreInputsAndWebBlockVisibility() {
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore visibility information of the web block and input widgets from the viewstate
		/// </summary>
		protected override void RestoreInputsAndWebBlockVisibility() {
			WasRendered = true;
		}

		private void Page_Unload(object sender, System.EventArgs e) {
		}

		public LocalState PushStack() {
			throw new NotImplementedException();
		}

		public void doRefreshScreen(HeContext heContext) {
			((IWebScreen) this.Parent.Page).doRefreshScreen(heContext);
		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			StoreViewState();
			((IWebScreen) this.Parent.Page).doAJAXRefreshScreen(heContext);
		}

		public static void GetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			string blockId = "CaseConferencing.KbnqHV9Lspka2sNyoU2BZIw";
			if (visited.Contains(blockId)) {
				return; 
			}
			visited.Add(blockId);
			if (!inline) {
				GetCssIncludes(writer, visited);
			} else {
				GetInlineCss(writer, visited);
			}
		}

		private static void GetCssIncludes(TextWriter writer, HashSet<string> visited) {
			InnerGetCss(writer, false, visited);
		}

		private static void GetInlineCss(TextWriter writer, HashSet<string> visited) {
			StringWriter localCssWriter = new StringWriter();
			localCssWriter.NewLine = writer.NewLine;
			string localCss = Environment.NewLine;
			InnerGetCss(localCssWriter, true, visited);
			localCss += localCssWriter.ToString();
			writer.Write(localCss);
		}

		private static void InnerGetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor.GetCss(writer, inline, visited);
		}

		private void Page_Error(object sender, System.EventArgs e) {
		}
		public void CheckPermissions(HeContext heContext) {
			((IWebScreen) this.Page).CheckPermissions(heContext);
		}
		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}

		public ObjectKey Key {
			get {
				return ObjectKey.Parse("bnqHV9Lspka2sNyoU2BZIw"); 
			}
		}
		public bool isSecure {
			get {
				return ((IWebScreen) Page).isSecure; 
			}
		}
		public class lcvOnChange: VarsBag {
			public bool inParamIsNotes;
			public int resCreateOrUpdateSIASInitialAssessment_outParamId = 0;

			public string resNotifyWidgetGetMessage_outParamMessage = "";

			public lcvOnChange(bool inParamIsNotes) {
				this.inParamIsNotes = inParamIsNotes;
			}
		}
		/// <summary>
		/// Action <code>CommandOnChange</code> that represents the Service Studio screen action
		///  <code>OnChange</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnChange(HeContext heContext, bool inParamIsNotes) {
			CheckPermissions(heContext);
			lcvOnChange localVars = new lcvOnChange(inParamIsNotes);
			try {
				if (localVars.inParamIsNotes) {
					// NotifyWidgetGetMessage
					ExtendedActions.NotifyWidgetGetMessage(heContext, out localVars.resNotifyWidgetGetMessage_outParamMessage);
					// Set Notes
					getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNotes = localVars.resNotifyWidgetGetMessage_outParamMessage; // LearnerList.List.Current.SIASInitialAssessment.Notes = NotifyWidgetGetMessage.Message

				}
				// New
				if ((getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssId==BuiltInFunction.NullIdentifier())) {
					getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssCreatedOn = BuiltInFunction.CurrDateTime(); // LearnerList.List.Current.SIASInitialAssessment.CreatedOn = CurrDateTime
					getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssCreatedBy = ((int) Global.App.OsContext.Session["UserID"]); // LearnerList.List.Current.SIASInitialAssessment.CreatedBy = UserID
					getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssStudentId = getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference; // LearnerList.List.Current.SIASInitialAssessment.StudentId = LearnerList.List.Current.Student.StudentReference

				}
				getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLastUpdateOn = BuiltInFunction.CurrDateTime(); // LearnerList.List.Current.SIASInitialAssessment.LastUpdateOn = CurrDateTime
				getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLastUpdateBy = ((int) Global.App.OsContext.Session["UserID"]); // LearnerList.List.Current.SIASInitialAssessment.LastUpdateBy = UserID
				// CreateOrUpdateSIASInitialAssessment
				ExtendedActions.CreateOrUpdateSIASInitialAssessment(heContext, getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ChangedAttributes, ((RCSIASInitialAssessmentRecord) getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment), out localVars.resCreateOrUpdateSIASInitialAssessment_outParamId);
				getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssId = localVars.resCreateOrUpdateSIASInitialAssessment_outParamId; // LearnerList.List.Current.SIASInitialAssessment.Id = CreateOrUpdateSIASInitialAssessment.Id
				// Refresh Widget (wtLearnerList)
				((OSPageViewState) Page).AjaxRefresh(wtLearnerList, getWtLearnerListList().CurrentRowNumber, "None", "Refresh", false, null, StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public void cntLearnerListWrapper_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntLearnerListWrapper_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntLearnerListWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntLearnerListWrapper_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtLearnerListWrapper)
		/// </summary>
		/// <returns>The Visible State of wtLearnerListWrapper</returns>
		public bool cntLearnerListWrapper_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container79_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container79_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container79_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container79_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container79)
		/// </summary>
		/// <returns>The Visible State of wt_Container79</returns>
		public bool cnt_Container79_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container63_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container63_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container63_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "position:relative;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container63_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container63)
		/// </summary>
		/// <returns>The Visible State of wt_Container63</returns>
		public bool cnt_Container63_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container60_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container60_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container60_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container60_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container60)
		/// </summary>
		/// <returns>The Visible State of wt_Container60</returns>
		public bool cnt_Container60_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container112_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container112_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container112_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container112_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container112)
		/// </summary>
		/// <returns>The Visible State of wt_Container112</returns>
		public bool cnt_Container112_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container95_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container95_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container95_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container95_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container95)
		/// </summary>
		/// <returns>The Visible State of wt_Container95</returns>
		public bool cnt_Container95_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void recListLearnerList_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// widget wtLearnerList
				ssLearnerListList = varLcInitialAssessmentRecordList;
				ssLearnerListListDoDataBind = false;
				ssLearnerListListDataBound = true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void recListLearnerList_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssLearnerListList.Length > 0) {
					ssLearnerListList.CurrentRec = ssLearnerListList[ssLearnerListList.CurrentRowNumber];
				}
				if (ssLearnerListList.Length > e.SelectedIndex) {
					ssLearnerListList.CurrentRec = ssLearnerListList[e.SelectedIndex];
					ssLearnerListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListLearnerList_Store(object dataItem, int index) {
			RCStudentSIASInitialAssessmentRecord tmprec = (RCStudentSIASInitialAssessmentRecord) dataItem;
			ArrayList tmpFields = new ArrayList();
			tmpFields.Add(tmprec.ssENStudent.ssStudentReference == "" ?(object) null: tmprec.ssENStudent.ssStudentReference);
			tmpFields.Add(tmprec.ssENStudent.ssForenames == "" ?(object) null: tmprec.ssENStudent.ssForenames);
			tmpFields.Add(tmprec.ssENStudent.ssSurname == "" ?(object) null: tmprec.ssENStudent.ssSurname);
			tmpFields.Add(tmprec.ssENStudent.ssStudentPhotoURL == "" ?(object) null: tmprec.ssENStudent.ssStudentPhotoURL);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENStudent.ChangedAttributes, new BitArray(new bool[] {
				true, true, true, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENStudent.OptimizedAttributes, new BitArray(new bool[] {
				false, false, false, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
			}
			))));
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssId == 0?(object) null: tmprec.ssENSIASInitialAssessment.ssId);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssStudentId == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssStudentId);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssNumeracyInitialLevel == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssNumeracyInitialLevel);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssNumeracyLevel == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssNumeracyLevel);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssNumeracyLevelEnrolement == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssNumeracyLevelEnrolement);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssLiteracyInitialLevel == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssLiteracyInitialLevel);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssLiteracyLevel == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssLiteracyLevel);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssLiteracyInitialLevelEnroleme == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssLiteracyInitialLevelEnroleme);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssITInitialLevel == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssITInitialLevel);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssITLevel == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssITLevel);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssITLevelEnrolement == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssITLevelEnrolement);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssESOLInitialLevel == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssESOLInitialLevel);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssESOLLevel == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssESOLLevel);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssESOLLevelEnrolement == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssESOLLevelEnrolement);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssLearningStyleInitial == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssLearningStyleInitial);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssLearningStyle == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssLearningStyle);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssNotes == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssNotes);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssLastUpdateOn == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: tmprec.ssENSIASInitialAssessment.ssLastUpdateOn);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssLastUpdateBy == 0?(object) null: tmprec.ssENSIASInitialAssessment.ssLastUpdateBy);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssCreatedOn == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: tmprec.ssENSIASInitialAssessment.ssCreatedOn);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssCreatedBy == 0?(object) null: tmprec.ssENSIASInitialAssessment.ssCreatedBy);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssNumeracySource == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssNumeracySource);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssLiteracySource == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssLiteracySource);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssESOLSource == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssESOLSource);
			tmpFields.Add(tmprec.ssENSIASInitialAssessment.ssITSource == "" ?(object) null: tmprec.ssENSIASInitialAssessment.ssITSource);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENSIASInitialAssessment.ChangedAttributes, new BitArray(new bool[] {
				true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENSIASInitialAssessment.OptimizedAttributes, new BitArray(new bool[] {
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
			}
			))));
			if (index < wtLearnerList_storage.Count) {
				wtLearnerList_storage[index] = tmpFields;
			} else {
				wtLearnerList_storage.Add(tmpFields);
			}
			return "";
		}
		public void recListLearnerList_Restore() {

			#region fetch ssLearnerListList.

			// Read the needed fields of ssLearnerListList from storewtLearnerList_list
			ssLearnerListList = new RLStudentSIASInitialAssessmentRecordList();
			ArrayList storewtLearnerList_list;
			storewtLearnerList_list = (ArrayList) ViewStateAttributes.GetFromViewState("wtLearnerList_list", null);
			if (storewtLearnerList_list == null) {
				return;
			} else {

				foreach(ArrayList tmpFieldswtLearnerList_list in storewtLearnerList_list) {
					if (tmpFieldswtLearnerList_list != null) {
						// Aux current record variable
						RCStudentSIASInitialAssessmentRecord tmpAuxCurrentRecordwtLearnerList_list = new RCStudentSIASInitialAssessmentRecord(null);
						tmpAuxCurrentRecordwtLearnerList_list.ssENStudent.ssStudentReference = (string) (tmpFieldswtLearnerList_list[0] == null ? "": tmpFieldswtLearnerList_list[0]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStudent.ssForenames = (string) (tmpFieldswtLearnerList_list[1] == null ? "": tmpFieldswtLearnerList_list[1]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStudent.ssSurname = (string) (tmpFieldswtLearnerList_list[2] == null ? "": tmpFieldswtLearnerList_list[2]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStudent.ssStudentPhotoURL = (string) (tmpFieldswtLearnerList_list[3] == null ? "": tmpFieldswtLearnerList_list[3]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStudent.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtLearnerList_list[4]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStudent.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtLearnerList_list[5]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssId = (int) (tmpFieldswtLearnerList_list[6] == null ? 0: tmpFieldswtLearnerList_list[6]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssStudentId = (string) (tmpFieldswtLearnerList_list[7] == null ? "": tmpFieldswtLearnerList_list[7]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssNumeracyInitialLevel = (string) (tmpFieldswtLearnerList_list[8] == null ? "": tmpFieldswtLearnerList_list[8]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssNumeracyLevel = (string) (tmpFieldswtLearnerList_list[9] == null ? "": tmpFieldswtLearnerList_list[9]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssNumeracyLevelEnrolement = (string) (tmpFieldswtLearnerList_list[10] == null ? "": tmpFieldswtLearnerList_list[10]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssLiteracyInitialLevel = (string) (tmpFieldswtLearnerList_list[11] == null ? "": tmpFieldswtLearnerList_list[11]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssLiteracyLevel = (string) (tmpFieldswtLearnerList_list[12] == null ? "": tmpFieldswtLearnerList_list[12]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssLiteracyInitialLevelEnroleme = (string) (tmpFieldswtLearnerList_list[13] == null ? "": tmpFieldswtLearnerList_list[13]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssITInitialLevel = (string) (tmpFieldswtLearnerList_list[14] == null ? "": tmpFieldswtLearnerList_list[14]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssITLevel = (string) (tmpFieldswtLearnerList_list[15] == null ? "": tmpFieldswtLearnerList_list[15]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssITLevelEnrolement = (string) (tmpFieldswtLearnerList_list[16] == null ? "": tmpFieldswtLearnerList_list[16]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssESOLInitialLevel = (string) (tmpFieldswtLearnerList_list[17] == null ? "": tmpFieldswtLearnerList_list[17]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssESOLLevel = (string) (tmpFieldswtLearnerList_list[18] == null ? "": tmpFieldswtLearnerList_list[18]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssESOLLevelEnrolement = (string) (tmpFieldswtLearnerList_list[19] == null ? "": tmpFieldswtLearnerList_list[19]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssLearningStyleInitial = (string) (tmpFieldswtLearnerList_list[20] == null ? "": tmpFieldswtLearnerList_list[20]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssLearningStyle = (string) (tmpFieldswtLearnerList_list[21] == null ? "": tmpFieldswtLearnerList_list[21]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssNotes = (string) (tmpFieldswtLearnerList_list[22] == null ? "": tmpFieldswtLearnerList_list[22]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssLastUpdateOn = (DateTime) (tmpFieldswtLearnerList_list[23] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldswtLearnerList_list[23]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssLastUpdateBy = (int) (tmpFieldswtLearnerList_list[24] == null ? 0: tmpFieldswtLearnerList_list[24]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssCreatedOn = (DateTime) (tmpFieldswtLearnerList_list[25] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldswtLearnerList_list[25]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssCreatedBy = (int) (tmpFieldswtLearnerList_list[26] == null ? 0: tmpFieldswtLearnerList_list[26]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssNumeracySource = (string) (tmpFieldswtLearnerList_list[27] == null ? "": tmpFieldswtLearnerList_list[27]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssLiteracySource = (string) (tmpFieldswtLearnerList_list[28] == null ? "": tmpFieldswtLearnerList_list[28]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssESOLSource = (string) (tmpFieldswtLearnerList_list[29] == null ? "": tmpFieldswtLearnerList_list[29]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ssITSource = (string) (tmpFieldswtLearnerList_list[30] == null ? "": tmpFieldswtLearnerList_list[30]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtLearnerList_list[31]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENSIASInitialAssessment.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtLearnerList_list[32]);

						ssLearnerListList.Append(tmpAuxCurrentRecordwtLearnerList_list);
					}
				}
			}
			ssLearnerListList.CurrentRowNumber = -1;
			#endregion


			#region fetch ssLearnerListList runtime properties state.


			if (storewtLearnerList_list.Count > 0) {
				ssLearnerListList.RestoreRecordListState(storewtLearnerList_list.Count - 1, false);
			} else {
				ssLearnerListList.CurrentRowNumber = 0;
			}

			#endregion

			wtLearnerList_storage = storewtLearnerList_list;
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListLearnerList_Clear(object sender, EventArgs e) {
			wtLearnerList_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListLearnerList_Rebuild(int startIndex, int lineCount) {
			if (ssLearnerListList.Length != -1) {
				wtLearnerList_storage.Clear();
				for (int i=startIndex; i<ssLearnerListList.Data.Count && i<startIndex+lineCount; i++) {
					recListLearnerList_Store(ssLearnerListList.Data[i], wtLearnerList_storage.Count);
				}
			}
		}
		public void recListLearnerList_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtLearnerList widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStudentSIASInitialAssessmentRecordList getWtLearnerListList() {
			if (ssLearnerListListDoDataBind) {
				recListLearnerList_onDataBinding(this, null);
			}

			return ssLearnerListList;
		}
		public void cnt_Container106_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container106_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container106_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "border-left: solid 1px #DADADA;position:relative";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container106_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container106)
		/// </summary>
		/// <returns>The Visible State of wt_Container106</returns>
		public bool cnt_Container106_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container110_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container110_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container110_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container110_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container110)
		/// </summary>
		/// <returns>The Visible State of wt_Container110</returns>
		public bool cnt_Container110_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container31_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container31_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container31_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container31_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container31)
		/// </summary>
		/// <returns>The Visible State of wt_Container31</returns>
		public bool cnt_Container31_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void img_Image33_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				img_Image33_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string img_Image33_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAttributeAccessor) sender).SetAttribute("onerror", "this.src=\'img/missingphoto.png\';" .ToString());
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the URL of the image (wt_Image33)
		/// </summary>
		/// <returns>URL of the Image (wt_Image33)</returns>
		public string img_Image33_getURL() {
			string url = getWtLearnerListList().CurrentRec.ssENStudent.ssStudentPhotoURL;
			url = url.Replace("&amp;", "&");
			// remove ascx path from image src
			if (url != null && !url.Contains(":") && !url.StartsWith("/") && !url.StartsWith("\\")) {
				url = "../../../" + url;
			}
			return url; 
		}
		public void cnt_Container71_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container71_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container71_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "padding-left:10px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container71_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container71)
		/// </summary>
		/// <returns>The Visible State of wt_Container71</returns>
		public bool cnt_Container71_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container44_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container44_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container44_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container44_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container44)
		/// </summary>
		/// <returns>The Visible State of wt_Container44</returns>
		public bool cnt_Container44_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link23)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link23)</returns>
		public string lnk_Link23_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsOverview", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link23)
		/// </summary>
		/// <returns>title of the Link (wt_Link23)</returns>
		public string
		lnk_Link23_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link23)
		/// </summary>
		/// <returns>The Visible State of wt_Link23</returns>
		public bool lnk_Link23_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link23)
		/// </summary>
		/// <returns>The Enabled State of wt_Link23</returns>
		public bool lnk_Link23_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = 9X46WpqGHU+O4QUXckKkUw) Expression: ToUpper + ", " +
		///  LearnerList.List.Current.Student.Forenames + "("
		/// + LearnerList.List.Current.Student.StudentReference + ")"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression43() {
			return (((((BuiltInFunction.ToUpper(getWtLearnerListList().CurrentRec.ssENStudent.ssSurname) + ", ") +getWtLearnerListList().CurrentRec.ssENStudent.ssForenames) + "(") +getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference) + ")");
		}
		public void cnt_Container49_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container49_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container49_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "min-height: 65px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container49_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container49)
		/// </summary>
		/// <returns>The Visible State of wt_Container49</returns>
		public bool cnt_Container49_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_TableCell94_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell94_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell94_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container75_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container75_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container75_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size:11px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container75_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container75)
		/// </summary>
		/// <returns>The Visible State of wt_Container75</returns>
		public bool cnt_Container75_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_TableRow10_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableRow10_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableRow10_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-weight:bold;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If115_hasRun=false;
		bool if_wt_If115_evalResult;
		public bool if_wt_If115() {
			if (if_wt_If115_hasRun) {
				if_wt_If115_hasRun = false;
				return if_wt_If115_evalResult;
			}
			if_wt_If115_hasRun = true;
			if_wt_If115_evalResult = (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNumeracyInitialLevel!=BuiltInFunction.NullTextIdentifier());
			return if_wt_If115_evalResult;
		}

		/// <summary>
		/// Function to dump expression (Key = M14x5cAy0UqSEW5Pz4GygQ) Expression:
		///  GetIALevels(LearnerList.List.Current.SIASInitialAssessment.NumeracyInitialLevel).IALevels.Label +
		/// " (" + LearnerList.List.Current.SIASInitialAssessment.NumeracySource + ")"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression105() {
			return (((Functions.ssGetIALevels(heContext, getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNumeracyInitialLevel).ssENIALevels.ssLabel+ " (") +getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNumeracySource) + ")");
		}
		bool if_wt_If7_hasRun=false;
		bool if_wt_If7_evalResult;
		public bool if_wt_If7() {
			if (if_wt_If7_hasRun) {
				if_wt_If7_hasRun = false;
				return if_wt_If7_evalResult;
			}
			if_wt_If7_hasRun = true;
			if_wt_If7_evalResult = (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLiteracyInitialLevel!=BuiltInFunction.NullTextIdentifier());
			return if_wt_If7_evalResult;
		}

		/// <summary>
		/// Function to dump expression (Key = me_G7Dze+0u0EI_vFbDvYg) Expression:
		///  GetIALevels(LearnerList.List.Current.SIASInitialAssessment.LiteracyInitialLevel).IALevels.Label +
		/// " (" + LearnerList.List.Current.SIASInitialAssessment.LiteracySource + ")"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression108() {
			return (((Functions.ssGetIALevels(heContext, getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLiteracyInitialLevel).ssENIALevels.ssLabel+ " (") +getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLiteracySource) + ")");
		}
		bool if_wt_If100_hasRun=false;
		bool if_wt_If100_evalResult;
		public bool if_wt_If100() {
			if (if_wt_If100_hasRun) {
				if_wt_If100_hasRun = false;
				return if_wt_If100_evalResult;
			}
			if_wt_If100_hasRun = true;
			if_wt_If100_evalResult = (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssITInitialLevel!=BuiltInFunction.NullTextIdentifier());
			return if_wt_If100_evalResult;
		}

		/// <summary>
		/// Function to dump expression (Key = FNyXYtnFEEetvOSYLfIPDw) Expression:
		///  GetIALevels(LearnerList.List.Current.SIASInitialAssessment.ITInitialLevel).IALevels.Label + " ("
		/// + LearnerList.List.Current.SIASInitialAssessment.ITSource + ")"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression48() {
			return (((Functions.ssGetIALevels(heContext, getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssITInitialLevel).ssENIALevels.ssLabel+ " (") +getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssITSource) + ")");
		}
		bool if_wt_If15_hasRun=false;
		bool if_wt_If15_evalResult;
		public bool if_wt_If15() {
			if (if_wt_If15_hasRun) {
				if_wt_If15_hasRun = false;
				return if_wt_If15_evalResult;
			}
			if_wt_If15_hasRun = true;
			if_wt_If15_evalResult = (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssESOLInitialLevel!=BuiltInFunction.NullTextIdentifier());
			return if_wt_If15_evalResult;
		}

		/// <summary>
		/// Function to dump expression (Key = +J0JRE+4wkOuB3cB1uFvvA) Expression:
		///  GetIALevels(LearnerList.List.Current.SIASInitialAssessment.ESOLInitialLevel).IALevels.Label + " (
		/// " + LearnerList.List.Current.SIASInitialAssessment.ESOLSource + ")"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression36() {
			return (((Functions.ssGetIALevels(heContext, getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssESOLInitialLevel).ssENIALevels.ssLabel+ " (") +getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssESOLSource) + ")");
		}
		bool if_wt_If53_hasRun=false;
		bool if_wt_If53_evalResult;
		public bool if_wt_If53() {
			if (if_wt_If53_hasRun) {
				if_wt_If53_hasRun = false;
				return if_wt_If53_evalResult;
			}
			if_wt_If53_hasRun = true;
			if_wt_If53_evalResult = (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLearningStyleInitial!=BuiltInFunction.NullTextIdentifier());
			return if_wt_If53_evalResult;
		}

		/// <summary>
		/// Function to dump expression (Key = LC2xworI10OYAxd8w1H+Pg) Expression:
		///  GetIALearningStyles(LearnerList.List.Current.SIASInitialAssessment.LearningStyleInitial).IALearning
		/// Styles.Label
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression85() {
			return Functions.ssGetIALearningStyles(heContext, getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLearningStyleInitial).ssENIALearningStyles.ssLabel;
		}
		public void sel_ComboBox56_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				sel_ComboBox56_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
				if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

				if (Rt_wt_ComboBox56_reclist == null) {
					using(Transaction wt_ComboBox56_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
						string wt_ComboBox56_sql = "SELECT [ID], [LABEL], NULL, NULL FROM " + ENIALevelsEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " WHERE [IS_ACTIVE] <> 0 OR [ID] = @Selection  ORDER BY [ORDER], [LABEL]";
						Command Rt_wt_ComboBox56_sqlCmd = wt_ComboBox56_trans.CreateCommand(wt_ComboBox56_sql);
						Rt_wt_ComboBox56_sqlCmd.CreateParameter("@Selection", getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNumeracyLevel);
						Rt_wt_ComboBox56_sqlCmd.TransformParametersSyntax();
						Rt_wt_ComboBox56_reclist = new RLIALevelsRecordList();
						Rt_wt_ComboBox56_reclist.Transaction = wt_ComboBox56_trans;
						Rt_wt_ComboBox56_reclist.AllOptimizedAttributes = new BitArray[1] {
							new BitArray(4, false)
						}
						;
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wt_ComboBox56_sqlCmd, Rt_wt_ComboBox56_reclist, "WebSelectWidget load operation");
						Rt_wt_ComboBox56_reclist = (RLIALevelsRecordList) Rt_wt_ComboBox56_reclist.Duplicate();
					}
				}
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
				if (Rt_wt_ComboBox56.SpecialListVal == "0")
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
				Rt_wt_ComboBox56_reclist.StartIteration();
				try {
					while (!Rt_wt_ComboBox56_reclist.Eof) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wt_ComboBox56_reclist.CurrentRec.ssENIALevels.ssLabel, Rt_wt_ComboBox56_reclist.CurrentRec.ssENIALevels.ssId));
						if (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNumeracyLevel == Convert.ToString(Rt_wt_ComboBox56_reclist.CurrentRec.ssENIALevels.ssId)) {
							((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
						}
						Rt_wt_ComboBox56_reclist.Advance();
					}
				} finally {
					Rt_wt_ComboBox56_reclist.EndIteration();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string sel_ComboBox56_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size:10px;padding:3px;margin:0px;line-height:13px;height:20px;";
					oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
					} else {
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxChange event handler for widget wt_ComboBox56
		/// </summary>
		public void sel_ComboBox56_AjaxChange(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnChange(heContext
				, false)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void sel_ComboBox56_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			Control parentControl = (Control) sender;
			while (parentControl != null) {
				if (parentControl is IIteratorItem)break;
				parentControl = parentControl.Parent;
			}
			int parentControlIndex = ((IIteratorItem) parentControl).ItemIndex;
			if (ssLearnerListList.Length > parentControlIndex && parentControlIndex > -1) {
				ssLearnerListList.SetPosition(parentControlIndex);
			} else {
				return;
			}
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNumeracyLevel = "";
			}
			else {
				try {
					getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNumeracyLevel = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_ComboBox56)
		/// </summary>
		/// <returns>The Visible State of wt_ComboBox56</returns>
		public bool sel_ComboBox56_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_ComboBox56)
		/// </summary>
		/// <returns>The Enabled State of wt_ComboBox56</returns>
		public bool sel_ComboBox56_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (sel_ComboBox56)
		/// </summary>
		/// <returns>The Mandatory Value of sel_ComboBox56</returns>
		public bool sel_ComboBox56_isMandatory() {
			return false;
		}

		public void sel_ComboBox87_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				sel_ComboBox87_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
				if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

				if (Rt_wt_ComboBox87_reclist == null) {
					using(Transaction wt_ComboBox87_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
						string wt_ComboBox87_sql = "SELECT [ID], [LABEL], NULL, NULL FROM " + ENIALevelsEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " WHERE [IS_ACTIVE] <> 0 OR [ID] = @Selection  ORDER BY [ORDER], [LABEL]";
						Command Rt_wt_ComboBox87_sqlCmd = wt_ComboBox87_trans.CreateCommand(wt_ComboBox87_sql);
						Rt_wt_ComboBox87_sqlCmd.CreateParameter("@Selection", getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLiteracyLevel);
						Rt_wt_ComboBox87_sqlCmd.TransformParametersSyntax();
						Rt_wt_ComboBox87_reclist = new RLIALevelsRecordList();
						Rt_wt_ComboBox87_reclist.Transaction = wt_ComboBox87_trans;
						Rt_wt_ComboBox87_reclist.AllOptimizedAttributes = new BitArray[1] {
							new BitArray(4, false)
						}
						;
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wt_ComboBox87_sqlCmd, Rt_wt_ComboBox87_reclist, "WebSelectWidget load operation");
						Rt_wt_ComboBox87_reclist = (RLIALevelsRecordList) Rt_wt_ComboBox87_reclist.Duplicate();
					}
				}
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
				if (Rt_wt_ComboBox87.SpecialListVal == "0")
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
				Rt_wt_ComboBox87_reclist.StartIteration();
				try {
					while (!Rt_wt_ComboBox87_reclist.Eof) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wt_ComboBox87_reclist.CurrentRec.ssENIALevels.ssLabel, Rt_wt_ComboBox87_reclist.CurrentRec.ssENIALevels.ssId));
						if (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLiteracyLevel == Convert.ToString(Rt_wt_ComboBox87_reclist.CurrentRec.ssENIALevels.ssId)) {
							((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
						}
						Rt_wt_ComboBox87_reclist.Advance();
					}
				} finally {
					Rt_wt_ComboBox87_reclist.EndIteration();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string sel_ComboBox87_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size:10px;padding:3px;margin:0px;line-height:13px;height:20px;";
					oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
					} else {
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxChange event handler for widget wt_ComboBox87
		/// </summary>
		public void sel_ComboBox87_AjaxChange(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnChange(heContext
				, false)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void sel_ComboBox87_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			Control parentControl = (Control) sender;
			while (parentControl != null) {
				if (parentControl is IIteratorItem)break;
				parentControl = parentControl.Parent;
			}
			int parentControlIndex = ((IIteratorItem) parentControl).ItemIndex;
			if (ssLearnerListList.Length > parentControlIndex && parentControlIndex > -1) {
				ssLearnerListList.SetPosition(parentControlIndex);
			} else {
				return;
			}
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLiteracyLevel = "";
			}
			else {
				try {
					getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLiteracyLevel = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_ComboBox87)
		/// </summary>
		/// <returns>The Visible State of wt_ComboBox87</returns>
		public bool sel_ComboBox87_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_ComboBox87)
		/// </summary>
		/// <returns>The Enabled State of wt_ComboBox87</returns>
		public bool sel_ComboBox87_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (sel_ComboBox87)
		/// </summary>
		/// <returns>The Mandatory Value of sel_ComboBox87</returns>
		public bool sel_ComboBox87_isMandatory() {
			return false;
		}

		public void sel_ComboBox26_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				sel_ComboBox26_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
				if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

				if (Rt_wt_ComboBox26_reclist == null) {
					using(Transaction wt_ComboBox26_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
						string wt_ComboBox26_sql = "SELECT [ID], [LABEL], NULL, NULL FROM " + ENIALevelsEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " WHERE [IS_ACTIVE] <> 0 OR [ID] = @Selection  ORDER BY [ORDER], [LABEL]";
						Command Rt_wt_ComboBox26_sqlCmd = wt_ComboBox26_trans.CreateCommand(wt_ComboBox26_sql);
						Rt_wt_ComboBox26_sqlCmd.CreateParameter("@Selection", getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssITLevel);
						Rt_wt_ComboBox26_sqlCmd.TransformParametersSyntax();
						Rt_wt_ComboBox26_reclist = new RLIALevelsRecordList();
						Rt_wt_ComboBox26_reclist.Transaction = wt_ComboBox26_trans;
						Rt_wt_ComboBox26_reclist.AllOptimizedAttributes = new BitArray[1] {
							new BitArray(4, false)
						}
						;
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wt_ComboBox26_sqlCmd, Rt_wt_ComboBox26_reclist, "WebSelectWidget load operation");
						Rt_wt_ComboBox26_reclist = (RLIALevelsRecordList) Rt_wt_ComboBox26_reclist.Duplicate();
					}
				}
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
				if (Rt_wt_ComboBox26.SpecialListVal == "0")
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
				Rt_wt_ComboBox26_reclist.StartIteration();
				try {
					while (!Rt_wt_ComboBox26_reclist.Eof) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wt_ComboBox26_reclist.CurrentRec.ssENIALevels.ssLabel, Rt_wt_ComboBox26_reclist.CurrentRec.ssENIALevels.ssId));
						if (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssITLevel == Convert.ToString(Rt_wt_ComboBox26_reclist.CurrentRec.ssENIALevels.ssId)) {
							((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
						}
						Rt_wt_ComboBox26_reclist.Advance();
					}
				} finally {
					Rt_wt_ComboBox26_reclist.EndIteration();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string sel_ComboBox26_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size:10px;padding:3px;margin:0px;line-height:13px;height:20px;";
					oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
					} else {
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxChange event handler for widget wt_ComboBox26
		/// </summary>
		public void sel_ComboBox26_AjaxChange(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnChange(heContext
				, false)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void sel_ComboBox26_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			Control parentControl = (Control) sender;
			while (parentControl != null) {
				if (parentControl is IIteratorItem)break;
				parentControl = parentControl.Parent;
			}
			int parentControlIndex = ((IIteratorItem) parentControl).ItemIndex;
			if (ssLearnerListList.Length > parentControlIndex && parentControlIndex > -1) {
				ssLearnerListList.SetPosition(parentControlIndex);
			} else {
				return;
			}
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssITLevel = "";
			}
			else {
				try {
					getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssITLevel = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_ComboBox26)
		/// </summary>
		/// <returns>The Visible State of wt_ComboBox26</returns>
		public bool sel_ComboBox26_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_ComboBox26)
		/// </summary>
		/// <returns>The Enabled State of wt_ComboBox26</returns>
		public bool sel_ComboBox26_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (sel_ComboBox26)
		/// </summary>
		/// <returns>The Mandatory Value of sel_ComboBox26</returns>
		public bool sel_ComboBox26_isMandatory() {
			return false;
		}

		public void sel_ComboBox78_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				sel_ComboBox78_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
				if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

				if (Rt_wt_ComboBox78_reclist == null) {
					using(Transaction wt_ComboBox78_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
						string wt_ComboBox78_sql = "SELECT [ID], [LABEL], NULL, NULL FROM " + ENIALevelsEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " WHERE [IS_ACTIVE] <> 0 OR [ID] = @Selection  ORDER BY [ORDER], [LABEL]";
						Command Rt_wt_ComboBox78_sqlCmd = wt_ComboBox78_trans.CreateCommand(wt_ComboBox78_sql);
						Rt_wt_ComboBox78_sqlCmd.CreateParameter("@Selection", getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssESOLLevel);
						Rt_wt_ComboBox78_sqlCmd.TransformParametersSyntax();
						Rt_wt_ComboBox78_reclist = new RLIALevelsRecordList();
						Rt_wt_ComboBox78_reclist.Transaction = wt_ComboBox78_trans;
						Rt_wt_ComboBox78_reclist.AllOptimizedAttributes = new BitArray[1] {
							new BitArray(4, false)
						}
						;
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wt_ComboBox78_sqlCmd, Rt_wt_ComboBox78_reclist, "WebSelectWidget load operation");
						Rt_wt_ComboBox78_reclist = (RLIALevelsRecordList) Rt_wt_ComboBox78_reclist.Duplicate();
					}
				}
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
				if (Rt_wt_ComboBox78.SpecialListVal == "0")
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
				Rt_wt_ComboBox78_reclist.StartIteration();
				try {
					while (!Rt_wt_ComboBox78_reclist.Eof) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wt_ComboBox78_reclist.CurrentRec.ssENIALevels.ssLabel, Rt_wt_ComboBox78_reclist.CurrentRec.ssENIALevels.ssId));
						if (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssESOLLevel == Convert.ToString(Rt_wt_ComboBox78_reclist.CurrentRec.ssENIALevels.ssId)) {
							((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
						}
						Rt_wt_ComboBox78_reclist.Advance();
					}
				} finally {
					Rt_wt_ComboBox78_reclist.EndIteration();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string sel_ComboBox78_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size:10px;padding:3px;margin:0px;line-height:13px;height:20px;";
					oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
					} else {
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxChange event handler for widget wt_ComboBox78
		/// </summary>
		public void sel_ComboBox78_AjaxChange(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnChange(heContext
				, false)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void sel_ComboBox78_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			Control parentControl = (Control) sender;
			while (parentControl != null) {
				if (parentControl is IIteratorItem)break;
				parentControl = parentControl.Parent;
			}
			int parentControlIndex = ((IIteratorItem) parentControl).ItemIndex;
			if (ssLearnerListList.Length > parentControlIndex && parentControlIndex > -1) {
				ssLearnerListList.SetPosition(parentControlIndex);
			} else {
				return;
			}
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssESOLLevel = "";
			}
			else {
				try {
					getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssESOLLevel = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_ComboBox78)
		/// </summary>
		/// <returns>The Visible State of wt_ComboBox78</returns>
		public bool sel_ComboBox78_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_ComboBox78)
		/// </summary>
		/// <returns>The Enabled State of wt_ComboBox78</returns>
		public bool sel_ComboBox78_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (sel_ComboBox78)
		/// </summary>
		/// <returns>The Mandatory Value of sel_ComboBox78</returns>
		public bool sel_ComboBox78_isMandatory() {
			return false;
		}

		public void sel_ComboBox67_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				sel_ComboBox67_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
				if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

				if (Rt_wt_ComboBox67_reclist == null) {
					using(Transaction wt_ComboBox67_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
						string wt_ComboBox67_sql = "SELECT [ID], [LABEL], NULL, NULL FROM " + ENIALearningStylesEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " WHERE [IS_ACTIVE] <> 0 OR [ID] = @Selection  ORDER BY [ORDER], [LABEL]";
						Command Rt_wt_ComboBox67_sqlCmd = wt_ComboBox67_trans.CreateCommand(wt_ComboBox67_sql);
						Rt_wt_ComboBox67_sqlCmd.CreateParameter("@Selection", getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLearningStyle);
						Rt_wt_ComboBox67_sqlCmd.TransformParametersSyntax();
						Rt_wt_ComboBox67_reclist = new RLIALearningStylesRecordList();
						Rt_wt_ComboBox67_reclist.Transaction = wt_ComboBox67_trans;
						Rt_wt_ComboBox67_reclist.AllOptimizedAttributes = new BitArray[1] {
							new BitArray(4, false)
						}
						;
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wt_ComboBox67_sqlCmd, Rt_wt_ComboBox67_reclist, "WebSelectWidget load operation");
						Rt_wt_ComboBox67_reclist = (RLIALearningStylesRecordList) Rt_wt_ComboBox67_reclist.Duplicate();
					}
				}
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
				if (Rt_wt_ComboBox67.SpecialListVal == "0")
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
				Rt_wt_ComboBox67_reclist.StartIteration();
				try {
					while (!Rt_wt_ComboBox67_reclist.Eof) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wt_ComboBox67_reclist.CurrentRec.ssENIALearningStyles.ssLabel, Rt_wt_ComboBox67_reclist.CurrentRec.ssENIALearningStyles.ssId));
						if (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLearningStyle == Convert.ToString(Rt_wt_ComboBox67_reclist.CurrentRec.ssENIALearningStyles.ssId)) {
							((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
						}
						Rt_wt_ComboBox67_reclist.Advance();
					}
				} finally {
					Rt_wt_ComboBox67_reclist.EndIteration();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string sel_ComboBox67_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size:10px;padding:3px;margin:0px;line-height:13px;height:20px;";
					oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
					} else {
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxChange event handler for widget wt_ComboBox67
		/// </summary>
		public void sel_ComboBox67_AjaxChange(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnChange(heContext
				, false)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void sel_ComboBox67_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			Control parentControl = (Control) sender;
			while (parentControl != null) {
				if (parentControl is IIteratorItem)break;
				parentControl = parentControl.Parent;
			}
			int parentControlIndex = ((IIteratorItem) parentControl).ItemIndex;
			if (ssLearnerListList.Length > parentControlIndex && parentControlIndex > -1) {
				ssLearnerListList.SetPosition(parentControlIndex);
			} else {
				return;
			}
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLearningStyle = "";
			}
			else {
				try {
					getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLearningStyle = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_ComboBox67)
		/// </summary>
		/// <returns>The Visible State of wt_ComboBox67</returns>
		public bool sel_ComboBox67_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_ComboBox67)
		/// </summary>
		/// <returns>The Enabled State of wt_ComboBox67</returns>
		public bool sel_ComboBox67_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (sel_ComboBox67)
		/// </summary>
		/// <returns>The Mandatory Value of sel_ComboBox67</returns>
		public bool sel_ComboBox67_isMandatory() {
			return false;
		}

		bool if_wt_If19_hasRun=false;
		bool if_wt_If19_evalResult;
		public bool if_wt_If19() {
			if (if_wt_If19_hasRun) {
				if_wt_If19_hasRun = false;
				return if_wt_If19_evalResult;
			}
			if_wt_If19_hasRun = true;
			if_wt_If19_evalResult = (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNumeracyLevelEnrolement!=BuiltInFunction.NullTextIdentifier());
			return if_wt_If19_evalResult;
		}

		/// <summary>
		/// Function to dump expression (Key = TLLbgeKoqEyDSEOFQjqa9Q) Expression:
		///  GetIALevels(LearnerList.List.Current.SIASInitialAssessment.NumeracyLevelEnrolement).IALevels.Label
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression64() {
			return Functions.ssGetIALevels(heContext, getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNumeracyLevelEnrolement).ssENIALevels.ssLabel;
		}
		bool if_wt_If46_hasRun=false;
		bool if_wt_If46_evalResult;
		public bool if_wt_If46() {
			if (if_wt_If46_hasRun) {
				if_wt_If46_hasRun = false;
				return if_wt_If46_evalResult;
			}
			if_wt_If46_hasRun = true;
			if_wt_If46_evalResult = (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLiteracyInitialLevelEnroleme!=BuiltInFunction.NullTextIdentifier());
			return if_wt_If46_evalResult;
		}

		/// <summary>
		/// Function to dump expression (Key = LS8CZ5P5EU+3mviTjh36pg) Expression:
		///  GetIALevels(LearnerList.List.Current.SIASInitialAssessment.LiteracyInitialLevelEnroleme).IALevels.L
		/// abel
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression52() {
			return Functions.ssGetIALevels(heContext, getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssLiteracyInitialLevelEnroleme).ssENIALevels.ssLabel;
		}
		bool if_wt_If70_hasRun=false;
		bool if_wt_If70_evalResult;
		public bool if_wt_If70() {
			if (if_wt_If70_hasRun) {
				if_wt_If70_hasRun = false;
				return if_wt_If70_evalResult;
			}
			if_wt_If70_hasRun = true;
			if_wt_If70_evalResult = (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssITLevelEnrolement!=BuiltInFunction.NullTextIdentifier());
			return if_wt_If70_evalResult;
		}

		/// <summary>
		/// Function to dump expression (Key = KsRzQ8gvMkytt7CfRXiRPg) Expression:
		///  GetIALevels(LearnerList.List.Current.SIASInitialAssessment.ITLevelEnrolement).IALevels.Label
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression35() {
			return Functions.ssGetIALevels(heContext, getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssITLevelEnrolement).ssENIALevels.ssLabel;
		}
		bool if_wt_If74_hasRun=false;
		bool if_wt_If74_evalResult;
		public bool if_wt_If74() {
			if (if_wt_If74_hasRun) {
				if_wt_If74_hasRun = false;
				return if_wt_If74_evalResult;
			}
			if_wt_If74_hasRun = true;
			if_wt_If74_evalResult = (getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssESOLLevelEnrolement!=BuiltInFunction.NullTextIdentifier());
			return if_wt_If74_evalResult;
		}

		/// <summary>
		/// Function to dump expression (Key = fH0tIEydDECJQ3BL36vXFA) Expression:
		///  GetIALevels(LearnerList.List.Current.SIASInitialAssessment.ESOLLevelEnrolement).IALevels.Label
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression18() {
			return Functions.ssGetIALevels(heContext, getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssESOLLevelEnrolement).ssENIALevels.ssLabel;
		}
		public void cnt_Container13_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container13_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container13_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "min-height: 65px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container13_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container13)
		/// </summary>
		/// <returns>The Visible State of wt_Container13</returns>
		public bool cnt_Container13_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Table103_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Table103_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Table103_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size:12px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void wt_TableCell58_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell58_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell58_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container62_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container62_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container62_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container62_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container62)
		/// </summary>
		/// <returns>The Visible State of wt_Container62</returns>
		public bool cnt_Container62_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = C2ZrfRoVQEqkxt8KlTW6SQ) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression61() {
			return (((BuiltInFunction.Length(getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNotes) >100)) ?((BuiltInFunction.Substr(getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNotes, 0, 100) + "...")):(getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNotes));
		}
		public void lnkPopupNotesLnk_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				lnkPopupNotesLnk_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string lnkPopupNotesLnk_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:right;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wtPopupNotesLnk)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wtPopupNotesLnk)</returns>
		public string lnkPopupNotesLnk_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("Notes", System.Web.HttpUtility.UrlEncode(getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNotes, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_Notes", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wtPopupNotesLnk)
		/// </summary>
		/// <returns>title of the Link (wtPopupNotesLnk)</returns>
		public string
		lnkPopupNotesLnk_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtPopupNotesLnk)
		/// </summary>
		/// <returns>The Visible State of wtPopupNotesLnk</returns>
		public bool lnkPopupNotesLnk_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtPopupNotesLnk)
		/// </summary>
		/// <returns>The Enabled State of wtPopupNotesLnk</returns>
		public bool lnkPopupNotesLnk_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container22_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container22_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container22_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAttributeAccessor) sender).SetAttribute("title", getWtLearnerListList().CurrentRec.ssENSIASInitialAssessment.ssNotes.ToString());
				if (!cnt_Container22_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container22)
		/// </summary>
		/// <returns>The Visible State of wt_Container22</returns>
		public bool cnt_Container22_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance80_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("tD89gwpkFEyl4LnwdeU5OA")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void RichWidgets_webBlck_WebBlockInstance41_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor) sender;
				widget.inParamLinkOrButtonWidgetId = Utils.getControlInRecordWidget(wtLearnerList, "wtPopupNotesLnk").ClientID;
				widget.inParamTitle = " ";
				widget.inParamWidthPx = -1;
				widget.inParamHeightPx = -1;
				widget.inParamAutoResize = true;
				widget.inParamRecenterOnResize = false;
				widget.inParamHideCloseButton = false;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance41
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance41_AjaxNotify(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnChange(heContext
				, true)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public static class FuncCommandOnChange {
		}
		public static class FuncssPreparation {

			private static void datasetGetGroup2sReadDB(ref RCGroupStudent_GroupStudentRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENGroup.Read(r, ref index);
				rec.ssENStudent.Read(r, ref index);
				rec.ssENStudent_Group.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetGroup2s" of Action "Preparation"
			/// </summary>
			public static RLGroupStudent_GroupStudentRecordList datasetGetGroup2s(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Single {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27, NULL o28, NULL o29, NULL o30, NULL o31, NULL o32, NULL o33, NULL o34, NULL o35, NULL o36, NULL o37, ENStudent_Group.[STUDENTREFERENCE] o38, NULL o39, NULL o40, NULL o41, NULL o42, NULL o43, NULL o44, NULL o45");
				fromBuilder.Append(" FROM (({Student_Group} ENStudent_Group Left JOIN {Group} ENGroup ON (ENStudent_Group.[GROUPID] = ENGroup.[ID]))  Left JOIN {Student} ENStudent ON (ENStudent_Group.[STUDENTREFERENCE] = ENStudent.[STUDENTREFERENCE])) ");
				whereBuilder.Append(" WHERE (ENGroup.[GROUPNAME] LIKE @qpstP) AND (ENStudent_Group.[ENROLMENTSTATUS] = N'Active')");
				orderByBuilder.Append(" ORDER BY ENStudent.[SURNAME] ASC ");
				sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLGroupStudent_GroupStudentRecordList outParamList = new RLGroupStudent_GroupStudentRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetGroup2sReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[3];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, false, true, true, true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLGroupStudent_GroupStudentRecordList _tmp = new RLGroupStudent_GroupStudentRecordList();
					_tmp.AlternateReadDBMethod = datasetGetGroup2sReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetGroup2s.List");
						outParamList = (RLGroupStudent_GroupStudentRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetGroup2s.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLGroupStudent_GroupStudentRecordList _tmp = new RLGroupStudent_GroupStudentRecordList();
						_tmp.AlternateReadDBMethod = datasetGetGroup2sReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetGroup2s.List");
							outParamList = (RLGroupStudent_GroupStudentRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetGroup2s.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetSIASInitialAssessmentsByStudentIdReadDB(ref RCStudentSIASInitialAssessmentRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENSIASInitialAssessment.Read(r, ref index);
				rec.ssENStudent.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetSIASInitialAssessmentsByStudentId" of Action "Preparation"
			/// </summary>
			public static RLStudentSIASInitialAssessmentRecordList datasetGetSIASInitialAssessmentsByStudentId(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("ENSIASInitialAssessment.[ID] o1, ENSIASInitialAssessment.[STUDENTID] o2, ENSIASInitialAssessment.[NUMERACYINITIALLEVEL] o3, ENSIASInitialAssessment.[NUMERACYLEVEL] o4, ENSIASInitialAssessment.[NUMERACYLEVELENROLEMENT] o5, ENSIASInitialAssessment.[LITERACYINITIALLEVEL] o6, ENSIASInitialAssessment.[LITERACYLEVEL] o7, ENSIASInitialAssessment.[LITERACYINITIALLEVELENROLEME] o8, ENSIASInitialAssessment.[ITINITIALLEVEL] o9, ENSIASInitialAssessment.[ITLEVEL] o10, ENSIASInitialAssessment.[ITLEVELENROLEMENT] o11, ENSIASInitialAssessment.[ESOLINITIALLEVEL] o12, ENSIASInitialAssessment.[ESOLLEVEL] o13, ENSIASInitialAssessment.[ESOLLEVELENROLEMENT] o14, ENSIASInitialAssessment.[LEARNINGSTYLEINITIAL] o15, ENSIASInitialAssessment.[LEARNINGSTYLE] o16, ENSIASInitialAssessment.[NOTES] o17, ENSIASInitialAssessment.[LASTUPDATEON] o18, ENSIASInitialAssessment.[LASTUPDATEBY] o19, ENSIASInitialAssessment.[CREATEDON] o20, ENSIASInitialAssessment.[CREATEDBY] o21, ENSIASInitialAssessment.[NUMERACYSOURCE] o22, ENSIASInitialAssessment.[LITERACYSOURCE] o23, ENSIASInitialAssessment.[ESOLSOURCE] o24, ENSIASInitialAssessment.[ITSOURCE] o25, ENStudent.[STUDENTREFERENCE] o26, ENStudent.[FORENAMES] o27, ENStudent.[SURNAME] o28, ENStudent.[DATEOFBIRTH] o29, ENStudent.[GENDER] o30, ENStudent.[MAINOFFERINGCODE] o31, ENStudent.[MAINOFFERINGNAME] o32, ENStudent.[STUDENTPHOTOURL] o33, ENStudent.[HOMEADDRESS] o34, ENStudent.[HOMEADDRESSPOSTCODE] o35, ENStudent.[CURRENTADDRESS] o3" +
				"6, ENStudent.[CURRENTADDRESSPOSTCODE] o37, ENStudent.[EMAILADDRESS] o38, ENStudent.[HOMETELEPHONE] o39, ENStudent.[MOBILEPHONE] o40, ENStudent.[NEXTOFKINNAME] o41, ENStudent.[NEXTOFKINRELATIONSHIP] o42, ENStudent.[NEXTOFKINADDRESS] o43, ENStudent.[NEXTOFKINPOSTCODE] o44, ENStudent.[NEXTOFKINPHONE] o45, ENStudent.[PERSONALTUTOR] o46, ENStudent.[NEXTOFKINEMAIL] o47, ENStudent.[HASCURRENTACTIVEENROLMENT] o48, ENStudent.[NETWORKLOGIN] o49, ENStudent.[NINUMBER] o50, ENStudent.[RESIDENTIALSTATUS] o51, ENStudent.[PREVIOUSSCHOOL] o52");
				fromBuilder.Append(" FROM ({Student} ENStudent Left JOIN {SIASInitialAssessment} ENSIASInitialAssessment ON (ENSIASInitialAssessment.[STUDENTID] = ENStudent.[STUDENTREFERENCE])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudent.[STUDENTREFERENCE] = @qpstP) AND (ENStudent.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudent.[STUDENTREFERENCE] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentSIASInitialAssessmentRecordList outParamList = new RLStudentSIASInitialAssessmentRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetSIASInitialAssessmentsByStudentIdReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[2];
				opt[0] = new BitArray(new bool[] {
					false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
				}
				);
				opt[1] = new BitArray(new bool[] {
					false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentSIASInitialAssessmentRecordList _tmp = new RLStudentSIASInitialAssessmentRecordList();
					_tmp.AlternateReadDBMethod = datasetGetSIASInitialAssessmentsByStudentIdReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetSIASInitialAssessmentsByStudentId.List");
						outParamList = (RLStudentSIASInitialAssessmentRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetSIASInitialAssessmentsByStudentId.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentSIASInitialAssessmentRecordList _tmp = new RLStudentSIASInitialAssessmentRecordList();
						_tmp.AlternateReadDBMethod = datasetGetSIASInitialAssessmentsByStudentIdReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetSIASInitialAssessmentsByStudentId.List");
							outParamList = (RLStudentSIASInitialAssessmentRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetSIASInitialAssessmentsByStudentId.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetEnglishEnrolmentLevelReadDB(ref RCGroupCategoryStudent_GroupIALevelsRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENCategory.Read(r, ref index);
				rec.ssENGroup.Read(r, ref index);
				rec.ssENIALevels.Read(r, ref index);
				rec.ssENStudent_Group.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetEnglishEnrolmentLevel" of Action "Preparation"
			/// </summary>
			public static RLGroupCategoryStudent_GroupIALevelsRecordList datasetGetEnglishEnrolmentLevel(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, ENIALevels.[LABEL] o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27");
				fromBuilder.Append(" FROM ((({Student_Group} ENStudent_Group Left JOIN {Group} ENGroup ON (ENStudent_Group.[GROUPID] = ENGroup.[ID]))  Left JOIN {Category} ENCategory ON (ENGroup.[CATEGORY] = ENCategory.[ID]))  Left JOIN {IALevels} ENIALevels ON (ENGroup.[IALEVEL] = ENIALevels.[ID])) ");
				whereBuilder.Append(" WHERE (ENGroup.[CATEGORY] = ");
				whereBuilder.Append(ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("hh0WWQ2FF0acLTzRV4EL3Q")).ssId);
				whereBuilder.Append(") AND ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudent_Group.[STUDENTREFERENCE] = @qpstP) AND (ENStudent_Group.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudent_Group.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (ENStudent_Group.[ENROLMENTSTATUS] = N'Active')");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLGroupCategoryStudent_GroupIALevelsRecordList outParamList = new RLGroupCategoryStudent_GroupIALevelsRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetEnglishEnrolmentLevelReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[4];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true
				}
				);
				opt[3] = new BitArray(new bool[] {
					true, false, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLGroupCategoryStudent_GroupIALevelsRecordList _tmp = new RLGroupCategoryStudent_GroupIALevelsRecordList();
					_tmp.AlternateReadDBMethod = datasetGetEnglishEnrolmentLevelReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetEnglishEnrolmentLevel.List");
						outParamList = (RLGroupCategoryStudent_GroupIALevelsRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetEnglishEnrolmentLevel.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLGroupCategoryStudent_GroupIALevelsRecordList _tmp = new RLGroupCategoryStudent_GroupIALevelsRecordList();
						_tmp.AlternateReadDBMethod = datasetGetEnglishEnrolmentLevelReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetEnglishEnrolmentLevel.List");
							outParamList = (RLGroupCategoryStudent_GroupIALevelsRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetEnglishEnrolmentLevel.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetMathsEnrolmentLevelReadDB(ref RCGroupCategoryStudent_GroupIALevelsRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENCategory.Read(r, ref index);
				rec.ssENGroup.Read(r, ref index);
				rec.ssENIALevels.Read(r, ref index);
				rec.ssENStudent_Group.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetMathsEnrolmentLevel" of Action "Preparation"
			/// </summary>
			public static RLGroupCategoryStudent_GroupIALevelsRecordList datasetGetMathsEnrolmentLevel(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, ENIALevels.[LABEL] o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27");
				fromBuilder.Append(" FROM ((({Student_Group} ENStudent_Group Left JOIN {Group} ENGroup ON (ENStudent_Group.[GROUPID] = ENGroup.[ID]))  Left JOIN {Category} ENCategory ON (ENGroup.[CATEGORY] = ENCategory.[ID]))  Left JOIN {IALevels} ENIALevels ON (ENGroup.[IALEVEL] = ENIALevels.[ID])) ");
				whereBuilder.Append(" WHERE (ENGroup.[CATEGORY] = ");
				whereBuilder.Append(ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("9J+4M6ZeU0+g4qKAzSFbVg")).ssId);
				whereBuilder.Append(") AND ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudent_Group.[STUDENTREFERENCE] = @qpstP) AND (ENStudent_Group.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudent_Group.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (ENStudent_Group.[ENROLMENTSTATUS] = N'Active')");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLGroupCategoryStudent_GroupIALevelsRecordList outParamList = new RLGroupCategoryStudent_GroupIALevelsRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetMathsEnrolmentLevelReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[4];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true
				}
				);
				opt[3] = new BitArray(new bool[] {
					true, false, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLGroupCategoryStudent_GroupIALevelsRecordList _tmp = new RLGroupCategoryStudent_GroupIALevelsRecordList();
					_tmp.AlternateReadDBMethod = datasetGetMathsEnrolmentLevelReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetMathsEnrolmentLevel.List");
						outParamList = (RLGroupCategoryStudent_GroupIALevelsRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetMathsEnrolmentLevel.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLGroupCategoryStudent_GroupIALevelsRecordList _tmp = new RLGroupCategoryStudent_GroupIALevelsRecordList();
						_tmp.AlternateReadDBMethod = datasetGetMathsEnrolmentLevelReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetMathsEnrolmentLevel.List");
							outParamList = (RLGroupCategoryStudent_GroupIALevelsRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_InitialAssessment.Course_SIAS_IA.Preparation.GetMathsEnrolmentLevel.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}

		public override Control FindControl(string id) {
			return base.FindControl(id);
		}
		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			_isRendering = true;
			Page_Load(null, null); _isRendering = false;
			this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}
		public override string WebBlockIdentifier {
			get {
				return "CaseConferencing.KbnqHV9Lspka2sNyoU2BZIw";
			}
		}
	}

}
