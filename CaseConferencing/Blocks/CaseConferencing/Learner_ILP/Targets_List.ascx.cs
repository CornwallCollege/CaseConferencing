/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Web.SessionState;
using System.IO;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Runtime.Serialization;
using System.Web.Caching;
using System.Text;


namespace ssCaseConferencing.Flows.FlowLearner_ILP {
	public abstract class WBlkTargets_List: OSUserControl, IWebScreen, INegotiateTabIndexes, IAjaxNotifyEvent {

		/// <summary>
		/// Delegate Definitions
		/// </summary>
		/// <summary>
		/// Custom Events Definitions
		/// </summary>
		/// <summary>
		/// Parameters and Local Variables Definitions
		/// </summary>
		/// <summary>
		/// Screen Input Parameter inParamStudentReference. Description:
		/// </summary>
		public string inParamStudentReference = "";
		/// <summary>
		/// Screen Input Parameter inParamCategoryId. Description:
		/// </summary>
		public int inParamCategoryId = 0;
		/// <summary>
		/// Screen Input Parameter inParamOfferingCode. Description:
		/// </summary>
		public string inParamOfferingCode = "";
		/// <summary>
		/// Screen Input Parameter inParamOfferingName. Description:
		/// </summary>
		public string inParamOfferingName = "";
		protected OutSystems.HubEdition.WebWidgets.Container wtLogContent;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container80;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container21;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container44;
		/// <summary>
		/// Variable "True" if the Widget wt_If86
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If86T;

		/// <summary>
		/// Variable "True" if the Widget wt_If86
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If86F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container22;
		/// <summary>
		/// Variable (wtTargetNote) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wtTargetNote;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container25;
		private RLTargetTypeTargetTargetStatusBooleanRecordList _ssListTargetsList = new RLTargetTypeTargetTargetStatusBooleanRecordList();
		public RLTargetTypeTargetTargetStatusBooleanRecordList ssListTargetsList {
			get {
				return _ssListTargetsList; 
			}
			set {
				_ssListTargetsList = value;
				wtListTargets.DataSource = value;
				ssListTargetsListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtListTargets;
		public ArrayList wtListTargets_storage = new ArrayList();
		protected bool ssListTargetsList_notUsedYet = true;
		protected bool ssListTargetsListDoDataBind;
		protected bool ssListTargetsListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperList;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container31;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container38;
		/// <summary>
		/// Variable "True" if the Widget wt_If75
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If75T;

		/// <summary>
		/// Variable "True" if the Widget wt_If75
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If75F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container11;
		/// <summary>
		/// Variable "True" if the Widget wt_If85
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If85T;

		/// <summary>
		/// Variable "True" if the Widget wt_If85
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If85F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container36;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container35;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container28;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container43;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container56;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container65;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container5;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container57;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container67;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container84;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container14;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container87;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container12;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container7;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container29;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container72;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container62;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container60;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container10;
		/// <summary>
		/// Variable "True" if the Widget wt_If63
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If63T;

		/// <summary>
		/// Variable "True" if the Widget wt_If63
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If63F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container6;
		/// <summary>
		/// Variable "True" if the Widget wt_If50
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If50T;

		/// <summary>
		/// Variable "True" if the Widget wt_If50
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If50F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container89;
		/// <summary>
		/// Variable (wtEditTarget) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wtEditTarget;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container68;
		/// <summary>
		/// Variable (wtDelete) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wtDelete;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container82;
		private bool _isRendering = false;
		public HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();
		public string InstanceID;
		public string RuntimeID= "";
		int resUserCheck_outParamPermissionType = 0;
		RLIntIntIntIntRecordList queryResGetTotal_outParamList = new RLIntIntIntIntRecordList();
		int queryResGetTotal_outParamCount = 0;
		RLTargetTypeTargetTargetStatusBooleanRecordList queryResGetTargetsByStudentReference_outParamList = new RLTargetTypeTargetTargetStatusBooleanRecordList();
		int queryResGetTargetsByStudentReference_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// UserCheck
			Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("oDZDk7vbjky0HYuBDlfjVg")).ssId, out resUserCheck_outParamPermissionType);
			// Query QueryGetTotal
			int QueryGetTotal_maxRecords = 0;
			queryResGetTotal_outParamList = FuncssPreparation.QueryGetTotal(heContext, QueryGetTotal_maxRecords, IterationMultiplicity.Never, out queryResGetTotal_outParamCount, inParamStudentReference
			, inParamCategoryId
			, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId
			, inParamOfferingCode
			, ENTargetStatusEntity.GetRecordByKey(ObjectKey.Parse("rwG5kG2Yv0mZ8ivG2iqF5w")).ssId
			, ENTargetStatusEntity.GetRecordByKey(ObjectKey.Parse("xgMbpN1uY0in+UNKPnRt5Q")).ssId
			);
			// Query datasetGetTargetsByStudentReference
			int datasetGetTargetsByStudentReference_maxRecords = Math.Max(wtListTargets.StartIndex + wtListTargets.LineCount + 1, 0);
			queryResGetTargetsByStudentReference_outParamList = FuncssPreparation.datasetGetTargetsByStudentReference(heContext, datasetGetTargetsByStudentReference_maxRecords, IterationMultiplicity.Single, out queryResGetTargetsByStudentReference_outParamCount, inParamCategoryId
			, inParamOfferingCode
			, inParamStudentReference
			);
		}
		static WBlkTargets_List() {
		}
		override protected void OnInit(EventArgs e) {
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wtListTargets.StartIndexExpression = () => 0;
			wtListTargets.LineCountExpression = () => 999;
			if (this.wtDelete != null) {
				this.wtDelete.Click += new System.EventHandler(this.wtDelete_Click);
			}
			this.Load += new System.EventHandler(this.Page_Load);
			this.Unload += new System.EventHandler(this.Page_Unload);
		}
		private void Page_Load(object sender, System.EventArgs e) {
			((OSPageViewState) Page).EnableResetViewState();
			heContext = Global.App.OsContext;
			RuntimeID = ClientID;
			if (!Visible) return;
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!IsPostBack || _isRendering) {
					// register this block in the page so for later outputting the block javascript includes in their correct order
					((OSPage) Page).RegisterBlock(this);
					if (_isRendering) {
						Preparation(heContext);
					}
					bool bindEditRecords = IsViewStateEmpty;
					ssListTargetsListDoDataBind = true;
				} else {
					FetchViewState();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}
		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			if (!WasRendered) {
				return;
			}
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}
		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}
		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}


		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();
			ViewStateAttributes.SetInViewState("resUserCheck_outParamPermissionType", resUserCheck_outParamPermissionType, 0);
			ViewStateAttributes.SetInViewState("inParamStudentReference", inParamStudentReference, "");
			ViewStateAttributes.SetInViewState("inParamCategoryId", inParamCategoryId, 0);
			ViewStateAttributes.SetInViewState("inParamOfferingCode", inParamOfferingCode, "");
			if (IsAjaxRequest) {
				recListListTargets_Rebuild((ssListTargetsListDataBound ? wtListTargets.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtListTargets.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtListTargets_list", wtListTargets_storage, null);
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			if (IsViewStateEmpty) return;
			try {
				resUserCheck_outParamPermissionType = (int) ViewStateAttributes.GetFromViewState("resUserCheck_outParamPermissionType", 0);
				inParamStudentReference = (string) ViewStateAttributes.GetFromViewState("inParamStudentReference", "");
				inParamCategoryId = (int) ViewStateAttributes.GetFromViewState("inParamCategoryId", 0);
				inParamOfferingCode = (string) ViewStateAttributes.GetFromViewState("inParamOfferingCode", "");
				recListListTargets_Restore();
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}

		/// <summary>
		/// Store visibility information of the web block and input widgets in the viewstate
		/// </summary>
		protected override void StoreInputsAndWebBlockVisibility() {
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore visibility information of the web block and input widgets from the viewstate
		/// </summary>
		protected override void RestoreInputsAndWebBlockVisibility() {
			WasRendered = true;
		}

		private void Page_Unload(object sender, System.EventArgs e) {
		}

		public LocalState PushStack() {
			throw new NotImplementedException();
		}

		public void doRefreshScreen(HeContext heContext) {
			((IWebScreen) this.Parent.Page).doRefreshScreen(heContext);
		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			StoreViewState();
			((IWebScreen) this.Parent.Page).doAJAXRefreshScreen(heContext);
		}

		public static void GetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			string blockId = "CaseConferencing.Kl_A0KL0PaUa3RBAfrU_xSw";
			if (visited.Contains(blockId)) {
				return; 
			}
			visited.Add(blockId);
			if (!inline) {
				GetCssIncludes(writer, visited);
			} else {
				GetInlineCss(writer, visited);
			}
		}

		private static void GetCssIncludes(TextWriter writer, HashSet<string> visited) {
			InnerGetCss(writer, false, visited);
			CssHelper.WriteCssInclude(writer, AppUtils.Instance.getImagePath() + "Blocks/CaseConferencing/Learner_ILP/Targets_List.css" + AppUtils.Instance.CacheInvalidationSuffix);
		}

		private static void GetInlineCss(TextWriter writer, HashSet<string> visited) {
			StringWriter localCssWriter = new StringWriter();
			localCssWriter.NewLine = writer.NewLine;
			string localCss = Environment.NewLine;
			InnerGetCss(localCssWriter, true, visited);
			localCss += localCssWriter.ToString();
			HashSet<string> cssVisited = new HashSet<string>();
			string read;
			AppUtils.getResourceFileContent(out read, "Blocks\\CaseConferencing\\Learner_ILP\\Targets_List.css");
			localCss += OutSystems.HubEdition.RuntimePlatform.Email.EmailHelper.FlattenCSSFile(read, "Blocks\\CaseConferencing\\Learner_ILP\\Targets_List.css", cssVisited);
			writer.Write(localCss);
		}

		private static void InnerGetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkPercentageComplete.GetCss(writer, inline, visited);
		}

		private void Page_Error(object sender, System.EventArgs e) {
		}
		public void CheckPermissions(HeContext heContext) {
			((IWebScreen) this.Page).CheckPermissions(heContext);
		}
		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}

		public ObjectKey Key {
			get {
				return ObjectKey.Parse("l_A0KL0PaUa3RBAfrU_xSw"); 
			}
		}
		public bool isSecure {
			get {
				return ((IWebScreen) Page).isSecure; 
			}
		}
		public class lcvDelete: VarsBag {
			public int resStudentLog_Create_outParamStudentLogId = 0;

			public lcvDelete() {
			}
		}
		/// <summary>
		/// Action <code>CommandDelete</code> that represents the Service Studio screen action
		///  <code>Delete</code> <p> Description: </p>
		/// </summary>
		private bool CommandDelete(HeContext heContext) {
			CheckPermissions(heContext);
			lcvDelete localVars = new lcvDelete();
			try {
				// DeleteTarget
				ExtendedActions.DeleteTarget(heContext, getWtListTargetsList().CurrentRec.ssENTarget.ssId);
				// Query QueryGetTotal
				{
					int QueryGetTotal_maxRecords = 0;
					queryResGetTotal_outParamList = FuncssPreparation.QueryGetTotal(heContext, QueryGetTotal_maxRecords, IterationMultiplicity.Never, out queryResGetTotal_outParamCount, inParamStudentReference
					, inParamCategoryId
					, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId
					, inParamOfferingCode
					, ENTargetStatusEntity.GetRecordByKey(ObjectKey.Parse("rwG5kG2Yv0mZ8ivG2iqF5w")).ssId
					, ENTargetStatusEntity.GetRecordByKey(ObjectKey.Parse("xgMbpN1uY0in+UNKPnRt5Q")).ssId
					);
				}
				// Query datasetGetTargetsByStudentReference
				{
					int datasetGetTargetsByStudentReference_maxRecords = Math.Max(wtListTargets.StartIndex + wtListTargets.LineCount + 1, 0);
					queryResGetTargetsByStudentReference_outParamList = FuncssPreparation.datasetGetTargetsByStudentReference(heContext, datasetGetTargetsByStudentReference_maxRecords, IterationMultiplicity.Single, out queryResGetTargetsByStudentReference_outParamCount, inParamCategoryId
					, inParamOfferingCode
					, inParamStudentReference
					);
				}
				// StudentLog_Create
				Actions.ActionStudentLog_Create(heContext, inParamStudentReference, ((int) Global.App.OsContext.Session["UserID"]), "Target deleted", ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("6zvt4MEsuUGcFkcAw6pWSw")).ssLogType, "Target deleted", BuiltInFunction.NullTextIdentifier(), false, 0, "Target", "", 0, 0, "", 0, out localVars.resStudentLog_Create_outParamStudentLogId);
				// Refresh Widget (wtListTargets)
				ssListTargetsListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtListTargets, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandOnNotify</code> that represents the Service Studio screen action
		///  <code>OnNotify</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnNotify(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Query datasetGetTargetsByStudentReference
				{
					int datasetGetTargetsByStudentReference_maxRecords = Math.Max(wtListTargets.StartIndex + wtListTargets.LineCount + 1, 0);
					queryResGetTargetsByStudentReference_outParamList = FuncssPreparation.datasetGetTargetsByStudentReference(heContext, datasetGetTargetsByStudentReference_maxRecords, IterationMultiplicity.Single, out queryResGetTargetsByStudentReference_outParamCount, inParamCategoryId
					, inParamOfferingCode
					, inParamStudentReference
					);
				}
				// Refresh Widget (wtListTargets)
				ssListTargetsListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtListTargets, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandRefreshTable</code> that represents the Service Studio screen action
		///  <code>RefreshTable</code> <p> Description: </p>
		/// </summary>
		private bool CommandRefreshTable(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Query datasetGetTargetsByStudentReference
				{
					int datasetGetTargetsByStudentReference_maxRecords = Math.Max(wtListTargets.StartIndex + wtListTargets.LineCount + 1, 0);
					queryResGetTargetsByStudentReference_outParamList = FuncssPreparation.datasetGetTargetsByStudentReference(heContext, datasetGetTargetsByStudentReference_maxRecords, IterationMultiplicity.Single, out queryResGetTargetsByStudentReference_outParamCount, inParamCategoryId
					, inParamOfferingCode
					, inParamStudentReference
					);
				}
				// Query QueryGetTotal
				{
					int QueryGetTotal_maxRecords = 0;
					queryResGetTotal_outParamList = FuncssPreparation.QueryGetTotal(heContext, QueryGetTotal_maxRecords, IterationMultiplicity.Never, out queryResGetTotal_outParamCount, inParamStudentReference
					, inParamCategoryId
					, ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId
					, inParamOfferingCode
					, ENTargetStatusEntity.GetRecordByKey(ObjectKey.Parse("rwG5kG2Yv0mZ8ivG2iqF5w")).ssId
					, ENTargetStatusEntity.GetRecordByKey(ObjectKey.Parse("xgMbpN1uY0in+UNKPnRt5Q")).ssId
					);
				}
				// Refresh Widget (wtLogContent)
				ssListTargetsListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtLogContent, "None", StoreViewState);
				// NotifyWidget
				ExtendedActions.NotifyWidget(heContext, RuntimeID, "");
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public void cntLogContent_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntLogContent_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntLogContent_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntLogContent_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtLogContent)
		/// </summary>
		/// <returns>The Visible State of wtLogContent</returns>
		public bool cntLogContent_isVisible() {
			return true;
		}

		public void cnt_Container80_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container80_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container80_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "padding: 15px; font-size: 18px;text-shadow: 0px 1px 2px #dadada;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container80_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container80)
		/// </summary>
		/// <returns>The Visible State of wt_Container80</returns>
		public bool cnt_Container80_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container21_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container21_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container21_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container21_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container21)
		/// </summary>
		/// <returns>The Visible State of wt_Container21</returns>
		public bool cnt_Container21_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container44_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container44_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container44_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container44_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container44)
		/// </summary>
		/// <returns>The Visible State of wt_Container44</returns>
		public bool cnt_Container44_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = 63FRjqiwO0OgdFgKcHmcJA) Expression: "Targets - " +
		///  GetCategory(CategoryId).Category.Label
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression48() {
			return ("Targets - " +Functions.ssGetCategory(heContext, inParamCategoryId).ssENCategory.ssLabel);
		}
		public void expression_InlineExpression79_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				expression_InlineExpression79_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string expression_InlineExpression79_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #757575;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = 82Cm5Z1wp0qLMlnLlulBRg) Expression:
		///  GetTotal.List.Current.Int.Value + "/" + GetTotal.List.Current.Int_2.Value
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression79() {
			return ((Convert.ToString(queryResGetTotal_outParamList.CurrentRec.ssSTInt.ssValue) + "/") +Convert.ToString(queryResGetTotal_outParamList.CurrentRec.ssSTInt_2.ssValue));
		}
		bool if_wt_If86_hasRun=false;
		bool if_wt_If86_evalResult;
		public bool if_wt_If86() {
			if (if_wt_If86_hasRun) {
				if_wt_If86_hasRun = false;
				return if_wt_If86_evalResult;
			}
			if_wt_If86_hasRun = true;
			if_wt_If86_evalResult = (resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId);
			return if_wt_If86_evalResult;
		}

		public void cnt_Container22_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container22_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container22_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:right";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container22_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container22)
		/// </summary>
		/// <returns>The Visible State of wt_Container22</returns>
		public bool cnt_Container22_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance32_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor) sender;
				widget.inParamLinkOrButtonWidgetId = wtTargetNote.ClientID;
				widget.inParamTitle = " ";
				widget.inParamWidthPx = -1;
				widget.inParamHeightPx = -1;
				widget.inParamAutoResize = true;
				widget.inParamRecenterOnResize = false;
				widget.inParamHideCloseButton = false;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance32
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance32_AjaxNotify(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandRefreshTable(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wtTargetNote)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wtTargetNote)</returns>
		public string lnkTargetNote_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("OfferingName", System.Web.HttpUtility.UrlEncode(inParamOfferingCode, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("TargetId", System.Web.HttpUtility.UrlEncode(Convert.ToString(BuiltInFunction.NullIdentifier()), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("StudentId", System.Web.HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("CategoryId", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamCategoryId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("OfferingCode", System.Web.HttpUtility.UrlEncode(inParamOfferingCode, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Learner_ILP.Popup_Target", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wtTargetNote)
		/// </summary>
		/// <returns>title of the Link (wtTargetNote)</returns>
		public string
		lnkTargetNote_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtTargetNote)
		/// </summary>
		/// <returns>The Visible State of wtTargetNote</returns>
		public bool lnkTargetNote_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtTargetNote)
		/// </summary>
		/// <returns>The Enabled State of wtTargetNote</returns>
		public bool lnkTargetNote_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container25_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container25_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container25_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top: -7px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container25_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container25)
		/// </summary>
		/// <returns>The Visible State of wt_Container25</returns>
		public bool cnt_Container25_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance78_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("AKN6u1xOiEiC455XrqaERw")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void recListListTargets_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// widget wtListTargets
				ssListTargetsList = queryResGetTargetsByStudentReference_outParamList;
				ssListTargetsListDoDataBind = false;
				ssListTargetsListDataBound = true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void recListListTargets_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssListTargetsList.Length > 0) {
					ssListTargetsList.CurrentRec = ssListTargetsList[ssListTargetsList.CurrentRowNumber];
				}
				if (ssListTargetsList.Length > e.SelectedIndex) {
					ssListTargetsList.CurrentRec = ssListTargetsList[e.SelectedIndex];
					ssListTargetsList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListListTargets_Store(object dataItem, int index) {
			RCTargetTypeTargetTargetStatusBooleanRecord tmprec = (RCTargetTypeTargetTargetStatusBooleanRecord) dataItem;
			ArrayList tmpFields = new ArrayList();
			tmpFields.Add(tmprec.ssENTarget.ssId == 0?(object) null: tmprec.ssENTarget.ssId);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENTarget.ChangedAttributes, new BitArray(new bool[] {
				true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENTarget.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
			}
			))));
			if (index < wtListTargets_storage.Count) {
				wtListTargets_storage[index] = tmpFields;
			} else {
				wtListTargets_storage.Add(tmpFields);
			}
			return "";
		}
		public void recListListTargets_Restore() {

			#region fetch ssListTargetsList.

			// Read the needed fields of ssListTargetsList from storewtListTargets_list
			ssListTargetsList = new RLTargetTypeTargetTargetStatusBooleanRecordList();
			ArrayList storewtListTargets_list;
			storewtListTargets_list = (ArrayList) ViewStateAttributes.GetFromViewState("wtListTargets_list", null);
			if (storewtListTargets_list == null) {
				return;
			} else {

				foreach(ArrayList tmpFieldswtListTargets_list in storewtListTargets_list) {
					if (tmpFieldswtListTargets_list != null) {
						// Aux current record variable
						RCTargetTypeTargetTargetStatusBooleanRecord tmpAuxCurrentRecordwtListTargets_list = new RCTargetTypeTargetTargetStatusBooleanRecord(null);
						tmpAuxCurrentRecordwtListTargets_list.ssENTarget.ssId = (int) (tmpFieldswtListTargets_list[0] == null ? 0: tmpFieldswtListTargets_list[0]);

						tmpAuxCurrentRecordwtListTargets_list.ssENTarget.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtListTargets_list[1]);

						tmpAuxCurrentRecordwtListTargets_list.ssENTarget.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtListTargets_list[2]);

						ssListTargetsList.Append(tmpAuxCurrentRecordwtListTargets_list);
					}
				}
			}
			ssListTargetsList.CurrentRowNumber = -1;
			#endregion


			#region fetch ssListTargetsList runtime properties state.


			if (storewtListTargets_list.Count > 0) {
				ssListTargetsList.RestoreRecordListState(storewtListTargets_list.Count - 1, false);
			} else {
				ssListTargetsList.CurrentRowNumber = 0;
			}

			#endregion

			wtListTargets_storage = storewtListTargets_list;
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListListTargets_Clear(object sender, EventArgs e) {
			wtListTargets_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListListTargets_Rebuild(int startIndex, int lineCount) {
			if (ssListTargetsList.Length != -1) {
				wtListTargets_storage.Clear();
				for (int i=startIndex; i<ssListTargetsList.Data.Count && i<startIndex+lineCount; i++) {
					recListListTargets_Store(ssListTargetsList.Data[i], wtListTargets_storage.Count);
				}
			}
		}
		public void recListListTargets_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtListTargets widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLTargetTypeTargetTargetStatusBooleanRecordList getWtListTargetsList() {
			if (ssListTargetsListDoDataBind) {
				recListListTargets_onDataBinding(this, null);
			}

			return ssListTargetsList;
		}
		public void cntWrapperList_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntWrapperList_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntWrapperList_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = ((((BuiltInFunction.Mod(getWtListTargetsList().CurrentRowNumber, 2M) ==0M)) ?("background-color:#F8F8F8;"):("")) + (((getWtListTargetsList().CurrentRowNumber==0)) ?("border-top: solid 1px #dadada;"):("")));
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntWrapperList_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperList)
		/// </summary>
		/// <returns>The Visible State of wtWrapperList</returns>
		public bool cntWrapperList_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Table58_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Table58_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Table58_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin:2px;padding: 4px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void wt_TableCell37_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell37_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell37_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void wt_TableCell26_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell26_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell26_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-weight:500;line-height:16px;font-size: 13px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container31_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container31_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container31_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container31_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container31)
		/// </summary>
		/// <returns>The Visible State of wt_Container31</returns>
		public bool cnt_Container31_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = eU12MhFs1Eedk8vw+6riTA) Expression:
		///  ListTargets.List.Current.TargetType.Label
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression23() {
			return getWtListTargetsList().CurrentRec.ssENTargetType.ssLabel;
		}
		/// <summary>
		/// Function to dump expression (Key = Gi7nUkvQXUWc6uM_6lRoSQ) Expression:
		///  ListTargets.List.Current.Target.TargetHeader
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression34() {
			return getWtListTargetsList().CurrentRec.ssENTarget.ssTargetHeader;
		}
		public void cnt_Container38_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container38_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container38_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container38_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container38)
		/// </summary>
		/// <returns>The Visible State of wt_Container38</returns>
		public bool cnt_Container38_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void expression_InlineExpression33_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				expression_InlineExpression33_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string expression_InlineExpression33_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-weight:500;line-height:16px;font-size: 13px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = 3kOFUp5dVEO4XmptREtEmg) Expression:
		///  ListTargets.List.Current.Target.TargetDescription
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression33() {
			return getWtListTargetsList().CurrentRec.ssENTarget.ssTargetDescription;
		}
		bool if_wt_If75_hasRun=false;
		bool if_wt_If75_evalResult;
		public bool if_wt_If75() {
			if (if_wt_If75_hasRun) {
				if_wt_If75_hasRun = false;
				return if_wt_If75_evalResult;
			}
			if_wt_If75_hasRun = true;
			if_wt_If75_evalResult = (getWtListTargetsList().CurrentRec.ssENTarget.ssTargetNote!= "");
			return if_wt_If75_evalResult;
		}

		public void cnt_Container11_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container11_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container11_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container11_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container11)
		/// </summary>
		/// <returns>The Visible State of wt_Container11</returns>
		public bool cnt_Container11_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If85_hasRun=false;
		bool if_wt_If85_evalResult;
		public bool if_wt_If85() {
			if (if_wt_If85_hasRun) {
				if_wt_If85_hasRun = false;
				return if_wt_If85_evalResult;
			}
			if_wt_If85_hasRun = true;
			if_wt_If85_evalResult = (getWtListTargetsList().CurrentRec.ssENTarget.ssTargetNote!= "");
			return if_wt_If85_evalResult;
		}

		public void cnt_Container36_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container36_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container36_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container36_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container36)
		/// </summary>
		/// <returns>The Visible State of wt_Container36</returns>
		public bool cnt_Container36_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container35_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container35_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container35_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container35_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container35)
		/// </summary>
		/// <returns>The Visible State of wt_Container35</returns>
		public bool cnt_Container35_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container28_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container28_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container28_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container28_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container28)
		/// </summary>
		/// <returns>The Visible State of wt_Container28</returns>
		public bool cnt_Container28_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container43_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container43_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container43_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAttributeAccessor) sender).SetAttribute("title", "Target defined by Learner" .ToString());
				if (!cnt_Container43_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container43)
		/// </summary>
		/// <returns>The Visible State of wt_Container43</returns>
		public bool cnt_Container43_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance15_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("4emzQL9h4U2MSj1S0mm95w")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container56_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container56_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container56_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container56_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container56)
		/// </summary>
		/// <returns>The Visible State of wt_Container56</returns>
		public bool cnt_Container56_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container65_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container65_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container65_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container65_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container65)
		/// </summary>
		/// <returns>The Visible State of wt_Container65</returns>
		public bool cnt_Container65_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = TPhXQS09mEWcdlLonMAy7w) Expression: "Learner noted on "
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression24() {
			return "Learner noted on ";
		}
		public void webBlck_WebBlockInstance4_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
				widget.inParamDate = Convert.ToDateTime(getWtListTargetsList().CurrentRec.ssENTarget.ssTargetNote_CreatedOn.ToString("yyyy-M-d"));
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container5_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container5_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container5_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-bottom:10px";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container5_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container5)
		/// </summary>
		/// <returns>The Visible State of wt_Container5</returns>
		public bool cnt_Container5_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = xfWw2eFo+0mp2yN6u7ozBQ) Expression:
		///  ListTargets.List.Current.Target.TargetNote
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression74() {
			return getWtListTargetsList().CurrentRec.ssENTarget.ssTargetNote;
		}
		public void wt_TableCell52_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell52_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell52_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-weight:500;line-height:16px;font-size: 13px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container57_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container57_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container57_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container57_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container57)
		/// </summary>
		/// <returns>The Visible State of wt_Container57</returns>
		public bool cnt_Container57_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance18_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
				ssCaseConferencing.Flows.FlowStaffView.WBlkPercentageComplete widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkPercentageComplete) sender;
				widget.inParamPercentage = getWtListTargetsList().CurrentRec.ssENTarget.ssCompletedPerc;
				widget.inParamTargetId = getWtListTargetsList().CurrentRec.ssENTarget.ssId;
				widget.inParamisReadOnly = ((getWtListTargetsList().CurrentRec.ssENTarget.ssisStudentTarget) ?(true):(false));
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxNotify event handler for widget wt_WebBlockInstance18
		/// </summary>
		public void webBlck_WebBlockInstance18_AjaxNotify(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnNotify(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void wt_TableCell40_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell40_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell40_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-weight:500;line-height:16px;font-size: 13px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container67_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container67_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container67_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container67_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container67)
		/// </summary>
		/// <returns>The Visible State of wt_Container67</returns>
		public bool cnt_Container67_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container84_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container84_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container84_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container84_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container84)
		/// </summary>
		/// <returns>The Visible State of wt_Container84</returns>
		public bool cnt_Container84_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container14_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container14_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container14_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container14_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container14)
		/// </summary>
		/// <returns>The Visible State of wt_Container14</returns>
		public bool cnt_Container14_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container87_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container87_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container87_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container87_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container87)
		/// </summary>
		/// <returns>The Visible State of wt_Container87</returns>
		public bool cnt_Container87_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance64_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
				widget.inParamDate = getWtListTargetsList().CurrentRec.ssENTarget.ssTargetDate;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container12_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container12_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container12_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container12_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container12)
		/// </summary>
		/// <returns>The Visible State of wt_Container12</returns>
		public bool cnt_Container12_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return (getWtListTargetsList().CurrentRec.ssENTarget.ssCompletionDate!=BuiltInFunction.NullDate());
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container7_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container7_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container7_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container7_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container7)
		/// </summary>
		/// <returns>The Visible State of wt_Container7</returns>
		public bool cnt_Container7_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container29_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container29_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container29_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container29_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container29)
		/// </summary>
		/// <returns>The Visible State of wt_Container29</returns>
		public bool cnt_Container29_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance39_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
				widget.inParamDate = getWtListTargetsList().CurrentRec.ssENTarget.ssCompletionDate;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container72_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container72_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container72_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container72_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container72)
		/// </summary>
		/// <returns>The Visible State of wt_Container72</returns>
		public bool cnt_Container72_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container62_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container62_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container62_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container62_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container62)
		/// </summary>
		/// <returns>The Visible State of wt_Container62</returns>
		public bool cnt_Container62_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return (getWtListTargetsList().CurrentRec.ssENTarget.ssCreatedBy!=BuiltInFunction.NullIdentifier());
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = wXHVBklt7UqRbDUtEj0ASA) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression2() {
			return (((getWtListTargetsList().CurrentRec.ssENTarget.ssCreatedBy!=BuiltInFunction.NullIdentifier())) ?(Functions.ssGetUser(heContext, getWtListTargetsList().CurrentRec.ssENTarget.ssCreatedBy).ssENUser.ssName):(""));
		}
		public void wt_TableCell69_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell69_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell69_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container60_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container60_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container60_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container60_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container60)
		/// </summary>
		/// <returns>The Visible State of wt_Container60</returns>
		public bool cnt_Container60_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container10_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container10_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container10_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container10_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container10)
		/// </summary>
		/// <returns>The Visible State of wt_Container10</returns>
		public bool cnt_Container10_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = SrjBScGD1ESf3_sxxzFIvQ) Expression:
		///  ListTargets.List.Current.TargetStatus.Label
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression27() {
			return getWtListTargetsList().CurrentRec.ssENTargetStatus.ssLabel;
		}
		public void wt_TableCell46_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell46_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell46_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If63_hasRun=false;
		bool if_wt_If63_evalResult;
		public bool if_wt_If63() {
			if (if_wt_If63_hasRun) {
				if_wt_If63_hasRun = false;
				return if_wt_If63_evalResult;
			}
			if_wt_If63_hasRun = true;
			if_wt_If63_evalResult = (resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId);
			return if_wt_If63_evalResult;
		}

		public void cnt_Container6_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container6_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container6_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container6_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container6)
		/// </summary>
		/// <returns>The Visible State of wt_Container6</returns>
		public bool cnt_Container6_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If50_hasRun=false;
		bool if_wt_If50_evalResult;
		public bool if_wt_If50() {
			if (if_wt_If50_hasRun) {
				if_wt_If50_hasRun = false;
				return if_wt_If50_evalResult;
			}
			if_wt_If50_hasRun = true;
			if_wt_If50_evalResult = getWtListTargetsList().CurrentRec.ssENTarget.ssisStudentTarget;
			return if_wt_If50_evalResult;
		}

		public void cnt_Container89_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container89_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container89_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAttributeAccessor) sender).SetAttribute("title", "Target defined by Learner" .ToString());
				if (!cnt_Container89_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container89)
		/// </summary>
		/// <returns>The Visible State of wt_Container89</returns>
		public bool cnt_Container89_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance53_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("4emzQL9h4U2MSj1S0mm95w")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wtEditTarget)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wtEditTarget)</returns>
		public string lnkEditTarget_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("OfferingCode", System.Web.HttpUtility.UrlEncode(getWtListTargetsList().CurrentRec.ssENTarget.ssOfferingCode, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("OfferingName", System.Web.HttpUtility.UrlEncode(getWtListTargetsList().CurrentRec.ssENTarget.ssOfferingName, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("CategoryId", System.Web.HttpUtility.UrlEncode(Convert.ToString(getWtListTargetsList().CurrentRec.ssENTarget.ssOfferingCategory), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("TargetId", System.Web.HttpUtility.UrlEncode(Convert.ToString(getWtListTargetsList().CurrentRec.ssENTarget.ssId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("StudentId", System.Web.HttpUtility.UrlEncode(getWtListTargetsList().CurrentRec.ssENTarget.ssStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Learner_ILP.Popup_Target", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wtEditTarget)
		/// </summary>
		/// <returns>title of the Link (wtEditTarget)</returns>
		public string
		lnkEditTarget_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtEditTarget)
		/// </summary>
		/// <returns>The Visible State of wtEditTarget</returns>
		public bool lnkEditTarget_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtEditTarget)
		/// </summary>
		/// <returns>The Enabled State of wtEditTarget</returns>
		public bool lnkEditTarget_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container68_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container68_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container68_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container68_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container68)
		/// </summary>
		/// <returns>The Visible State of wt_Container68</returns>
		public bool cnt_Container68_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance41_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("NcdYoHCZikuz1QH+Reihqg")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void lnkDelete_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				string msg = OutSystems.HubEdition.RuntimePlatform.RuntimePlatformUtils.JavaScriptEscString("Are you sure?");
				((OutSystems.HubEdition.WebWidgets.LinkButton) sender).ConfirmationMessage = msg;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wtDelete_Click(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (IsAjaxRequest && e.Equals(EventArgs.Empty) && ((OSPage) Page).TriggersBubbleUpEvents((Control) sender)) {
					return;
				}
				((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
				if (CommandDelete(heContext)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the title of the link (wtDelete)
		/// </summary>
		/// <returns>title of the Link (wtDelete)</returns>
		public string
		lnkDelete_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtDelete)
		/// </summary>
		/// <returns>The Visible State of wtDelete</returns>
		public bool lnkDelete_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtDelete)
		/// </summary>
		/// <returns>The Enabled State of wtDelete</returns>
		public bool lnkDelete_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container82_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container82_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container82_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container82_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container82)
		/// </summary>
		/// <returns>The Visible State of wt_Container82</returns>
		public bool cnt_Container82_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance81_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("fKOPgP_OsE2Zi++YxmYxxA")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void RichWidgets_webBlck_WebBlockInstance88_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor) sender;
				widget.inParamLinkOrButtonWidgetId = Utils.getControlInRecordWidget(wtListTargets, "wtEditTarget").ClientID;
				widget.inParamTitle = " ";
				widget.inParamWidthPx = -1;
				widget.inParamHeightPx = -1;
				widget.inParamAutoResize = true;
				widget.inParamRecenterOnResize = false;
				widget.inParamHideCloseButton = false;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance88
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance88_AjaxNotify(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandRefreshTable(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public static class FuncCommandDelete {
		}
		public static class FuncCommandOnNotify {
		}
		public static class FuncCommandRefreshTable {
		}
		public static class FuncssPreparation {

			private static void QueryGetTotalReadDB(ref RCIntIntIntIntRecord rec, IDataReader r) {
				int index = 0;
				rec.ssSTInt.Read(r, ref index);
				rec.ssSTInt_2.Read(r, ref index);
				rec.ssSTInt_3.Read(r, ref index);
				rec.ssSTInt_4.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetTotal" of Action "Preparation"
			/// </summary>
			public static RLIntIntIntIntRecordList QueryGetTotal(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstStudentReference, int qpinCategoryId, int qpinCategoryVOC, string qpstOfferingCode, int qpinTargetCompleteStatus, int qpinTargetCompleteStatus2) {
				// Query Iterations: Never {-unbound-}
				// Refresh Query gWPEzb+RvkCxj1z6igYM9w Iterations: Never {-unbound-}
				// Refresh Query 95gErRkxeU6+hWSxrf02AQ Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords == 1));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				sqlCmd.CreateParameter("@qpinTargetCompleteStatus", DbType.Int32, qpinTargetCompleteStatus);
				sqlCmd.CreateParameter("@qpinTargetCompleteStatus2", DbType.Int32, qpinTargetCompleteStatus2);
				sqlCmd.CreateParameter("@qpinCategoryVOC", DbType.Int32, qpinCategoryVOC);
				sqlCmd.CreateParameter("@qpinCategoryId", DbType.Int32, qpinCategoryId);
				sqlCmd.CreateParameter("@qpstStudentReference", DbType.String, qpstStudentReference);
				sqlCmd.CreateParameter("@qpstOfferingCode", DbType.String, qpstOfferingCode);
				string advSql = "SELECT   " +
				 "        MAX([COMPLETEDTARGETS]),  " +
				 "        MAX([TOTALTARGETS]),  " +
				 "        MAX([COMPLETEDUNITS]),  " +
				 "        MAX([TOTALUNITS])  " +
				 "FROM (    " +
				 "SELECT   " +
				 "        SUM(CASE WHEN   {Target}.[TARGETSTATUSID] = @qpinTargetCompleteStatus or  {Target}.[TARGETSTATUSID] = @qpinTargetCompleteStatus2   " +
				 "                 THEN 1   " +
				 "                 ELSE 0  " +
				 "            END  " +
				 "        ) AS [COMPLETEDTARGETS],  " +
				 "        COUNT(*) AS [TOTALTARGETS],  " +
				 "        0 [COMPLETEDUNITS],  " +
				 "        0 [TOTALUNITS]  " +
				 "    FROM  {Target}   " +
				 "    WHERE   ISNULL( {Target}.[OFFERINGCATEGORY],@qpinCategoryVOC) = @qpinCategoryId   " +
				 "    AND  {Target}.[STUDENTREFERENCE] = @qpstStudentReference  " +
				 "    AND   {Target}.[OFFERINGCODE] = @qpstOfferingCode   " +
				 "    group by  {Target}.[OFFERINGCODE]  " +
				 "  " +
				 "UNION  " +
				 "        SELECT   " +
				 "        0 [COMPLETEDTARGETS],  " +
				 "        0 [TOTALTARGETS],  " +
				 "         SUM(CASE WHEN ISNULL( {Tracking}.[COMPLETIONDATE],{d '1900-01-01'}) = {d '1900-01-01'}  " +
				 "             THEN 0   " +
				 "             ELSE 1  " +
				 "            END  " +
				 "        ) AS [COMPLETEDUNITS],  " +
				 "        COUNT(*) AS [TOTALUNITS]  " +
				 "    FROM  {Tracking}  " +
				 "    WHERE   ISNULL( {Tracking}.[OFFERINGCATEGORY],@qpinCategoryVOC) = @qpinCategoryId   " +
				 "    AND  {Tracking}.[STUDENTREFERENCE] = @qpstStudentReference  " +
				 "    AND   {Tracking}.[OFFERINGCODE] = @qpstOfferingCode  " +
				 "    group by  {Tracking}.[OFFERINGNAME]  " +
				 ") c";
				string sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				AppUtils.Instance.CheckReadOnlyEntityReferences(advSql);
				sqlCmd.CommandText = sql;
				try {
					RLIntIntIntIntRecordList outParamList = new RLIntIntIntIntRecordList();
					if (multiplicity != IterationMultiplicity.Multiple) {
						outParamList.AlternateReadDBMethod = QueryGetTotalReadDB;
					}
					outParamList.Transaction = trans;
					BitArray[] opt = new BitArray[4];
					opt[0] = new BitArray(new bool[] {
						false
					}
					);
					opt[1] = new BitArray(new bool[] {
						false
					}
					);
					opt[2] = new BitArray(new bool[] {
						false
					}
					);
					opt[3] = new BitArray(new bool[] {
						false
					}
					);
					outParamList.AllOptimizedAttributes = opt;
					if (multiplicity == IterationMultiplicity.Multiple) {
						RLIntIntIntIntRecordList _tmp = new RLIntIntIntIntRecordList();
						_tmp.AlternateReadDBMethod = QueryGetTotalReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						_tmp.MaxRecords = maxRecords;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_ILP.Targets_List.Preparation.GetTotal.List");
							outParamList = (RLIntIntIntIntRecordList) _tmp.Duplicate();
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else if (multiplicity == IterationMultiplicity.Never) {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_ILP.Targets_List.Preparation.GetTotal.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							outParamList.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_ILP.Targets_List.Preparation.GetTotal.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				} catch (System.InvalidOperationException aqExcep) {
					if (aqExcep.Message.StartsWith("Command parameter[")) {
						throw new DataBaseException("Problems accessing parameters in advanced query GetTotal in Preparation in Targets_List in Learner_ILP in CaseConferencing (SELECT           MAX([CompletedTargets]),          MAX([TotalTargets]),          MAX([CompletedUnits]),          MAX([TotalUnits])  FROM (    SELECT           SUM(CASE WHEN  {Target}.[TargetStatusId] = @TargetCompleteStatus or {Target}.[TargetStatusId] = @TargetCompleteStatus2                    THEN 1                    ELSE 0              END          ) AS [CompletedTargets],          COUNT(*) AS [TotalTargets],          0 [CompletedUnits],          0 [TotalUnits]      FROM {Target}       WHERE   ISNULL({Target}.[OfferingCategory],@CategoryVOC) = @CategoryId       AND {Target}.[StudentReference] = @StudentReference      AND  {Target}.[OfferingCode] = @OfferingCode       group by {Target}.[OfferingCode]    UNION          SELECT           0 [CompletedTargets],          0 [TotalTargets],           SUM(CASE WHEN ISNULL({Tracking}.[CompletionDate],{d '1900-01-01'}) = {d '1900-01-01'}               THEN 0                ELSE 1              END          ) AS [CompletedUnits],          COUNT ...): " + aqExcep.Message);
					}
					throw new DataBaseException("Error in advanced query GetTotal in Preparation in Targets_List in Learner_ILP in CaseConferencing (SELECT           MAX([CompletedTargets]),          MAX([TotalTargets]),          MAX([CompletedUnits]),          MAX([TotalUnits])  FROM (    SELECT           SUM(CASE WHEN  {Target}.[TargetStatusId] = @TargetCompleteStatus or {Target}.[TargetStatusId] = @TargetCompleteStatus2                    THEN 1                    ELSE 0              END          ) AS [CompletedTargets],          COUNT(*) AS [TotalTargets],          0 [CompletedUnits],          0 [TotalUnits]      FROM {Target}       WHERE   ISNULL({Target}.[OfferingCategory],@CategoryVOC) = @CategoryId       AND {Target}.[StudentReference] = @StudentReference      AND  {Target}.[OfferingCode] = @OfferingCode       group by {Target}.[OfferingCode]    UNION          SELECT           0 [CompletedTargets],          0 [TotalTargets],           SUM(CASE WHEN ISNULL({Tracking}.[CompletionDate],{d '1900-01-01'}) = {d '1900-01-01'}               THEN 0                ELSE 1              END          ) AS [CompletedUnits],          COUNT ...): " + aqExcep.Message);
				} catch (Exception aqExcep) {
					throw new DataBaseException("Error in advanced query GetTotal in Preparation in Targets_List in Learner_ILP in CaseConferencing (SELECT           MAX([CompletedTargets]),          MAX([TotalTargets]),          MAX([CompletedUnits]),          MAX([TotalUnits])  FROM (    SELECT           SUM(CASE WHEN  {Target}.[TargetStatusId] = @TargetCompleteStatus or {Target}.[TargetStatusId] = @TargetCompleteStatus2                    THEN 1                    ELSE 0              END          ) AS [CompletedTargets],          COUNT(*) AS [TotalTargets],          0 [CompletedUnits],          0 [TotalUnits]      FROM {Target}       WHERE   ISNULL({Target}.[OfferingCategory],@CategoryVOC) = @CategoryId       AND {Target}.[StudentReference] = @StudentReference      AND  {Target}.[OfferingCode] = @OfferingCode       group by {Target}.[OfferingCode]    UNION          SELECT           0 [CompletedTargets],          0 [TotalTargets],           SUM(CASE WHEN ISNULL({Tracking}.[CompletionDate],{d '1900-01-01'}) = {d '1900-01-01'}               THEN 0                ELSE 1              END          ) AS [CompletedUnits],          COUNT ...): " + aqExcep.Message);
				}
			}

			private static void datasetGetTargetsByStudentReferenceReadDB(ref RCTargetTypeTargetTargetStatusBooleanRecord rec, IDataReader r) {
				int index = 0;
				rec.ssSTBoolean.Read(r, ref index);
				rec.ssENTarget.Read(r, ref index);
				rec.ssENTargetStatus.Read(r, ref index);
				rec.ssENTargetType.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetTargetsByStudentReference" of Action "Preparation"
			/// </summary>
			public static RLTargetTypeTargetTargetStatusBooleanRecordList datasetGetTargetsByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP, string qpstP1, string qpstP2) {
				// Query Iterations: Single {ListTargets}
				// Refresh Query +zyOBYwL+kmEaYxp47clRQ Iterations: Single {ListTargets}
				// Refresh Query +m24kbSYA0O+yAMruE8XwA Iterations: Single {ListTargets}
				// Refresh Query ild4rhBCm0aHt0QIvTF7gg Iterations: Single {ListTargets}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENTarget.[ID] o2, ENTarget.[STUDENTREFERENCE] o3, ENTarget.[OFFERINGCODE] o4, ENTarget.[OFFERINGNAME] o5, NULL o6, ENTarget.[TARGETHEADER] o7, ENTarget.[TARGETDESCRIPTION] o8, NULL o9, ENTarget.[COMPLETIONDATE] o10, ENTarget.[TARGETDATE] o11, ENTarget.[OFFERINGCATEGORY] o12, ENTarget.[COMPLETEDPERC] o13, ENTarget.[CREATEDBY] o14, NULL o15, ENTarget.[TARGETNOTE] o16, ENTarget.[TARGETNOTE_CREATEDON] o17, ENTarget.[ISSTUDENTTARGET] o18, NULL o19, ENTargetStatus.[LABEL] o20, NULL o21, NULL o22, NULL o23, ENTargetType.[LABEL] o24, NULL o25, NULL o26");
				fromBuilder.Append(" FROM (({TargetType} ENTargetType Inner JOIN {Target} ENTarget ON (ENTarget.[TARGETTYPEID] = ENTargetType.[ID]))  Left JOIN {TargetStatus} ENTargetStatus ON (ENTarget.[TARGETSTATUSID] = ENTargetStatus.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP2.Trim() != "") {
					whereBuilder.Append("((ENTarget.[STUDENTREFERENCE] = @qpstP2) AND (ENTarget.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP2", DbType.String, qpstP2);
				} else {
					whereBuilder.Append("(ENTarget.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (");
				if (qpinP != 0) {
					whereBuilder.Append("((ENTarget.[OFFERINGCATEGORY] = @qpinP) AND (ENTarget.[OFFERINGCATEGORY] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENTarget.[OFFERINGCATEGORY] IS NULL)");
				}
				whereBuilder.Append(" OR (");
				if (qpinP != 0) {
					whereBuilder.Append("((");
					whereBuilder.Append(ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId);
					whereBuilder.Append(" = @qpinP) AND (");
					whereBuilder.Append(ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId);
					whereBuilder.Append(" IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(");
					whereBuilder.Append(ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId);
					whereBuilder.Append(" IS NULL)");
				}
				whereBuilder.Append(" AND (ENTarget.[OFFERINGCATEGORY] IS NULL))) AND (ENTarget.[OFFERINGCODE] = @qpstP1)");
				orderByBuilder.Append(" ORDER BY ENTarget.[ID] ASC ");
				sqlCmd.CreateParameterWithoutReplacements("@qpstP1", DbType.String, qpstP1);

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLTargetTypeTargetTargetStatusBooleanRecordList outParamList = new RLTargetTypeTargetTargetStatusBooleanRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetTargetsByStudentReferenceReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[4];
				opt[0] = new BitArray(new bool[] {
					true, false, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					false, false, false, false, true, false, false, true, false, false, false, false, false, true, false, false, false
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, false, true, true
				}
				);
				opt[3] = new BitArray(new bool[] {
					true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLTargetTypeTargetTargetStatusBooleanRecordList _tmp = new RLTargetTypeTargetTargetStatusBooleanRecordList();
					_tmp.AlternateReadDBMethod = datasetGetTargetsByStudentReferenceReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_ILP.Targets_List.Preparation.GetTargetsByStudentReference.List");
						outParamList = (RLTargetTypeTargetTargetStatusBooleanRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_ILP.Targets_List.Preparation.GetTargetsByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLTargetTypeTargetTargetStatusBooleanRecordList _tmp = new RLTargetTypeTargetTargetStatusBooleanRecordList();
						_tmp.AlternateReadDBMethod = datasetGetTargetsByStudentReferenceReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learner_ILP.Targets_List.Preparation.GetTargetsByStudentReference.List");
							outParamList = (RLTargetTypeTargetTargetStatusBooleanRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learner_ILP.Targets_List.Preparation.GetTargetsByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}

		public override Control FindControl(string id) {
			return base.FindControl(id);
		}
		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			_isRendering = true;
			Page_Load(null, null); _isRendering = false;
			this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}
		public override string WebBlockIdentifier {
			get {
				return "CaseConferencing.Kl_A0KL0PaUa3RBAfrU_xSw";
			}
		}
	}

}
