/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Web.SessionState;
using System.IO;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Runtime.Serialization;
using System.Web.Caching;
using System.Text;


namespace ssCaseConferencing.Flows.FlowStaffView {
	public abstract class WBlkLearnerDetails_StudentInfo: OSUserControl, IWebScreen, INegotiateTabIndexes, IAjaxNotifyEvent {

		/// <summary>
		/// Delegate Definitions
		/// </summary>
		/// <summary>
		/// Custom Events Definitions
		/// </summary>
		/// <summary>
		/// Parameters and Local Variables Definitions
		/// </summary>
		/// <summary>
		/// Screen Input Parameter inParamStudentReference. Description:
		/// </summary>
		public string inParamStudentReference = "";
		/// <summary>
		/// Variable <code>varLctop</code> that represents the Service Studio local variable <code>top</code>
		///  <p>Description: </p>
		/// </summary>
		decimal varLctop = 0.0M;

		/// <summary>
		/// Variable <code>varLcleft</code> that represents the Service Studio local variable <code>left</code>
		///  <p>Description: </p>
		/// </summary>
		decimal varLcleft = 0.0M;

		/// <summary>
		/// Variable <code>varLctooltip</code> that represents the Service Studio local variable
		///  <code>tooltip</code> <p>Description: </p>
		/// </summary>
		string varLctooltip = "";

		/// <summary>
		/// Variable <code>varLcshow</code> that represents the Service Studio local variable <code>show</code>
		///  <p>Description: </p>
		/// </summary>
		bool varLcshow = false;

		protected OutSystems.HubEdition.WebWidgets.Container wt_Container128;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container19;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container79;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container91;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container67;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container83;
		/// <summary>
		/// Variable "True" if the Widget wt_If119
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If119T;

		/// <summary>
		/// Variable "True" if the Widget wt_If119
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If119F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container70;
		/// <summary>
		/// Variable "True" if the Widget wt_If94
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If94T;

		/// <summary>
		/// Variable "True" if the Widget wt_If94
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If94F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container113;
		/// <summary>
		/// Variable "True" if the Widget wt_If72
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If72T;

		/// <summary>
		/// Variable "True" if the Widget wt_If72
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If72F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container5;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container49;
		/// <summary>
		/// Variable "True" if the Widget wt_If3
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If3T;

		/// <summary>
		/// Variable "True" if the Widget wt_If3
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If3F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container96;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container44;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container100;
		/// <summary>
		/// Variable (wt_Link46) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link46;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container61;
		/// <summary>
		/// Variable "True" if the Widget wt_If73
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If73T;

		/// <summary>
		/// Variable "True" if the Widget wt_If73
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If73F;
		/// <summary>
		/// Variable (wt_Link66) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link66;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container13;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container95;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container32;
		/// <summary>
		/// Variable (wtSmsLink) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wtSmsLink;
		/// <summary>
		/// Variable (wtLinkSMSMobile) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wtLinkSMSMobile;
		/// <summary>
		/// Variable "True" if the Widget wt_If114
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If114T;

		/// <summary>
		/// Variable "True" if the Widget wt_If114
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If114F;
		/// <summary>
		/// Variable (wtLinkEmail) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wtLinkEmail;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container131;
		/// <summary>
		/// Variable "True" if the Widget wt_If71
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If71T;

		/// <summary>
		/// Variable "True" if the Widget wt_If71
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If71F;
		/// <summary>
		/// Variable (wt_Link102) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link102;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container52;
		/// <summary>
		/// Variable "True" if the Widget wt_If105
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If105T;

		/// <summary>
		/// Variable "True" if the Widget wt_If105
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If105F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container123;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container8;
		/// <summary>
		/// Variable "True" if the Widget wt_If50
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If50T;

		/// <summary>
		/// Variable "True" if the Widget wt_If50
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If50F;
		/// <summary>
		/// Variable (wtSMSother) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wtSMSother;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container101;
		/// <summary>
		/// Variable "True" if the Widget wt_If4
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If4T;

		/// <summary>
		/// Variable "True" if the Widget wt_If4
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If4F;
		/// <summary>
		/// Variable (wtEmailNOK) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wtEmailNOK;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container103;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container132;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container30;
		private RLSupportTypeSupportRecordList _ssListRecords1List = new RLSupportTypeSupportRecordList();
		public RLSupportTypeSupportRecordList ssListRecords1List {
			get {
				return _ssListRecords1List; 
			}
			set {
				_ssListRecords1List = value;
				wtListRecords1.DataSource = value;
				ssListRecords1ListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtListRecords1;
		public ArrayList wtListRecords1_storage = new ArrayList();
		protected bool ssListRecords1List_notUsedYet = true;
		protected bool ssListRecords1ListDoDataBind;
		protected bool ssListRecords1ListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container86;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container18;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container129;
		/// <summary>
		/// Variable "True" if the Widget wt_If116
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If116T;

		/// <summary>
		/// Variable "True" if the Widget wt_If116
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If116F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container47;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container68;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container28;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtileftValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtileftValidatorType;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtitopValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtitopValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container115;
		private bool _isRendering = false;
		public HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();
		public string InstanceID;
		public string RuntimeID= "";
		RCAcademicYear2Record resGetAcademicYearValues2_outParamAcademicYear = new RCAcademicYear2Record(null);
		RLGroupStudentAnnualValuesStudent_GroupStudentRecordList queryResGetStudentByStudentReference_outParamList = new RLGroupStudentAnnualValuesStudent_GroupStudentRecordList();
		int queryResGetStudentByStudentReference_outParamCount = 0;
		RCStudentStudentLogRecord resStudentLog_GetCurrentValues_outParamStudentLog = new RCStudentStudentLogRecord(null);
		RLSupportTypeSupportRecordList queryResGetSupportsByStudentReference_outParamList = new RLSupportTypeSupportRecordList();
		int queryResGetSupportsByStudentReference_outParamCount = 0;
		Actions.lcoStudent_GetResponsible resStudent_GetResponsible = new Actions.lcoStudent_GetResponsible(); /// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// Student_GetResponsible
			Actions.ActionStudent_GetResponsible(heContext, inParamStudentReference, out resStudent_GetResponsible.outParamResponsibleName, out resStudent_GetResponsible.outParamResponsibleEmail);
			// StudentLog_GetCurrentValues
			Actions.ActionStudentLog_GetCurrentValues(heContext, inParamStudentReference, out resStudentLog_GetCurrentValues_outParamStudentLog);
			// GetAcademicYearValues2
			Actions.ActionGetAcademicYearValues2(heContext, ENAcademicYearType2Entity.GetRecordByKey(ObjectKey.Parse("8ZDe8cEZhk2DF16FIzuk9A")).ssId, "", out resGetAcademicYearValues2_outParamAcademicYear);
			// Query datasetGetSupportsByStudentReference
			int datasetGetSupportsByStudentReference_maxRecords = Math.Max(wtListRecords1.StartIndex + wtListRecords1.LineCount + 1, 0);
			queryResGetSupportsByStudentReference_outParamList = FuncssPreparation.datasetGetSupportsByStudentReference(heContext, datasetGetSupportsByStudentReference_maxRecords, IterationMultiplicity.Single, out queryResGetSupportsByStudentReference_outParamCount, inParamStudentReference
			);
			// Query datasetGetStudentByStudentReference
			int datasetGetStudentByStudentReference_maxRecords = 0;
			queryResGetStudentByStudentReference_outParamList = FuncssPreparation.datasetGetStudentByStudentReference(heContext, datasetGetStudentByStudentReference_maxRecords, IterationMultiplicity.Never, out queryResGetStudentByStudentReference_outParamCount, resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssYY_YY
			, inParamStudentReference
			);
		}
		static WBlkLearnerDetails_StudentInfo() {
		}
		override protected void OnInit(EventArgs e) {
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wtListRecords1.StartIndexExpression = () => 0;
			wtListRecords1.LineCountExpression = () => 0;
			this.Load += new System.EventHandler(this.Page_Load);
			this.Unload += new System.EventHandler(this.Page_Unload);
		}
		private void Page_Load(object sender, System.EventArgs e) {
			((OSPageViewState) Page).EnableResetViewState();
			heContext = Global.App.OsContext;
			RuntimeID = ClientID;
			if (!Visible) return;
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!IsPostBack || _isRendering) {
					// register this block in the page so for later outputting the block javascript includes in their correct order
					((OSPage) Page).RegisterBlock(this);
					if (_isRendering) {
						Preparation(heContext);
					}
					bool bindEditRecords = IsViewStateEmpty;
					ssListRecords1ListDoDataBind = true;
				} else {
					FetchViewState();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}
		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			if (!WasRendered) {
				return;
			}
			ValidationUtils.ValidateInput(this, "wtileft", parentEditRecord, OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDecimalInputValidate, validate);
			ValidationUtils.ValidateInput(this, "wtitop", parentEditRecord, OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDecimalInputValidate, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}
		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}
		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}


		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();

			#region store queryResGetStudentByStudentReference_outParamList.

			int tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList = queryResGetStudentByStudentReference_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetStudentByStudentReference_outParamList = queryResGetStudentByStudentReference_outParamList.Eof;
			ArrayList storequeryResGetStudentByStudentReference_outParamList = new ArrayList();

			// Write the needed fields of queryResGetStudentByStudentReference_outParamList to the storequeryResGetStudentByStudentReference_outParamList
			if (!queryResGetStudentByStudentReference_outParamList.Empty) {
				try {
					queryResGetStudentByStudentReference_outParamList.StartIteration();

					while (!queryResGetStudentByStudentReference_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetStudentByStudentReference_outParamList = new ArrayList();
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.ssDisability == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.ssDisability);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.ssLearningDifficulty == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.ssLearningDifficulty);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.ChangedAttributes, new BitArray(new bool[] {
							false, false, false, true, true, false, false
						}
						))));
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.OptimizedAttributes, new BitArray(new bool[] {
							true, true, true, false, false, true, true
						}
						))));
						storequeryResGetStudentByStudentReference_outParamList.Add(tmpFieldsqueryResGetStudentByStudentReference_outParamList);
						queryResGetStudentByStudentReference_outParamList.Advance();
					}
				} finally {
					queryResGetStudentByStudentReference_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetStudentByStudentReference_outParamList", storequeryResGetStudentByStudentReference_outParamList, null);

			#endregion


			#region store queryResGetStudentByStudentReference_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetStudentByStudentReference_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetStudentByStudentReference_outParamList_eof", tmpeofqueryResGetStudentByStudentReference_outParamList, false);
			queryResGetStudentByStudentReference_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList, tmpeofqueryResGetStudentByStudentReference_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("varLctop", varLctop, 0.0M);
			ViewStateAttributes.SetInViewState("varLcleft", varLcleft, 0.0M);
			ViewStateAttributes.SetInViewState("varLctooltip", varLctooltip, "");
			ViewStateAttributes.SetInViewState("varLcshow", varLcshow, false);
			if (IsAjaxRequest) {
				recListListRecords1_Rebuild((ssListRecords1ListDataBound ? wtListRecords1.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtListRecords1.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtileft_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtileft")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtitop_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtitop")).Mandatory, false);
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			if (IsViewStateEmpty) return;
			try {

				#region fetch queryResGetStudentByStudentReference_outParamList.

				// Read the needed fields of queryResGetStudentByStudentReference_outParamList from storequeryResGetStudentByStudentReference_outParamList
				queryResGetStudentByStudentReference_outParamList = new RLGroupStudentAnnualValuesStudent_GroupStudentRecordList();
				ArrayList storequeryResGetStudentByStudentReference_outParamList;
				storequeryResGetStudentByStudentReference_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetStudentByStudentReference_outParamList", null);
				if (storequeryResGetStudentByStudentReference_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetStudentByStudentReference_outParamList in storequeryResGetStudentByStudentReference_outParamList) {
						if (tmpFieldsqueryResGetStudentByStudentReference_outParamList != null) {
							// Aux current record variable
							RCGroupStudentAnnualValuesStudent_GroupStudentRecord tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList = new RCGroupStudentAnnualValuesStudent_GroupStudentRecord(null);
							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudentAnnualValues.ssDisability = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[0] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudentAnnualValues.ssLearningDifficulty = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[1] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudentAnnualValues.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentByStudentReference_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudentAnnualValues.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentByStudentReference_outParamList[3]);

							queryResGetStudentByStudentReference_outParamList.Append(tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList);
						}
					}
				}
				queryResGetStudentByStudentReference_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetStudentByStudentReference_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList;
				tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetStudentByStudentReference_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetStudentByStudentReference_outParamList;
				tmpeofqueryResGetStudentByStudentReference_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetStudentByStudentReference_outParamList_eof", false);
				queryResGetStudentByStudentReference_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList, tmpeofqueryResGetStudentByStudentReference_outParamList);

				#endregion

				varLctop = (decimal) ViewStateAttributes.GetFromViewState("varLctop", 0.0M);
				varLcleft = (decimal) ViewStateAttributes.GetFromViewState("varLcleft", 0.0M);
				varLctooltip = (string) ViewStateAttributes.GetFromViewState("varLctooltip", "");
				varLcshow = (bool) ViewStateAttributes.GetFromViewState("varLcshow", false);
				recListListRecords1_Restore();
				((IWidgetRuntimeProperties) this.FindControl("wtileft")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtileft_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtitop")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtitop_Mandatory", false);
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}

		/// <summary>
		/// Store visibility information of the web block and input widgets in the viewstate
		/// </summary>
		protected override void StoreInputsAndWebBlockVisibility() {
			ControlVisibility.StoreChildControlVisibility("wtileft");
			ControlVisibility.StoreChildControlVisibility("wtitop");
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore visibility information of the web block and input widgets from the viewstate
		/// </summary>
		protected override void RestoreInputsAndWebBlockVisibility() {
			WasRendered = true;
			ControlVisibility.RestoreChildControlVisibility("wtileft");
			ControlVisibility.RestoreChildControlVisibility("wtitop");
		}

		private void Page_Unload(object sender, System.EventArgs e) {
		}

		public LocalState PushStack() {
			throw new NotImplementedException();
		}

		public void doRefreshScreen(HeContext heContext) {
			((IWebScreen) this.Parent.Page).doRefreshScreen(heContext);
		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			StoreViewState();
			((IWebScreen) this.Parent.Page).doAJAXRefreshScreen(heContext);
		}

		public static void GetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			string blockId = "CaseConferencing.KP_1hGfY_ukeLR09NTtnhvw";
			if (visited.Contains(blockId)) {
				return; 
			}
			visited.Add(blockId);
			if (!inline) {
				GetCssIncludes(writer, visited);
			} else {
				GetInlineCss(writer, visited);
			}
		}

		private static void GetCssIncludes(TextWriter writer, HashSet<string> visited) {
			InnerGetCss(writer, false, visited);
			CssHelper.WriteCssInclude(writer, AppUtils.Instance.getImagePath() + "Blocks/CaseConferencing/StaffView/LearnerDetails_StudentInfo.css" + AppUtils.Instance.CacheInvalidationSuffix);
		}

		private static void GetInlineCss(TextWriter writer, HashSet<string> visited) {
			StringWriter localCssWriter = new StringWriter();
			localCssWriter.NewLine = writer.NewLine;
			string localCss = Environment.NewLine;
			InnerGetCss(localCssWriter, true, visited);
			localCss += localCssWriter.ToString();
			HashSet<string> cssVisited = new HashSet<string>();
			string read;
			AppUtils.getResourceFileContent(out read, "Blocks\\CaseConferencing\\StaffView\\LearnerDetails_StudentInfo.css");
			localCss += OutSystems.HubEdition.RuntimePlatform.Email.EmailHelper.FlattenCSSFile(read, "Blocks\\CaseConferencing\\StaffView\\LearnerDetails_StudentInfo.css", cssVisited);
			writer.Write(localCss);
		}

		private static void InnerGetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkPopUp_Tootip.GetCss(writer, inline, visited);
		}

		private void Page_Error(object sender, System.EventArgs e) {
		}
		public void CheckPermissions(HeContext heContext) {
			((IWebScreen) this.Page).CheckPermissions(heContext);
		}
		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}

		public ObjectKey Key {
			get {
				return ObjectKey.Parse("P_1hGfY_ukeLR09NTtnhvw"); 
			}
		}
		public bool isSecure {
			get {
				return ((IWebScreen) Page).isSecure; 
			}
		}
		public class lcvOpenTooltipPopup: VarsBag {
			public string inParamintooltip;
			public lcvOpenTooltipPopup(string inParamintooltip) {
				this.inParamintooltip = inParamintooltip;
			}
		}
		/// <summary>
		/// Action <code>CommandOpenTooltipPopup</code> that represents the Service Studio screen action
		///  <code>OpenTooltipPopup</code> <p> Description: </p>
		/// </summary>
		private bool CommandOpenTooltipPopup(HeContext heContext, string inParamintooltip) {
			CheckPermissions(heContext);
			lcvOpenTooltipPopup localVars = new lcvOpenTooltipPopup(inParamintooltip);
			try {
				varLcshow = true; // show = True
				varLctooltip = localVars.inParamintooltip; // tooltip = intooltip
				// Refresh Widget (wtPopUp_Tootip)
				((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtPopUp_Tootip"), "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOnNotify: VarsBag {
			public string resNotifyWidgetGetMessage_outParamMessage = "";

			public lcvOnNotify() {
			}
		}
		/// <summary>
		/// Action <code>CommandOnNotify</code> that represents the Service Studio screen action
		///  <code>OnNotify</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnNotify(HeContext heContext) {
			CheckPermissions(heContext);
			lcvOnNotify localVars = new lcvOnNotify();
			try {
				// NotifyWidgetGetMessage
				ExtendedActions.NotifyWidgetGetMessage(heContext, out localVars.resNotifyWidgetGetMessage_outParamMessage);
				if ((localVars.resNotifyWidgetGetMessage_outParamMessage== "OK")) {
					// ProgressReport
					Actions.ActionFeedback_Message(heContext, "Progress Report edited with success.", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("8xuePnp+TUO346Oyp3_dWQ")).ssId);

				} else {
					if ((localVars.resNotifyWidgetGetMessage_outParamMessage== "SMS")) {
						// SMS
						Actions.ActionFeedback_Message(heContext, "Text message sent.", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("8xuePnp+TUO346Oyp3_dWQ")).ssId);

					} else {
						if ((localVars.resNotifyWidgetGetMessage_outParamMessage== "EMAIL")) {
							// Email
							Actions.ActionFeedback_Message(heContext, "Email message sent.", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("8xuePnp+TUO346Oyp3_dWQ")).ssId);

						} else {
							// Update Screen
							return true;

						}

					}
					// NotifyWidget
					ExtendedActions.NotifyWidget(heContext, RuntimeID, "Refresh");

				}
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public void cnt_Container128_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container128_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container128_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container128_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container128)
		/// </summary>
		/// <returns>The Visible State of wt_Container128</returns>
		public bool cnt_Container128_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container19_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container19_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container19_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((WebControl) sender).CssClass = ((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHasCurrentActiveEnrolment) ?((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("LearnerDetailsRAGRed"):((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("LearnerDetailsRAGAmber"):((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("LearnerDetailsRAGGreen"):("LearnerDetailsRAGBlue"))))))):("LearnerDetailsSilverRAG")) + " OSInline";
				if (!cnt_Container19_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container19)
		/// </summary>
		/// <returns>The Visible State of wt_Container19</returns>
		public bool cnt_Container19_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container79_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container79_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container79_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container79_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container79)
		/// </summary>
		/// <returns>The Visible State of wt_Container79</returns>
		public bool cnt_Container79_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void img_Image89_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				img_Image89_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string img_Image89_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAttributeAccessor) sender).SetAttribute("onerror", "this.src=\'img/missingphoto.png\';" .ToString());
				((WebControl) sender).CssClass = ("LearnerPhotoDetails " + ((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHasCurrentActiveEnrolment) ?((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("RedBorder"):((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("AmberBorder"):((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("GreenBorder"):("BlueBorder"))))))):("SilverBorder BlackAndWhiteFilter")));
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the URL of the image (wt_Image89)
		/// </summary>
		/// <returns>URL of the Image (wt_Image89)</returns>
		public string img_Image89_getURL() {
			string url = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssStudentPhotoURL;
			url = url.Replace("&amp;", "&");
			// remove ascx path from image src
			if (url != null && !url.Contains(":") && !url.StartsWith("/") && !url.StartsWith("\\")) {
				url = "../../../" + url;
			}
			return url; 
		}
		public void cnt_Container91_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container91_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container91_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container91_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container91)
		/// </summary>
		/// <returns>The Visible State of wt_Container91</returns>
		public bool cnt_Container91_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container67_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container67_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container67_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = ((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHasCurrentActiveEnrolment) ?((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("color:#D0021B;"):((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("color:#F5A623;"):((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("color:#84AA19;"):("color:#1F3D60;"))))))):("color:#C0C0C0;"));
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container67_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container67)
		/// </summary>
		/// <returns>The Visible State of wt_Container67</returns>
		public bool cnt_Container67_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = kTw0c+hsWE+QP+kLLCM9BA) Expression:
		///  StudentLog_GetCurrentValues.StudentLog.Student.Forenames + " "
		/// + StudentLog_GetCurrentValues.StudentLog.Student.Surname
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression56() {
			return ((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssForenames+ " ") +resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssSurname);
		}
		public void cnt_Container83_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container83_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container83_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "height: 20px;line-height:initial;color:#D0021B;font-size:18px;display:inline;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container83_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container83)
		/// </summary>
		/// <returns>The Visible State of wt_Container83</returns>
		public bool cnt_Container83_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If119_hasRun=false;
		bool if_wt_If119_evalResult;
		public bool if_wt_If119() {
			if (if_wt_If119_hasRun) {
				if_wt_If119_hasRun = false;
				return if_wt_If119_evalResult;
			}
			if_wt_If119_hasRun = true;
			if_wt_If119_evalResult = (((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.ssDisability!= "") && (BuiltInFunction.Substr(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.ssDisability, 0, 2) != "98")) && (BuiltInFunction.Substr(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.ssDisability, 0, 2) != "99"));
			return if_wt_If119_evalResult;
		}

		public void cnt_Container70_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container70_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container70_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inline;padding-left:4px;cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +this.FindControl("wtileft").ClientID) + "\').value = $(this).offset().left;\r\ndocument.getElementById(\'") +this.FindControl("wtitop").ClientID) + "\').value = $(this).offset().top;").ToString());
				if (!cnt_Container70_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container70
		/// </summary>
		public void cnt_Container70_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOpenTooltipPopup(heContext
				, queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.ssDisability)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container70)
		/// </summary>
		/// <returns>The Visible State of wt_Container70</returns>
		public bool cnt_Container70_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance24_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("gzWY19ACAEms3C88UtizMw")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If94_hasRun=false;
		bool if_wt_If94_evalResult;
		public bool if_wt_If94() {
			if (if_wt_If94_hasRun) {
				if_wt_If94_hasRun = false;
				return if_wt_If94_evalResult;
			}
			if_wt_If94_hasRun = true;
			if_wt_If94_evalResult = (((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.ssLearningDifficulty!= "") && (BuiltInFunction.Substr(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.ssLearningDifficulty, 0, 2) != "98")) && (BuiltInFunction.Substr(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.ssLearningDifficulty, 0, 2) != "99"));
			return if_wt_If94_evalResult;
		}

		public void cnt_Container113_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container113_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container113_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inline;padding-left:4px;cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +this.FindControl("wtileft").ClientID) + "\').value = $(this).offset().left;\r\ndocument.getElementById(\'") +this.FindControl("wtitop").ClientID) + "\').value = $(this).offset().top;").ToString());
				if (!cnt_Container113_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container113
		/// </summary>
		public void cnt_Container113_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOpenTooltipPopup(heContext
				, queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudentAnnualValues.ssLearningDifficulty)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container113)
		/// </summary>
		/// <returns>The Visible State of wt_Container113</returns>
		public bool cnt_Container113_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance6_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("BDbvGpjWkkirEM_ATP7B6Q")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If72_hasRun=false;
		bool if_wt_If72_evalResult;
		public bool if_wt_If72() {
			if (if_wt_If72_hasRun) {
				if_wt_If72_hasRun = false;
				return if_wt_If72_evalResult;
			}
			if_wt_If72_hasRun = true;
			if_wt_If72_evalResult = (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssResidentialStatus== "1");
			return if_wt_If72_evalResult;
		}

		public void cnt_Container5_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container5_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container5_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inline;padding-left:4px;cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +this.FindControl("wtileft").ClientID) + "\').value = $(this).offset().left;\r\ndocument.getElementById(\'") +this.FindControl("wtitop").ClientID) + "\').value = $(this).offset().top;").ToString());
				if (!cnt_Container5_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container5
		/// </summary>
		public void cnt_Container5_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOpenTooltipPopup(heContext
				, "Learner is residential")) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container5)
		/// </summary>
		/// <returns>The Visible State of wt_Container5</returns>
		public bool cnt_Container5_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance20_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("v8O5VJfAtEuGAFl1unUekw")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container49_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container49_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container49_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size:12px;color:#888;font-weight:normal;vertical-align:middle;margin-left:30px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container49_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container49)
		/// </summary>
		/// <returns>The Visible State of wt_Container49</returns>
		public bool cnt_Container49_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = 1i4f66NY10C8PgONJFdIlg) Expression: StudentReference
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression124() {
			return inParamStudentReference;
		}
		/// <summary>
		/// Function to dump expression (Key = Z4hdQqszk0e1cT72e4u+jA) Expression: Year - Year - internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression35() {
			return Convert.ToString(((BuiltInFunction.Year(BuiltInFunction.CurrDate()) -BuiltInFunction.Year(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssDateOfBirth)) - (((BuiltInFunction.CurrDate() <BuiltInFunction.NewDate(BuiltInFunction.Year(BuiltInFunction.CurrDate()), BuiltInFunction.Month(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssDateOfBirth), BuiltInFunction.Day(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssDateOfBirth)))) ?(1):(0))));
		}
		public void webBlck_WebBlockInstance22_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
				widget.inParamDate = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssDateOfBirth;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If3_hasRun=false;
		bool if_wt_If3_evalResult;
		public bool if_wt_If3() {
			if (if_wt_If3_hasRun) {
				if_wt_If3_hasRun = false;
				return if_wt_If3_evalResult;
			}
			if_wt_If3_hasRun = true;
			if_wt_If3_evalResult = (((BuiltInFunction.Year(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent_Group.ssStartDate) -BuiltInFunction.Year(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssDateOfBirth)) - (((BuiltInFunction.NewDate(BuiltInFunction.Year(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent_Group.ssStartDate), 8, 31) <BuiltInFunction.NewDate(BuiltInFunction.Year(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent_Group.ssStartDate), BuiltInFunction.Month(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssDateOfBirth), BuiltInFunction.Day(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssDateOfBirth)))) ?(1):(0))) >0);
			return if_wt_If3_evalResult;
		}

		/// <summary>
		/// Function to dump expression (Key = giVqdZT7a0m2qnBwoNqs_w) Expression: " (Academic age : " +
		///  IntegerToText + ")"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression57() {
			return ((" (Academic age : " +BuiltInFunction.IntegerToText(((BuiltInFunction.Year(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent_Group.ssStartDate) -BuiltInFunction.Year(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssDateOfBirth)) - (((BuiltInFunction.NewDate(BuiltInFunction.Year(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent_Group.ssStartDate), 8, 31) <BuiltInFunction.NewDate(BuiltInFunction.Year(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent_Group.ssStartDate), BuiltInFunction.Month(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssDateOfBirth), BuiltInFunction.Day(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssDateOfBirth)))) ?(1):(0))))) + ")");
		}
		public void cnt_Container96_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container96_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container96_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-right:-32px;float: right;margin-top:-20px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container96_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container96)
		/// </summary>
		/// <returns>The Visible State of wt_Container96</returns>
		public bool cnt_Container96_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container44_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container44_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container44_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size:12px;position:absolute;right:10px;top:20px";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container44_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container44)
		/// </summary>
		/// <returns>The Visible State of wt_Container44</returns>
		public bool cnt_Container44_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container100_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container100_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container100_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container100_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container100)
		/// </summary>
		/// <returns>The Visible State of wt_Container100</returns>
		public bool cnt_Container100_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return false;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void lnk_Link46_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				lnk_Link46_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string lnk_Link46_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAttributeAccessor) sender).SetAttribute("target", "_blank" .ToString());
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link46)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link46)</returns>
		public string lnk_Link46_NavigateUrl() {
			String varLcinParamURL = "";
			varLcinParamURL = ("https://intranet.cornwall.ac.uk/college_systems/cali/default.aspx?Type=Student&ResourceName=" +inParamStudentReference);
			string sURL = varLcinParamURL;
			sURL = sURL.Replace("&amp;", "&");
			if (AppUtils.UrlAttributeMustBeEncoded(Request)) {
				sURL = sURL.Replace("&", "&amp;");
			}
			return sURL;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link46)
		/// </summary>
		/// <returns>title of the Link (wt_Link46)</returns>
		public string
		lnk_Link46_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link46)
		/// </summary>
		/// <returns>The Visible State of wt_Link46</returns>
		public bool lnk_Link46_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link46)
		/// </summary>
		/// <returns>The Enabled State of wt_Link46</returns>
		public bool lnk_Link46_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void RichWidgets_webBlck_WebBlockInstance10_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("tTF_9KWIwEWTZBz3UAsTEg")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container61_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container61_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container61_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container61_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container61)
		/// </summary>
		/// <returns>The Visible State of wt_Container61</returns>
		public bool cnt_Container61_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If73_hasRun=false;
		bool if_wt_If73_evalResult;
		public bool if_wt_If73() {
			if (if_wt_If73_hasRun) {
				if_wt_If73_hasRun = false;
				return if_wt_If73_evalResult;
			}
			if_wt_If73_hasRun = true;
			if_wt_If73_evalResult = Functions.ssCheckCaseConferencingUserRole(heContext, ((int) Global.App.OsContext.Session["UserID"]));
			return if_wt_If73_evalResult;
		}

		public void lnk_Link66_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				lnk_Link66_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string lnk_Link66_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAttributeAccessor) sender).SetAttribute("target", "_blank" .ToString());
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link66)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link66)</returns>
		public string lnk_Link66_NavigateUrl() {
			String varLcinParamURL = "";
			varLcinParamURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "Impersonate", "StudentPortal", "StudentReference", inParamStudentReference, "", "", "", "", "", "", "", "");
			string sURL = varLcinParamURL;
			sURL = sURL.Replace("&amp;", "&");
			if (AppUtils.UrlAttributeMustBeEncoded(Request)) {
				sURL = sURL.Replace("&", "&amp;");
			}
			return sURL;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link66)
		/// </summary>
		/// <returns>title of the Link (wt_Link66)</returns>
		public string
		lnk_Link66_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link66)
		/// </summary>
		/// <returns>The Visible State of wt_Link66</returns>
		public bool lnk_Link66_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link66)
		/// </summary>
		/// <returns>The Enabled State of wt_Link66</returns>
		public bool lnk_Link66_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void RichWidgets_webBlck_WebBlockInstance90_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("4emzQL9h4U2MSj1S0mm95w")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container13_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container13_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container13_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container13_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container13)
		/// </summary>
		/// <returns>The Visible State of wt_Container13</returns>
		public bool cnt_Container13_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = bc9b4n7wGku5z7gxEDV_Hg) Expression:
		///  StudentLog_GetCurrentValues.StudentLog.Student.MainOfferingName
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression122() {
			return resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssMainOfferingName;
		}
		public void expression_InlineExpression111_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				expression_InlineExpression111_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string expression_InlineExpression111_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size:12px;color:#888;font-weight:normal;margin-left:20px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = if+gzZeldkiCsAmj+FfLXA) Expression: "[" +
		///  StudentLog_GetCurrentValues.StudentLog.Student.MainOfferingCode + "]"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression111() {
			return (("[" +resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssMainOfferingCode) + "]");
		}
		public void cnt_Container95_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container95_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container95_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container95_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container95)
		/// </summary>
		/// <returns>The Visible State of wt_Container95</returns>
		public bool cnt_Container95_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container32_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container32_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container32_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container32_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container32)
		/// </summary>
		/// <returns>The Visible State of wt_Container32</returns>
		public bool cnt_Container32_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void expression_InlineExpression27_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				expression_InlineExpression27_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string expression_InlineExpression27_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inherit;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = A57NOLmpLEujIVUCVQ6XyQ) Expression: "Personal Contact Details"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression27() {
			return "Personal Contact Details";
		}
		public void RichWidgets_webBlck_WebBlockInstance87_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("CzktVEoQIUavNdPuJna99w")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wtSmsLink)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wtSmsLink)</returns>
		public string lnkSmsLink_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentId", System.Web.HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_SMS", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wtSmsLink)
		/// </summary>
		/// <returns>title of the Link (wtSmsLink)</returns>
		public string
		lnkSmsLink_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtSmsLink)
		/// </summary>
		/// <returns>The Visible State of wtSmsLink</returns>
		public bool lnkSmsLink_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtSmsLink)
		/// </summary>
		/// <returns>The Enabled State of wtSmsLink</returns>
		public bool lnkSmsLink_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void expression_InlineExpression37_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				expression_InlineExpression37_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string expression_InlineExpression37_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-left:4px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = lsrKRKb0PEKmJEFaDuP7uQ) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression37() {
			return (((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeTelephone!= "")) ?(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeTelephone):("(no telephone)"));
		}
		public void RichWidgets_webBlck_WebBlockInstance99_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor) sender;
				widget.inParamLinkOrButtonWidgetId = wtSmsLink.ClientID;
				widget.inParamTitle = " ";
				widget.inParamWidthPx = -1;
				widget.inParamHeightPx = -1;
				widget.inParamAutoResize = true;
				widget.inParamRecenterOnResize = false;
				widget.inParamHideCloseButton = false;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance99
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance99_AjaxNotify(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnNotify(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void RichWidgets_webBlck_WebBlockInstance62_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("cAxZk7J+AEu6LHunYrmadQ")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wtLinkSMSMobile)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wtLinkSMSMobile)</returns>
		public string lnkLinkSMSMobile_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentId", System.Web.HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_SMS", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wtLinkSMSMobile)
		/// </summary>
		/// <returns>title of the Link (wtLinkSMSMobile)</returns>
		public string
		lnkLinkSMSMobile_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtLinkSMSMobile)
		/// </summary>
		/// <returns>The Visible State of wtLinkSMSMobile</returns>
		public bool lnkLinkSMSMobile_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtLinkSMSMobile)
		/// </summary>
		/// <returns>The Enabled State of wtLinkSMSMobile</returns>
		public bool lnkLinkSMSMobile_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void expression_InlineExpression36_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				expression_InlineExpression36_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string expression_InlineExpression36_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-left:4px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = qSV8Q9QZZEGQ_BlB6nLkMA) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression36() {
			return (((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssMobilePhone!= "")) ?(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssMobilePhone):("(no mobile)"));
		}
		public void RichWidgets_webBlck_WebBlockInstance55_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor) sender;
				widget.inParamLinkOrButtonWidgetId = wtLinkSMSMobile.ClientID;
				widget.inParamTitle = " ";
				widget.inParamWidthPx = 500;
				widget.inParamHeightPx = -1;
				widget.inParamAutoResize = true;
				widget.inParamRecenterOnResize = false;
				widget.inParamHideCloseButton = false;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance55
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance55_AjaxNotify(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnNotify(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If114_hasRun=false;
		bool if_wt_If114_evalResult;
		public bool if_wt_If114() {
			if (if_wt_If114_hasRun) {
				if_wt_If114_hasRun = false;
				return if_wt_If114_evalResult;
			}
			if_wt_If114_hasRun = true;
			if_wt_If114_evalResult = (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress!= "");
			return if_wt_If114_evalResult;
		}

		/// <summary>
		/// Gets the Navigate URL for the link of variable (wtLinkEmail)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wtLinkEmail)</returns>
		public string lnkLinkEmail_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentId", System.Web.HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("CommunicationId", System.Web.HttpUtility.UrlEncode(Convert.ToString(BuiltInFunction.NullIdentifier()), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_Email", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wtLinkEmail)
		/// </summary>
		/// <returns>title of the Link (wtLinkEmail)</returns>
		public string
		lnkLinkEmail_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtLinkEmail)
		/// </summary>
		/// <returns>The Visible State of wtLinkEmail</returns>
		public bool lnkLinkEmail_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress!= "");
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtLinkEmail)
		/// </summary>
		/// <returns>The Enabled State of wtLinkEmail</returns>
		public bool lnkLinkEmail_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = NRykn5w1pUWyKCPp_r3UtA) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression80() {
			return (((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress== "")) ?("(no email)"):(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress));
		}
		public void RichWidgets_webBlck_WebBlockInstance121_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor) sender;
				widget.inParamLinkOrButtonWidgetId = wtLinkEmail.ClientID;
				widget.inParamTitle = " ";
				widget.inParamWidthPx = -1;
				widget.inParamHeightPx = -1;
				widget.inParamAutoResize = true;
				widget.inParamRecenterOnResize = false;
				widget.inParamHideCloseButton = false;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance121
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance121_AjaxNotify(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnNotify(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void wt_Text107_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Text107_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Text107_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-left:4px;color:#666;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container131_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container131_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container131_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container131_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container131)
		/// </summary>
		/// <returns>The Visible State of wt_Container131</returns>
		public bool cnt_Container131_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance84_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("K9DJBwKg_UiFdMvJh2FEqw")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If71_hasRun=false;
		bool if_wt_If71_evalResult;
		public bool if_wt_If71() {
			if (if_wt_If71_hasRun) {
				if_wt_If71_hasRun = false;
				return if_wt_If71_evalResult;
			}
			if_wt_If71_hasRun = true;
			if_wt_If71_evalResult = (resStudent_GetResponsible.outParamResponsibleName!= "");
			return if_wt_If71_evalResult;
		}

		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link102)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link102)</returns>
		public string lnk_Link102_NavigateUrl() {
			String varLcinParamURL = "";
			varLcinParamURL = ("mailto:" +resStudent_GetResponsible.outParamResponsibleEmail);
			string sURL = varLcinParamURL;
			sURL = sURL.Replace("&amp;", "&");
			if (AppUtils.UrlAttributeMustBeEncoded(Request)) {
				sURL = sURL.Replace("&", "&amp;");
			}
			return sURL;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link102)
		/// </summary>
		/// <returns>title of the Link (wt_Link102)</returns>
		public string
		lnk_Link102_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link102)
		/// </summary>
		/// <returns>The Visible State of wt_Link102</returns>
		public bool lnk_Link102_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link102)
		/// </summary>
		/// <returns>The Enabled State of wt_Link102</returns>
		public bool lnk_Link102_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = E8VsyB2jc0W_WFeM4354Ng) Expression:
		///  Student_GetResponsible.ResponsibleName
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression108() {
			return resStudent_GetResponsible.outParamResponsibleName;
		}
		public void wt_Text134_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Text134_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Text134_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color:red;font-weight:bold;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container52_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container52_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container52_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container52_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container52)
		/// </summary>
		/// <returns>The Visible State of wt_Container52</returns>
		public bool cnt_Container52_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If105_hasRun=false;
		bool if_wt_If105_evalResult;
		public bool if_wt_If105() {
			if (if_wt_If105_hasRun) {
				if_wt_If105_hasRun = false;
				return if_wt_If105_evalResult;
			}
			if_wt_If105_hasRun = true;
			if_wt_If105_evalResult = ((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinName!= "") || (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinAddress!= ""));
			return if_wt_If105_evalResult;
		}

		public void cnt_Container123_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container123_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container123_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container123_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container123)
		/// </summary>
		/// <returns>The Visible State of wt_Container123</returns>
		public bool cnt_Container123_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void expression_InlineExpression39_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				expression_InlineExpression39_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string expression_InlineExpression39_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inherit;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = KBuBSp3XDUi70Ryk4NHU6w) Expression: "Next Of Kin Details"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression39() {
			return "Next Of Kin Details";
		}
		public void cnt_Container8_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container8_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container8_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inline;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container8_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container8)
		/// </summary>
		/// <returns>The Visible State of wt_Container8</returns>
		public bool cnt_Container8_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance17_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("F0OdMTnS+E63CzTzGXJvyg")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = hVOgdmMq0E+0deQRvqw+hA) Expression:
		///  GetStudentByStudentReference.List.Current.Student.NextOfKinName
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression59() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinName;
		}
		/// <summary>
		/// Function to dump expression (Key = WySW76yR_k2lTtThv9tR9g) Expression:
		///  GetStudentByStudentReference.List.Current.Student.NextOfKinRelationship
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression125() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinRelationship;
		}
		public void RichWidgets_webBlck_WebBlockInstance93_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("CzktVEoQIUavNdPuJna99w")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If50_hasRun=false;
		bool if_wt_If50_evalResult;
		public bool if_wt_If50() {
			if (if_wt_If50_hasRun) {
				if_wt_If50_hasRun = false;
				return if_wt_If50_evalResult;
			}
			if_wt_If50_hasRun = true;
			if_wt_If50_evalResult = (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinPhone!= "");
			return if_wt_If50_evalResult;
		}

		/// <summary>
		/// Gets the Navigate URL for the link of variable (wtSMSother)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wtSMSother)</returns>
		public string lnkSMSother_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentId", System.Web.HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_SMS", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wtSMSother)
		/// </summary>
		/// <returns>title of the Link (wtSMSother)</returns>
		public string
		lnkSMSother_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtSMSother)
		/// </summary>
		/// <returns>The Visible State of wtSMSother</returns>
		public bool lnkSMSother_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtSMSother)
		/// </summary>
		/// <returns>The Enabled State of wtSMSother</returns>
		public bool lnkSMSother_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = df5s0frbQkeiBw0GYXDWOg) Expression:
		///  GetStudentByStudentReference.List.Current.Student.NextOfKinPhone
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression112() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinPhone;
		}
		public void RichWidgets_webBlck_WebBlockInstance75_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor) sender;
				widget.inParamLinkOrButtonWidgetId = wtSMSother.ClientID;
				widget.inParamTitle = " ";
				widget.inParamWidthPx = -1;
				widget.inParamHeightPx = -1;
				widget.inParamAutoResize = true;
				widget.inParamRecenterOnResize = false;
				widget.inParamHideCloseButton = false;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance75
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance75_AjaxNotify(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnNotify(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container101_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container101_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container101_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "width:16px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container101_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container101)
		/// </summary>
		/// <returns>The Visible State of wt_Container101</returns>
		public bool cnt_Container101_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If4_hasRun=false;
		bool if_wt_If4_evalResult;
		public bool if_wt_If4() {
			if (if_wt_If4_hasRun) {
				if_wt_If4_hasRun = false;
				return if_wt_If4_evalResult;
			}
			if_wt_If4_hasRun = true;
			if_wt_If4_evalResult = (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinEmail!= "");
			return if_wt_If4_evalResult;
		}

		/// <summary>
		/// Gets the Navigate URL for the link of variable (wtEmailNOK)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wtEmailNOK)</returns>
		public string lnkEmailNOK_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("CommunicationId", System.Web.HttpUtility.UrlEncode(Convert.ToString(BuiltInFunction.NullIdentifier()), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("StudentId", System.Web.HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_Email", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wtEmailNOK)
		/// </summary>
		/// <returns>title of the Link (wtEmailNOK)</returns>
		public string
		lnkEmailNOK_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtEmailNOK)
		/// </summary>
		/// <returns>The Visible State of wtEmailNOK</returns>
		public bool lnkEmailNOK_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtEmailNOK)
		/// </summary>
		/// <returns>The Enabled State of wtEmailNOK</returns>
		public bool lnkEmailNOK_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = fCNIWR++_0i7vYvTdFdrSA) Expression:
		///  GetStudentByStudentReference.List.Current.Student.NextOfKinEmail
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression43() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinEmail;
		}
		public void wt_Text98_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Text98_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Text98_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-left:4px;color:#666;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void RichWidgets_webBlck_WebBlockInstance64_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor) sender;
				widget.inParamLinkOrButtonWidgetId = wtEmailNOK.ClientID;
				widget.inParamTitle = " ";
				widget.inParamWidthPx = -1;
				widget.inParamHeightPx = -1;
				widget.inParamAutoResize = true;
				widget.inParamRecenterOnResize = false;
				widget.inParamHideCloseButton = false;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance64
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance64_AjaxNotify(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnNotify(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container103_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container103_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container103_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-right: 0px;max-width: 400px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container103_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container103)
		/// </summary>
		/// <returns>The Visible State of wt_Container103</returns>
		public bool cnt_Container103_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return (!queryResGetSupportsByStudentReference_outParamList.Empty);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container132_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container132_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container132_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container132_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container132)
		/// </summary>
		/// <returns>The Visible State of wt_Container132</returns>
		public bool cnt_Container132_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = Wd2KoHBnnU2jCEVASuC76g) Expression: "Support Needs"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression81() {
			return "Support Needs";
		}
		public void cnt_Container30_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container30_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container30_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container30_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container30)
		/// </summary>
		/// <returns>The Visible State of wt_Container30</returns>
		public bool cnt_Container30_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void recListListRecords1_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// widget wtListRecords1
				ssListRecords1List = queryResGetSupportsByStudentReference_outParamList;
				ssListRecords1ListDoDataBind = false;
				ssListRecords1ListDataBound = true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void recListListRecords1_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssListRecords1List.Length > 0) {
					ssListRecords1List.CurrentRec = ssListRecords1List[ssListRecords1List.CurrentRowNumber];
				}
				if (ssListRecords1List.Length > e.SelectedIndex) {
					ssListRecords1List.CurrentRec = ssListRecords1List[e.SelectedIndex];
					ssListRecords1List.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListListRecords1_Store(object dataItem, int index) {
			return "";
		}
		public void recListListRecords1_Restore() {
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListListRecords1_Clear(object sender, EventArgs e) {
			wtListRecords1_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListListRecords1_Rebuild(int startIndex, int lineCount) {
			if (ssListRecords1List.Length != -1) {
				wtListRecords1_storage.Clear();
				for (int i=startIndex; i<ssListRecords1List.Data.Count && i<startIndex+lineCount; i++) {
					recListListRecords1_Store(ssListRecords1List.Data[i], wtListRecords1_storage.Count);
				}
			}
		}
		public void recListListRecords1_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtListRecords1 widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLSupportTypeSupportRecordList getWtListRecords1List() {
			if (ssListRecords1ListDoDataBind) {
				recListListRecords1_onDataBinding(this, null);
			}

			return ssListRecords1List;
		}
		public void cnt_Container86_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container86_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container86_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container86_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container86)
		/// </summary>
		/// <returns>The Visible State of wt_Container86</returns>
		public bool cnt_Container86_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container18_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container18_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container18_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container18_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container18)
		/// </summary>
		/// <returns>The Visible State of wt_Container18</returns>
		public bool cnt_Container18_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = jLRj1VXVgES9FVKFbj9GNQ) Expression:
		///  GetSupportsByStudentReference.List.Current.SupportType.Label
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression117() {
			return queryResGetSupportsByStudentReference_outParamList.CurrentRec.ssENSupportType.ssLabel;
		}
		public void cnt_Container129_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container129_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container129_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "position:absolute;right:10px;bottom:10px";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container129_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container129)
		/// </summary>
		/// <returns>The Visible State of wt_Container129</returns>
		public bool cnt_Container129_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If116_hasRun=false;
		bool if_wt_If116_evalResult;
		public bool if_wt_If116() {
			if (if_wt_If116_hasRun) {
				if_wt_If116_hasRun = false;
				return if_wt_If116_evalResult;
			}
			if_wt_If116_hasRun = true;
			if_wt_If116_evalResult = (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNetworkLogin!= "");
			return if_wt_If116_evalResult;
		}

		public void cnt_Container47_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container47_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container47_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container47_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container47)
		/// </summary>
		/// <returns>The Visible State of wt_Container47</returns>
		public bool cnt_Container47_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = U8UBqEevGkSAGJZiVAjSig) Expression: "Network Login : " +
		///  GetStudentByStudentReference.List.Current.Student.NetworkLogin
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression85() {
			return ("Network Login : " +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNetworkLogin);
		}
		public void cnt_Container68_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container68_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container68_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container68_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container68)
		/// </summary>
		/// <returns>The Visible State of wt_Container68</returns>
		public bool cnt_Container68_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = FmPtFuSKp0G_7u7sXQleEA) Expression: "Print Credits : " +
		///  GetPrintCreditBalanceForUser(GetStudentByStudentReference.List.Current.Student.NetworkLogin)
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression7() {
			return ("Print Credits : " +Functions.rssextensionuniflow_extension_ActionGetPrintCreditBalanceForUser(heContext, queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNetworkLogin));
		}
		public void cnt_Container28_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container28_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container28_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container28_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container28)
		/// </summary>
		/// <returns>The Visible State of wt_Container28</returns>
		public bool cnt_Container28_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return false;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtileft_input_value() {
			if ((0.0M!=varLcleft)) {
				return RuntimePlatformUtils.RemoveTrailingZeros(varLcleft.ToString("N", FormatInfo.InputNumber), FormatInfo.InputNumber);
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtileft");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDecimalInputValidate, validate)) {
					return RuntimePlatformUtils.RemoveTrailingZeros(varLcleft.ToString("N", FormatInfo.InputNumber), FormatInfo.InputNumber);
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtileft_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					varLcleft = 0.0M; 
				} else {
					varLcleft = OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDecimalInput(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				varLcleft = 0.0M; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtileft)
		/// </summary>
		/// <returns>The Visible State of wtileft</returns>
		public bool inputwtileft_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtileft)
		/// </summary>
		/// <returns>The Enabled State of wtileft</returns>
		public bool inputwtileft_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtileft)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtileft</returns>
		public bool inputwtileft_isMandatory() {
			return false;
		}

		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtitop_input_value() {
			if ((0.0M!=varLctop)) {
				return RuntimePlatformUtils.RemoveTrailingZeros(varLctop.ToString("N", FormatInfo.InputNumber), FormatInfo.InputNumber);
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtitop");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDecimalInputValidate, validate)) {
					return RuntimePlatformUtils.RemoveTrailingZeros(varLctop.ToString("N", FormatInfo.InputNumber), FormatInfo.InputNumber);
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtitop_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					varLctop = 0.0M; 
				} else {
					varLctop = OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDecimalInput(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				varLctop = 0.0M; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtitop)
		/// </summary>
		/// <returns>The Visible State of wtitop</returns>
		public bool inputwtitop_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtitop)
		/// </summary>
		/// <returns>The Enabled State of wtitop</returns>
		public bool inputwtitop_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtitop)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtitop</returns>
		public bool inputwtitop_isMandatory() {
			return false;
		}

		public void cnt_Container115_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container115_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container115_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container115_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container115)
		/// </summary>
		/// <returns>The Visible State of wt_Container115</returns>
		public bool cnt_Container115_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlckPopUp_Tootip_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowCommon.WBlkPopUp_Tootip widget = (ssCaseConferencing.Flows.FlowCommon.WBlkPopUp_Tootip) sender;
				widget.inParamTooltip = varLctooltip;
				widget.inParamVisible = varLcshow;
				widget.inParamtop = varLctop;
				widget.inParamleft = varLcleft;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public static class FuncCommandOpenTooltipPopup {
		}
		public static class FuncCommandOnNotify {
		}
		public static class FuncssPreparation {

			private static void datasetGetStudentByStudentReferenceReadDB(ref RCGroupStudentAnnualValuesStudent_GroupStudentRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENGroup.Read(r, ref index);
				rec.ssENStudent.Read(r, ref index);
				rec.ssENStudent_Group.Read(r, ref index);
				rec.ssENStudentAnnualValues.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetStudentByStudentReference" of Action "Preparation"
			/// </summary>
			public static RLGroupStudentAnnualValuesStudent_GroupStudentRecordList datasetGetStudentByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP, string qpstP1) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, ENStudent.[EMAILADDRESS] o22, ENStudent.[HOMETELEPHONE] o23, ENStudent.[MOBILEPHONE] o24, ENStudent.[NEXTOFKINNAME] o25, ENStudent.[NEXTOFKINRELATIONSHIP] o26, ENStudent.[NEXTOFKINADDRESS] o27, NULL o28, ENStudent.[NEXTOFKINPHONE] o29, NULL o30, ENStudent.[NEXTOFKINEMAIL] o31, ENStudent.[HASCURRENTACTIVEENROLMENT] o32, ENStudent.[NETWORKLOGIN] o33, NULL o34, ENStudent.[RESIDENTIALSTATUS] o35, NULL o36, NULL o37, NULL o38, NULL o39, NULL o40, ENStudent_Group.[STARTDATE] o41, NULL o42, NULL o43, NULL o44, NULL o45, NULL o46, NULL o47, NULL o48, ENStudentAnnualValues.[DISABILITY] o49, ENStudentAnnualValues.[LEARNINGDIFFICULTY] o50, NULL o51, NULL o52");
				fromBuilder.Append(" FROM ((({Group} ENGroup Inner JOIN {Student_Group} ENStudent_Group ON (ENStudent_Group.[GROUPID] = ENGroup.[ID]))  Right JOIN {Student} ENStudent ON (ENStudent.[MAINOFFERINGCODE] = ENGroup.[GROUPNAME]) AND (ENStudent_Group.[STUDENTREFERENCE] = ENStudent.[STUDENTREFERENCE]))  Left JOIN {StudentAnnualValues} ENStudentAnnualValues ON (ENStudent.[STUDENTREFERENCE] = ENStudentAnnualValues.[STUDENTREFERENCE])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP1.Trim() != "") {
					whereBuilder.Append("((ENStudent.[STUDENTREFERENCE] = @qpstP1) AND (ENStudent.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP1", DbType.String, qpstP1);
				} else {
					whereBuilder.Append("(ENStudent.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND ((ENStudentAnnualValues.[STUDENTREFERENCE] = ENStudent.[STUDENTREFERENCE]) AND (ENStudentAnnualValues.[ACADEMICYEAR] = @qpstP))");
				sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLGroupStudentAnnualValuesStudent_GroupStudentRecordList outParamList = new RLGroupStudentAnnualValuesStudent_GroupStudentRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetStudentByStudentReferenceReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[4];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, true, true, false, false, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, true, true, true, false, true, true, true, true
				}
				);
				opt[3] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, true, false, true, false, false, false, true, false, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLGroupStudentAnnualValuesStudent_GroupStudentRecordList _tmp = new RLGroupStudentAnnualValuesStudent_GroupStudentRecordList();
					_tmp.AlternateReadDBMethod = datasetGetStudentByStudentReferenceReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.LearnerDetails_StudentInfo.Preparation.GetStudentByStudentReference.List");
						outParamList = (RLGroupStudentAnnualValuesStudent_GroupStudentRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.LearnerDetails_StudentInfo.Preparation.GetStudentByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLGroupStudentAnnualValuesStudent_GroupStudentRecordList _tmp = new RLGroupStudentAnnualValuesStudent_GroupStudentRecordList();
						_tmp.AlternateReadDBMethod = datasetGetStudentByStudentReferenceReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.LearnerDetails_StudentInfo.Preparation.GetStudentByStudentReference.List");
							outParamList = (RLGroupStudentAnnualValuesStudent_GroupStudentRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.LearnerDetails_StudentInfo.Preparation.GetStudentByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetSupportsByStudentReferenceReadDB(ref RCSupportTypeSupportRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENSupport.Read(r, ref index);
				rec.ssENSupportType.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetSupportsByStudentReference" of Action "Preparation"
			/// </summary>
			public static RLSupportTypeSupportRecordList datasetGetSupportsByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Single {ListRecords1}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, ENSupportType.[LABEL] o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12");
				fromBuilder.Append(" FROM ({SupportType} ENSupportType Inner JOIN {Support} ENSupport ON (ENSupport.[SUPPORTTYPEID] = ENSupportType.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENSupport.[STUDENTREFERENCE] = @qpstP) AND (ENSupport.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENSupport.[STUDENTREFERENCE] IS NULL)");
				}
				orderByBuilder.Append(" ORDER BY ENSupportType.[LABEL] ASC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLSupportTypeSupportRecordList outParamList = new RLSupportTypeSupportRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetSupportsByStudentReferenceReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[2];
				opt[0] = new BitArray(new bool[] {
					true, false, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLSupportTypeSupportRecordList _tmp = new RLSupportTypeSupportRecordList();
					_tmp.AlternateReadDBMethod = datasetGetSupportsByStudentReferenceReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.LearnerDetails_StudentInfo.Preparation.GetSupportsByStudentReference.List");
						outParamList = (RLSupportTypeSupportRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.LearnerDetails_StudentInfo.Preparation.GetSupportsByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLSupportTypeSupportRecordList _tmp = new RLSupportTypeSupportRecordList();
						_tmp.AlternateReadDBMethod = datasetGetSupportsByStudentReferenceReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.LearnerDetails_StudentInfo.Preparation.GetSupportsByStudentReference.List");
							outParamList = (RLSupportTypeSupportRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.LearnerDetails_StudentInfo.Preparation.GetSupportsByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}

		public override Control FindControl(string id) {
			return base.FindControl(id);
		}
		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			_isRendering = true;
			Page_Load(null, null); _isRendering = false;
			this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}
		public override string WebBlockIdentifier {
			get {
				return "CaseConferencing.KP_1hGfY_ukeLR09NTtnhvw";
			}
		}
	}

}
