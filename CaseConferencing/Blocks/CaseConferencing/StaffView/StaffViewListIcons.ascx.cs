/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Web.SessionState;
using System.IO;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Runtime.Serialization;
using System.Web.Caching;
using System.Text;


namespace ssCaseConferencing.Flows.FlowStaffView {
	public abstract class WBlkStaffViewListIcons: OSUserControl, IWebScreen, INegotiateTabIndexes, IAjaxNotifyEvent {

		/// <summary>
		/// Delegate Definitions
		/// </summary>
		/// <summary>
		/// Custom Events Definitions
		/// </summary>
		/// <summary>
		/// Parameters and Local Variables Definitions
		/// </summary>
		/// <summary>
		/// Screen Input Parameter inParamStaffViewRecord. Description:
		/// </summary>
		public RCStaffViewRecordRecord inParamStaffViewRecord = new RCStaffViewRecordRecord(null);
		/// <summary>
		/// Screen Input Parameter inParamLeftId. Description:
		/// </summary>
		public string inParamLeftId = "";
		/// <summary>
		/// Screen Input Parameter inParamTopId. Description:
		/// </summary>
		public string inParamTopId = "";
		/// <summary>
		/// Screen Input Parameter inParamCurrentRowNumber. Description:
		/// </summary>
		public int inParamCurrentRowNumber = 0;
		/// <summary>
		/// Screen Input Parameter inParamIsActive. Description:
		/// </summary>
		public bool inParamIsActive = false;
		/// <summary>
		/// Screen Input Parameter inParamHasCurrentActiveEnrolments. Description:
		/// </summary>
		public bool inParamHasCurrentActiveEnrolments = false;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container9;
		protected OutSystems.HubEdition.WebWidgets.Container wtFinancial5;
		/// <summary>
		/// Variable "True" if the Widget wt_If42
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If42T;

		/// <summary>
		/// Variable "True" if the Widget wt_If42
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If42F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container46;
		protected OutSystems.HubEdition.WebWidgets.Container wtTransport5;
		/// <summary>
		/// Variable "True" if the Widget wt_If50
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If50T;

		/// <summary>
		/// Variable "True" if the Widget wt_If50
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If50F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container2;
		protected OutSystems.HubEdition.WebWidgets.Container wtAcademic5;
		/// <summary>
		/// Variable "True" if the Widget wt_If31
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If31T;

		/// <summary>
		/// Variable "True" if the Widget wt_If31
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If31F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container21;
		protected OutSystems.HubEdition.WebWidgets.Container wtPersonal5;
		/// <summary>
		/// Variable "True" if the Widget wt_If28
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If28T;

		/// <summary>
		/// Variable "True" if the Widget wt_If28
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If28F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container41;
		/// <summary>
		/// Variable "True" if the Widget wt_If6
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If6T;

		/// <summary>
		/// Variable "True" if the Widget wt_If6
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If6F;
		protected OutSystems.HubEdition.WebWidgets.Container wtSafeguardingWrapper2;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperDisability;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container43;
		/// <summary>
		/// Variable "True" if the Widget wt_If24
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If24T;

		/// <summary>
		/// Variable "True" if the Widget wt_If24
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If24F;
		/// <summary>
		/// Variable "True" if the Widget wt_If1
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If1T;

		/// <summary>
		/// Variable "True" if the Widget wt_If1
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If1F;
		/// <summary>
		/// Variable "True" if the Widget wt_If44
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If44T;

		/// <summary>
		/// Variable "True" if the Widget wt_If44
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If44F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container48;
		/// <summary>
		/// Variable "True" if the Widget wt_If26
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If26T;

		/// <summary>
		/// Variable "True" if the Widget wt_If26
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If26F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container49;
		private bool _isRendering = false;
		public HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();
		public string InstanceID;
		public string RuntimeID= "";
		static WBlkStaffViewListIcons() {
		}
		override protected void OnInit(EventArgs e) {
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			this.Load += new System.EventHandler(this.Page_Load);
			this.Unload += new System.EventHandler(this.Page_Unload);
		}
		private void Page_Load(object sender, System.EventArgs e) {
			((OSPageViewState) Page).EnableResetViewState();
			heContext = Global.App.OsContext;
			RuntimeID = ClientID;
			if (!Visible) return;
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!IsPostBack || _isRendering) {
					// register this block in the page so for later outputting the block javascript includes in their correct order
					((OSPage) Page).RegisterBlock(this);
					if (_isRendering) {
					}
					bool bindEditRecords = IsViewStateEmpty;
				} else {
					FetchViewState();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}
		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			if (!WasRendered) {
				return;
			}
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}
		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}
		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}


		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();
			ViewStateAttributes.SetInViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssStudentReference", inParamStaffViewRecord.ssSTStaffViewRecord.ssStudentReference, "");
			ViewStateAttributes.SetInViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssDisability", inParamStaffViewRecord.ssSTStaffViewRecord.ssDisability, "");
			ViewStateAttributes.SetInViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssLearningDifficulty", inParamStaffViewRecord.ssSTStaffViewRecord.ssLearningDifficulty, "");
			ViewStateAttributes.SetInViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssFinancial", inParamStaffViewRecord.ssSTStaffViewRecord.ssFinancial, "");
			ViewStateAttributes.SetInViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssTransport", inParamStaffViewRecord.ssSTStaffViewRecord.ssTransport, "");
			ViewStateAttributes.SetInViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssAcademic", inParamStaffViewRecord.ssSTStaffViewRecord.ssAcademic, "");
			ViewStateAttributes.SetInViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssPersonal", inParamStaffViewRecord.ssSTStaffViewRecord.ssPersonal, "");
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			if (IsViewStateEmpty) return;
			try {
				inParamStaffViewRecord.ssSTStaffViewRecord.ssStudentReference = (string) ViewStateAttributes.GetFromViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssStudentReference", "");
				inParamStaffViewRecord.ssSTStaffViewRecord.ssDisability = (string) ViewStateAttributes.GetFromViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssDisability", "");
				inParamStaffViewRecord.ssSTStaffViewRecord.ssLearningDifficulty = (string) ViewStateAttributes.GetFromViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssLearningDifficulty", "");
				inParamStaffViewRecord.ssSTStaffViewRecord.ssFinancial = (string) ViewStateAttributes.GetFromViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssFinancial", "");
				inParamStaffViewRecord.ssSTStaffViewRecord.ssTransport = (string) ViewStateAttributes.GetFromViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssTransport", "");
				inParamStaffViewRecord.ssSTStaffViewRecord.ssAcademic = (string) ViewStateAttributes.GetFromViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssAcademic", "");
				inParamStaffViewRecord.ssSTStaffViewRecord.ssPersonal = (string) ViewStateAttributes.GetFromViewState("inParamStaffViewRecord_ssSTStaffViewRecord_ssPersonal", "");
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}

		/// <summary>
		/// Store visibility information of the web block and input widgets in the viewstate
		/// </summary>
		protected override void StoreInputsAndWebBlockVisibility() {
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore visibility information of the web block and input widgets from the viewstate
		/// </summary>
		protected override void RestoreInputsAndWebBlockVisibility() {
			WasRendered = true;
		}

		private void Page_Unload(object sender, System.EventArgs e) {
		}

		public LocalState PushStack() {
			throw new NotImplementedException();
		}

		public void doRefreshScreen(HeContext heContext) {
			((IWebScreen) this.Parent.Page).doRefreshScreen(heContext);
		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			StoreViewState();
			((IWebScreen) this.Parent.Page).doAJAXRefreshScreen(heContext);
		}

		public static void GetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			string blockId = "CaseConferencing.K0U5IVIH7QkyO_x0Vkf9QQA";
			if (visited.Contains(blockId)) {
				return; 
			}
			visited.Add(blockId);
			if (!inline) {
				GetCssIncludes(writer, visited);
			} else {
				GetInlineCss(writer, visited);
			}
		}

		private static void GetCssIncludes(TextWriter writer, HashSet<string> visited) {
			InnerGetCss(writer, false, visited);
		}

		private static void GetInlineCss(TextWriter writer, HashSet<string> visited) {
			StringWriter localCssWriter = new StringWriter();
			localCssWriter.NewLine = writer.NewLine;
			string localCss = Environment.NewLine;
			InnerGetCss(localCssWriter, true, visited);
			localCss += localCssWriter.ToString();
			writer.Write(localCss);
		}

		private static void InnerGetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
		}

		private void Page_Error(object sender, System.EventArgs e) {
		}
		public void CheckPermissions(HeContext heContext) {
			((IWebScreen) this.Page).CheckPermissions(heContext);
		}
		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}

		public ObjectKey Key {
			get {
				return ObjectKey.Parse("0U5IVIH7QkyO+x0Vkf9QQA"); 
			}
		}
		public bool isSecure {
			get {
				return ((IWebScreen) Page).isSecure; 
			}
		}
		public class lcvSafeGuardClick: VarsBag {
			public string inParamintooltip;
			public int resUserCheck_outParamPermissionType = 0;

			public lcvSafeGuardClick(string inParamintooltip) {
				this.inParamintooltip = inParamintooltip;
			}
		}
		/// <summary>
		/// Action <code>CommandSafeGuardClick</code> that represents the Service Studio screen action
		///  <code>SafeGuardClick</code> <p> Description: </p>
		/// </summary>
		private bool CommandSafeGuardClick(HeContext heContext, string inParamintooltip) {
			CheckPermissions(heContext);
			lcvSafeGuardClick localVars = new lcvSafeGuardClick(inParamintooltip);
			try {
				// UserCheck
				Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("58QulFjuCkeyZloWLgduIw")).ssId, out localVars.resUserCheck_outParamPermissionType);
				// Check Permissions
				if ((localVars.resUserCheck_outParamPermissionType!=BuiltInFunction.NullIdentifier())) {
					// Destination = LearnerDetailsTabs

					if (OSPage.IsAjaxRequest) {
						// go to target page
						{

							if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
								((OSPage) Page).ClearErrorHandler();
								// get parameters
								heContext.Session["_ScreenParametersKey"] = "D63wS0IcrU6RmCO_pzVF0w";
								ArrayList screenParameters = new ArrayList();
								screenParameters.Add(inParamStaffViewRecord.ssSTStaffViewRecord.ssStudentReference);
								screenParameters.Add(0);
								screenParameters.Add("");
								screenParameters.Add(false);
								screenParameters.Add(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId);
								Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsTabs"] = screenParameters;
								string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStaffViewRecord.ssSTStaffViewRecord.ssStudentReference) + "&" +
								 "ActiveTabId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId));
								sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
								string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsTabs.aspx" + sURLQuery;
								((OSPageViewState) Page).RedirectLocation = sURL;
								return false;

							} else {
								string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStaffViewRecord.ssSTStaffViewRecord.ssStudentReference) + "&" +
								 "ActiveTabId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId));
								sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
								string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsTabs.aspx" + sURLQuery;
								((OSPage) Page).ClearErrorHandler();
								Response.BufferOutput = true;
								if (!OSPage.IsAjaxRequest) {
									Response.Redirect(sURL);
								} else {
									((OSPageViewState) Page).RedirectLocation = sURL;
								}
								return false;

							}
						}
					} else {
						// go to target page
						{

							if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
								((OSPage) Page).ClearErrorHandler();
								// get parameters
								heContext.Session["_ScreenParametersKey"] = "D63wS0IcrU6RmCO_pzVF0w";
								ArrayList screenParameters = new ArrayList();
								screenParameters.Add(inParamStaffViewRecord.ssSTStaffViewRecord.ssStudentReference);
								screenParameters.Add(0);
								screenParameters.Add("");
								screenParameters.Add(false);
								screenParameters.Add(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId);
								Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsTabs"] = screenParameters;
								Server.Transfer("LearnerDetailsTabs.aspx");
								return false;

							} else {
								// get parameters
								heContext.Session["_ScreenParametersKey"] = "D63wS0IcrU6RmCO_pzVF0w";
								ArrayList screenParameters = new ArrayList();
								screenParameters.Add(inParamStaffViewRecord.ssSTStaffViewRecord.ssStudentReference);
								screenParameters.Add(0);
								screenParameters.Add("");
								screenParameters.Add(false);
								screenParameters.Add(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId);
								Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsTabs"] = screenParameters;
								string sURLQuery = null;
								sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
								string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsTabs.aspx" + sURLQuery;
								((OSPage) Page).ClearErrorHandler();
								Response.BufferOutput = true;
								if (!OSPage.IsAjaxRequest) {
									Response.Redirect(sURL);
								} else {
									((OSPageViewState) Page).RedirectLocation = sURL;
								}
								return false;

							}
						}
					}

				} else {
					// Update Screen
					return true;

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOpenTooltipPopup: VarsBag {
			public string inParamintooltip;
			public lcvOpenTooltipPopup(string inParamintooltip) {
				this.inParamintooltip = inParamintooltip;
			}
		}
		/// <summary>
		/// Action <code>CommandOpenTooltipPopup</code> that represents the Service Studio screen action
		///  <code>OpenTooltipPopup</code> <p> Description: </p>
		/// </summary>
		private bool CommandOpenTooltipPopup(HeContext heContext, string inParamintooltip) {
			CheckPermissions(heContext);
			lcvOpenTooltipPopup localVars = new lcvOpenTooltipPopup(inParamintooltip);
			try {
				// NotifyWidget
				ExtendedActions.NotifyWidget(heContext, RuntimeID, localVars.inParamintooltip);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public void cnt_Container9_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container9_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container9_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = (("text-align: right;position:relative;" + (((!inParamIsActive)) ?("BlackAndWhiteFilter;"):(""))) + (((!inParamHasCurrentActiveEnrolments)) ?("BlackAndWhiteFilter"):("")));
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container9_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container9)
		/// </summary>
		/// <returns>The Visible State of wt_Container9</returns>
		public bool cnt_Container9_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntFinancial5_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntFinancial5_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntFinancial5_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntFinancial5_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtFinancial5)
		/// </summary>
		/// <returns>The Visible State of wtFinancial5</returns>
		public bool cntFinancial5_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If42_hasRun=false;
		bool if_wt_If42_evalResult;
		public bool if_wt_If42() {
			if (if_wt_If42_hasRun) {
				if_wt_If42_hasRun = false;
				return if_wt_If42_evalResult;
			}
			if_wt_If42_hasRun = true;
			if_wt_If42_evalResult = (inParamStaffViewRecord.ssSTStaffViewRecord.ssFinancial!= "");
			return if_wt_If42_evalResult;
		}

		public void cnt_Container46_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container46_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container46_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +inParamLeftId) + "\').value = $(this).offset().left;\r\ndocument.getElementById(\'") +inParamTopId) + "\').value = $(this).offset().top;").ToString());
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((IAttributeAccessor) sender).SetAttribute("title", BuiltInFunction.Replace(BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssFinancial, 0, BuiltInFunction.Length(inParamStaffViewRecord.ssSTStaffViewRecord.ssFinancial)), ";", "\r\n").ToString());
				if (!cnt_Container46_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container46
		/// </summary>
		public void cnt_Container46_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOpenTooltipPopup(heContext
				, BuiltInFunction.Replace(BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssFinancial, 0, BuiltInFunction.Length(inParamStaffViewRecord.ssSTStaffViewRecord.ssFinancial)), ";", "\r\n"))) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container46)
		/// </summary>
		/// <returns>The Visible State of wt_Container46</returns>
		public bool cnt_Container46_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance37_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("3x4BX0Bbukuqw_U7XHm4DA")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntTransport5_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntTransport5_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntTransport5_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntTransport5_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtTransport5)
		/// </summary>
		/// <returns>The Visible State of wtTransport5</returns>
		public bool cntTransport5_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If50_hasRun=false;
		bool if_wt_If50_evalResult;
		public bool if_wt_If50() {
			if (if_wt_If50_hasRun) {
				if_wt_If50_hasRun = false;
				return if_wt_If50_evalResult;
			}
			if_wt_If50_hasRun = true;
			if_wt_If50_evalResult = (inParamStaffViewRecord.ssSTStaffViewRecord.ssTransport!= "");
			return if_wt_If50_evalResult;
		}

		public void cnt_Container2_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container2_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container2_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "width: 15px;position: relative;cursor: context-menu;cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +inParamLeftId) + "\').value = $(this).offset().left;\r\ndocument.getElementById(\'") +inParamTopId) + "\').value = $(this).offset().top;").ToString());
				((IAttributeAccessor) sender).SetAttribute("title", BuiltInFunction.Replace(BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssTransport, 0, BuiltInFunction.Length(inParamStaffViewRecord.ssSTStaffViewRecord.ssTransport)), ";", "\r\n").ToString());
				if (!cnt_Container2_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container2
		/// </summary>
		public void cnt_Container2_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOpenTooltipPopup(heContext
				, BuiltInFunction.Replace(BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssTransport, 0, BuiltInFunction.Length(inParamStaffViewRecord.ssSTStaffViewRecord.ssTransport)), ";", "\r\n"))) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container2)
		/// </summary>
		/// <returns>The Visible State of wt_Container2</returns>
		public bool cnt_Container2_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the Height of the image (wt_Image33)
		/// </summary>
		/// <returns>Height of the Image (wt_Image33)</returns>
		public string img_Image33_actualHeight() {
			return HttpUtility.HtmlEncode("12");
		}
		public void cntAcademic5_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntAcademic5_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntAcademic5_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntAcademic5_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtAcademic5)
		/// </summary>
		/// <returns>The Visible State of wtAcademic5</returns>
		public bool cntAcademic5_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If31_hasRun=false;
		bool if_wt_If31_evalResult;
		public bool if_wt_If31() {
			if (if_wt_If31_hasRun) {
				if_wt_If31_hasRun = false;
				return if_wt_If31_evalResult;
			}
			if_wt_If31_hasRun = true;
			if_wt_If31_evalResult = (inParamStaffViewRecord.ssSTStaffViewRecord.ssAcademic!= "");
			return if_wt_If31_evalResult;
		}

		public void cnt_Container21_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container21_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container21_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +inParamLeftId) + "\').value = $(this).offset().left;\r\ndocument.getElementById(\'") +inParamTopId) + "\').value = $(this).offset().top;").ToString());
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "width: 15px;position: relative;top: 1px;cursor: context-menu;cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((IAttributeAccessor) sender).SetAttribute("title", BuiltInFunction.Replace(BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssAcademic, 0, BuiltInFunction.Length(inParamStaffViewRecord.ssSTStaffViewRecord.ssAcademic)), ";", "\r\n").ToString());
				if (!cnt_Container21_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container21
		/// </summary>
		public void cnt_Container21_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOpenTooltipPopup(heContext
				, BuiltInFunction.Replace(BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssAcademic, 0, BuiltInFunction.Length(inParamStaffViewRecord.ssSTStaffViewRecord.ssAcademic)), ";", "\r\n"))) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container21)
		/// </summary>
		/// <returns>The Visible State of wt_Container21</returns>
		public bool cnt_Container21_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance30_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("BDbvGpjWkkirEM_ATP7B6Q")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntPersonal5_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntPersonal5_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntPersonal5_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntPersonal5_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtPersonal5)
		/// </summary>
		/// <returns>The Visible State of wtPersonal5</returns>
		public bool cntPersonal5_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If28_hasRun=false;
		bool if_wt_If28_evalResult;
		public bool if_wt_If28() {
			if (if_wt_If28_hasRun) {
				if_wt_If28_hasRun = false;
				return if_wt_If28_evalResult;
			}
			if_wt_If28_hasRun = true;
			if_wt_If28_evalResult = (inParamStaffViewRecord.ssSTStaffViewRecord.ssPersonal!= "");
			return if_wt_If28_evalResult;
		}

		public void cnt_Container41_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container41_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container41_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +inParamLeftId) + "\').value = $(this).offset().left;\r\ndocument.getElementById(\'") +inParamTopId) + "\').value = $(this).offset().top;").ToString());
				((IAttributeAccessor) sender).SetAttribute("title", BuiltInFunction.Replace(BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssPersonal, 0, BuiltInFunction.Length(inParamStaffViewRecord.ssSTStaffViewRecord.ssPersonal)), ";", "\r\n").ToString());
				if (!cnt_Container41_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container41
		/// </summary>
		public void cnt_Container41_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOpenTooltipPopup(heContext
				, BuiltInFunction.Replace(BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssPersonal, 0, BuiltInFunction.Length(inParamStaffViewRecord.ssSTStaffViewRecord.ssPersonal)), ";", "\r\n"))) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container41)
		/// </summary>
		/// <returns>The Visible State of wt_Container41</returns>
		public bool cnt_Container41_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance32_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("4emzQL9h4U2MSj1S0mm95w")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If6_hasRun=false;
		bool if_wt_If6_evalResult;
		public bool if_wt_If6() {
			if (if_wt_If6_hasRun) {
				if_wt_If6_hasRun = false;
				return if_wt_If6_evalResult;
			}
			if_wt_If6_hasRun = true;
			if_wt_If6_evalResult = (inParamStaffViewRecord.ssSTStaffViewRecord.ssSafeguardIdList!= "");
			return if_wt_If6_evalResult;
		}

		public void cntSafeguardingWrapper2_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntSafeguardingWrapper2_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntSafeguardingWrapper2_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size:10px;cursor:pointer;color:blue";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((IAttributeAccessor) sender).SetAttribute("title", Functions.ActionRAG_GetSafeguardingTitle(heContext, inParamStaffViewRecord.ssSTStaffViewRecord.ssStudentReference).ssSTText.ssValue.ToString());
				if (!cntSafeguardingWrapper2_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wtSafeguardingWrapper2
		/// </summary>
		public void cntSafeguardingWrapper2_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandSafeGuardClick(heContext
				, "Safeguarding")) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtSafeguardingWrapper2)
		/// </summary>
		/// <returns>The Visible State of wtSafeguardingWrapper2</returns>
		public bool cntSafeguardingWrapper2_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance47_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("TdLOWtVwZUaoIuVq+LcKbQ")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntWrapperDisability_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntWrapperDisability_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntWrapperDisability_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = ((((((inParamStaffViewRecord.ssSTStaffViewRecord.ssDisciplinaryTypeNumber>0) || (((inParamStaffViewRecord.ssSTStaffViewRecord.ssDisability!= "") && (BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssDisability, 0, 2) != "98")) && (BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssDisability, 0, 2) != "99"))) || (((inParamStaffViewRecord.ssSTStaffViewRecord.ssLearningDifficulty!= "") && (BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssLearningDifficulty, 0, 2) != "98")) && (BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssLearningDifficulty, 0, 2) != "99")))) ?("margin-left:5px;"):("")) + (((!inParamIsActive)) ?("color:#C0C0C0;"):("color:#D0021B;")));
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntWrapperDisability_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperDisability)
		/// </summary>
		/// <returns>The Visible State of wtWrapperDisability</returns>
		public bool cntWrapperDisability_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return (((inParamStaffViewRecord.ssSTStaffViewRecord.ssDisciplinaryTypeNumber>0) || (((inParamStaffViewRecord.ssSTStaffViewRecord.ssDisability!= "") && (BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssDisability, 0, 2) != "98")) && (BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssDisability, 0, 2) != "99"))) || (((inParamStaffViewRecord.ssSTStaffViewRecord.ssLearningDifficulty!= "") && (BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssLearningDifficulty, 0, 2) != "98")) && (BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssLearningDifficulty, 0, 2) != "99")));
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container43_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container43_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container43_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;margin-right: 2px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +inParamLeftId) + "\').value = $(this).parent().offset().left;\r\ndocument.getElementById(\'") +inParamTopId) + "\').value = $(this).parent().offset().top;").ToString());
				((IAttributeAccessor) sender).SetAttribute("title", "Has Disciplinary" .ToString());
				if (!cnt_Container43_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container43
		/// </summary>
		public void cnt_Container43_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOpenTooltipPopup(heContext
				, "Has Disciplinary")) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container43)
		/// </summary>
		/// <returns>The Visible State of wt_Container43</returns>
		public bool cnt_Container43_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If24_hasRun=false;
		bool if_wt_If24_evalResult;
		public bool if_wt_If24() {
			if (if_wt_If24_hasRun) {
				if_wt_If24_hasRun = false;
				return if_wt_If24_evalResult;
			}
			if_wt_If24_hasRun = true;
			if_wt_If24_evalResult = (inParamStaffViewRecord.ssSTStaffViewRecord.ssDisciplinaryTypeNumber>0);
			return if_wt_If24_evalResult;
		}

		bool if_wt_If1_hasRun=false;
		bool if_wt_If1_evalResult;
		public bool if_wt_If1() {
			if (if_wt_If1_hasRun) {
				if_wt_If1_hasRun = false;
				return if_wt_If1_evalResult;
			}
			if_wt_If1_hasRun = true;
			if_wt_If1_evalResult = inParamIsActive;
			return if_wt_If1_evalResult;
		}

		/// <summary>
		/// Gets the Height of the image (wt_Image14)
		/// </summary>
		/// <returns>Height of the Image (wt_Image14)</returns>
		public string img_Image14_actualHeight() {
			return HttpUtility.HtmlEncode("12");
		}
		/// <summary>
		/// Gets the Height of the image (wt_Image17)
		/// </summary>
		/// <returns>Height of the Image (wt_Image17)</returns>
		public string img_Image17_actualHeight() {
			return HttpUtility.HtmlEncode("12");
		}
		bool if_wt_If44_hasRun=false;
		bool if_wt_If44_evalResult;
		public bool if_wt_If44() {
			if (if_wt_If44_hasRun) {
				if_wt_If44_hasRun = false;
				return if_wt_If44_evalResult;
			}
			if_wt_If44_hasRun = true;
			if_wt_If44_evalResult = (((inParamStaffViewRecord.ssSTStaffViewRecord.ssDisability!= "") && (BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssDisability, 0, 2) != "98")) && (BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssDisability, 0, 2) != "99"));
			return if_wt_If44_evalResult;
		}

		public void cnt_Container48_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container48_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container48_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inline;line-height:14px;position:relative;cursor:pointer;top:0px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +inParamLeftId) + "\').value = $(this).offset().left;\r\ndocument.getElementById(\'") +inParamTopId) + "\').value = $(this).offset().top;").ToString());
				((IAttributeAccessor) sender).SetAttribute("title", inParamStaffViewRecord.ssSTStaffViewRecord.ssDisability.ToString());
				if (!cnt_Container48_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container48
		/// </summary>
		public void cnt_Container48_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOpenTooltipPopup(heContext
				, inParamStaffViewRecord.ssSTStaffViewRecord.ssDisability)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container48)
		/// </summary>
		/// <returns>The Visible State of wt_Container48</returns>
		public bool cnt_Container48_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance35_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("gzWY19ACAEms3C88UtizMw")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If26_hasRun=false;
		bool if_wt_If26_evalResult;
		public bool if_wt_If26() {
			if (if_wt_If26_hasRun) {
				if_wt_If26_hasRun = false;
				return if_wt_If26_evalResult;
			}
			if_wt_If26_hasRun = true;
			if_wt_If26_evalResult = (((inParamStaffViewRecord.ssSTStaffViewRecord.ssLearningDifficulty!= "") && (BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssLearningDifficulty, 0, 2) != "98")) && (BuiltInFunction.Substr(inParamStaffViewRecord.ssSTStaffViewRecord.ssLearningDifficulty, 0, 2) != "99"));
			return if_wt_If26_evalResult;
		}

		public void cnt_Container49_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container49_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container49_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inline;line-height:14px;position:relative;cursor:pointer;top:0px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((IAttributeAccessor) sender).SetAttribute("onclick", (((("document.getElementById(\'" +inParamLeftId) + "\').value = $(this).offset().left;\r\ndocument.getElementById(\'") +inParamTopId) + "\').value = $(this).offset().top;").ToString());
				((IAttributeAccessor) sender).SetAttribute("title", inParamStaffViewRecord.ssSTStaffViewRecord.ssLearningDifficulty.ToString());
				if (!cnt_Container49_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container49
		/// </summary>
		public void cnt_Container49_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOpenTooltipPopup(heContext
				, inParamStaffViewRecord.ssSTStaffViewRecord.ssLearningDifficulty)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container49)
		/// </summary>
		/// <returns>The Visible State of wt_Container49</returns>
		public bool cnt_Container49_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance10_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("BDbvGpjWkkirEM_ATP7B6Q")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public static class FuncCommandSafeGuardClick {
		}
		public static class FuncCommandOpenTooltipPopup {
		}

		public override Control FindControl(string id) {
			return base.FindControl(id);
		}
		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			_isRendering = true;
			Page_Load(null, null); _isRendering = false;
			this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}
		public override string WebBlockIdentifier {
			get {
				return "CaseConferencing.K0U5IVIH7QkyO_x0Vkf9QQA";
			}
		}
	}

}
