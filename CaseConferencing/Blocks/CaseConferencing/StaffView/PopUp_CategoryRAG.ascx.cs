/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Web.SessionState;
using System.IO;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Runtime.Serialization;
using System.Web.Caching;
using System.Text;


namespace ssCaseConferencing.Flows.FlowStaffView {
	public abstract class WBlkPopUp_CategoryRAG: OSUserControl, IWebScreen, INegotiateTabIndexes, IAjaxNotifyEvent {

		/// <summary>
		/// Delegate Definitions
		/// </summary>
		/// <summary>
		/// Custom Events Definitions
		/// </summary>
		/// <summary>
		/// Parameters and Local Variables Definitions
		/// </summary>
		/// <summary>
		/// Screen Input Parameter inParamStudentReference. Description:
		/// </summary>
		public string inParamStudentReference = "";
		/// <summary>
		/// Screen Input Parameter inParamShortTermRAG. Description:
		/// </summary>
		public string inParamShortTermRAG = "";
		/// <summary>
		/// Screen Input Parameter inParamOverallRAG. Description:
		/// </summary>
		public string inParamOverallRAG = "";
		/// <summary>
		/// Screen Input Parameter inParamCategoryId. Description:
		/// </summary>
		public int inParamCategoryId = 0;
		/// <summary>
		/// Screen Input Parameter inParamOverallCompletedUnit. Description:
		/// </summary>
		public int inParamOverallCompletedUnit = 0;
		/// <summary>
		/// Screen Input Parameter inParamOverallTotalUnit. Description:
		/// </summary>
		public int inParamOverallTotalUnit = 0;
		/// <summary>
		/// Screen Input Parameter inParamVisible. Description:
		/// </summary>
		public bool inParamVisible = false;
		/// <summary>
		/// Screen Input Parameter inParamtop. Description:
		/// </summary>
		public decimal inParamtop = 0.0M;
		/// <summary>
		/// Screen Input Parameter inParamleft. Description:
		/// </summary>
		public decimal inParamleft = 0.0M;
		/// <summary>
		/// Variable <code>varLcCurrentTab</code> that represents the Service Studio local variable
		///  <code>CurrentTab</code> <p>Description: </p>
		/// </summary>
		int varLcCurrentTab = 1;

		/// <summary>
		/// Variable <code>varLcCurrentSelectShortRAG</code> that represents the Service Studio local variable
		///  <code>CurrentSelectShortRAG</code> <p>Description: </p>
		/// </summary>
		string varLcCurrentSelectShortRAG = "";

		/// <summary>
		/// Variable <code>varLcStudentCategory_List</code> that represents the Service Studio local variable
		///  <code>StudentCategory_List</code> <p>Description: </p>
		/// </summary>
		RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList varLcStudentCategory_List = new RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList();

		/// <summary>
		/// Variable <code>varLcLogInfo_List</code> that represents the Service Studio local variable
		///  <code>LogInfo_List</code> <p>Description: </p>
		/// </summary>
		RLUserStudentLogRecordList varLcLogInfo_List = new RLUserStudentLogRecordList();

		/// <summary>
		/// Variable <code>varLcCurrentSelectOverallRAG</code> that represents the Service Studio local
		///  variable <code>CurrentSelectOverallRAG</code> <p>Description: </p>
		/// </summary>
		string varLcCurrentSelectOverallRAG = "";

		/// <summary>
		/// Variable wtPopUpCategoryRag
		/// </summary>
		protected ssCaseConferencing.Flows.FlowCommon.WBlkPopUp wtPopUpCategoryRag;
		protected OutSystems.HubEdition.WebWidgets.Container wtTabWrapper;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container80;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container94;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container22;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container102;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container156;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container161;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperContent;
		/// <summary>
		/// Variable "True" if the Widget wt_If62
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If62T;

		/// <summary>
		/// Variable "True" if the Widget wt_If62
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If62F;
		protected OutSystems.HubEdition.WebWidgets.Container wtOverview;
		protected OutSystems.HubEdition.WebWidgets.Container wtOverviewContain;
		protected OutSystems.HubEdition.WebWidgets.Container wtOverviewShortTerm;
		protected OutSystems.HubEdition.WebWidgets.Container wtOverviewIconShortTerm;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container89;
		protected OutSystems.HubEdition.WebWidgets.Container wtOverviewDescriptionShortTerm2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container10;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container72;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container162;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container2;
		protected OutSystems.HubEdition.WebWidgets.Container wtOverviewInfoShortTerm;
		/// <summary>
		/// Variable "True" if the Widget wt_If20
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If20T;

		/// <summary>
		/// Variable "True" if the Widget wt_If20
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If20F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container26;
		protected OutSystems.HubEdition.WebWidgets.Container wtOverviewOverwall;
		protected OutSystems.HubEdition.WebWidgets.Container wtOverviewIconOverwall;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container16;
		protected OutSystems.HubEdition.WebWidgets.Container wtOverviewDescriptionOverwall;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container118;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container116;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container153;
		protected OutSystems.HubEdition.WebWidgets.Container wtOverviewInfoOverwall;
		/// <summary>
		/// Variable "True" if the Widget wt_If165
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If165T;

		/// <summary>
		/// Variable "True" if the Widget wt_If165
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If165F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container111;
		protected OutSystems.HubEdition.WebWidgets.Container wtHistory;
		protected OutSystems.HubEdition.WebWidgets.Container wtCurrentHistory;
		protected OutSystems.HubEdition.WebWidgets.Container wtContainerHistory;
		protected OutSystems.HubEdition.WebWidgets.Container wtContainerHistoryTitle;
		private RLUserStudentLogRecordList _ssRAGLastChanges_ListList = new RLUserStudentLogRecordList();
		public RLUserStudentLogRecordList ssRAGLastChanges_ListList {
			get {
				return _ssRAGLastChanges_ListList; 
			}
			set {
				_ssRAGLastChanges_ListList = value;
				wtRAGLastChanges_List.DataSource = value;
				ssRAGLastChanges_ListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtRAGLastChanges_List;
		public ArrayList wtRAGLastChanges_List_storage = new ArrayList();
		protected bool ssRAGLastChanges_ListList_notUsedYet = true;
		protected bool ssRAGLastChanges_ListListDoDataBind;
		protected bool ssRAGLastChanges_ListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container24;
		protected OutSystems.HubEdition.WebWidgets.Container wtContainerHistoryIcon;
		/// <summary>
		/// Variable "True" if the Widget wt_If42
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If42T;

		/// <summary>
		/// Variable "True" if the Widget wt_If42
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If42F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container175;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container117;
		protected OutSystems.HubEdition.WebWidgets.Container wtContainerHistoryDescription;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container144;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container98;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container11;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container39;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container100;
		/// <summary>
		/// Variable "True" if the Widget wt_If170
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If170T;

		/// <summary>
		/// Variable "True" if the Widget wt_If170
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If170F;
		protected OutSystems.HubEdition.WebWidgets.Container wtChangeStatusShortTime;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container61;
		protected OutSystems.HubEdition.WebWidgets.Container wtDescription;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container110;
		protected OutSystems.HubEdition.WebWidgets.Container wtResponsible2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container49;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtShortTermRAGStatusComboValidatorRequired;
		protected SelectRtWidget Rt_wtShortTermRAGStatusCombo = new SelectRtWidget();
		RLShortTermRAGStatusRecordList Rt_wtShortTermRAGStatusCombo_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container88;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtShortTermRAGDescriptionValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtShortTermRAGDescriptionValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wtWarapperShortTermRAG;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container17;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container113;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container169;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container73;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container174;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container149;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container34;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container31;
		protected OutSystems.HubEdition.WebWidgets.Container wtChangeStatusOverall;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container154;
		protected OutSystems.HubEdition.WebWidgets.Container wtDescription3;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container119;
		protected OutSystems.HubEdition.WebWidgets.Container wtResponsible3;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container168;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtOverallRAGDescriptionValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtOverallRAGDescriptionValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wtWarapperOverallRAG;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container99;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container178;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container77;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container57;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container141;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container90;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container136;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container64;
		/// <summary>
		/// Auxiliar Edit Record record variable
		/// </summary>
		RCStudentCategoryRAGRecord ssEditRecordStudentCategoryRecord = new RCStudentCategoryRAGRecord(null);

		/// <summary>
		/// Edit Record Valid Runtime Property
		/// </summary>
		public bool wtEditRecordStudentCategory_Valid() {
			bool res = true;
			return res;
		}

		private bool _isRendering = false;
		public HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();
		public string InstanceID;
		public string RuntimeID= "";
		RLUserStudentLogRecordList queryResGetStudentLogByStudentIdAndCategoryId_outParamList = new RLUserStudentLogRecordList();
		int queryResGetStudentLogByStudentIdAndCategoryId_outParamCount = 0;
		RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList queryResGetStudentCategoryRAGByStudent_outParamList = new RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList();
		int queryResGetStudentCategoryRAGByStudent_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			if (inParamVisible) {
				// Query datasetGetStudentCategoryRAGByStudent
				int datasetGetStudentCategoryRAGByStudent_maxRecords = 0;
				queryResGetStudentCategoryRAGByStudent_outParamList = FuncssPreparation.datasetGetStudentCategoryRAGByStudent(heContext, datasetGetStudentCategoryRAGByStudent_maxRecords, IterationMultiplicity.Never, out queryResGetStudentCategoryRAGByStudent_outParamCount, inParamCategoryId
				, inParamStudentReference
				);
				// Query QueryGetStudentLogByStudentIdAndCategoryId
				int QueryGetStudentLogByStudentIdAndCategoryId_maxRecords = Math.Max(wtRAGLastChanges_List.StartIndex + wtRAGLastChanges_List.LineCount + 1, 0);
				queryResGetStudentLogByStudentIdAndCategoryId_outParamList = FuncssPreparation.QueryGetStudentLogByStudentIdAndCategoryId(heContext, QueryGetStudentLogByStudentIdAndCategoryId_maxRecords, IterationMultiplicity.Multiple, out queryResGetStudentLogByStudentIdAndCategoryId_outParamCount, inParamStudentReference
				, inParamCategoryId
				);
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG = queryResGetStudentCategoryRAGByStudent_outParamList.CurrentRec.ssENStudentCategoryRAG; // EditRecordStudentCategory.Record.StudentCategoryRAG =
				// GetStudentCategoryRAGByStudent.List.Current.StudentCategoryRAG
				varLcCurrentTab = ((queryResGetStudentCategoryRAGByStudent_outParamList.Empty) ?(2):(1)); // CurrentTab = internalIf
				varLcStudentCategory_List = queryResGetStudentCategoryRAGByStudent_outParamList; // StudentCategory_List = GetStudentCategoryRAGByStudent.List
				varLcLogInfo_List = queryResGetStudentLogByStudentIdAndCategoryId_outParamList; // LogInfo_List = GetStudentLogByStudentIdAndCategoryId.List
				varLcCurrentSelectShortRAG = (((inParamShortTermRAG==BuiltInFunction.NullTextIdentifier())) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(inParamShortTermRAG)); // CurrentSelectShortRAG = internalIf
				varLcCurrentSelectOverallRAG = (((inParamOverallRAG==BuiltInFunction.NullTextIdentifier())) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(inParamOverallRAG)); // CurrentSelectOverallRAG = internalIf
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermRAGStatus = queryResGetStudentCategoryRAGByStudent_outParamList.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGStatus; // EditRecordStudentCategory.Record.StudentCategoryRAG.ShortTermRAGStatus =
				// GetStudentCategoryRAGByStudent.List.Current.StudentCategoryRAG.ShortTermRAGStatus

			}
		}
		static WBlkPopUp_CategoryRAG() {
		}
		override protected void OnInit(EventArgs e) {
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wtPopUpCategoryRag = (ssCaseConferencing.Flows.FlowCommon.WBlkPopUp) FindControl("wtPopUpCategoryRag");
			wtTabWrapper = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtTabWrapper");
			wt_Container80 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container80");
			wt_Container94 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container94");
			wt_Container22 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container22");
			wt_Container102 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container102");
			wt_Container156 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container156");
			wt_Container161 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container161");
			wtWrapperContent = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtWrapperContent");
			wtOverview = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtOverview");
			wtOverviewContain = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtOverviewContain");
			wtOverviewShortTerm = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtOverviewShortTerm");
			wtOverviewIconShortTerm = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtOverviewIconShortTerm");
			wt_Container89 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container89");
			wtOverviewDescriptionShortTerm2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtOverviewDescriptionShortTerm2");
			wt_Container10 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container10");
			wt_Container72 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container72");
			wt_Container162 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container162");
			wt_Container2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container2");
			wtOverviewInfoShortTerm = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtOverviewInfoShortTerm");
			wt_Container26 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container26");
			wtOverviewOverwall = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtOverviewOverwall");
			wtOverviewIconOverwall = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtOverviewIconOverwall");
			wt_Container16 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container16");
			wtOverviewDescriptionOverwall = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtOverviewDescriptionOverwall");
			wt_Container118 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container118");
			wt_Container116 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container116");
			wt_Container153 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container153");
			wtOverviewInfoOverwall = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtOverviewInfoOverwall");
			wt_Container111 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container111");
			wtHistory = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtHistory");
			wtCurrentHistory = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtCurrentHistory");
			wtContainerHistory = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtContainerHistory");
			wtContainerHistoryTitle = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtContainerHistoryTitle");
			wtRAGLastChanges_List = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtRAGLastChanges_List");
			wtRAGLastChanges_List.StartIndexExpression = () => 0;
			wtRAGLastChanges_List.LineCountExpression = () => 5;
			wtChangeStatusShortTime = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtChangeStatusShortTime");
			wt_Container61 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container61");
			wtDescription = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtDescription");
			wt_Container110 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container110");
			wtResponsible2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtResponsible2");
			wt_Container49 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container49");
			wt_Container88 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container88");
			wtWarapperShortTermRAG = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtWarapperShortTermRAG");
			wt_Container17 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container17");
			wt_Container113 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container113");
			wt_Container169 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container169");
			wt_Container73 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container73");
			wt_Container174 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container174");
			wt_Container149 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container149");
			wt_Container34 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container34");
			wt_Container31 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container31");
			wtChangeStatusOverall = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtChangeStatusOverall");
			wt_Container154 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container154");
			wtDescription3 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtDescription3");
			wt_Container119 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container119");
			wtResponsible3 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtResponsible3");
			wt_Container168 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container168");
			wtWarapperOverallRAG = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtWarapperOverallRAG");
			wt_Container99 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container99");
			wt_Container178 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container178");
			wt_Container77 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container77");
			wt_Container57 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container57");
			wt_Container141 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container141");
			wt_Container90 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container90");
			wt_Container136 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container136");
			wt_Container64 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container64");
			this.Load += new System.EventHandler(this.Page_Load);
			this.Unload += new System.EventHandler(this.Page_Unload);
		}
		private void Page_Load(object sender, System.EventArgs e) {
			((OSPageViewState) Page).EnableResetViewState();
			heContext = Global.App.OsContext;
			RuntimeID = ClientID;
			if (!Visible) return;
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!IsPostBack || _isRendering) {
					// register this block in the page so for later outputting the block javascript includes in their correct order
					((OSPage) Page).RegisterBlock(this);
					if (_isRendering) {
						Preparation(heContext);
					}
					bool bindEditRecords = IsViewStateEmpty;
					if (bindEditRecords) {
						wtEditRecordStudentCategory_onDataBindingDataSource(this.FindControl("wtEditRecordStudentCategory"), null);
					}
					ssRAGLastChanges_ListListDoDataBind = true;
				} else {
					FetchViewState();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}
		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			if (!WasRendered) {
				return;
			}
			ValidationUtils.ValidateComboBox(this, "wtShortTermRAGStatusCombo", parentEditRecord, validate);
			ValidationUtils.ValidateInput(this, "wtShortTermRAGDescription", parentEditRecord, ValidationUtils.validateTrue, validate);
			ValidationUtils.ValidateInput(this, "wtOverallRAGDescription", parentEditRecord, ValidationUtils.validateTrue, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}
		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}
		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}


		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();

			#region store queryResGetStudentCategoryRAGByStudent_outParamList.

			int tmpcurrentrownumberqueryResGetStudentCategoryRAGByStudent_outParamList = queryResGetStudentCategoryRAGByStudent_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetStudentCategoryRAGByStudent_outParamList = queryResGetStudentCategoryRAGByStudent_outParamList.Eof;
			ArrayList storequeryResGetStudentCategoryRAGByStudent_outParamList = new ArrayList();

			// Write the needed fields of queryResGetStudentCategoryRAGByStudent_outParamList to the storequeryResGetStudentCategoryRAGByStudent_outParamList
			if (!queryResGetStudentCategoryRAGByStudent_outParamList.Empty) {
				try {
					queryResGetStudentCategoryRAGByStudent_outParamList.StartIteration();

					while (!queryResGetStudentCategoryRAGByStudent_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList = new ArrayList();
						tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList.Add(queryResGetStudentCategoryRAGByStudent_outParamList.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGId == "" ?(object) null: queryResGetStudentCategoryRAGByStudent_outParamList.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGId);
						tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList.Add(queryResGetStudentCategoryRAGByStudent_outParamList.CurrentRec.ssENStudentCategoryRAG.ssOverallRAGId == "" ?(object) null: queryResGetStudentCategoryRAGByStudent_outParamList.CurrentRec.ssENStudentCategoryRAG.ssOverallRAGId);
						tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetStudentCategoryRAGByStudent_outParamList.CurrentRec.ssENStudentCategoryRAG.ChangedAttributes, new BitArray(new bool[] {
							false, false, false, true, false, false, false, true, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetStudentCategoryRAGByStudent_outParamList.CurrentRec.ssENStudentCategoryRAG.OptimizedAttributes, new BitArray(new bool[] {
							true, true, true, false, true, true, true, false, true, true, true, true
						}
						))));
						storequeryResGetStudentCategoryRAGByStudent_outParamList.Add(tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList);
						queryResGetStudentCategoryRAGByStudent_outParamList.Advance();
					}
				} finally {
					queryResGetStudentCategoryRAGByStudent_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetStudentCategoryRAGByStudent_outParamList", storequeryResGetStudentCategoryRAGByStudent_outParamList, null);

			#endregion


			#region store queryResGetStudentCategoryRAGByStudent_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetStudentCategoryRAGByStudent_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetStudentCategoryRAGByStudent_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetStudentCategoryRAGByStudent_outParamList_eof", tmpeofqueryResGetStudentCategoryRAGByStudent_outParamList, false);
			queryResGetStudentCategoryRAGByStudent_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentCategoryRAGByStudent_outParamList, tmpeofqueryResGetStudentCategoryRAGByStudent_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("inParamStudentReference", inParamStudentReference, "");
			ViewStateAttributes.SetInViewState("inParamShortTermRAG", inParamShortTermRAG, "");
			ViewStateAttributes.SetInViewState("inParamOverallRAG", inParamOverallRAG, "");
			ViewStateAttributes.SetInViewState("inParamCategoryId", inParamCategoryId, 0);
			ViewStateAttributes.SetInViewState("inParamOverallCompletedUnit", inParamOverallCompletedUnit, 0);
			ViewStateAttributes.SetInViewState("inParamOverallTotalUnit", inParamOverallTotalUnit, 0);
			ViewStateAttributes.SetInViewState("inParamVisible", inParamVisible, false);
			ViewStateAttributes.SetInViewState("inParamtop", inParamtop, 0.0M);
			ViewStateAttributes.SetInViewState("inParamleft", inParamleft, 0.0M);
			ViewStateAttributes.SetInViewState("varLcCurrentTab", varLcCurrentTab, 0);
			ViewStateAttributes.SetInViewState("varLcCurrentSelectShortRAG", varLcCurrentSelectShortRAG, "");

			#region store varLcStudentCategory_List.

			int tmpcurrentrownumbervarLcStudentCategory_List = varLcStudentCategory_List.CurrentRowNumber;
			bool tmpeofvarLcStudentCategory_List = varLcStudentCategory_List.Eof;
			ArrayList storevarLcStudentCategory_List = new ArrayList();

			// Write the needed fields of varLcStudentCategory_List to the storevarLcStudentCategory_List
			if (!varLcStudentCategory_List.Empty) {
				try {
					varLcStudentCategory_List.StartIteration();

					while (!varLcStudentCategory_List.Eof) {
						ArrayList tmpFieldsvarLcStudentCategory_List = new ArrayList();
						tmpFieldsvarLcStudentCategory_List.Add(varLcStudentCategory_List.CurrentRec.ssENUser.ssName == "" ?(object) null: varLcStudentCategory_List.CurrentRec.ssENUser.ssName);
						tmpFieldsvarLcStudentCategory_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(varLcStudentCategory_List.CurrentRec.ssENUser.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsvarLcStudentCategory_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(varLcStudentCategory_List.CurrentRec.ssENUser.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsvarLcStudentCategory_List.Add(varLcStudentCategory_List.CurrentRec.ssENUser_2.ssName == "" ?(object) null: varLcStudentCategory_List.CurrentRec.ssENUser_2.ssName);
						tmpFieldsvarLcStudentCategory_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(varLcStudentCategory_List.CurrentRec.ssENUser_2.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsvarLcStudentCategory_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(varLcStudentCategory_List.CurrentRec.ssENUser_2.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsvarLcStudentCategory_List.Add(varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGId == "" ?(object) null: varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGId);
						tmpFieldsvarLcStudentCategory_List.Add(varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermDescription == "" ?(object) null: varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermDescription);
						tmpFieldsvarLcStudentCategory_List.Add(varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermUpdatedBy == 0?(object) null: varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermUpdatedBy);
						tmpFieldsvarLcStudentCategory_List.Add(varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermUpdatedAt);
						tmpFieldsvarLcStudentCategory_List.Add(varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallRAGId == "" ?(object) null: varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallRAGId);
						tmpFieldsvarLcStudentCategory_List.Add(varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallDescription == "" ?(object) null: varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallDescription);
						tmpFieldsvarLcStudentCategory_List.Add(varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallUpdatedBy == 0?(object) null: varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallUpdatedBy);
						tmpFieldsvarLcStudentCategory_List.Add(varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallUpdatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallUpdatedAt);
						tmpFieldsvarLcStudentCategory_List.Add(varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGStatus == 0?(object) null: varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGStatus);
						tmpFieldsvarLcStudentCategory_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ChangedAttributes, new BitArray(new bool[] {
							false, false, false, true, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsvarLcStudentCategory_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.OptimizedAttributes, new BitArray(new bool[] {
							true, true, true, false, false, false, false, false, false, false, false, false
						}
						))));
						storevarLcStudentCategory_List.Add(tmpFieldsvarLcStudentCategory_List);
						varLcStudentCategory_List.Advance();
					}
				} finally {
					varLcStudentCategory_List.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("varLcStudentCategory_List", storevarLcStudentCategory_List, null);

			#endregion


			#region store varLcStudentCategory_List runtime properties state.

			ViewStateAttributes.SetInViewState("varLcStudentCategory_List_currentrownumber", tmpcurrentrownumbervarLcStudentCategory_List, 0);
			ViewStateAttributes.SetInViewState("varLcStudentCategory_List_eof", tmpeofvarLcStudentCategory_List, false);
			varLcStudentCategory_List.RestoreRecordListState(tmpcurrentrownumbervarLcStudentCategory_List, tmpeofvarLcStudentCategory_List);

			#endregion


			#region store varLcLogInfo_List.

			int tmpcurrentrownumbervarLcLogInfo_List = varLcLogInfo_List.CurrentRowNumber;
			bool tmpeofvarLcLogInfo_List = varLcLogInfo_List.Eof;
			ArrayList storevarLcLogInfo_List = new ArrayList();

			// Write the needed fields of varLcLogInfo_List to the storevarLcLogInfo_List
			if (!varLcLogInfo_List.Empty) {
				try {
					varLcLogInfo_List.StartIteration();

					while (!varLcLogInfo_List.Eof) {
						ArrayList tmpFieldsvarLcLogInfo_List = new ArrayList();
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENUser.ssName == "" ?(object) null: varLcLogInfo_List.CurrentRec.ssENUser.ssName);
						tmpFieldsvarLcLogInfo_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(varLcLogInfo_List.CurrentRec.ssENUser.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsvarLcLogInfo_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(varLcLogInfo_List.CurrentRec.ssENUser.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENStudentLog.ssDateTime == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcLogInfo_List.CurrentRec.ssENStudentLog.ssDateTime);
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENStudentLog.ssUserDescription == "" ?(object) null: varLcLogInfo_List.CurrentRec.ssENStudentLog.ssUserDescription);
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENStudentLog.ssLogRAGId == "" ?(object) null: varLcLogInfo_List.CurrentRec.ssENStudentLog.ssLogRAGId);
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENStudentLog.ssStudentLogType == "" ?(object) null: varLcLogInfo_List.CurrentRec.ssENStudentLog.ssStudentLogType);
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENStudentLog.ssVocCompletedUnits == 0?(object) null: varLcLogInfo_List.CurrentRec.ssENStudentLog.ssVocCompletedUnits);
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENStudentLog.ssVocRegisteredUnits == 0?(object) null: varLcLogInfo_List.CurrentRec.ssENStudentLog.ssVocRegisteredUnits);
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENStudentLog.ssMathCompletedUnits == 0?(object) null: varLcLogInfo_List.CurrentRec.ssENStudentLog.ssMathCompletedUnits);
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENStudentLog.ssMathRegisteredUnits == 0?(object) null: varLcLogInfo_List.CurrentRec.ssENStudentLog.ssMathRegisteredUnits);
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENStudentLog.ssEngCompletedUnits == 0?(object) null: varLcLogInfo_List.CurrentRec.ssENStudentLog.ssEngCompletedUnits);
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENStudentLog.ssEngRegisteredUnits == 0?(object) null: varLcLogInfo_List.CurrentRec.ssENStudentLog.ssEngRegisteredUnits);
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENStudentLog.ssMLWCompletedUnits == 0?(object) null: varLcLogInfo_List.CurrentRec.ssENStudentLog.ssMLWCompletedUnits);
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENStudentLog.ssMLWRegisteredUnits == 0?(object) null: varLcLogInfo_List.CurrentRec.ssENStudentLog.ssMLWRegisteredUnits);
						tmpFieldsvarLcLogInfo_List.Add(varLcLogInfo_List.CurrentRec.ssENStudentLog.ssDescriptionType == "" ?(object) null: varLcLogInfo_List.CurrentRec.ssENStudentLog.ssDescriptionType);
						tmpFieldsvarLcLogInfo_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(varLcLogInfo_List.CurrentRec.ssENStudentLog.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, false, false, true, true, false, false, true, true, false, false, true, true, false, true, false, false, false, false, false, false
						}
						))));
						tmpFieldsvarLcLogInfo_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(varLcLogInfo_List.CurrentRec.ssENStudentLog.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, true, true, false, false, true, true, false, false, true, true, false, false, true, false, true, true, true, true, true, true
						}
						))));
						storevarLcLogInfo_List.Add(tmpFieldsvarLcLogInfo_List);
						varLcLogInfo_List.Advance();
					}
				} finally {
					varLcLogInfo_List.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("varLcLogInfo_List", storevarLcLogInfo_List, null);

			#endregion


			#region store varLcLogInfo_List runtime properties state.

			ViewStateAttributes.SetInViewState("varLcLogInfo_List_currentrownumber", tmpcurrentrownumbervarLcLogInfo_List, 0);
			ViewStateAttributes.SetInViewState("varLcLogInfo_List_eof", tmpeofvarLcLogInfo_List, false);
			varLcLogInfo_List.RestoreRecordListState(tmpcurrentrownumbervarLcLogInfo_List, tmpeofvarLcLogInfo_List);

			#endregion

			ViewStateAttributes.SetInViewState("varLcCurrentSelectOverallRAG", varLcCurrentSelectOverallRAG, "");
			if (IsAjaxRequest) {
				recListRAGLastChanges_List_Rebuild((ssRAGLastChanges_ListListDataBound ? wtRAGLastChanges_List.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtRAGLastChanges_List.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtShortTermRAGStatusCombo_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtShortTermRAGStatusCombo")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtShortTermRAGDescription_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtShortTermRAGDescription")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtOverallRAGDescription_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtOverallRAGDescription")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssId", ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssId, 0);
			ViewStateAttributes.SetInViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssShortTermRAGId", ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermRAGId, "");
			ViewStateAttributes.SetInViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssShortTermDescription", ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermDescription, "");
			ViewStateAttributes.SetInViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssShortTermUpdatedBy", ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermUpdatedBy, 0);
			ViewStateAttributes.SetInViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssShortTermUpdatedAt", ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermUpdatedAt, new DateTime(1900, 1, 1, 0, 0, 0));
			ViewStateAttributes.SetInViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssOverallRAGId", ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallRAGId, "");
			ViewStateAttributes.SetInViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssOverallDescription", ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallDescription, "");
			ViewStateAttributes.SetInViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssOverallUpdatedBy", ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallUpdatedBy, 0);
			ViewStateAttributes.SetInViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssOverallUpdatedAt", ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallUpdatedAt, new DateTime(1900, 1, 1, 0, 0, 0));
			ViewStateAttributes.SetInViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssShortTermRAGStatus", ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermRAGStatus, 0);
			ViewStateAttributes.SetInViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ChangedAttributes, new BitArray(new bool[] {
				true, false, false, true, true, true, true, true, true, true, true, true
			}
			)))), null);
			ViewStateAttributes.SetInViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true, false, false, false, false, false, false, false, false, false
			}
			)))), null);
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			if (IsViewStateEmpty) return;
			try {

				#region fetch queryResGetStudentCategoryRAGByStudent_outParamList.

				// Read the needed fields of queryResGetStudentCategoryRAGByStudent_outParamList from storequeryResGetStudentCategoryRAGByStudent_outParamList
				queryResGetStudentCategoryRAGByStudent_outParamList = new RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList();
				ArrayList storequeryResGetStudentCategoryRAGByStudent_outParamList;
				storequeryResGetStudentCategoryRAGByStudent_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetStudentCategoryRAGByStudent_outParamList", null);
				if (storequeryResGetStudentCategoryRAGByStudent_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList in storequeryResGetStudentCategoryRAGByStudent_outParamList) {
						if (tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList != null) {
							// Aux current record variable
							RCCategoryStudentUserUserRAGStatusStudentCategoryRAGRecord tmpAuxCurrentRecordqueryResGetStudentCategoryRAGByStudent_outParamList = new RCCategoryStudentUserUserRAGStatusStudentCategoryRAGRecord(null);
							tmpAuxCurrentRecordqueryResGetStudentCategoryRAGByStudent_outParamList.ssENStudentCategoryRAG.ssShortTermRAGId = (string) (tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList[0] == null ? "": tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetStudentCategoryRAGByStudent_outParamList.ssENStudentCategoryRAG.ssOverallRAGId = (string) (tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList[1] == null ? "": tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetStudentCategoryRAGByStudent_outParamList.ssENStudentCategoryRAG.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetStudentCategoryRAGByStudent_outParamList.ssENStudentCategoryRAG.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentCategoryRAGByStudent_outParamList[3]);

							queryResGetStudentCategoryRAGByStudent_outParamList.Append(tmpAuxCurrentRecordqueryResGetStudentCategoryRAGByStudent_outParamList);
						}
					}
				}
				queryResGetStudentCategoryRAGByStudent_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetStudentCategoryRAGByStudent_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetStudentCategoryRAGByStudent_outParamList;
				tmpcurrentrownumberqueryResGetStudentCategoryRAGByStudent_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetStudentCategoryRAGByStudent_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetStudentCategoryRAGByStudent_outParamList;
				tmpeofqueryResGetStudentCategoryRAGByStudent_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetStudentCategoryRAGByStudent_outParamList_eof", false);
				queryResGetStudentCategoryRAGByStudent_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentCategoryRAGByStudent_outParamList, tmpeofqueryResGetStudentCategoryRAGByStudent_outParamList);

				#endregion

				inParamStudentReference = (string) ViewStateAttributes.GetFromViewState("inParamStudentReference", "");
				inParamShortTermRAG = (string) ViewStateAttributes.GetFromViewState("inParamShortTermRAG", "");
				inParamOverallRAG = (string) ViewStateAttributes.GetFromViewState("inParamOverallRAG", "");
				inParamCategoryId = (int) ViewStateAttributes.GetFromViewState("inParamCategoryId", 0);
				inParamOverallCompletedUnit = (int) ViewStateAttributes.GetFromViewState("inParamOverallCompletedUnit", 0);
				inParamOverallTotalUnit = (int) ViewStateAttributes.GetFromViewState("inParamOverallTotalUnit", 0);
				inParamVisible = (bool) ViewStateAttributes.GetFromViewState("inParamVisible", false);
				inParamtop = (decimal) ViewStateAttributes.GetFromViewState("inParamtop", 0.0M);
				inParamleft = (decimal) ViewStateAttributes.GetFromViewState("inParamleft", 0.0M);
				varLcCurrentTab = (int) ViewStateAttributes.GetFromViewState("varLcCurrentTab", 0);
				varLcCurrentSelectShortRAG = (string) ViewStateAttributes.GetFromViewState("varLcCurrentSelectShortRAG", "");

				#region fetch varLcStudentCategory_List.

				// Read the needed fields of varLcStudentCategory_List from storevarLcStudentCategory_List
				varLcStudentCategory_List = new RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList();
				ArrayList storevarLcStudentCategory_List;
				storevarLcStudentCategory_List = (ArrayList) ViewStateAttributes.GetFromViewState("varLcStudentCategory_List", null);
				if (storevarLcStudentCategory_List == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsvarLcStudentCategory_List in storevarLcStudentCategory_List) {
						if (tmpFieldsvarLcStudentCategory_List != null) {
							// Aux current record variable
							RCCategoryStudentUserUserRAGStatusStudentCategoryRAGRecord tmpAuxCurrentRecordvarLcStudentCategory_List = new RCCategoryStudentUserUserRAGStatusStudentCategoryRAGRecord(null);
							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENUser.ssName = (string) (tmpFieldsvarLcStudentCategory_List[0] == null ? "": tmpFieldsvarLcStudentCategory_List[0]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENUser.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcStudentCategory_List[1]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENUser.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcStudentCategory_List[2]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENUser_2.ssName = (string) (tmpFieldsvarLcStudentCategory_List[3] == null ? "": tmpFieldsvarLcStudentCategory_List[3]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENUser_2.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcStudentCategory_List[4]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENUser_2.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcStudentCategory_List[5]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENStudentCategoryRAG.ssShortTermRAGId = (string) (tmpFieldsvarLcStudentCategory_List[6] == null ? "": tmpFieldsvarLcStudentCategory_List[6]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENStudentCategoryRAG.ssShortTermDescription = (string) (tmpFieldsvarLcStudentCategory_List[7] == null ? "": tmpFieldsvarLcStudentCategory_List[7]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENStudentCategoryRAG.ssShortTermUpdatedBy = (int) (tmpFieldsvarLcStudentCategory_List[8] == null ? 0: tmpFieldsvarLcStudentCategory_List[8]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENStudentCategoryRAG.ssShortTermUpdatedAt = (DateTime) (tmpFieldsvarLcStudentCategory_List[9] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcStudentCategory_List[9]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENStudentCategoryRAG.ssOverallRAGId = (string) (tmpFieldsvarLcStudentCategory_List[10] == null ? "": tmpFieldsvarLcStudentCategory_List[10]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENStudentCategoryRAG.ssOverallDescription = (string) (tmpFieldsvarLcStudentCategory_List[11] == null ? "": tmpFieldsvarLcStudentCategory_List[11]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENStudentCategoryRAG.ssOverallUpdatedBy = (int) (tmpFieldsvarLcStudentCategory_List[12] == null ? 0: tmpFieldsvarLcStudentCategory_List[12]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENStudentCategoryRAG.ssOverallUpdatedAt = (DateTime) (tmpFieldsvarLcStudentCategory_List[13] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcStudentCategory_List[13]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENStudentCategoryRAG.ssShortTermRAGStatus = (int) (tmpFieldsvarLcStudentCategory_List[14] == null ? 0: tmpFieldsvarLcStudentCategory_List[14]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENStudentCategoryRAG.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcStudentCategory_List[15]);

							tmpAuxCurrentRecordvarLcStudentCategory_List.ssENStudentCategoryRAG.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcStudentCategory_List[16]);

							varLcStudentCategory_List.Append(tmpAuxCurrentRecordvarLcStudentCategory_List);
						}
					}
				}
				varLcStudentCategory_List.CurrentRowNumber = -1;
				#endregion


				#region fetch varLcStudentCategory_List runtime properties state.

				int tmpcurrentrownumbervarLcStudentCategory_List;
				tmpcurrentrownumbervarLcStudentCategory_List = (int) ViewStateAttributes.GetFromViewState("varLcStudentCategory_List_currentrownumber", 0);
				bool tmpeofvarLcStudentCategory_List;
				tmpeofvarLcStudentCategory_List = (bool) ViewStateAttributes.GetFromViewState("varLcStudentCategory_List_eof", false);
				varLcStudentCategory_List.RestoreRecordListState(tmpcurrentrownumbervarLcStudentCategory_List, tmpeofvarLcStudentCategory_List);

				#endregion


				#region fetch varLcLogInfo_List.

				// Read the needed fields of varLcLogInfo_List from storevarLcLogInfo_List
				varLcLogInfo_List = new RLUserStudentLogRecordList();
				ArrayList storevarLcLogInfo_List;
				storevarLcLogInfo_List = (ArrayList) ViewStateAttributes.GetFromViewState("varLcLogInfo_List", null);
				if (storevarLcLogInfo_List == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsvarLcLogInfo_List in storevarLcLogInfo_List) {
						if (tmpFieldsvarLcLogInfo_List != null) {
							// Aux current record variable
							RCUserStudentLogRecord tmpAuxCurrentRecordvarLcLogInfo_List = new RCUserStudentLogRecord(null);
							tmpAuxCurrentRecordvarLcLogInfo_List.ssENUser.ssName = (string) (tmpFieldsvarLcLogInfo_List[0] == null ? "": tmpFieldsvarLcLogInfo_List[0]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENUser.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcLogInfo_List[1]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENUser.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcLogInfo_List[2]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ssDateTime = (DateTime) (tmpFieldsvarLcLogInfo_List[3] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcLogInfo_List[3]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ssUserDescription = (string) (tmpFieldsvarLcLogInfo_List[4] == null ? "": tmpFieldsvarLcLogInfo_List[4]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ssLogRAGId = (string) (tmpFieldsvarLcLogInfo_List[5] == null ? "": tmpFieldsvarLcLogInfo_List[5]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ssStudentLogType = (string) (tmpFieldsvarLcLogInfo_List[6] == null ? "": tmpFieldsvarLcLogInfo_List[6]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ssVocCompletedUnits = (int) (tmpFieldsvarLcLogInfo_List[7] == null ? 0: tmpFieldsvarLcLogInfo_List[7]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ssVocRegisteredUnits = (int) (tmpFieldsvarLcLogInfo_List[8] == null ? 0: tmpFieldsvarLcLogInfo_List[8]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ssMathCompletedUnits = (int) (tmpFieldsvarLcLogInfo_List[9] == null ? 0: tmpFieldsvarLcLogInfo_List[9]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ssMathRegisteredUnits = (int) (tmpFieldsvarLcLogInfo_List[10] == null ? 0: tmpFieldsvarLcLogInfo_List[10]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ssEngCompletedUnits = (int) (tmpFieldsvarLcLogInfo_List[11] == null ? 0: tmpFieldsvarLcLogInfo_List[11]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ssEngRegisteredUnits = (int) (tmpFieldsvarLcLogInfo_List[12] == null ? 0: tmpFieldsvarLcLogInfo_List[12]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ssMLWCompletedUnits = (int) (tmpFieldsvarLcLogInfo_List[13] == null ? 0: tmpFieldsvarLcLogInfo_List[13]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ssMLWRegisteredUnits = (int) (tmpFieldsvarLcLogInfo_List[14] == null ? 0: tmpFieldsvarLcLogInfo_List[14]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ssDescriptionType = (string) (tmpFieldsvarLcLogInfo_List[15] == null ? "": tmpFieldsvarLcLogInfo_List[15]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcLogInfo_List[16]);

							tmpAuxCurrentRecordvarLcLogInfo_List.ssENStudentLog.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcLogInfo_List[17]);

							varLcLogInfo_List.Append(tmpAuxCurrentRecordvarLcLogInfo_List);
						}
					}
				}
				varLcLogInfo_List.CurrentRowNumber = -1;
				#endregion


				#region fetch varLcLogInfo_List runtime properties state.

				int tmpcurrentrownumbervarLcLogInfo_List;
				tmpcurrentrownumbervarLcLogInfo_List = (int) ViewStateAttributes.GetFromViewState("varLcLogInfo_List_currentrownumber", 0);
				bool tmpeofvarLcLogInfo_List;
				tmpeofvarLcLogInfo_List = (bool) ViewStateAttributes.GetFromViewState("varLcLogInfo_List_eof", false);
				varLcLogInfo_List.RestoreRecordListState(tmpcurrentrownumbervarLcLogInfo_List, tmpeofvarLcLogInfo_List);

				#endregion

				varLcCurrentSelectOverallRAG = (string) ViewStateAttributes.GetFromViewState("varLcCurrentSelectOverallRAG", "");
				recListRAGLastChanges_List_Restore();
				((IWidgetRuntimeProperties) this.FindControl("wtShortTermRAGStatusCombo")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtShortTermRAGStatusCombo_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtShortTermRAGDescription")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtShortTermRAGDescription_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtOverallRAGDescription")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtOverallRAGDescription_Mandatory", false);
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssId = (int) ViewStateAttributes.GetFromViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssId", 0);
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermRAGId = (string) ViewStateAttributes.GetFromViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssShortTermRAGId", "");
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermDescription = (string) ViewStateAttributes.GetFromViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssShortTermDescription", "");
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermUpdatedBy = (int) ViewStateAttributes.GetFromViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssShortTermUpdatedBy", 0);
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermUpdatedAt = (DateTime) ViewStateAttributes.GetFromViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssShortTermUpdatedAt", new DateTime(1900, 1, 1, 0, 0, 0));
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallRAGId = (string) ViewStateAttributes.GetFromViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssOverallRAGId", "");
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallDescription = (string) ViewStateAttributes.GetFromViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssOverallDescription", "");
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallUpdatedBy = (int) ViewStateAttributes.GetFromViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssOverallUpdatedBy", 0);
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallUpdatedAt = (DateTime) ViewStateAttributes.GetFromViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssOverallUpdatedAt", new DateTime(1900, 1, 1, 0, 0, 0));
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermRAGStatus = (int) ViewStateAttributes.GetFromViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ssShortTermRAGStatus", 0);
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_ChangedAttributes", null));
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecordStudentCategory_record_ssENStudentCategoryRAG_OptimizedAttributes", null));
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}

		/// <summary>
		/// Store visibility information of the web block and input widgets in the viewstate
		/// </summary>
		protected override void StoreInputsAndWebBlockVisibility() {
			ControlVisibility.StoreChildControlVisibility("wtShortTermRAGDescription");
			ControlVisibility.StoreChildControlVisibility("wtOverallRAGDescription");
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore visibility information of the web block and input widgets from the viewstate
		/// </summary>
		protected override void RestoreInputsAndWebBlockVisibility() {
			WasRendered = true;
			ControlVisibility.RestoreChildControlVisibility("wtShortTermRAGDescription");
			ControlVisibility.RestoreChildControlVisibility("wtOverallRAGDescription");
		}

		private void Page_Unload(object sender, System.EventArgs e) {
		}

		public LocalState PushStack() {
			throw new NotImplementedException();
		}

		public void doRefreshScreen(HeContext heContext) {
			((IWebScreen) this.Parent.Page).doRefreshScreen(heContext);
		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			StoreViewState();
			((IWebScreen) this.Parent.Page).doAJAXRefreshScreen(heContext);
		}

		public static void GetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			string blockId = "CaseConferencing.KZ_Gi4cf8cEWCxlQkavryRw";
			if (visited.Contains(blockId)) {
				return; 
			}
			visited.Add(blockId);
			if (!inline) {
				GetCssIncludes(writer, visited);
			} else {
				GetInlineCss(writer, visited);
			}
		}

		private static void GetCssIncludes(TextWriter writer, HashSet<string> visited) {
			InnerGetCss(writer, false, visited);
		}

		private static void GetInlineCss(TextWriter writer, HashSet<string> visited) {
			StringWriter localCssWriter = new StringWriter();
			localCssWriter.NewLine = writer.NewLine;
			string localCss = Environment.NewLine;
			InnerGetCss(localCssWriter, true, visited);
			localCss += localCssWriter.ToString();
			writer.Write(localCss);
		}

		private static void InnerGetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			ssCaseConferencing.Flows.FlowCommon.WBlkPopUp.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted.GetCss(writer, inline, visited);
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon.GetCss(writer, inline, visited);
		}

		private void Page_Error(object sender, System.EventArgs e) {
		}
		public void CheckPermissions(HeContext heContext) {
			((IWebScreen) this.Page).CheckPermissions(heContext);
		}
		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}

		public ObjectKey Key {
			get {
				return ObjectKey.Parse("Z_Gi4cf8cEWCxlQkavryRw"); 
			}
		}
		public bool isSecure {
			get {
				return ((IWebScreen) Page).isSecure; 
			}
		}
		public class lcvChangeSelectedRAG: VarsBag {
			public string inParamNewRAGStatusId;
			public bool inParamShortTerm;
			public lcvChangeSelectedRAG(string inParamNewRAGStatusId, bool inParamShortTerm) {
				this.inParamNewRAGStatusId = inParamNewRAGStatusId;
				this.inParamShortTerm = inParamShortTerm;
			}
		}
		/// <summary>
		/// Action <code>CommandChangeSelectedRAG</code> that represents the Service Studio screen action
		///  <code>ChangeSelectedRAG</code> <p> Description: </p>
		/// </summary>
		private bool CommandChangeSelectedRAG(HeContext heContext, string inParamNewRAGStatusId, bool inParamShortTerm) {
			CheckPermissions(heContext);
			lcvChangeSelectedRAG localVars = new lcvChangeSelectedRAG(inParamNewRAGStatusId, inParamShortTerm);
			try {
				if ((localVars.inParamShortTerm==true)) {
					varLcCurrentSelectShortRAG = localVars.inParamNewRAGStatusId; // CurrentSelectShortRAG = NewRAGStatusId
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermDescription = ""; // EditRecordStudentCategory.Record.StudentCategoryRAG.ShortTermDescription = ""
					// Refresh Widget (wtWarapperShortTermRAG)
					((OSPageViewState) Page).AjaxRefresh(wtWarapperShortTermRAG, "None", StoreViewState);
					// Refresh Widget (wtShortTermRAGDescription)
					((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtShortTermRAGDescriptionAjaxRfrsh"), "None", StoreViewState);

				} else {
					varLcCurrentSelectOverallRAG = localVars.inParamNewRAGStatusId; // CurrentSelectOverallRAG = NewRAGStatusId
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallDescription = ""; // EditRecordStudentCategory.Record.StudentCategoryRAG.OverallDescription = ""
					// Refresh Widget (wtWarapperOverallRAG)
					((OSPageViewState) Page).AjaxRefresh(wtWarapperOverallRAG, "None", StoreViewState);
					// Refresh Widget (wtOverallRAGDescription)
					((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtOverallRAGDescriptionAjaxRfrsh"), "None", StoreViewState);

				}
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvChangeTab: VarsBag {
			public int inParamTab;
			public lcvChangeTab(int inParamTab) {
				this.inParamTab = inParamTab;
			}
		}
		/// <summary>
		/// Action <code>CommandChangeTab</code> that represents the Service Studio screen action
		///  <code>ChangeTab</code> <p> Description: </p>
		/// </summary>
		private bool CommandChangeTab(HeContext heContext, int inParamTab) {
			CheckPermissions(heContext);
			lcvChangeTab localVars = new lcvChangeTab(inParamTab);
			try {
				varLcCurrentTab = localVars.inParamTab; // CurrentTab = Tab
				varLcCurrentSelectShortRAG = (((inParamShortTermRAG==BuiltInFunction.NullTextIdentifier())) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(inParamShortTermRAG)); // CurrentSelectShortRAG = internalIf
				varLcCurrentSelectOverallRAG = (((inParamOverallRAG==BuiltInFunction.NullTextIdentifier())) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId):(inParamOverallRAG)); // CurrentSelectOverallRAG = internalIf
				// Refresh Widget (wtPopUpCategoryRag)
				ssRAGLastChanges_ListListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtPopUpCategoryRag, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvSave: VarsBag {
			public bool inParamIsShortTerm;
			public RLStudent_GroupUserStaffCourseFavouriteRecordList queryResGetStaffCourseFavouritesWithOrWithoutUsers_outParamList = new RLStudent_GroupUserStaffCourseFavouriteRecordList();
			public int queryResGetStaffCourseFavouritesWithOrWithoutUsers_outParamCount = 0;

			public int resEmail2_outParamEmailId = 0;
			public int resStudentLog_Create_outParamStudentLogId = 0;

			public Actions.lcoStudent_GetResponsible resStudent_GetResponsible = new Actions.lcoStudent_GetResponsible();
			public RLStudentCategoryRAGRecordList queryResGetStudentCategoryRAGsByStudentReference_outParamList = new RLStudentCategoryRAGRecordList();
			public int queryResGetStudentCategoryRAGsByStudentReference_outParamCount = 0;

			public int resCreateOrUpdateStudentCategoryRAG_outParamId = 0;

			public int resEmail1_outParamEmailId = 0;
			public lcvSave(bool inParamIsShortTerm) {
				this.inParamIsShortTerm = inParamIsShortTerm;
			}
		}
		/// <summary>
		/// Action <code>CommandSave</code> that represents the Service Studio screen action <code>Save</code>
		///  <p> Description: </p>
		/// </summary>
		private bool CommandSave(HeContext heContext, bool inParamIsShortTerm) {
			CheckPermissions(heContext);
			lcvSave localVars = new lcvSave(inParamIsShortTerm);
			try {
				if ((localVars.inParamIsShortTerm==true)) {
					// AssignShortTerms
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssStudentReference = inParamStudentReference; // EditRecordStudentCategory.Record.StudentCategoryRAG.StudentReference = StudentReference
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermUpdatedBy = ((int) Global.App.OsContext.Session["UserID"]); // EditRecordStudentCategory.Record.StudentCategoryRAG.ShortTermUpdatedBy = UserID
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermUpdatedAt = BuiltInFunction.CurrDateTime(); // EditRecordStudentCategory.Record.StudentCategoryRAG.ShortTermUpdatedAt = CurrDateTime
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermRAGId = varLcCurrentSelectShortRAG; // EditRecordStudentCategory.Record.StudentCategoryRAG.ShortTermRAGId = CurrentSelectShortRAG
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssCategoryId = inParamCategoryId; // EditRecordStudentCategory.Record.StudentCategoryRAG.CategoryId = CategoryId
					// ValidRecordsOverall
					if ((ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermDescription== "")) {
						goto K1R3eT9ExlkKWPbC4XoNzPw;

					}

				} else {
					// AssignOverall
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssStudentReference = inParamStudentReference; // EditRecordStudentCategory.Record.StudentCategoryRAG.StudentReference = StudentReference
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallUpdatedBy = ((int) Global.App.OsContext.Session["UserID"]); // EditRecordStudentCategory.Record.StudentCategoryRAG.OverallUpdatedBy = UserID
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallUpdatedAt = BuiltInFunction.CurrDateTime(); // EditRecordStudentCategory.Record.StudentCategoryRAG.OverallUpdatedAt = CurrDateTime
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallRAGId = varLcCurrentSelectOverallRAG; // EditRecordStudentCategory.Record.StudentCategoryRAG.OverallRAGId = CurrentSelectOverallRAG
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssCategoryId = inParamCategoryId; // EditRecordStudentCategory.Record.StudentCategoryRAG.CategoryId = CategoryId
					// ValidRecordsOverall
					if (((ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallDescription== "") && (ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId))) {
						goto K1R3eT9ExlkKWPbC4XoNzPw;

					}

				}
				// Query datasetGetStudentCategoryRAGsByStudentReference
				int datasetGetStudentCategoryRAGsByStudentReference_maxRecords = 0;
				localVars.queryResGetStudentCategoryRAGsByStudentReference_outParamList = FuncCommandSave.datasetGetStudentCategoryRAGsByStudentReference(heContext, datasetGetStudentCategoryRAGsByStudentReference_maxRecords, IterationMultiplicity.Never, out localVars.queryResGetStudentCategoryRAGsByStudentReference_outParamCount, ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssCategoryId
				, ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssStudentReference
				);
				if (!(localVars.queryResGetStudentCategoryRAGsByStudentReference_outParamList.Empty)) {
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssId = localVars.queryResGetStudentCategoryRAGsByStudentReference_outParamList.CurrentRec.ssENStudentCategoryRAG.ssId; // EditRecordStudentCategory.Record.StudentCategoryRAG.Id =
					// GetStudentCategoryRAGsByStudentReference.List.Current.StudentCategoryRAG.Id

				}
				// CreateOrUpdateStudentCategoryRAG
				ExtendedActions.CreateOrUpdateStudentCategoryRAG(heContext, ssEditRecordStudentCategoryRecord.ChangedAttributes, ssEditRecordStudentCategoryRecord, out localVars.resCreateOrUpdateStudentCategoryRAG_outParamId);
				// StudentLog_Create
				Actions.ActionStudentLog_Create(heContext, inParamStudentReference, ((int) Global.App.OsContext.Session["UserID"]), ((Functions.ssGetCategory(heContext, inParamCategoryId).ssENCategory.ssLabel+(((localVars.inParamIsShortTerm==true)) ?(" Curriculum Concern "):(" PSR "))) + "RAG Changed"), (((localVars.inParamIsShortTerm==true)) ?(ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("gVn2NYjbo0aRJrTPYP71sQ")).ssLogType):(ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("fZkLc7sw1ESSg__BcxP1tw")).ssLogType)), (((localVars.inParamIsShortTerm==true)) ?(ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermDescription):(ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallDescription)), (((localVars.inParamIsShortTerm==true)) ?(varLcCurrentSelectShortRAG):(varLcCurrentSelectOverallRAG)), false, inParamCategoryId, Functions.ssGetCategory(heContext, inParamCategoryId).ssENCategory.ssLabel, "", 0, 0, "", 0, out localVars.resStudentLog_Create_outParamStudentLogId);
				// Student_GetResponsible
				Actions.ActionStudent_GetResponsible(heContext, inParamStudentReference, out localVars.resStudent_GetResponsible.outParamResponsibleName, out localVars.resStudent_GetResponsible.outParamResponsibleEmail);
				// Send Email
				localVars.resEmail1_outParamEmailId = EmailProcessor.SendEmailRequest("http://" + Settings.Get(Settings.Configs.InternalAddress) + AppUtils.Instance.getImagePath(/*internalAccess*/true) + "Email1.aspx?" + "LogStudentId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(localVars.resStudentLog_Create_outParamStudentLogId)), "", localVars.resStudent_GetResponsible.outParamResponsibleEmail, "", "", 0, heContext.Session.TenantId, false, EmailProcessor.EmailType.Normal);
				// Feedback_Message3
				Actions.ActionFeedback_Message(heContext, "Message sent to Personal Tutor.", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("8xuePnp+TUO346Oyp3_dWQ")).ssId);
				// NotifyWidget2
				ExtendedActions.NotifyWidget(heContext, RuntimeID, ((((((((((varLcCurrentSelectShortRAG+ "|") +varLcCurrentSelectOverallRAG) + "|") +ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermUpdatedAt.ToString(FormatInfo.GetOutputDateTimeFormatString(), FormatInfo.defaultHeCultureInfo)) + "|") +ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallUpdatedAt.ToString(FormatInfo.GetOutputDateTimeFormatString(), FormatInfo.defaultHeCultureInfo)) + "|") + (((ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermUpdatedBy!=BuiltInFunction.NullIdentifier())) ?(Functions.ssGetUser(heContext, ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermUpdatedBy).ssENUser.ssName):(""))) + "|") + (((ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallUpdatedBy!=BuiltInFunction.NullIdentifier())) ?(Functions.ssGetUser(heContext, ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallUpdatedBy).ssENUser.ssName):(""))));
				if (((inParamCategoryId==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId) && (varLcCurrentSelectOverallRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId))) {
					// Query datasetGetStaffCourseFavouritesWithOrWithoutUsers
					int datasetGetStaffCourseFavouritesWithOrWithoutUsers_maxRecords = 0;
					localVars.queryResGetStaffCourseFavouritesWithOrWithoutUsers_outParamList = FuncCommandSave.datasetGetStaffCourseFavouritesWithOrWithoutUsers(heContext, datasetGetStaffCourseFavouritesWithOrWithoutUsers_maxRecords, IterationMultiplicity.Single, out localVars.queryResGetStaffCourseFavouritesWithOrWithoutUsers_outParamCount, inParamStudentReference
					);
					if (!(localVars.queryResGetStaffCourseFavouritesWithOrWithoutUsers_outParamList.Empty)) {
						// Foreach GetStaffCourseFavouritesWithOrWithoutUsers.List
						localVars.queryResGetStaffCourseFavouritesWithOrWithoutUsers_outParamList.StartIteration();
						try {
							while (!localVars.queryResGetStaffCourseFavouritesWithOrWithoutUsers_outParamList.Eof) {
								if (Functions.ssCheckSLARole(heContext, localVars.queryResGetStaffCourseFavouritesWithOrWithoutUsers_outParamList.CurrentRec.ssENUser.ssId)) {
									// Send Email
									localVars.resEmail2_outParamEmailId = EmailProcessor.SendEmailRequest("http://" + Settings.Get(Settings.Configs.InternalAddress) + AppUtils.Instance.getImagePath(/*internalAccess*/true) + "Email1.aspx?" + "LogStudentId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(localVars.resStudentLog_Create_outParamStudentLogId)), "", localVars.queryResGetStaffCourseFavouritesWithOrWithoutUsers_outParamList.CurrentRec.ssENUser.ssEmail, "", "", 0, heContext.Session.TenantId, false, EmailProcessor.EmailType.Normal);

								}
								localVars.queryResGetStaffCourseFavouritesWithOrWithoutUsers_outParamList.Advance();
							}
						} finally {
							localVars.queryResGetStaffCourseFavouritesWithOrWithoutUsers_outParamList.EndIteration();
						}

					}

				}
				inParamVisible = false; // Visible = False
				varLcCurrentTab = 1; // CurrentTab = 1
				// Refresh Widget (wtPopUpCategoryRag)
				ssRAGLastChanges_ListListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtPopUpCategoryRag, "None", StoreViewState);
				// Update Screen
				return true;
				K1R3eT9ExlkKWPbC4XoNzPw:// Feedback_Message
				Actions.ActionFeedback_Message(heContext, "Description field required!", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvEdit: VarsBag {
			public bool inParamIsShortTerm;
			public lcvEdit(bool inParamIsShortTerm) {
				this.inParamIsShortTerm = inParamIsShortTerm;
			}
		}
		/// <summary>
		/// Action <code>CommandEdit</code> that represents the Service Studio screen action <code>Edit</code>
		///  <p> Description: </p>
		/// </summary>
		private bool CommandEdit(HeContext heContext, bool inParamIsShortTerm) {
			CheckPermissions(heContext);
			lcvEdit localVars = new lcvEdit(inParamIsShortTerm);
			try {
				varLcCurrentTab = (((localVars.inParamIsShortTerm==true)) ?(2):(3)); // CurrentTab = internalIf
				// Refresh Widget (wtPopUpCategoryRag)
				ssRAGLastChanges_ListListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtPopUpCategoryRag, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public void webBlckPopUpCategoryRag_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowCommon.WBlkPopUp widget = (ssCaseConferencing.Flows.FlowCommon.WBlkPopUp) sender;
				widget.inParamVisible = inParamVisible;
				widget.inParamWidth = 501;
				widget.inParamHeight = 0;
				widget.inParamTop = (inParamtop+67M);
				widget.inParamLeft = (inParamleft-260M);
				widget.inParamBottom = (-1);
				widget.inParamRight = (-1);
				widget.inParamArrowLeft = 281;
				widget.inParamArrowRight = (-1);
				widget.inParamArrowTop = (-1);
				widget.inParamArrowBottom = (-1);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntTabWrapper_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntTabWrapper_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntTabWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "height:30px;text-align: left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntTabWrapper_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtTabWrapper)
		/// </summary>
		/// <returns>The Visible State of wtTabWrapper</returns>
		public bool cntTabWrapper_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container80_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container80_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container80_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((WebControl) sender).CssClass = (((varLcCurrentTab==1)) ?("TabEnabled"):("TabDisabled"));
				if (!cnt_Container80_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container80
		/// </summary>
		public void cnt_Container80_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeTab(heContext
				, 1)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container80)
		/// </summary>
		/// <returns>The Visible State of wt_Container80</returns>
		public bool cnt_Container80_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Table131_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Table131_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Table131_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "height:100%;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container94_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container94_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container94_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container94_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container94)
		/// </summary>
		/// <returns>The Visible State of wt_Container94</returns>
		public bool cnt_Container94_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance129_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("v8O5VJfAtEuGAFl1unUekw")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = f7FEUsqf4ECRG4tozF7V_A) Expression: " " + internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression68() {
			return (" " + (((inParamCategoryId!=BuiltInFunction.NullIdentifier())) ?(Functions.ssGetCategory(heContext, inParamCategoryId).ssENCategory.ssLabel):("")));
		}
		public void cnt_Container22_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container22_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container22_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((WebControl) sender).CssClass = (((varLcCurrentTab==2)) ?("TabEnabled"):("TabDisabled"));
				if (!cnt_Container22_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container22
		/// </summary>
		public void cnt_Container22_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeTab(heContext
				, 2)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container22)
		/// </summary>
		/// <returns>The Visible State of wt_Container22</returns>
		public bool cnt_Container22_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Table43_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Table43_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Table43_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "height:100%;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container102_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container102_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container102_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container102_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container102)
		/// </summary>
		/// <returns>The Visible State of wt_Container102</returns>
		public bool cnt_Container102_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance139_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("jA5F7R9HAUWaOlj0y8fkDA")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container156_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container156_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container156_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((WebControl) sender).CssClass = (((varLcCurrentTab==3)) ?("TabEnabled"):("TabDisabled"));
				if (!cnt_Container156_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container156
		/// </summary>
		public void cnt_Container156_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeTab(heContext
				, 3)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container156)
		/// </summary>
		/// <returns>The Visible State of wt_Container156</returns>
		public bool cnt_Container156_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Table15_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Table15_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Table15_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "height:100%;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container161_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container161_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container161_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container161_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container161)
		/// </summary>
		/// <returns>The Visible State of wt_Container161</returns>
		public bool cnt_Container161_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance36_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("jA5F7R9HAUWaOlj0y8fkDA")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntWrapperContent_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntWrapperContent_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntWrapperContent_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "border: 1px solid #E8E8E8;text-align:left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntWrapperContent_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperContent)
		/// </summary>
		/// <returns>The Visible State of wtWrapperContent</returns>
		public bool cntWrapperContent_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If62_hasRun=false;
		bool if_wt_If62_evalResult;
		public bool if_wt_If62() {
			if (if_wt_If62_hasRun) {
				if_wt_If62_hasRun = false;
				return if_wt_If62_evalResult;
			}
			if_wt_If62_hasRun = true;
			if_wt_If62_evalResult = (varLcCurrentTab==1);
			return if_wt_If62_evalResult;
		}

		public void cntOverview_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntOverview_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntOverview_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin:21px;color:#757575;font-size: 12px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntOverview_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtOverview)
		/// </summary>
		/// <returns>The Visible State of wtOverview</returns>
		public bool cntOverview_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntOverviewContain_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntOverviewContain_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntOverviewContain_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntOverviewContain_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtOverviewContain)
		/// </summary>
		/// <returns>The Visible State of wtOverviewContain</returns>
		public bool cntOverviewContain_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntOverviewShortTerm_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntOverviewShortTerm_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntOverviewShortTerm_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: center;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntOverviewShortTerm_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtOverviewShortTerm)
		/// </summary>
		/// <returns>The Visible State of wtOverviewShortTerm</returns>
		public bool cntOverviewShortTerm_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntOverviewIconShortTerm_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntOverviewIconShortTerm_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntOverviewIconShortTerm_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntOverviewIconShortTerm_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtOverviewIconShortTerm)
		/// </summary>
		/// <returns>The Visible State of wtOverviewIconShortTerm</returns>
		public bool cntOverviewIconShortTerm_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container89_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container89_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container89_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "border: solid 1px transparent;margin:13px 0px 6px 0px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("IndicatorRedCategoryFlag"):((((varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("IndicatorAmberCategoryFlag"):((((varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("IndicatorGreenCategoryFlag"):("IndicatorBlueCategoryFlag"))))));
				if (!cnt_Container89_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container89)
		/// </summary>
		/// <returns>The Visible State of wt_Container89</returns>
		public bool cnt_Container89_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance28_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = RsseSpaceRichWidgets.DefaultValues.ReferenceWebFlow_RichWidgets_ReferenceWebBlock_Icon_Variables_ReferenceSerializableInputParameter_Name;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntOverviewDescriptionShortTerm2_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntOverviewDescriptionShortTerm2_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntOverviewDescriptionShortTerm2_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntOverviewDescriptionShortTerm2_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtOverviewDescriptionShortTerm2)
		/// </summary>
		/// <returns>The Visible State of wtOverviewDescriptionShortTerm2</returns>
		public bool cntOverviewDescriptionShortTerm2_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container10_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container10_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container10_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = ";width:370px;border:1px solid #E8E8E8;padding: 2px 5px; margin:0px 0px 0px 11px;color: #6F6A6A;font-size: 15px;overflow-y: auto;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container10_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container10)
		/// </summary>
		/// <returns>The Visible State of wt_Container10</returns>
		public bool cnt_Container10_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = PFxAkaQCUkGnLlZPiiD9Ug) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression106() {
			return (((varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGStatus==BuiltInFunction.NullIdentifier())) ?(""):(Functions.ssGetShortTermRAGStatus(heContext, varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGStatus).ssENShortTermRAGStatus.ssLabel));
		}
		public void cnt_Container72_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container72_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container72_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inline-block;width:370px;height:70px;border:1px solid #E8E8E8;padding: 2px 5px; margin:0px 0px 0px 11px;color: #6F6A6A;font-size: 15px;overflow-y: auto;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container72_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container72)
		/// </summary>
		/// <returns>The Visible State of wt_Container72</returns>
		public bool cnt_Container72_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container162_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container162_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container162_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container162_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container162)
		/// </summary>
		/// <returns>The Visible State of wt_Container162</returns>
		public bool cnt_Container162_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = pFn8MILqxkWUMk7RW7J1Fg) Expression:
		///  StudentCategory_List.Current.StudentCategoryRAG.ShortTermDescription
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression37() {
			return varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermDescription;
		}
		public void cnt_Container2_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container2_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container2_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:right;cursor: pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container2_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container2
		/// </summary>
		public void cnt_Container2_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandEdit(heContext
				, true)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container2)
		/// </summary>
		/// <returns>The Visible State of wt_Container2</returns>
		public bool cnt_Container2_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return (((queryResGetStudentCategoryRAGByStudent_outParamList.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGId!=BuiltInFunction.NullTextIdentifier())) ?(true):(false));
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance81_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("tD89gwpkFEyl4LnwdeU5OA")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntOverviewInfoShortTerm_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntOverviewInfoShortTerm_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntOverviewInfoShortTerm_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "width: 375px;margin-left:63px; color: #9C9898;font-size: 11px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntOverviewInfoShortTerm_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtOverviewInfoShortTerm)
		/// </summary>
		/// <returns>The Visible State of wtOverviewInfoShortTerm</returns>
		public bool cntOverviewInfoShortTerm_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return (varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGId!=BuiltInFunction.NullTextIdentifier());
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If20_hasRun=false;
		bool if_wt_If20_evalResult;
		public bool if_wt_If20() {
			if (if_wt_If20_hasRun) {
				if_wt_If20_hasRun = false;
				return if_wt_If20_evalResult;
			}
			if_wt_If20_hasRun = true;
			if_wt_If20_evalResult = (varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermUpdatedBy!=BuiltInFunction.NullIdentifier());
			return if_wt_If20_evalResult;
		}

		/// <summary>
		/// Function to dump expression (Key = I13zuggn+kWiEJDcTrnp9A) Expression: "by " +
		///  StudentCategory_List.Current.User.Name + " on "
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression132() {
			return (("by " +varLcStudentCategory_List.CurrentRec.ssENUser.ssName) + " on ");
		}
		public void cnt_Container26_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container26_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container26_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #9C9898;font-size: 11px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container26_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container26)
		/// </summary>
		/// <returns>The Visible State of wt_Container26</returns>
		public bool cnt_Container26_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance60_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
				widget.inParamDate = Convert.ToDateTime(varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermUpdatedAt.ToString("yyyy-M-d"));
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntOverviewOverwall_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntOverviewOverwall_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntOverviewOverwall_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin: 10px 0px 0px 9px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntOverviewOverwall_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtOverviewOverwall)
		/// </summary>
		/// <returns>The Visible State of wtOverviewOverwall</returns>
		public bool cntOverviewOverwall_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntOverviewIconOverwall_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntOverviewIconOverwall_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntOverviewIconOverwall_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntOverviewIconOverwall_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtOverviewIconOverwall)
		/// </summary>
		/// <returns>The Visible State of wtOverviewIconOverwall</returns>
		public bool cntOverviewIconOverwall_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container16_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container16_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container16_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((WebControl) sender).CssClass = (((varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("IndicatorRedCategoryCircle"):((((varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("IndicatorAmberCategoryCircle"):((((varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("IndicatorGreenCategoryCircle"):("IndicatorBlueCategoryCircle"))))));
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin: 15px 18px 0px -9px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container16_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container16)
		/// </summary>
		/// <returns>The Visible State of wt_Container16</returns>
		public bool cnt_Container16_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = Y52wBX_7kkKYIZaXptkk1g) Expression: OverallCompletedUnit + " / "
		///  + OverallTotalUnit
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression9() {
			return ((Convert.ToString(inParamOverallCompletedUnit) + " / ") +Convert.ToString(inParamOverallTotalUnit));
		}
		public void cntOverviewDescriptionOverwall_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntOverviewDescriptionOverwall_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntOverviewDescriptionOverwall_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntOverviewDescriptionOverwall_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtOverviewDescriptionOverwall)
		/// </summary>
		/// <returns>The Visible State of wtOverviewDescriptionOverwall</returns>
		public bool cntOverviewDescriptionOverwall_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container118_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container118_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container118_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inline-block;width:370px;height:70px;border:1px solid #E8E8E8;padding: 2px 5px;color: #6F6A6A;font-size: 15px;overflow-y: auto;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container118_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container118)
		/// </summary>
		/// <returns>The Visible State of wt_Container118</returns>
		public bool cnt_Container118_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container116_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container116_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container116_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container116_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container116)
		/// </summary>
		/// <returns>The Visible State of wt_Container116</returns>
		public bool cnt_Container116_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = 3zhUqO08vkuTWENFTodf8Q) Expression:
		///  StudentCategory_List.Current.StudentCategoryRAG.OverallDescription
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression123() {
			return varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallDescription;
		}
		public void cnt_Container153_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container153_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container153_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:right;cursor: pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container153_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container153
		/// </summary>
		public void cnt_Container153_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandEdit(heContext
				, false)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container153)
		/// </summary>
		/// <returns>The Visible State of wt_Container153</returns>
		public bool cnt_Container153_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return (((queryResGetStudentCategoryRAGByStudent_outParamList.CurrentRec.ssENStudentCategoryRAG.ssOverallRAGId!=BuiltInFunction.NullTextIdentifier())) ?(true):(false));
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance167_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("tD89gwpkFEyl4LnwdeU5OA")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntOverviewInfoOverwall_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntOverviewInfoOverwall_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntOverviewInfoOverwall_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "width: 375px;margin-left:54px;color: #9C9898;font-size: 11px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntOverviewInfoOverwall_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtOverviewInfoOverwall)
		/// </summary>
		/// <returns>The Visible State of wtOverviewInfoOverwall</returns>
		public bool cntOverviewInfoOverwall_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return (varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssShortTermRAGId!=BuiltInFunction.NullTextIdentifier());
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If165_hasRun=false;
		bool if_wt_If165_evalResult;
		public bool if_wt_If165() {
			if (if_wt_If165_hasRun) {
				if_wt_If165_hasRun = false;
				return if_wt_If165_evalResult;
			}
			if_wt_If165_hasRun = true;
			if_wt_If165_evalResult = (varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallUpdatedBy!=BuiltInFunction.NullIdentifier());
			return if_wt_If165_evalResult;
		}

		/// <summary>
		/// Function to dump expression (Key = SveUH_f6+0OXO0WNs+Mayg) Expression: "by " +
		///  StudentCategory_List.Current.User_2.Name + " on "
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression21() {
			return (("by " +varLcStudentCategory_List.CurrentRec.ssENUser_2.ssName) + " on ");
		}
		public void cnt_Container111_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container111_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container111_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #9C9898;font-size: 11px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container111_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container111)
		/// </summary>
		/// <returns>The Visible State of wt_Container111</returns>
		public bool cnt_Container111_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance74_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
				widget.inParamDate = Convert.ToDateTime(varLcStudentCategory_List.CurrentRec.ssENStudentCategoryRAG.ssOverallUpdatedAt.ToString("yyyy-M-d"));
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntHistory_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntHistory_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntHistory_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top:15px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntHistory_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtHistory)
		/// </summary>
		/// <returns>The Visible State of wtHistory</returns>
		public bool cntHistory_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntCurrentHistory_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntCurrentHistory_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntCurrentHistory_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top:15px;float:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntCurrentHistory_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtCurrentHistory)
		/// </summary>
		/// <returns>The Visible State of wtCurrentHistory</returns>
		public bool cntCurrentHistory_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntContainerHistory_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntContainerHistory_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntContainerHistory_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntContainerHistory_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtContainerHistory)
		/// </summary>
		/// <returns>The Visible State of wtContainerHistory</returns>
		public bool cntContainerHistory_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntContainerHistoryTitle_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntContainerHistoryTitle_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntContainerHistoryTitle_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-left: 65px; margin-top: 0px;font-size: 10px;font-weight: normal;margin-top: 0px;width: 377px;border-bottom: dotted 1px #dadada;text-align: right;color: #aaa;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntContainerHistoryTitle_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtContainerHistoryTitle)
		/// </summary>
		/// <returns>The Visible State of wtContainerHistoryTitle</returns>
		public bool cntContainerHistoryTitle_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Text6_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Text6_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Text6_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-weight: bold;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void recListRAGLastChanges_List_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// widget wtRAGLastChanges_List
				ssRAGLastChanges_ListList = varLcLogInfo_List;
				ssRAGLastChanges_ListListDoDataBind = false;
				ssRAGLastChanges_ListListDataBound = true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void recListRAGLastChanges_List_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssRAGLastChanges_ListList.Length > 0) {
					ssRAGLastChanges_ListList.CurrentRec = ssRAGLastChanges_ListList[ssRAGLastChanges_ListList.CurrentRowNumber];
				}
				if (ssRAGLastChanges_ListList.Length > e.SelectedIndex) {
					ssRAGLastChanges_ListList.CurrentRec = ssRAGLastChanges_ListList[e.SelectedIndex];
					ssRAGLastChanges_ListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListRAGLastChanges_List_Store(object dataItem, int index) {
			return "";
		}
		public void recListRAGLastChanges_List_Restore() {
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListRAGLastChanges_List_Clear(object sender, EventArgs e) {
			wtRAGLastChanges_List_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListRAGLastChanges_List_Rebuild(int startIndex, int lineCount) {
			if (ssRAGLastChanges_ListList.Length != -1) {
				wtRAGLastChanges_List_storage.Clear();
				for (int i=startIndex; i<ssRAGLastChanges_ListList.Data.Count && i<startIndex+lineCount; i++) {
					recListRAGLastChanges_List_Store(ssRAGLastChanges_ListList.Data[i], wtRAGLastChanges_List_storage.Count);
				}
			}
		}
		public void recListRAGLastChanges_List_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtRAGLastChanges_List widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLUserStudentLogRecordList getWtRAGLastChanges_ListList() {
			if (ssRAGLastChanges_ListListDoDataBind) {
				recListRAGLastChanges_List_onDataBinding(this, null);
			}

			return ssRAGLastChanges_ListList;
		}
		public void cnt_Container24_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container24_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container24_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container24_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container24)
		/// </summary>
		/// <returns>The Visible State of wt_Container24</returns>
		public bool cnt_Container24_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Table27_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Table27_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Table27_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top: 0px;padding:5px;margin-left: -14px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void wt_TableCell67_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell67_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell67_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntContainerHistoryIcon_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntContainerHistoryIcon_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntContainerHistoryIcon_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "position: relative;margin-top: 5px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntContainerHistoryIcon_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtContainerHistoryIcon)
		/// </summary>
		/// <returns>The Visible State of wtContainerHistoryIcon</returns>
		public bool cntContainerHistoryIcon_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If42_hasRun=false;
		bool if_wt_If42_evalResult;
		public bool if_wt_If42() {
			if (if_wt_If42_hasRun) {
				if_wt_If42_hasRun = false;
				return if_wt_If42_evalResult;
			}
			if_wt_If42_hasRun = true;
			if_wt_If42_evalResult = (getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssStudentLogType==ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("gVn2NYjbo0aRJrTPYP71sQ")).ssLogType);
			return if_wt_If42_evalResult;
		}

		public void cnt_Container175_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container175_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container175_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((WebControl) sender).CssClass = (((getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssLogRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("IndicatorRedCategoryFlag"):((((getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssLogRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("IndicatorAmberCategoryFlag"):((((getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssLogRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("IndicatorGreenCategoryFlag"):("IndicatorBlueCategoryFlag")))))) + " OSInline";
				if (!cnt_Container175_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container175)
		/// </summary>
		/// <returns>The Visible State of wt_Container175</returns>
		public bool cnt_Container175_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance109_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = RsseSpaceRichWidgets.DefaultValues.ReferenceWebFlow_RichWidgets_ReferenceWebBlock_Icon_Variables_ReferenceSerializableInputParameter_Name;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container117_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container117_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container117_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((WebControl) sender).CssClass = (((getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssLogRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("IndicatorRedCategoryCircle"):((((getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssLogRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("IndicatorAmberCategoryCircle"):((((getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssLogRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("IndicatorGreenCategoryCircle"):("IndicatorBlueCategoryCircle"))))));
				if (!cnt_Container117_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container117)
		/// </summary>
		/// <returns>The Visible State of wt_Container117</returns>
		public bool cnt_Container117_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = A0I7JoXlukyQYfFptIlWnQ) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression29() {
			return (((getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssDescriptionType== "Vocational")) ?(((Convert.ToString(getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssVocCompletedUnits) + " / ") +Convert.ToString(getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssVocRegisteredUnits))):((((getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssDescriptionType== "Math")) ?(((Convert.ToString(getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssMathCompletedUnits) + " / ") +Convert.ToString(getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssMathRegisteredUnits))):((((getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssDescriptionType== "English")) ?(((Convert.ToString(getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssEngCompletedUnits) + " / ") +Convert.ToString(getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssEngRegisteredUnits))):(((Convert.ToString(getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssMLWCompletedUnits) + " / ") +Convert.ToString(getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssMLWRegisteredUnits))))))));
		}
		public void cntContainerHistoryDescription_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntContainerHistoryDescription_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntContainerHistoryDescription_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntContainerHistoryDescription_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtContainerHistoryDescription)
		/// </summary>
		/// <returns>The Visible State of wtContainerHistoryDescription</returns>
		public bool cntContainerHistoryDescription_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container144_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container144_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container144_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container144_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container144)
		/// </summary>
		/// <returns>The Visible State of wt_Container144</returns>
		public bool cnt_Container144_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container98_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container98_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container98_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #6F6A6A;font-size: 15px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container98_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container98)
		/// </summary>
		/// <returns>The Visible State of wt_Container98</returns>
		public bool cnt_Container98_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = MNRqNSYxiE2K9iI2GGp_TA) Expression:
		///  LogInfo_List.Current.StudentLog.UserDescription
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression41() {
			return varLcLogInfo_List.CurrentRec.ssENStudentLog.ssUserDescription;
		}
		public void cnt_Container11_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container11_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container11_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #9C9898;font-size: 11px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container11_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container11)
		/// </summary>
		/// <returns>The Visible State of wt_Container11</returns>
		public bool cnt_Container11_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container39_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container39_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container39_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #9C9898;font-size: 11px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container39_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container39)
		/// </summary>
		/// <returns>The Visible State of wt_Container39</returns>
		public bool cnt_Container39_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = wRHkoTTNTEieJc4gA1zA8Q) Expression: "by " +
		///  RAGLastChanges_List.List.Current.User.Name + " on "
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression120() {
			return (("by " +getWtRAGLastChanges_ListList().CurrentRec.ssENUser.ssName) + " on ");
		}
		public void cnt_Container100_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container100_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container100_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #9C9898;font-size: 11px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container100_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container100)
		/// </summary>
		/// <returns>The Visible State of wt_Container100</returns>
		public bool cnt_Container100_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance14_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
				widget.inParamDate = Convert.ToDateTime(getWtRAGLastChanges_ListList().CurrentRec.ssENStudentLog.ssDateTime.ToString("yyyy-M-d"));
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If170_hasRun=false;
		bool if_wt_If170_evalResult;
		public bool if_wt_If170() {
			if (if_wt_If170_hasRun) {
				if_wt_If170_hasRun = false;
				return if_wt_If170_evalResult;
			}
			if_wt_If170_hasRun = true;
			if_wt_If170_evalResult = (varLcCurrentTab==2);
			return if_wt_If170_evalResult;
		}

		public void cntChangeStatusShortTime_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntChangeStatusShortTime_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntChangeStatusShortTime_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin:21px;color:#757575;font-size: 12px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntChangeStatusShortTime_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtChangeStatusShortTime)
		/// </summary>
		/// <returns>The Visible State of wtChangeStatusShortTime</returns>
		public bool cntChangeStatusShortTime_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container61_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container61_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container61_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "position:relative;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container61_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container61)
		/// </summary>
		/// <returns>The Visible State of wt_Container61</returns>
		public bool cnt_Container61_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntDescription_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntDescription_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntDescription_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top:0px;font-weight: bold;font-size:13px;width:270px;position:absolute ;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntDescription_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtDescription)
		/// </summary>
		/// <returns>The Visible State of wtDescription</returns>
		public bool cntDescription_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Text128_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Text128_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Text128_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size: 13px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container110_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container110_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container110_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-left: 320px; margin-right: 0px; width: 15px;border: solid 1px #FFF;position:relative;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((inParamShortTermRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("IndicatorRedCategoryFlag"):((((inParamShortTermRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("IndicatorAmberCategoryFlag"):((((inParamShortTermRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("IndicatorGreenCategoryFlag"):("IndicatorBlueCategoryFlag"))))));
				if (!cnt_Container110_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container110)
		/// </summary>
		/// <returns>The Visible State of wt_Container110</returns>
		public bool cnt_Container110_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance143_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = RsseSpaceRichWidgets.DefaultValues.ReferenceWebFlow_RichWidgets_ReferenceWebBlock_Icon_Variables_ReferenceSerializableInputParameter_Name;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntResponsible2_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntResponsible2_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntResponsible2_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntResponsible2_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtResponsible2)
		/// </summary>
		/// <returns>The Visible State of wtResponsible2</returns>
		public bool cntResponsible2_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container49_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container49_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container49_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container49_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container49)
		/// </summary>
		/// <returns>The Visible State of wt_Container49</returns>
		public bool cnt_Container49_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void selShortTermRAGStatusCombo_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				selShortTermRAGStatusCombo_setInlineAttributes(sender, e);
				if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

				if (Rt_wtShortTermRAGStatusCombo_reclist == null) {
					using(Transaction wtShortTermRAGStatusCombo_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
						string wtShortTermRAGStatusCombo_sql = "SELECT [ID], [LABEL], NULL, NULL FROM " + ENShortTermRAGStatusEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " WHERE [IS_ACTIVE] <> 0 OR [ID] = @Selection  ORDER BY [ORDER], [LABEL]";
						Command Rt_wtShortTermRAGStatusCombo_sqlCmd = wtShortTermRAGStatusCombo_trans.CreateCommand(wtShortTermRAGStatusCombo_sql);
						Rt_wtShortTermRAGStatusCombo_sqlCmd.CreateParameter("@Selection", ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermRAGStatus);
						Rt_wtShortTermRAGStatusCombo_sqlCmd.TransformParametersSyntax();
						Rt_wtShortTermRAGStatusCombo_reclist = new RLShortTermRAGStatusRecordList();
						Rt_wtShortTermRAGStatusCombo_reclist.Transaction = wtShortTermRAGStatusCombo_trans;
						Rt_wtShortTermRAGStatusCombo_reclist.AllOptimizedAttributes = new BitArray[1] {
							new BitArray(4, false)
						}
						;
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wtShortTermRAGStatusCombo_sqlCmd, Rt_wtShortTermRAGStatusCombo_reclist, "WebSelectWidget load operation");
						Rt_wtShortTermRAGStatusCombo_reclist = (RLShortTermRAGStatusRecordList) Rt_wtShortTermRAGStatusCombo_reclist.Duplicate();
					}
				}
				Rt_wtShortTermRAGStatusCombo_reclist.StartIteration();
				try {
					while (!Rt_wtShortTermRAGStatusCombo_reclist.Eof) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wtShortTermRAGStatusCombo_reclist.CurrentRec.ssENShortTermRAGStatus.ssLabel, Convert.ToString(Rt_wtShortTermRAGStatusCombo_reclist.CurrentRec.ssENShortTermRAGStatus.ssId)));
						if (ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermRAGStatus == Convert.ToInt32(Convert.ToString(Rt_wtShortTermRAGStatusCombo_reclist.CurrentRec.ssENShortTermRAGStatus.ssId))) {
							((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
						}
						Rt_wtShortTermRAGStatusCombo_reclist.Advance();
					}
				} finally {
					Rt_wtShortTermRAGStatusCombo_reclist.EndIteration();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string selShortTermRAGStatusCombo_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color:#000000";
					oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
					} else {
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void selShortTermRAGStatusCombo_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wtShortTermRAGStatusCombo.SpecialListVal = dropDown.SelectedValue.Substring(8);
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermRAGStatus = 0;
			}
			else {
				Rt_wtShortTermRAGStatusCombo.SpecialListVal = "";
				try {
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermRAGStatus = Convert.ToInt32(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtShortTermRAGStatusCombo)
		/// </summary>
		/// <returns>The Visible State of wtShortTermRAGStatusCombo</returns>
		public bool selShortTermRAGStatusCombo_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtShortTermRAGStatusCombo)
		/// </summary>
		/// <returns>The Enabled State of wtShortTermRAGStatusCombo</returns>
		public bool selShortTermRAGStatusCombo_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (selShortTermRAGStatusCombo)
		/// </summary>
		/// <returns>The Mandatory Value of selShortTermRAGStatusCombo</returns>
		public bool selShortTermRAGStatusCombo_isMandatory() {
			return false;
		}

		public void cnt_Container88_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container88_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container88_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inline;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container88_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container88)
		/// </summary>
		/// <returns>The Visible State of wt_Container88</returns>
		public bool cnt_Container88_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void inputwtShortTermRAGDescription_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				inputwtShortTermRAGDescription_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string inputwtShortTermRAGDescription_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-family: \'Source Sans Pro\', sans-serif; padding: 1px 6px;border: 1px solid #E8E8E8;color: #6F6A6A;font-size: 15px;";
					oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
					} else {
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtShortTermRAGDescription_input_value() {
			if (("" !=ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermDescription)) {
				return ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermDescription;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtShortTermRAGDescription");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermDescription;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtShortTermRAGDescription_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermDescription = ""; 
				} else {
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermDescription = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssShortTermDescription = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtShortTermRAGDescription)
		/// </summary>
		/// <returns>The Visible State of wtShortTermRAGDescription</returns>
		public bool inputwtShortTermRAGDescription_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtShortTermRAGDescription)
		/// </summary>
		/// <returns>The Enabled State of wtShortTermRAGDescription</returns>
		public bool inputwtShortTermRAGDescription_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtShortTermRAGDescription)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtShortTermRAGDescription</returns>
		public bool inputwtShortTermRAGDescription_isMandatory() {
			return false;
		}

		public void cntWarapperShortTermRAG_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntWarapperShortTermRAG_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntWarapperShortTermRAG_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntWarapperShortTermRAG_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtWarapperShortTermRAG)
		/// </summary>
		/// <returns>The Visible State of wtWarapperShortTermRAG</returns>
		public bool cntWarapperShortTermRAG_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container17_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container17_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container17_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((varLcCurrentSelectShortRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("RAGSelectRed"):("RAG_RedUnselect"));
				if (!cnt_Container17_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container17
		/// </summary>
		public void cnt_Container17_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeSelectedRAG(heContext
				, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId, true)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container17)
		/// </summary>
		/// <returns>The Visible State of wt_Container17</returns>
		public bool cnt_Container17_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance172_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container113_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container113_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container113_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = " width: px;cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((varLcCurrentSelectShortRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("RAGSelectAmber"):("RAG_AmberUnselect"));
				if (!cnt_Container113_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container113
		/// </summary>
		public void cnt_Container113_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeSelectedRAG(heContext
				, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId, true)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container113)
		/// </summary>
		/// <returns>The Visible State of wt_Container113</returns>
		public bool cnt_Container113_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance51_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = SZ+hQlFC9UGjOQcnxVZqgQ) Expression: "Amber"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression54() {
			return "Amber";
		}
		public void cnt_Container169_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container169_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container169_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = " width: px;cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((varLcCurrentSelectShortRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("RAGSelectGreen"):("RAG_GreenUnselect"));
				if (!cnt_Container169_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container169
		/// </summary>
		public void cnt_Container169_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeSelectedRAG(heContext
				, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId, true)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container169)
		/// </summary>
		/// <returns>The Visible State of wt_Container169</returns>
		public bool cnt_Container169_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance48_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = Pt5iKcegy0WaRuM1DUl_5g) Expression: "Green"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression33() {
			return "Green";
		}
		public void cnt_Container73_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container73_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container73_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "width:345px";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container73_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container73)
		/// </summary>
		/// <returns>The Visible State of wt_Container73</returns>
		public bool cnt_Container73_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container174_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container174_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container174_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container174_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container174)
		/// </summary>
		/// <returns>The Visible State of wt_Container174</returns>
		public bool cnt_Container174_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void Hunspell_webBlck_WebBlockInstance56_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink widget = (proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink) sender;
				widget.inParamTextInputId = this.FindControl("wtShortTermRAGDescription").ClientID;
				widget.inParamExtraStyle = "";
				widget.inParamInPopupWindow = true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container149_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container149_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container149_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container149_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container149)
		/// </summary>
		/// <returns>The Visible State of wt_Container149</returns>
		public bool cnt_Container149_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance160_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon widget = (ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon) sender;
				widget.inParamTextInputId = this.FindControl("wtShortTermRAGDescription").ClientID;
				widget.inParamAutoCompleteType = ENAutoCompleteBankTypeEntity.GetRecordByKey(ObjectKey.Parse("apsW5543pUe_DM6hVxuBdA")).ssId;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container34_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container34_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container34_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container34_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container34)
		/// </summary>
		/// <returns>The Visible State of wt_Container34</returns>
		public bool cnt_Container34_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container31_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container31_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container31_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container31_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container31
		/// </summary>
		public void cnt_Container31_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandSave(heContext
				, true)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container31)
		/// </summary>
		/// <returns>The Visible State of wt_Container31</returns>
		public bool cnt_Container31_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance121_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("jA5F7R9HAUWaOlj0y8fkDA")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntChangeStatusOverall_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntChangeStatusOverall_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntChangeStatusOverall_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin:21px;color:#757575;font-size: 12px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntChangeStatusOverall_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtChangeStatusOverall)
		/// </summary>
		/// <returns>The Visible State of wtChangeStatusOverall</returns>
		public bool cntChangeStatusOverall_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container154_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container154_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container154_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container154_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container154)
		/// </summary>
		/// <returns>The Visible State of wt_Container154</returns>
		public bool cnt_Container154_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntDescription3_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntDescription3_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntDescription3_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top:0px;font-weight: bold;width:250px;position:absolute;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntDescription3_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtDescription3)
		/// </summary>
		/// <returns>The Visible State of wtDescription3</returns>
		public bool cntDescription3_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Text70_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Text70_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Text70_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size: 13px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container119_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container119_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container119_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-left: 300px; margin-right: 0px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((inParamOverallRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("IndicatorRedCategoryCircle"):((((inParamOverallRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("IndicatorAmberCategoryCircle"):((((inParamOverallRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("IndicatorGreenCategoryCircle"):("IndicatorBlueCategoryCircle"))))));
				if (!cnt_Container119_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container119)
		/// </summary>
		/// <returns>The Visible State of wt_Container119</returns>
		public bool cnt_Container119_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = CK2ti2F4ZUeJkTtlv3DdpQ) Expression: OverallCompletedUnit + " / "
		///  + OverallTotalUnit
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression103() {
			return ((Convert.ToString(inParamOverallCompletedUnit) + " / ") +Convert.ToString(inParamOverallTotalUnit));
		}
		public void cntResponsible3_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntResponsible3_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntResponsible3_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntResponsible3_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtResponsible3)
		/// </summary>
		/// <returns>The Visible State of wtResponsible3</returns>
		public bool cntResponsible3_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container168_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container168_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container168_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inline;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container168_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container168)
		/// </summary>
		/// <returns>The Visible State of wt_Container168</returns>
		public bool cnt_Container168_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void inputwtOverallRAGDescription_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				inputwtOverallRAGDescription_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string inputwtOverallRAGDescription_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-family: \'Source Sans Pro\', sans-serif; padding: 1px 6px;border: 1px solid #E8E8E8;color: #6F6A6A;font-size: 15px;";
					oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
					} else {
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtOverallRAGDescription_input_value() {
			if (("" !=ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallDescription)) {
				return ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallDescription;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtOverallRAGDescription");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallDescription;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtOverallRAGDescription_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallDescription = ""; 
				} else {
					ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallDescription = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				ssEditRecordStudentCategoryRecord.ssENStudentCategoryRAG.ssOverallDescription = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtOverallRAGDescription)
		/// </summary>
		/// <returns>The Visible State of wtOverallRAGDescription</returns>
		public bool inputwtOverallRAGDescription_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtOverallRAGDescription)
		/// </summary>
		/// <returns>The Enabled State of wtOverallRAGDescription</returns>
		public bool inputwtOverallRAGDescription_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtOverallRAGDescription)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtOverallRAGDescription</returns>
		public bool inputwtOverallRAGDescription_isMandatory() {
			return false;
		}

		public void cntWarapperOverallRAG_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntWarapperOverallRAG_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntWarapperOverallRAG_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntWarapperOverallRAG_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtWarapperOverallRAG)
		/// </summary>
		/// <returns>The Visible State of wtWarapperOverallRAG</returns>
		public bool cntWarapperOverallRAG_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container99_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container99_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container99_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((varLcCurrentSelectOverallRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("RAGSelectRed"):("RAG_RedUnselect"));
				if (!cnt_Container99_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container99
		/// </summary>
		public void cnt_Container99_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeSelectedRAG(heContext
				, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId, false)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container99)
		/// </summary>
		/// <returns>The Visible State of wt_Container99</returns>
		public bool cnt_Container99_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance134_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container178_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container178_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container178_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((varLcCurrentSelectOverallRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("RAGSelectAmber"):("RAG_AmberUnselect"));
				if (!cnt_Container178_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container178
		/// </summary>
		public void cnt_Container178_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeSelectedRAG(heContext
				, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId, false)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container178)
		/// </summary>
		/// <returns>The Visible State of wt_Container178</returns>
		public bool cnt_Container178_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance58_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = wBp5Euo1p0irtr62QB7pkQ) Expression: "Amber"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression18() {
			return "Amber";
		}
		public void cnt_Container77_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container77_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container77_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((varLcCurrentSelectOverallRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("RAGSelectGreen"):("RAG_GreenUnselect"));
				if (!cnt_Container77_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container77
		/// </summary>
		public void cnt_Container77_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeSelectedRAG(heContext
				, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId, false)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container77)
		/// </summary>
		/// <returns>The Visible State of wt_Container77</returns>
		public bool cnt_Container77_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance45_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = +aGcBa7ZfES7j4ifQDUmIg) Expression: "Green"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression8() {
			return "Green";
		}
		public void cnt_Container57_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container57_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container57_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "width:345px";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container57_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container57)
		/// </summary>
		/// <returns>The Visible State of wt_Container57</returns>
		public bool cnt_Container57_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container141_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container141_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container141_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container141_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container141)
		/// </summary>
		/// <returns>The Visible State of wt_Container141</returns>
		public bool cnt_Container141_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void Hunspell_webBlck_WebBlockInstance23_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink widget = (proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink) sender;
				widget.inParamTextInputId = this.FindControl("wtOverallRAGDescription").ClientID;
				widget.inParamExtraStyle = "";
				widget.inParamInPopupWindow = true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container90_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container90_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container90_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container90_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container90)
		/// </summary>
		/// <returns>The Visible State of wt_Container90</returns>
		public bool cnt_Container90_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance5_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon widget = (ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon) sender;
				widget.inParamTextInputId = this.FindControl("wtOverallRAGDescription").ClientID;
				widget.inParamAutoCompleteType = ENAutoCompleteBankTypeEntity.GetRecordByKey(ObjectKey.Parse("apsW5543pUe_DM6hVxuBdA")).ssId;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container136_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container136_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container136_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container136_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container136)
		/// </summary>
		/// <returns>The Visible State of wt_Container136</returns>
		public bool cnt_Container136_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container64_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container64_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container64_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container64_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container64
		/// </summary>
		public void cnt_Container64_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandSave(heContext
				, false)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container64)
		/// </summary>
		/// <returns>The Visible State of wt_Container64</returns>
		public bool cnt_Container64_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance177_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("jA5F7R9HAUWaOlj0y8fkDA")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void wtEditRecordStudentCategory_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wtEditRecordStudentCategory_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wtEditRecordStudentCategory_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void wtEditRecordStudentCategory_onDataBindingDataSource(object sender, System.EventArgs e) {
		}
		public static class FuncCommandChangeSelectedRAG {
		}
		public static class FuncCommandChangeTab {
		}
		public static class FuncCommandSave {

			private static void datasetGetStaffCourseFavouritesWithOrWithoutUsersReadDB(ref RCStudent_GroupUserStaffCourseFavouriteRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENStaffCourseFavourite.Read(r, ref index);
				rec.ssENStudent_Group.Read(r, ref index);
				rec.ssENUser.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetStaffCourseFavouritesWithOrWithoutUsers" of Action "Save"
			/// </summary>
			public static RLStudent_GroupUserStaffCourseFavouriteRecordList datasetGetStaffCourseFavouritesWithOrWithoutUsers(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Single {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, ENUser.[ID] o13, NULL o14, NULL o15, NULL o16, ENUser.[EMAIL] o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22");
				fromBuilder.Append(" FROM (({Student_Group} ENStudent_Group Inner JOIN {StaffCourseFavourite} ENStaffCourseFavourite ON (ENStudent_Group.[GROUPID] = ENStaffCourseFavourite.[GROUPID]))  Inner JOIN {User} ENUser ON (ENStaffCourseFavourite.[USERID] = ENUser.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudent_Group.[STUDENTREFERENCE] = @qpstP) AND (ENStudent_Group.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudent_Group.[STUDENTREFERENCE] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudent_GroupUserStaffCourseFavouriteRecordList outParamList = new RLStudent_GroupUserStaffCourseFavouriteRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetStaffCourseFavouritesWithOrWithoutUsersReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[3];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					false, false, true, true, true, false, true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudent_GroupUserStaffCourseFavouriteRecordList _tmp = new RLStudent_GroupUserStaffCourseFavouriteRecordList();
					_tmp.AlternateReadDBMethod = datasetGetStaffCourseFavouritesWithOrWithoutUsersReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CategoryRAG.Save.GetStaffCourseFavouritesWithOrWithoutUsers.List");
						outParamList = (RLStudent_GroupUserStaffCourseFavouriteRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CategoryRAG.Save.GetStaffCourseFavouritesWithOrWithoutUsers.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudent_GroupUserStaffCourseFavouriteRecordList _tmp = new RLStudent_GroupUserStaffCourseFavouriteRecordList();
						_tmp.AlternateReadDBMethod = datasetGetStaffCourseFavouritesWithOrWithoutUsersReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CategoryRAG.Save.GetStaffCourseFavouritesWithOrWithoutUsers.List");
							outParamList = (RLStudent_GroupUserStaffCourseFavouriteRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CategoryRAG.Save.GetStaffCourseFavouritesWithOrWithoutUsers.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			/// <summary>
			/// Query Function "GetStudentCategoryRAGsByStudentReference" of Action "Save"
			/// </summary>
			public static RLStudentCategoryRAGRecordList datasetGetStudentCategoryRAGsByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP, string qpstP1) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("ENStudentCategoryRAG.[ID] o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12");
				fromBuilder.Append(" FROM {StudentCategoryRAG} ENStudentCategoryRAG");
				whereBuilder.Append(" WHERE ");
				if (qpstP1.Trim() != "") {
					whereBuilder.Append("((ENStudentCategoryRAG.[STUDENTREFERENCE] = @qpstP1) AND (ENStudentCategoryRAG.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP1", DbType.String, qpstP1);
				} else {
					whereBuilder.Append("(ENStudentCategoryRAG.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENStudentCategoryRAG.[CATEGORYID] = @qpinP) AND (ENStudentCategoryRAG.[CATEGORYID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENStudentCategoryRAG.[CATEGORYID] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentCategoryRAGRecordList outParamList = new RLStudentCategoryRAGRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					false, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentCategoryRAGRecordList _tmp = new RLStudentCategoryRAGRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CategoryRAG.Save.GetStudentCategoryRAGsByStudentReference.List");
						outParamList = (RLStudentCategoryRAGRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CategoryRAG.Save.GetStudentCategoryRAGsByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentCategoryRAGRecordList _tmp = new RLStudentCategoryRAGRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CategoryRAG.Save.GetStudentCategoryRAGsByStudentReference.List");
							outParamList = (RLStudentCategoryRAGRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CategoryRAG.Save.GetStudentCategoryRAGsByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}
		public static class FuncCommandEdit {
		}
		public static class FuncssPreparation {

			private static void QueryGetStudentLogByStudentIdAndCategoryIdReadDB(ref RCUserStudentLogRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENStudentLog.Read(r, ref index);
				rec.ssENUser.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetStudentLogByStudentIdAndCategoryId" of Action "Preparation"
			/// </summary>
			public static RLUserStudentLogRecordList QueryGetStudentLogByStudentIdAndCategoryId(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstStudentId, int qpinCategoryID) {
				// Query Iterations: Multiple {RAGLastChanges_List}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords == 1));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				sqlCmd.CreateParameter("@qpstStudentId", DbType.String, qpstStudentId);
				sqlCmd.CreateParameter("@qpinCategoryID", DbType.Int32, qpinCategoryID);
				string advSql = "SELECT  {StudentLog}.[ID], {StudentLog}.[STUDENTREFERENCE], {StudentLog}.[DATETIME], {StudentLog}.[EVENTBY], {StudentLog}.[DESCRIPTION], {StudentLog}.[USERDESCRIPTION], {StudentLog}.[LOGRAGID], {StudentLog}.[STUDENTLOGTYPE], {StudentLog}.[RAGCATEGORYID], {StudentLog}.[STUDENTRAG], {StudentLog}.[LASTWEEKPUNCTUALITY], {StudentLog}.[OVERALLPUNCTUALITY], {StudentLog}.[LASTWEEKATTENDANCE], {StudentLog}.[OVERALLATTENDANCE], {StudentLog}.[CAUSEOFCONCERNRAG], {StudentLog}.[CAUSEOFCONCERNNUMBER], {StudentLog}.[SAFEGUARDIDLIST], {StudentLog}.[SUPPORTIDLIST], {StudentLog}.[REWARDSGOLDNUMBER], {StudentLog}.[REWARDSGREENNUMBER], {StudentLog}.[VOCPERIODRAG], {StudentLog}.[VOCOVERALLRAG], {StudentLog}.[VOCCOMPLETEDUNITS], {StudentLog}.[VOCREGISTEREDUNITS], {StudentLog}.[MATHPERIODRAG], {StudentLog}.[MATHOVERALLRAG], {StudentLog}.[MATHCOMPLETEDUNITS], {StudentLog}.[MATHREGISTEREDUNITS], {StudentLog}.[ENGPERIODRAG], {StudentLog}.[ENGOVERALLRAG], {StudentLog}.[ENGCOMPLETEDUNITS], {StudentLog}.[ENGREGISTEREDUNITS], {StudentLog}.[MLWPERIODRAG], {StudentLog}.[MLWOVERALLRAG], {StudentLog}.[MLWCOMPLETEDUNITS], {StudentLog}.[MLWREGISTEREDUNITS], {StudentLog}.[REWARDTYPE], {StudentLog}.[DESCRIPTIONTYPE], {StudentLog}.[DISCIPLINARYTYPENUMBER], {StudentLog}.[DISCIPLINARYTYPE], {StudentLog}.[MLWCOMPETENCIEID], {StudentLog}.[MLWCOMPETENCIECURRENTLEVEL], {StudentLog}.[SESSIONID], {StudentLog}.[COMMUNICATIONID],  {User}.[ID], {User}.[NAME], {User}.[USERNAME], {User}.[PASSWO" +
				"RD], {User}.[EMAIL], {User}.[MOBILEPHONE], {User}.[EXTERNAL_ID], {User}.[CREATION_DATE], {User}.[LAST_LOGIN], {User}.[IS_ACTIVE] FROM  {StudentLog} LEFT JOIN  {User} ON  {StudentLog}.[EVENTBY]= {User}.[ID]   " +
				 "WHERE  {StudentLog}.[ID] NOT IN (  " +
				 "SELECT  {StudentLog}.Id FROM  {StudentLog} INNER JOIN  {StudentCategoryRAG} ON  {StudentLog}.[STUDENTREFERENCE] =  {StudentCategoryRAG}.[STUDENTREFERENCE] AND  {StudentLog}.[LOGRAGID] =  {StudentCategoryRAG}.[SHORTTERMRAGID] and  {StudentLog}.[USERDESCRIPTION] =  {StudentCategoryRAG}.[SHORTTERMDESCRIPTION] and  {StudentLog}.[STUDENTLOGTYPE] = 'PeriodCategoryRAG'  " +
				 "WHERE  {StudentLog}.[STUDENTREFERENCE] = @qpstStudentId AND  " +
				 "       {StudentLog}.[RAGCATEGORYID] = @qpinCategoryID   " +
				 "UNION                                                   " +
				 "SELECT  {StudentLog}.Id FROM  {StudentLog} INNER JOIN  {StudentCategoryRAG} ON  {StudentLog}.[STUDENTREFERENCE] =  {StudentCategoryRAG}.[STUDENTREFERENCE] AND  {StudentLog}.[LOGRAGID] =  {StudentCategoryRAG}.[OVERALLRAGID] and  {StudentLog}.[USERDESCRIPTION] =  {StudentCategoryRAG}.[OVERALLDESCRIPTION] and  {StudentLog}.[STUDENTLOGTYPE] = 'OverallCategoryRAG'  " +
				 "WHERE  {StudentLog}.[STUDENTREFERENCE] = @qpstStudentId AND  " +
				 "       {StudentLog}.[RAGCATEGORYID] = @qpinCategoryID   " +
				 "                                                    " +
				 ") AND  {StudentLog}.[STUDENTREFERENCE] = @qpstStudentId AND  " +
				 "       {StudentLog}.[RAGCATEGORYID] = @qpinCategoryID";
				string sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				AppUtils.Instance.CheckReadOnlyEntityReferences(advSql);
				sqlCmd.CommandText = sql;
				try {
					RLUserStudentLogRecordList outParamList = new RLUserStudentLogRecordList();
					if (multiplicity != IterationMultiplicity.Multiple) {
						outParamList.AlternateReadDBMethod = QueryGetStudentLogByStudentIdAndCategoryIdReadDB;
					}
					outParamList.Transaction = trans;
					BitArray[] opt = new BitArray[2];
					opt[0] = new BitArray(new bool[] {
						false, false, false, false, false, false, false, false, false, false, false
					}
					);
					opt[1] = new BitArray(new bool[] {
						false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
					}
					);
					outParamList.AllOptimizedAttributes = opt;
					if (multiplicity == IterationMultiplicity.Multiple) {
						RLUserStudentLogRecordList _tmp = new RLUserStudentLogRecordList();
						_tmp.AlternateReadDBMethod = QueryGetStudentLogByStudentIdAndCategoryIdReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						_tmp.MaxRecords = maxRecords;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CategoryRAG.Preparation.GetStudentLogByStudentIdAndCategoryId.List");
							outParamList = (RLUserStudentLogRecordList) _tmp.Duplicate();
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else if (multiplicity == IterationMultiplicity.Never) {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CategoryRAG.Preparation.GetStudentLogByStudentIdAndCategoryId.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							outParamList.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CategoryRAG.Preparation.GetStudentLogByStudentIdAndCategoryId.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				} catch (System.InvalidOperationException aqExcep) {
					if (aqExcep.Message.StartsWith("Command parameter[")) {
						throw new DataBaseException("Problems accessing parameters in advanced query GetStudentLogByStudentIdAndCategoryId in Preparation in PopUp_CategoryRAG in StaffView in CaseConferencing (SELECT {StudentLog}.*, {User}.* FROM {StudentLog} LEFT JOIN {User} ON {StudentLog}.[EventBy]={User}.[Id]   WHERE {StudentLog}.[Id] NOT IN (  SELECT {StudentLog}.Id FROM {StudentLog} INNER JOIN {StudentCategoryRAG} ON {StudentLog}.[StudentReference] = {StudentCategoryRAG}.[StudentReference] AND {StudentLog}.[LogRAGId] = {StudentCategoryRAG}.[ShortTermRAGId] and {StudentLog}.[UserDescription] = {StudentCategoryRAG}.[ShortTermDescription] and {StudentLog}.[StudentLogType] = 'PeriodCategoryRAG'  WHERE {StudentLog}.[StudentReference] = @StudentId AND        {StudentLog}.[RAGCategoryId] = @CategoryID   UNION                                                   SELECT {StudentLog}.Id FROM {StudentLog} INNER JOIN {StudentCategoryRAG} ON {StudentLog}.[StudentReference] = {StudentCategoryRAG}.[StudentReference] AND {StudentLog}.[LogRAGId] = {StudentCategoryRAG}.[OverallRAGId] and {StudentLog}.[UserDescription] = {StudentCategoryRAG}.[OverallDescription] and {StudentLog}.[StudentLogType] = 'OverallC ...): " + aqExcep.Message);
					}
					throw new DataBaseException("Error in advanced query GetStudentLogByStudentIdAndCategoryId in Preparation in PopUp_CategoryRAG in StaffView in CaseConferencing (SELECT {StudentLog}.*, {User}.* FROM {StudentLog} LEFT JOIN {User} ON {StudentLog}.[EventBy]={User}.[Id]   WHERE {StudentLog}.[Id] NOT IN (  SELECT {StudentLog}.Id FROM {StudentLog} INNER JOIN {StudentCategoryRAG} ON {StudentLog}.[StudentReference] = {StudentCategoryRAG}.[StudentReference] AND {StudentLog}.[LogRAGId] = {StudentCategoryRAG}.[ShortTermRAGId] and {StudentLog}.[UserDescription] = {StudentCategoryRAG}.[ShortTermDescription] and {StudentLog}.[StudentLogType] = 'PeriodCategoryRAG'  WHERE {StudentLog}.[StudentReference] = @StudentId AND        {StudentLog}.[RAGCategoryId] = @CategoryID   UNION                                                   SELECT {StudentLog}.Id FROM {StudentLog} INNER JOIN {StudentCategoryRAG} ON {StudentLog}.[StudentReference] = {StudentCategoryRAG}.[StudentReference] AND {StudentLog}.[LogRAGId] = {StudentCategoryRAG}.[OverallRAGId] and {StudentLog}.[UserDescription] = {StudentCategoryRAG}.[OverallDescription] and {StudentLog}.[StudentLogType] = 'OverallC ...): " + aqExcep.Message);
				} catch (Exception aqExcep) {
					throw new DataBaseException("Error in advanced query GetStudentLogByStudentIdAndCategoryId in Preparation in PopUp_CategoryRAG in StaffView in CaseConferencing (SELECT {StudentLog}.*, {User}.* FROM {StudentLog} LEFT JOIN {User} ON {StudentLog}.[EventBy]={User}.[Id]   WHERE {StudentLog}.[Id] NOT IN (  SELECT {StudentLog}.Id FROM {StudentLog} INNER JOIN {StudentCategoryRAG} ON {StudentLog}.[StudentReference] = {StudentCategoryRAG}.[StudentReference] AND {StudentLog}.[LogRAGId] = {StudentCategoryRAG}.[ShortTermRAGId] and {StudentLog}.[UserDescription] = {StudentCategoryRAG}.[ShortTermDescription] and {StudentLog}.[StudentLogType] = 'PeriodCategoryRAG'  WHERE {StudentLog}.[StudentReference] = @StudentId AND        {StudentLog}.[RAGCategoryId] = @CategoryID   UNION                                                   SELECT {StudentLog}.Id FROM {StudentLog} INNER JOIN {StudentCategoryRAG} ON {StudentLog}.[StudentReference] = {StudentCategoryRAG}.[StudentReference] AND {StudentLog}.[LogRAGId] = {StudentCategoryRAG}.[OverallRAGId] and {StudentLog}.[UserDescription] = {StudentCategoryRAG}.[OverallDescription] and {StudentLog}.[StudentLogType] = 'OverallC ...): " + aqExcep.Message);
				}
			}

			private static void datasetGetStudentCategoryRAGByStudentReadDB(ref RCCategoryStudentUserUserRAGStatusStudentCategoryRAGRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENCategory.Read(r, ref index);
				rec.ssENRAGStatus.Read(r, ref index);
				rec.ssENStudent.Read(r, ref index);
				rec.ssENStudentCategoryRAG.Read(r, ref index);
				rec.ssENUser.Read(r, ref index);
				rec.ssENUser_2.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetStudentCategoryRAGByStudent" of Action "Preparation"
			/// </summary>
			public static RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList datasetGetStudentCategoryRAGByStudent(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP, string qpstP1) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27, NULL o28, NULL o29, NULL o30, NULL o31, NULL o32, NULL o33, NULL o34, NULL o35, NULL o36, NULL o37, ENStudentCategoryRAG.[ID] o38, NULL o39, NULL o40, ENStudentCategoryRAG.[SHORTTERMRAGID] o41, ENStudentCategoryRAG.[SHORTTERMDESCRIPTION] o42, ENStudentCategoryRAG.[SHORTTERMUPDATEDBY] o43, ENStudentCategoryRAG.[SHORTTERMUPDATEDAT] o44, ENStudentCategoryRAG.[OVERALLRAGID] o45, ENStudentCategoryRAG.[OVERALLDESCRIPTION] o46, ENStudentCategoryRAG.[OVERALLUPDATEDBY] o47, ENStudentCategoryRAG.[OVERALLUPDATEDAT] o48, ENStudentCategoryRAG.[SHORTTERMRAGSTATUS] o49, NULL o50, ENUser.[NAME] o51, NULL o52, NULL o53, NULL o54, NULL o55, NULL o56, NULL o57, NULL o58, NULL o59, NULL o60, ENUser_2.[NAME] o61, NULL o62, NULL o63, NULL o64, NULL o65, NULL o66, NULL o67, NULL o68, NULL o69");
				fromBuilder.Append(" FROM ((((({Category} ENCategory Inner JOIN {StudentCategoryRAG} ENStudentCategoryRAG ON (ENStudentCategoryRAG.[CATEGORYID] = ENCategory.[ID]))  Inner JOIN {Student} ENStudent ON (ENStudentCategoryRAG.[STUDENTREFERENCE] = ENStudent.[STUDENTREFERENCE]))  Left JOIN {User} ENUser ON (ENStudentCategoryRAG.[SHORTTERMUPDATEDBY] = ENUser.[ID]))  Left JOIN {RAGStatus} ENRAGStatus ON (ENStudentCategoryRAG.[SHORTTERMRAGID] = ENRAGStatus.[ID]))  Left JOIN {User} ENUser_2 ON (ENStudentCategoryRAG.[OVERALLUPDATEDBY] = ENUser_2.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP1.Trim() != "") {
					whereBuilder.Append("((ENStudentCategoryRAG.[STUDENTREFERENCE] = @qpstP1) AND (ENStudentCategoryRAG.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP1", DbType.String, qpstP1);
				} else {
					whereBuilder.Append("(ENStudentCategoryRAG.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENStudentCategoryRAG.[CATEGORYID] = @qpinP) AND (ENStudentCategoryRAG.[CATEGORYID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENStudentCategoryRAG.[CATEGORYID] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList outParamList = new RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetStudentCategoryRAGByStudentReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[6];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					false, true, false, true, true, true, true, true, true, true, true
				}
				);
				opt[3] = new BitArray(new bool[] {
					false, true, false, true, true, true, true, true, true, true, true
				}
				);
				opt[4] = new BitArray(new bool[] {
					true, true, true, true, true
				}
				);
				opt[5] = new BitArray(new bool[] {
					false, true, true, false, false, false, false, false, false, false, false, false
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList _tmp = new RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList();
					_tmp.AlternateReadDBMethod = datasetGetStudentCategoryRAGByStudentReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CategoryRAG.Preparation.GetStudentCategoryRAGByStudent.List");
						outParamList = (RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CategoryRAG.Preparation.GetStudentCategoryRAGByStudent.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList _tmp = new RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList();
						_tmp.AlternateReadDBMethod = datasetGetStudentCategoryRAGByStudentReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CategoryRAG.Preparation.GetStudentCategoryRAGByStudent.List");
							outParamList = (RLCategoryStudentUserUserRAGStatusStudentCategoryRAGRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CategoryRAG.Preparation.GetStudentCategoryRAGByStudent.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}

		public override Control FindControl(string id) {
			if (id == "wtTabWrapper") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtTabWrapper");
			}
			if (id == "wt_Container80") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container80");
			}
			if (id == "wt_Table131") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Table131");
			}
			if (id == "wt_TableRow66") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableRow66");
			}
			if (id == "wt_TableCell93") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableCell93");
			}
			if (id == "wt_Container94") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container94");
			}
			if (id == "RichWidgets_wt_WebBlockInstance129") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance129");
			}
			if (id == "wt_InlineExpression68") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_InlineExpression68");
			}
			if (id == "wt_Text124") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Text124");
			}
			if (id == "wt_Container22") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container22");
			}
			if (id == "wt_Table43") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Table43");
			}
			if (id == "wt_TableRow52") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableRow52");
			}
			if (id == "wt_TableCell69") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableCell69");
			}
			if (id == "wt_Container102") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container102");
			}
			if (id == "RichWidgets_wt_WebBlockInstance139") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance139");
			}
			if (id == "wt_Text79") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Text79");
			}
			if (id == "wt_Container156") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container156");
			}
			if (id == "wt_Table15") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Table15");
			}
			if (id == "wt_TableRow44") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableRow44");
			}
			if (id == "wt_TableCell46") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableCell46");
			}
			if (id == "wt_Container161") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container161");
			}
			if (id == "RichWidgets_wt_WebBlockInstance36") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance36");
			}
			if (id == "wt_Text65") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Text65");
			}
			if (id == "wtWrapperContent") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtWrapperContent");
			}
			if (id == "wt_If62") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_If62");
			}
			if (id == "wt_If62T") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_If62T");
			}
			if (id == "wtOverview") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtOverview");
			}
			if (id == "wtOverviewContain") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtOverviewContain");
			}
			if (id == "wtOverviewShortTerm") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtOverviewShortTerm");
			}
			if (id == "wtOverviewIconShortTerm") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtOverviewIconShortTerm");
			}
			if (id == "wt_Container89") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container89");
			}
			if (id == "RichWidgets_wt_WebBlockInstance28") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance28");
			}
			if (id == "wtOverviewDescriptionShortTerm2") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtOverviewDescriptionShortTerm2");
			}
			if (id == "wt_Container10") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container10");
			}
			if (id == "wt_InlineExpression106") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_InlineExpression106");
			}
			if (id == "wt_Container72") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container72");
			}
			if (id == "wt_Container162") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container162");
			}
			if (id == "wt_InlineExpression37") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_InlineExpression37");
			}
			if (id == "wt_Container2") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container2");
			}
			if (id == "RichWidgets_wt_WebBlockInstance81") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance81");
			}
			if (id == "wtOverviewInfoShortTerm") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtOverviewInfoShortTerm");
			}
			if (id == "wt_If20") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_If20");
			}
			if (id == "wt_If20T") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_If20T");
			}
			if (id == "wt_InlineExpression132") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_InlineExpression132");
			}
			if (id == "wt_Container26") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container26");
			}
			if (id == "wt_WebBlockInstance60") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_WebBlockInstance60");
			}
			if (id == "wt_If20F") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_If20F");
			}
			if (id == "wtOverviewOverwall") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtOverviewOverwall");
			}
			if (id == "wtOverviewIconOverwall") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtOverviewIconOverwall");
			}
			if (id == "wt_Container16") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container16");
			}
			if (id == "wt_InlineExpression9") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_InlineExpression9");
			}
			if (id == "wtOverviewDescriptionOverwall") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtOverviewDescriptionOverwall");
			}
			if (id == "wt_Container118") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container118");
			}
			if (id == "wt_Container116") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container116");
			}
			if (id == "wt_InlineExpression123") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_InlineExpression123");
			}
			if (id == "wt_Container153") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container153");
			}
			if (id == "RichWidgets_wt_WebBlockInstance167") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance167");
			}
			if (id == "wtOverviewInfoOverwall") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtOverviewInfoOverwall");
			}
			if (id == "wt_If165") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_If165");
			}
			if (id == "wt_If165T") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_If165T");
			}
			if (id == "wt_InlineExpression21") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_InlineExpression21");
			}
			if (id == "wt_If165F") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_If165F");
			}
			if (id == "wt_Container111") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container111");
			}
			if (id == "wt_WebBlockInstance74") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_WebBlockInstance74");
			}
			if (id == "wtHistory") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtHistory");
			}
			if (id == "wtCurrentHistory") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtCurrentHistory");
			}
			if (id == "wtContainerHistory") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtContainerHistory");
			}
			if (id == "wtContainerHistoryTitle") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtContainerHistoryTitle");
			}
			if (id == "wt_Text6") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Text6");
			}
			if (id == "wtRAGLastChanges_List") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtRAGLastChanges_List");
			}
			if (id == "wt_If62F") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_If62F");
			}
			if (id == "wt_If170") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_If170");
			}
			if (id == "wt_If170T") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_If170T");
			}
			if (id == "wtChangeStatusShortTime") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtChangeStatusShortTime");
			}
			if (id == "wt_Container61") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container61");
			}
			if (id == "wtDescription") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtDescription");
			}
			if (id == "wt_Text128") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Text128");
			}
			if (id == "wt_Container110") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container110");
			}
			if (id == "RichWidgets_wt_WebBlockInstance143") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance143");
			}
			if (id == "wtResponsible2") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtResponsible2");
			}
			if (id == "wt_Container49") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container49");
			}
			if (id == "wtShortTermRAGStatusCombo") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtShortTermRAGStatusCombo");
			}
			if (id == "wt_Container88") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container88");
			}
			if (id == "wtShortTermRAGDescription") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtShortTermRAGDescription");
			}
			if (id == "wtShortTermRAGDescriptionAjaxRfrsh") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtShortTermRAGDescriptionAjaxRfrsh");
			}
			if (id == "wtWarapperShortTermRAG") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtWarapperShortTermRAG");
			}
			if (id == "wt_Table142") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Table142");
			}
			if (id == "wt_TableRow78") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableRow78");
			}
			if (id == "wt_TableCell50") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableCell50");
			}
			if (id == "wt_Container17") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container17");
			}
			if (id == "RichWidgets_wt_WebBlockInstance172") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance172");
			}
			if (id == "wt_Text97") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Text97");
			}
			if (id == "wt_TableRow130") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableRow130");
			}
			if (id == "wt_TableCell145") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableCell145");
			}
			if (id == "wt_Container113") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container113");
			}
			if (id == "RichWidgets_wt_WebBlockInstance51") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance51");
			}
			if (id == "wt_InlineExpression54") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_InlineExpression54");
			}
			if (id == "wt_TableRow158") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableRow158");
			}
			if (id == "wt_TableCell87") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableCell87");
			}
			if (id == "wt_Container169") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container169");
			}
			if (id == "RichWidgets_wt_WebBlockInstance48") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance48");
			}
			if (id == "wt_InlineExpression33") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_InlineExpression33");
			}
			if (id == "wt_Container73") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container73");
			}
			if (id == "wt_Table151") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Table151");
			}
			if (id == "wt_TableRow148") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableRow148");
			}
			if (id == "wt_TableCell101") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableCell101");
			}
			if (id == "wt_Container174") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container174");
			}
			if (id == "Hunspell_wt_WebBlockInstance56") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("Hunspell_wt_WebBlockInstance56");
			}
			if (id == "wt_Container149") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container149");
			}
			if (id == "wt_WebBlockInstance160") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_WebBlockInstance160");
			}
			if (id == "wt_TableCell86") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableCell86");
			}
			if (id == "wt_Container34") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container34");
			}
			if (id == "wt_Container31") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container31");
			}
			if (id == "RichWidgets_wt_WebBlockInstance121") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance121");
			}
			if (id == "wt_Text104") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Text104");
			}
			if (id == "wt_If170F") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_If170F");
			}
			if (id == "wtChangeStatusOverall") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtChangeStatusOverall");
			}
			if (id == "wt_Container154") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container154");
			}
			if (id == "wtDescription3") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtDescription3");
			}
			if (id == "wt_Text70") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Text70");
			}
			if (id == "wt_Container119") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container119");
			}
			if (id == "wt_InlineExpression103") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_InlineExpression103");
			}
			if (id == "wtResponsible3") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtResponsible3");
			}
			if (id == "wt_Container168") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container168");
			}
			if (id == "wtOverallRAGDescription") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtOverallRAGDescription");
			}
			if (id == "wtOverallRAGDescriptionAjaxRfrsh") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtOverallRAGDescriptionAjaxRfrsh");
			}
			if (id == "wtWarapperOverallRAG") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtWarapperOverallRAG");
			}
			if (id == "wt_Table125") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Table125");
			}
			if (id == "wt_TableRow92") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableRow92");
			}
			if (id == "wt_TableCell108") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableCell108");
			}
			if (id == "wt_Container99") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container99");
			}
			if (id == "RichWidgets_wt_WebBlockInstance134") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance134");
			}
			if (id == "wt_Text150") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Text150");
			}
			if (id == "wt_TableRow4") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableRow4");
			}
			if (id == "wt_TableCell91") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableCell91");
			}
			if (id == "wt_Container178") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container178");
			}
			if (id == "RichWidgets_wt_WebBlockInstance58") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance58");
			}
			if (id == "wt_InlineExpression18") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_InlineExpression18");
			}
			if (id == "wt_TableRow1") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableRow1");
			}
			if (id == "wt_TableCell155") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableCell155");
			}
			if (id == "wt_Container77") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container77");
			}
			if (id == "RichWidgets_wt_WebBlockInstance45") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance45");
			}
			if (id == "wt_InlineExpression8") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_InlineExpression8");
			}
			if (id == "wt_Container57") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container57");
			}
			if (id == "wt_Table122") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Table122");
			}
			if (id == "wt_TableRow114") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableRow114");
			}
			if (id == "wt_TableCell13") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableCell13");
			}
			if (id == "wt_Container141") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container141");
			}
			if (id == "Hunspell_wt_WebBlockInstance23") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("Hunspell_wt_WebBlockInstance23");
			}
			if (id == "wt_Container90") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container90");
			}
			if (id == "wt_WebBlockInstance5") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_WebBlockInstance5");
			}
			if (id == "wt_TableCell140") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_TableCell140");
			}
			if (id == "wt_Container136") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container136");
			}
			if (id == "wt_Container64") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Container64");
			}
			if (id == "RichWidgets_wt_WebBlockInstance177") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance177");
			}
			if (id == "wt_Text59") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wt_Text59");
			}
			if (id == "wtEditRecordStudentCategory") {
				return wtPopUpCategoryRag.wtPopupContent.FindControl("wtEditRecordStudentCategory");
			}
			return base.FindControl(id);
		}
		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			_isRendering = true;
			Page_Load(null, null); _isRendering = false;
			this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}
		public override string WebBlockIdentifier {
			get {
				return "CaseConferencing.KZ_Gi4cf8cEWCxlQkavryRw";
			}
		}
	}

}
