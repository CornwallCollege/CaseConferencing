/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Web.SessionState;
using System.IO;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Runtime.Serialization;
using System.Web.Caching;
using System.Text;


namespace ssCaseConferencing.Flows.FlowStaffView {
	public abstract class WBlkPopUp_CauseOfConcern: OSUserControl, IWebScreen, INegotiateTabIndexes, IAjaxNotifyEvent {

		/// <summary>
		/// Delegate Definitions
		/// </summary>
		/// <summary>
		/// Custom Events Definitions
		/// </summary>
		/// <summary>
		/// Parameters and Local Variables Definitions
		/// </summary>
		/// <summary>
		/// Screen Input Parameter inParamStudentReference. Description:
		/// </summary>
		public string inParamStudentReference = "";
		/// <summary>
		/// Screen Input Parameter inParamRAGStatusId. Description:
		/// </summary>
		public string inParamRAGStatusId = "";
		/// <summary>
		/// Screen Input Parameter inParamVisible. Description:
		/// </summary>
		public bool inParamVisible = false;
		/// <summary>
		/// Screen Input Parameter inParamtop. Description:
		/// </summary>
		public int inParamtop = 0;
		/// <summary>
		/// Screen Input Parameter inParamleft. Description:
		/// </summary>
		public int inParamleft = 0;
		/// <summary>
		/// Variable <code>varLcCurrentTab</code> that represents the Service Studio local variable
		///  <code>CurrentTab</code> <p>Description: </p>
		/// </summary>
		int varLcCurrentTab = 1;

		/// <summary>
		/// Variable <code>varLcCurrentSelectRAG</code> that represents the Service Studio local variable
		///  <code>CurrentSelectRAG</code> <p>Description: </p>
		/// </summary>
		string varLcCurrentSelectRAG = ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId;

		/// <summary>
		/// Variable <code>varLcCauseOfConcern_Clear</code> that represents the Service Studio local variable
		///  <code>CauseOfConcern_Clear</code> <p>Description: </p>
		/// </summary>
		RCCauseOfConcernRecord varLcCauseOfConcern_Clear = new RCCauseOfConcernRecord(null);

		/// <summary>
		/// Variable <code>varLcLogCauseOfConcern_List</code> that represents the Service Studio local variable
		///  <code>LogCauseOfConcern_List</code> <p>Description: </p>
		/// </summary>
		RLStudentUserStudentLogStudentLogTypeRecordList varLcLogCauseOfConcern_List = new RLStudentUserStudentLogStudentLogTypeRecordList();

		/// <summary>
		/// Variable <code>varLcEdit</code> that represents the Service Studio local variable <code>Edit</code>
		///  <p>Description: </p>
		/// </summary>
		bool varLcEdit = false;

		/// <summary>
		/// Variable <code>varLcCurrentRAG</code> that represents the Service Studio local variable
		///  <code>CurrentRAG</code> <p>Description: </p>
		/// </summary>
		string varLcCurrentRAG = "";

		/// <summary>
		/// Variable wtPopUpCauseOfConcern
		/// </summary>
		protected ssCaseConferencing.Flows.FlowCommon.WBlkPopUp wtPopUpCauseOfConcern;
		protected OutSystems.HubEdition.WebWidgets.Container wtTabWrapper;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container98;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container55;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container18;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container97;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperContent;
		/// <summary>
		/// Variable "True" if the Widget wt_If33
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If33T;

		/// <summary>
		/// Variable "True" if the Widget wt_If33
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If33F;
		protected OutSystems.HubEdition.WebWidgets.Container wtHistory;
		protected OutSystems.HubEdition.WebWidgets.Container wtCurrentRAG2;
		private RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList _ssListCausesOfConcernList = new RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList();
		public RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList ssListCausesOfConcernList {
			get {
				return _ssListCausesOfConcernList; 
			}
			set {
				_ssListCausesOfConcernList = value;
				wtListCausesOfConcern.DataSource = value;
				ssListCausesOfConcernListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtListCausesOfConcern;
		public ArrayList wtListCausesOfConcern_storage = new ArrayList();
		protected bool ssListCausesOfConcernList_notUsedYet = true;
		protected bool ssListCausesOfConcernListDoDataBind;
		protected bool ssListCausesOfConcernListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperList;
		protected OutSystems.HubEdition.WebWidgets.Container wtCurrentRAGSTatus2;
		/// <summary>
		/// Variable "True" if the Widget wt_If88
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If88T;

		/// <summary>
		/// Variable "True" if the Widget wt_If88
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If88F;
		/// <summary>
		/// Variable "True" if the Widget wt_If130
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If130T;

		/// <summary>
		/// Variable "True" if the Widget wt_If130
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If130F;
		/// <summary>
		/// Variable "True" if the Widget wt_If51
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If51T;

		/// <summary>
		/// Variable "True" if the Widget wt_If51
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If51F;
		/// <summary>
		/// Variable "True" if the Widget wt_If5
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If5T;

		/// <summary>
		/// Variable "True" if the Widget wt_If5
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If5F;
		protected OutSystems.HubEdition.WebWidgets.Container wtDescriptionWrapper2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container37;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container87;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container126;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container52;
		protected OutSystems.HubEdition.WebWidgets.Container wtLogCauseforConcern;
		protected OutSystems.HubEdition.WebWidgets.Container wtCurrentHistory;
		protected OutSystems.HubEdition.WebWidgets.Container wtContainerHistory;
		protected OutSystems.HubEdition.WebWidgets.Container wtContainerHistoryTitle;
		private RLStudentUserStudentLogStudentLogTypeRecordList _ssLogCauseOfConcernList = new RLStudentUserStudentLogStudentLogTypeRecordList();
		public RLStudentUserStudentLogStudentLogTypeRecordList ssLogCauseOfConcernList {
			get {
				return _ssLogCauseOfConcernList; 
			}
			set {
				_ssLogCauseOfConcernList = value;
				wtLogCauseOfConcern.DataSource = value;
				ssLogCauseOfConcernListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtLogCauseOfConcern;
		public ArrayList wtLogCauseOfConcern_storage = new ArrayList();
		protected bool ssLogCauseOfConcernList_notUsedYet = true;
		protected bool ssLogCauseOfConcernListDoDataBind;
		protected bool ssLogCauseOfConcernListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container156;
		protected OutSystems.HubEdition.WebWidgets.Container wtContainerHistoryIcon;
		/// <summary>
		/// Variable "True" if the Widget wt_If113
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If113T;

		/// <summary>
		/// Variable "True" if the Widget wt_If113
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If113F;
		/// <summary>
		/// Variable "True" if the Widget wt_If133
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If133T;

		/// <summary>
		/// Variable "True" if the Widget wt_If133
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If133F;
		/// <summary>
		/// Variable "True" if the Widget wt_If111
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If111T;

		/// <summary>
		/// Variable "True" if the Widget wt_If111
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If111F;
		/// <summary>
		/// Variable "True" if the Widget wt_If140
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If140T;

		/// <summary>
		/// Variable "True" if the Widget wt_If140
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If140F;
		protected OutSystems.HubEdition.WebWidgets.Container wtContainerHistoryDescription;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container89;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container11;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container134;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container141;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container136;
		/// <summary>
		/// Variable "True" if the Widget wt_If138
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If138T;

		/// <summary>
		/// Variable "True" if the Widget wt_If138
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If138F;
		protected OutSystems.HubEdition.WebWidgets.Container wtChangeStatus;
		protected OutSystems.HubEdition.WebWidgets.Container wtOverview2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container64;
		protected OutSystems.HubEdition.WebWidgets.Container wtReason;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container10;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container124;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container83;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_ComboBox22ValidatorRequired;
		protected SelectRtWidget Rt_wt_ComboBox22 = new SelectRtWidget();
		RLCauseOfConcernReasonRecordList Rt_wt_ComboBox22_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container81;
		protected OutSystems.HubEdition.WebWidgets.Container wtDescription;
		protected OutSystems.HubEdition.WebWidgets.Container wtResponsible2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container95;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtEditRecordCauseConcernInputValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtEditRecordCauseConcernInputValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wtWarapperSelectRAG;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container57;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container84;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container94;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container68;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container29;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container65;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container153;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container125;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container66;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container49;
		/// <summary>
		/// Variable "True" if the Widget wt_If142
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If142T;

		/// <summary>
		/// Variable "True" if the Widget wt_If142
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If142F;
		/// <summary>
		/// Auxiliar Edit Record record variable
		/// </summary>
		RCCauseOfConcernRecord ssEditRecordCauseOfConcernRecord = new RCCauseOfConcernRecord(null);

		/// <summary>
		/// Edit Record Valid Runtime Property
		/// </summary>
		public bool wtEditRecordCauseOfConcern_Valid() {
			bool res = true;
			return res;
		}

		private bool _isRendering = false;
		public HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();
		public string InstanceID;
		public string RuntimeID= "";
		RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList queryResGetCausesForConcernByStudent_outParamList = new RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList();
		int queryResGetCausesForConcernByStudent_outParamCount = 0;
		RLCauseOfConcernReasonRecordList queryResGetCauseOfConcernReasons_outParamList = new RLCauseOfConcernReasonRecordList();
		int queryResGetCauseOfConcernReasons_outParamCount = 0;
		RLStudentUserStudentLogStudentLogTypeRecordList queryResGetStudentLogsByStudentReference_outParamList = new RLStudentUserStudentLogStudentLogTypeRecordList();
		int queryResGetStudentLogsByStudentReference_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// Query datasetGetCausesForConcernByStudent
			int datasetGetCausesForConcernByStudent_maxRecords = Math.Max(wtListCausesOfConcern.StartIndex + wtListCausesOfConcern.LineCount + 1, 0);
			queryResGetCausesForConcernByStudent_outParamList = FuncssPreparation.datasetGetCausesForConcernByStudent(heContext, datasetGetCausesForConcernByStudent_maxRecords, IterationMultiplicity.Multiple, out queryResGetCausesForConcernByStudent_outParamCount, inParamStudentReference
			);
			// Query datasetGetCauseOfConcernReasons
			int datasetGetCauseOfConcernReasons_maxRecords = 0;
			queryResGetCauseOfConcernReasons_outParamList = FuncssPreparation.datasetGetCauseOfConcernReasons(heContext, datasetGetCauseOfConcernReasons_maxRecords, IterationMultiplicity.Multiple, out queryResGetCauseOfConcernReasons_outParamCount);
			// Query datasetGetStudentLogsByStudentReference
			int datasetGetStudentLogsByStudentReference_maxRecords = Math.Max(wtLogCauseOfConcern.StartIndex + wtLogCauseOfConcern.LineCount + 1, 0);
			queryResGetStudentLogsByStudentReference_outParamList = FuncssPreparation.datasetGetStudentLogsByStudentReference(heContext, datasetGetStudentLogsByStudentReference_maxRecords, IterationMultiplicity.Multiple, out queryResGetStudentLogsByStudentReference_outParamCount, inParamStudentReference
			);
			ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern = ((ENCauseOfConcernEntityRecord) varLcCauseOfConcern_Clear); // EditRecordCauseOfConcern.Record.CauseOfConcern = CauseOfConcern_Clear
			varLcCurrentTab = ((queryResGetCausesForConcernByStudent_outParamList.Empty) ?(2):(1)); // CurrentTab = internalIf
			varLcLogCauseOfConcern_List = queryResGetStudentLogsByStudentReference_outParamList; // LogCauseOfConcern_List = GetStudentLogsByStudentReference.List
			varLcCurrentSelectRAG = (((inParamRAGStatusId==BuiltInFunction.NullTextIdentifier())) ?(ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId):(inParamRAGStatusId)); // CurrentSelectRAG = internalIf
		}
		static WBlkPopUp_CauseOfConcern() {
		}
		override protected void OnInit(EventArgs e) {
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wtPopUpCauseOfConcern = (ssCaseConferencing.Flows.FlowCommon.WBlkPopUp) FindControl("wtPopUpCauseOfConcern");
			wtTabWrapper = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtTabWrapper");
			wt_Container98 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container98");
			wt_Container55 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container55");
			wt_Container18 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container18");
			wt_Container97 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container97");
			wtWrapperContent = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtWrapperContent");
			wtHistory = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtHistory");
			wtCurrentRAG2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtCurrentRAG2");
			wtListCausesOfConcern = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtListCausesOfConcern");
			wtListCausesOfConcern.StartIndexExpression = () => 0;
			wtListCausesOfConcern.LineCountExpression = () => 5;
			wtLogCauseforConcern = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtLogCauseforConcern");
			wtCurrentHistory = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtCurrentHistory");
			wtContainerHistory = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtContainerHistory");
			wtContainerHistoryTitle = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtContainerHistoryTitle");
			wtLogCauseOfConcern = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtLogCauseOfConcern");
			wtLogCauseOfConcern.StartIndexExpression = () => 0;
			wtLogCauseOfConcern.LineCountExpression = () => 5;
			wtChangeStatus = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtChangeStatus");
			wtOverview2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtOverview2");
			wt_Container64 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container64");
			wtReason = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtReason");
			wt_Container10 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container10");
			wt_Container124 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container124");
			wt_Container83 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container83");
			wt_Container81 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container81");
			wtDescription = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtDescription");
			wtResponsible2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtResponsible2");
			wt_Container95 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container95");
			wtWarapperSelectRAG = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtWarapperSelectRAG");
			wt_Container57 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container57");
			wt_Container84 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container84");
			wt_Container94 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container94");
			wt_Container68 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container68");
			wt_Container29 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container29");
			wt_Container65 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container65");
			wt_Container153 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container153");
			wt_Container125 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container125");
			wt_Container66 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container66");
			wt_Container49 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container49");
			this.Load += new System.EventHandler(this.Page_Load);
			this.Unload += new System.EventHandler(this.Page_Unload);
		}
		private void Page_Load(object sender, System.EventArgs e) {
			((OSPageViewState) Page).EnableResetViewState();
			heContext = Global.App.OsContext;
			RuntimeID = ClientID;
			if (!Visible) return;
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!IsPostBack || _isRendering) {
					// register this block in the page so for later outputting the block javascript includes in their correct order
					((OSPage) Page).RegisterBlock(this);
					if (_isRendering) {
						Preparation(heContext);
					}
					bool bindEditRecords = IsViewStateEmpty;
					if (bindEditRecords) {
						wtEditRecordCauseOfConcern_onDataBindingDataSource(this.FindControl("wtEditRecordCauseOfConcern"), null);
					}
					ssListCausesOfConcernListDoDataBind = true;
					ssLogCauseOfConcernListDoDataBind = true;
				} else {
					FetchViewState();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}
		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			if (!WasRendered) {
				return;
			}
			ValidationUtils.ValidateComboBox(this, "wt_ComboBox22", parentEditRecord, validate);
			ValidationUtils.ValidateInput(this, "wtEditRecordCauseConcernInput", parentEditRecord, ValidationUtils.validateTrue, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}
		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}
		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}


		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();

			#region store queryResGetCausesForConcernByStudent_outParamList.

			int tmpcurrentrownumberqueryResGetCausesForConcernByStudent_outParamList = queryResGetCausesForConcernByStudent_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetCausesForConcernByStudent_outParamList = queryResGetCausesForConcernByStudent_outParamList.Eof;
			ArrayList storequeryResGetCausesForConcernByStudent_outParamList = new ArrayList();

			// Write the needed fields of queryResGetCausesForConcernByStudent_outParamList to the storequeryResGetCausesForConcernByStudent_outParamList
			if (!queryResGetCausesForConcernByStudent_outParamList.Empty) {
				try {
					queryResGetCausesForConcernByStudent_outParamList.StartIteration();

					while (!queryResGetCausesForConcernByStudent_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetCausesForConcernByStudent_outParamList = new ArrayList();
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENUser.ssName == "" ?(object) null: queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENUser.ssName);
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENUser.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENUser.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENRAGStatus.ssId == "" ?(object) null: queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENRAGStatus.ssId);
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENRAGStatus.ChangedAttributes, new BitArray(new bool[] {
							true, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENRAGStatus.OptimizedAttributes, new BitArray(new bool[] {
							false, true, true, true, true
						}
						))));
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcernReason.ssReason == "" ?(object) null: queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcernReason.ssReason);
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcernReason.ChangedAttributes, new BitArray(new bool[] {
							false, true, false
						}
						))));
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcernReason.OptimizedAttributes, new BitArray(new bool[] {
							true, false, true
						}
						))));
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcern.ssId == 0?(object) null: queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcern.ssId);
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcern.ssRAGStatusId == "" ?(object) null: queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcern.ssRAGStatusId);
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcern.ssReasonId == 0?(object) null: queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcern.ssReasonId);
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcern.ssDescription == "" ?(object) null: queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcern.ssDescription);
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcern.ssCreatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcern.ssCreatedAt);
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcern.ChangedAttributes, new BitArray(new bool[] {
							true, false, true, true, true, false, true
						}
						))));
						tmpFieldsqueryResGetCausesForConcernByStudent_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCausesForConcernByStudent_outParamList.CurrentRec.ssENCauseOfConcern.OptimizedAttributes, new BitArray(new bool[] {
							false, true, false, false, false, true, false
						}
						))));
						storequeryResGetCausesForConcernByStudent_outParamList.Add(tmpFieldsqueryResGetCausesForConcernByStudent_outParamList);
						queryResGetCausesForConcernByStudent_outParamList.Advance();
					}
				} finally {
					queryResGetCausesForConcernByStudent_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetCausesForConcernByStudent_outParamList", storequeryResGetCausesForConcernByStudent_outParamList, null);

			#endregion


			#region store queryResGetCausesForConcernByStudent_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetCausesForConcernByStudent_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetCausesForConcernByStudent_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetCausesForConcernByStudent_outParamList_eof", tmpeofqueryResGetCausesForConcernByStudent_outParamList, false);
			queryResGetCausesForConcernByStudent_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCausesForConcernByStudent_outParamList, tmpeofqueryResGetCausesForConcernByStudent_outParamList);

			#endregion


			#region store queryResGetCauseOfConcernReasons_outParamList.

			int tmpcurrentrownumberqueryResGetCauseOfConcernReasons_outParamList = queryResGetCauseOfConcernReasons_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetCauseOfConcernReasons_outParamList = queryResGetCauseOfConcernReasons_outParamList.Eof;
			ArrayList storequeryResGetCauseOfConcernReasons_outParamList = new ArrayList();

			// Write the needed fields of queryResGetCauseOfConcernReasons_outParamList to the storequeryResGetCauseOfConcernReasons_outParamList
			if (!queryResGetCauseOfConcernReasons_outParamList.Empty) {
				try {
					queryResGetCauseOfConcernReasons_outParamList.StartIteration();

					while (!queryResGetCauseOfConcernReasons_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetCauseOfConcernReasons_outParamList = new ArrayList();
						tmpFieldsqueryResGetCauseOfConcernReasons_outParamList.Add(queryResGetCauseOfConcernReasons_outParamList.CurrentRec.ssENCauseOfConcernReason.ssId == 0?(object) null: queryResGetCauseOfConcernReasons_outParamList.CurrentRec.ssENCauseOfConcernReason.ssId);
						tmpFieldsqueryResGetCauseOfConcernReasons_outParamList.Add(queryResGetCauseOfConcernReasons_outParamList.CurrentRec.ssENCauseOfConcernReason.ssReason == "" ?(object) null: queryResGetCauseOfConcernReasons_outParamList.CurrentRec.ssENCauseOfConcernReason.ssReason);
						tmpFieldsqueryResGetCauseOfConcernReasons_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCauseOfConcernReasons_outParamList.CurrentRec.ssENCauseOfConcernReason.ChangedAttributes, new BitArray(new bool[] {
							true, true, false
						}
						))));
						tmpFieldsqueryResGetCauseOfConcernReasons_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCauseOfConcernReasons_outParamList.CurrentRec.ssENCauseOfConcernReason.OptimizedAttributes, new BitArray(new bool[] {
							false, false, true
						}
						))));
						storequeryResGetCauseOfConcernReasons_outParamList.Add(tmpFieldsqueryResGetCauseOfConcernReasons_outParamList);
						queryResGetCauseOfConcernReasons_outParamList.Advance();
					}
				} finally {
					queryResGetCauseOfConcernReasons_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetCauseOfConcernReasons_outParamList", storequeryResGetCauseOfConcernReasons_outParamList, null);

			#endregion


			#region store queryResGetCauseOfConcernReasons_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetCauseOfConcernReasons_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetCauseOfConcernReasons_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetCauseOfConcernReasons_outParamList_eof", tmpeofqueryResGetCauseOfConcernReasons_outParamList, false);
			queryResGetCauseOfConcernReasons_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCauseOfConcernReasons_outParamList, tmpeofqueryResGetCauseOfConcernReasons_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("inParamStudentReference", inParamStudentReference, "");
			ViewStateAttributes.SetInViewState("inParamVisible", inParamVisible, false);
			ViewStateAttributes.SetInViewState("inParamtop", inParamtop, 0);
			ViewStateAttributes.SetInViewState("inParamleft", inParamleft, 0);
			ViewStateAttributes.SetInViewState("varLcCurrentSelectRAG", varLcCurrentSelectRAG, "");
			ViewStateAttributes.SetInViewState("varLcCauseOfConcern_Clear_ssENCauseOfConcern_ssId", varLcCauseOfConcern_Clear.ssENCauseOfConcern.ssId, 0);
			ViewStateAttributes.SetInViewState("varLcCauseOfConcern_Clear_ssENCauseOfConcern_ssReasonId", varLcCauseOfConcern_Clear.ssENCauseOfConcern.ssReasonId, 0);
			ViewStateAttributes.SetInViewState("varLcCauseOfConcern_Clear_ssENCauseOfConcern_ssDescription", varLcCauseOfConcern_Clear.ssENCauseOfConcern.ssDescription, "");
			ViewStateAttributes.SetInViewState("varLcCauseOfConcern_Clear_ssENCauseOfConcern_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(varLcCauseOfConcern_Clear.ssENCauseOfConcern.ChangedAttributes, new BitArray(new bool[] {
				true, false, false, true, true, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("varLcCauseOfConcern_Clear_ssENCauseOfConcern_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(varLcCauseOfConcern_Clear.ssENCauseOfConcern.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true, false, false, true, true
			}
			)))), null);

			#region store varLcLogCauseOfConcern_List.

			int tmpcurrentrownumbervarLcLogCauseOfConcern_List = varLcLogCauseOfConcern_List.CurrentRowNumber;
			bool tmpeofvarLcLogCauseOfConcern_List = varLcLogCauseOfConcern_List.Eof;
			ArrayList storevarLcLogCauseOfConcern_List = new ArrayList();

			// Write the needed fields of varLcLogCauseOfConcern_List to the storevarLcLogCauseOfConcern_List
			if (!varLcLogCauseOfConcern_List.Empty) {
				try {
					varLcLogCauseOfConcern_List.StartIteration();

					while (!varLcLogCauseOfConcern_List.Eof) {
						ArrayList tmpFieldsvarLcLogCauseOfConcern_List = new ArrayList();
						tmpFieldsvarLcLogCauseOfConcern_List.Add(varLcLogCauseOfConcern_List.CurrentRec.ssENUser.ssName == "" ?(object) null: varLcLogCauseOfConcern_List.CurrentRec.ssENUser.ssName);
						tmpFieldsvarLcLogCauseOfConcern_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(varLcLogCauseOfConcern_List.CurrentRec.ssENUser.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsvarLcLogCauseOfConcern_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(varLcLogCauseOfConcern_List.CurrentRec.ssENUser.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsvarLcLogCauseOfConcern_List.Add(varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.ssDateTime == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.ssDateTime);
						tmpFieldsvarLcLogCauseOfConcern_List.Add(varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.ssUserDescription == "" ?(object) null: varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.ssUserDescription);
						tmpFieldsvarLcLogCauseOfConcern_List.Add(varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.ssLogRAGId == "" ?(object) null: varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.ssLogRAGId);
						tmpFieldsvarLcLogCauseOfConcern_List.Add(varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.ssDescriptionType == "" ?(object) null: varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.ssDescriptionType);
						tmpFieldsvarLcLogCauseOfConcern_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false
						}
						))));
						tmpFieldsvarLcLogCauseOfConcern_List.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true
						}
						))));
						storevarLcLogCauseOfConcern_List.Add(tmpFieldsvarLcLogCauseOfConcern_List);
						varLcLogCauseOfConcern_List.Advance();
					}
				} finally {
					varLcLogCauseOfConcern_List.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("varLcLogCauseOfConcern_List", storevarLcLogCauseOfConcern_List, null);

			#endregion


			#region store varLcLogCauseOfConcern_List runtime properties state.

			ViewStateAttributes.SetInViewState("varLcLogCauseOfConcern_List_currentrownumber", tmpcurrentrownumbervarLcLogCauseOfConcern_List, 0);
			ViewStateAttributes.SetInViewState("varLcLogCauseOfConcern_List_eof", tmpeofvarLcLogCauseOfConcern_List, false);
			varLcLogCauseOfConcern_List.RestoreRecordListState(tmpcurrentrownumbervarLcLogCauseOfConcern_List, tmpeofvarLcLogCauseOfConcern_List);

			#endregion

			ViewStateAttributes.SetInViewState("varLcEdit", varLcEdit, false);
			ViewStateAttributes.SetInViewState("varLcCurrentRAG", varLcCurrentRAG, "");
			if (IsAjaxRequest) {
				recListListCausesOfConcern_Rebuild((ssListCausesOfConcernListDataBound ? wtListCausesOfConcern.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtListCausesOfConcern.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtListCausesOfConcern_list", wtListCausesOfConcern_storage, null);
			if (IsAjaxRequest) {
				recListLogCauseOfConcern_Rebuild((ssLogCauseOfConcernListDataBound ? wtLogCauseOfConcern.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtLogCauseOfConcern.LineCount);
			}
			ViewStateAttributes.SetInViewState("wt_ComboBox22_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wt_ComboBox22")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtEditRecordCauseConcernInput_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtEditRecordCauseConcernInput")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtEditRecordCauseOfConcern_record_ssENCauseOfConcern_ssId", ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssId, 0);
			ViewStateAttributes.SetInViewState("wtEditRecordCauseOfConcern_record_ssENCauseOfConcern_ssReasonId", ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssReasonId, 0);
			ViewStateAttributes.SetInViewState("wtEditRecordCauseOfConcern_record_ssENCauseOfConcern_ssDescription", ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssDescription, "");
			ViewStateAttributes.SetInViewState("wtEditRecordCauseOfConcern_record_ssENCauseOfConcern_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ChangedAttributes, new BitArray(new bool[] {
				true, false, false, true, true, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("wtEditRecordCauseOfConcern_record_ssENCauseOfConcern_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true, false, false, true, true
			}
			)))), null);
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			if (IsViewStateEmpty) return;
			try {

				#region fetch queryResGetCausesForConcernByStudent_outParamList.

				// Read the needed fields of queryResGetCausesForConcernByStudent_outParamList from storequeryResGetCausesForConcernByStudent_outParamList
				queryResGetCausesForConcernByStudent_outParamList = new RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList();
				ArrayList storequeryResGetCausesForConcernByStudent_outParamList;
				storequeryResGetCausesForConcernByStudent_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetCausesForConcernByStudent_outParamList", null);
				if (storequeryResGetCausesForConcernByStudent_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetCausesForConcernByStudent_outParamList in storequeryResGetCausesForConcernByStudent_outParamList) {
						if (tmpFieldsqueryResGetCausesForConcernByStudent_outParamList != null) {
							// Aux current record variable
							RCStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecord tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList = new RCStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecord(null);
							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENUser.ssName = (string) (tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[0] == null ? "": tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENUser.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENUser.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENRAGStatus.ssId = (string) (tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[3] == null ? "": tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[3]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENRAGStatus.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[4]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENRAGStatus.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[5]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENCauseOfConcernReason.ssReason = (string) (tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[6] == null ? "": tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[6]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENCauseOfConcernReason.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[7]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENCauseOfConcernReason.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[8]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENCauseOfConcern.ssId = (int) (tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[9] == null ? 0: tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[9]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENCauseOfConcern.ssRAGStatusId = (string) (tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[10] == null ? "": tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[10]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENCauseOfConcern.ssReasonId = (int) (tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[11] == null ? 0: tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[11]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENCauseOfConcern.ssDescription = (string) (tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[12] == null ? "": tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[12]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENCauseOfConcern.ssCreatedAt = (DateTime) (tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[13] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[13]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENCauseOfConcern.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[14]);

							tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList.ssENCauseOfConcern.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCausesForConcernByStudent_outParamList[15]);

							queryResGetCausesForConcernByStudent_outParamList.Append(tmpAuxCurrentRecordqueryResGetCausesForConcernByStudent_outParamList);
						}
					}
				}
				queryResGetCausesForConcernByStudent_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetCausesForConcernByStudent_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetCausesForConcernByStudent_outParamList;
				tmpcurrentrownumberqueryResGetCausesForConcernByStudent_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetCausesForConcernByStudent_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetCausesForConcernByStudent_outParamList;
				tmpeofqueryResGetCausesForConcernByStudent_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetCausesForConcernByStudent_outParamList_eof", false);
				queryResGetCausesForConcernByStudent_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCausesForConcernByStudent_outParamList, tmpeofqueryResGetCausesForConcernByStudent_outParamList);

				#endregion


				#region fetch queryResGetCauseOfConcernReasons_outParamList.

				// Read the needed fields of queryResGetCauseOfConcernReasons_outParamList from storequeryResGetCauseOfConcernReasons_outParamList
				queryResGetCauseOfConcernReasons_outParamList = new RLCauseOfConcernReasonRecordList();
				ArrayList storequeryResGetCauseOfConcernReasons_outParamList;
				storequeryResGetCauseOfConcernReasons_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetCauseOfConcernReasons_outParamList", null);
				if (storequeryResGetCauseOfConcernReasons_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetCauseOfConcernReasons_outParamList in storequeryResGetCauseOfConcernReasons_outParamList) {
						if (tmpFieldsqueryResGetCauseOfConcernReasons_outParamList != null) {
							// Aux current record variable
							RCCauseOfConcernReasonRecord tmpAuxCurrentRecordqueryResGetCauseOfConcernReasons_outParamList = new RCCauseOfConcernReasonRecord(null);
							tmpAuxCurrentRecordqueryResGetCauseOfConcernReasons_outParamList.ssENCauseOfConcernReason.ssId = (int) (tmpFieldsqueryResGetCauseOfConcernReasons_outParamList[0] == null ? 0: tmpFieldsqueryResGetCauseOfConcernReasons_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernReasons_outParamList.ssENCauseOfConcernReason.ssReason = (string) (tmpFieldsqueryResGetCauseOfConcernReasons_outParamList[1] == null ? "": tmpFieldsqueryResGetCauseOfConcernReasons_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernReasons_outParamList.ssENCauseOfConcernReason.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseOfConcernReasons_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernReasons_outParamList.ssENCauseOfConcernReason.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseOfConcernReasons_outParamList[3]);

							queryResGetCauseOfConcernReasons_outParamList.Append(tmpAuxCurrentRecordqueryResGetCauseOfConcernReasons_outParamList);
						}
					}
				}
				queryResGetCauseOfConcernReasons_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetCauseOfConcernReasons_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetCauseOfConcernReasons_outParamList;
				tmpcurrentrownumberqueryResGetCauseOfConcernReasons_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetCauseOfConcernReasons_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetCauseOfConcernReasons_outParamList;
				tmpeofqueryResGetCauseOfConcernReasons_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetCauseOfConcernReasons_outParamList_eof", false);
				queryResGetCauseOfConcernReasons_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCauseOfConcernReasons_outParamList, tmpeofqueryResGetCauseOfConcernReasons_outParamList);

				#endregion

				inParamStudentReference = (string) ViewStateAttributes.GetFromViewState("inParamStudentReference", "");
				inParamVisible = (bool) ViewStateAttributes.GetFromViewState("inParamVisible", false);
				inParamtop = (int) ViewStateAttributes.GetFromViewState("inParamtop", 0);
				inParamleft = (int) ViewStateAttributes.GetFromViewState("inParamleft", 0);
				varLcCurrentSelectRAG = (string) ViewStateAttributes.GetFromViewState("varLcCurrentSelectRAG", "");
				varLcCauseOfConcern_Clear.ssENCauseOfConcern.ssId = (int) ViewStateAttributes.GetFromViewState("varLcCauseOfConcern_Clear_ssENCauseOfConcern_ssId", 0);
				varLcCauseOfConcern_Clear.ssENCauseOfConcern.ssReasonId = (int) ViewStateAttributes.GetFromViewState("varLcCauseOfConcern_Clear_ssENCauseOfConcern_ssReasonId", 0);
				varLcCauseOfConcern_Clear.ssENCauseOfConcern.ssDescription = (string) ViewStateAttributes.GetFromViewState("varLcCauseOfConcern_Clear_ssENCauseOfConcern_ssDescription", "");
				varLcCauseOfConcern_Clear.ssENCauseOfConcern.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("varLcCauseOfConcern_Clear_ssENCauseOfConcern_ChangedAttributes", null));
				varLcCauseOfConcern_Clear.ssENCauseOfConcern.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("varLcCauseOfConcern_Clear_ssENCauseOfConcern_OptimizedAttributes", null));

				#region fetch varLcLogCauseOfConcern_List.

				// Read the needed fields of varLcLogCauseOfConcern_List from storevarLcLogCauseOfConcern_List
				varLcLogCauseOfConcern_List = new RLStudentUserStudentLogStudentLogTypeRecordList();
				ArrayList storevarLcLogCauseOfConcern_List;
				storevarLcLogCauseOfConcern_List = (ArrayList) ViewStateAttributes.GetFromViewState("varLcLogCauseOfConcern_List", null);
				if (storevarLcLogCauseOfConcern_List == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsvarLcLogCauseOfConcern_List in storevarLcLogCauseOfConcern_List) {
						if (tmpFieldsvarLcLogCauseOfConcern_List != null) {
							// Aux current record variable
							RCStudentUserStudentLogStudentLogTypeRecord tmpAuxCurrentRecordvarLcLogCauseOfConcern_List = new RCStudentUserStudentLogStudentLogTypeRecord(null);
							tmpAuxCurrentRecordvarLcLogCauseOfConcern_List.ssENUser.ssName = (string) (tmpFieldsvarLcLogCauseOfConcern_List[0] == null ? "": tmpFieldsvarLcLogCauseOfConcern_List[0]);

							tmpAuxCurrentRecordvarLcLogCauseOfConcern_List.ssENUser.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcLogCauseOfConcern_List[1]);

							tmpAuxCurrentRecordvarLcLogCauseOfConcern_List.ssENUser.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcLogCauseOfConcern_List[2]);

							tmpAuxCurrentRecordvarLcLogCauseOfConcern_List.ssENStudentLog.ssDateTime = (DateTime) (tmpFieldsvarLcLogCauseOfConcern_List[3] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsvarLcLogCauseOfConcern_List[3]);

							tmpAuxCurrentRecordvarLcLogCauseOfConcern_List.ssENStudentLog.ssUserDescription = (string) (tmpFieldsvarLcLogCauseOfConcern_List[4] == null ? "": tmpFieldsvarLcLogCauseOfConcern_List[4]);

							tmpAuxCurrentRecordvarLcLogCauseOfConcern_List.ssENStudentLog.ssLogRAGId = (string) (tmpFieldsvarLcLogCauseOfConcern_List[5] == null ? "": tmpFieldsvarLcLogCauseOfConcern_List[5]);

							tmpAuxCurrentRecordvarLcLogCauseOfConcern_List.ssENStudentLog.ssDescriptionType = (string) (tmpFieldsvarLcLogCauseOfConcern_List[6] == null ? "": tmpFieldsvarLcLogCauseOfConcern_List[6]);

							tmpAuxCurrentRecordvarLcLogCauseOfConcern_List.ssENStudentLog.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcLogCauseOfConcern_List[7]);

							tmpAuxCurrentRecordvarLcLogCauseOfConcern_List.ssENStudentLog.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsvarLcLogCauseOfConcern_List[8]);

							varLcLogCauseOfConcern_List.Append(tmpAuxCurrentRecordvarLcLogCauseOfConcern_List);
						}
					}
				}
				varLcLogCauseOfConcern_List.CurrentRowNumber = -1;
				#endregion


				#region fetch varLcLogCauseOfConcern_List runtime properties state.

				int tmpcurrentrownumbervarLcLogCauseOfConcern_List;
				tmpcurrentrownumbervarLcLogCauseOfConcern_List = (int) ViewStateAttributes.GetFromViewState("varLcLogCauseOfConcern_List_currentrownumber", 0);
				bool tmpeofvarLcLogCauseOfConcern_List;
				tmpeofvarLcLogCauseOfConcern_List = (bool) ViewStateAttributes.GetFromViewState("varLcLogCauseOfConcern_List_eof", false);
				varLcLogCauseOfConcern_List.RestoreRecordListState(tmpcurrentrownumbervarLcLogCauseOfConcern_List, tmpeofvarLcLogCauseOfConcern_List);

				#endregion

				varLcEdit = (bool) ViewStateAttributes.GetFromViewState("varLcEdit", false);
				varLcCurrentRAG = (string) ViewStateAttributes.GetFromViewState("varLcCurrentRAG", "");
				recListListCausesOfConcern_Restore();
				recListLogCauseOfConcern_Restore();
				((IWidgetRuntimeProperties) this.FindControl("wt_ComboBox22")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wt_ComboBox22_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtEditRecordCauseConcernInput")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtEditRecordCauseConcernInput_Mandatory", false);
				ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssId = (int) ViewStateAttributes.GetFromViewState("wtEditRecordCauseOfConcern_record_ssENCauseOfConcern_ssId", 0);
				ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssReasonId = (int) ViewStateAttributes.GetFromViewState("wtEditRecordCauseOfConcern_record_ssENCauseOfConcern_ssReasonId", 0);
				ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssDescription = (string) ViewStateAttributes.GetFromViewState("wtEditRecordCauseOfConcern_record_ssENCauseOfConcern_ssDescription", "");
				ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecordCauseOfConcern_record_ssENCauseOfConcern_ChangedAttributes", null));
				ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecordCauseOfConcern_record_ssENCauseOfConcern_OptimizedAttributes", null));
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}

		/// <summary>
		/// Store visibility information of the web block and input widgets in the viewstate
		/// </summary>
		protected override void StoreInputsAndWebBlockVisibility() {
			ControlVisibility.StoreChildControlVisibility("wtEditRecordCauseConcernInput");
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore visibility information of the web block and input widgets from the viewstate
		/// </summary>
		protected override void RestoreInputsAndWebBlockVisibility() {
			WasRendered = true;
			ControlVisibility.RestoreChildControlVisibility("wtEditRecordCauseConcernInput");
		}

		private void Page_Unload(object sender, System.EventArgs e) {
		}

		public LocalState PushStack() {
			throw new NotImplementedException();
		}

		public void doRefreshScreen(HeContext heContext) {
			((IWebScreen) this.Parent.Page).doRefreshScreen(heContext);
		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			StoreViewState();
			((IWebScreen) this.Parent.Page).doAJAXRefreshScreen(heContext);
		}

		public static void GetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			string blockId = "CaseConferencing.KiTyaqMEO0EaYB_LktdRFhA";
			if (visited.Contains(blockId)) {
				return; 
			}
			visited.Add(blockId);
			if (!inline) {
				GetCssIncludes(writer, visited);
			} else {
				GetInlineCss(writer, visited);
			}
		}

		private static void GetCssIncludes(TextWriter writer, HashSet<string> visited) {
			InnerGetCss(writer, false, visited);
		}

		private static void GetInlineCss(TextWriter writer, HashSet<string> visited) {
			StringWriter localCssWriter = new StringWriter();
			localCssWriter.NewLine = writer.NewLine;
			string localCss = Environment.NewLine;
			InnerGetCss(localCssWriter, true, visited);
			localCss += localCssWriter.ToString();
			writer.Write(localCss);
		}

		private static void InnerGetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			ssCaseConferencing.Flows.FlowCommon.WBlkPopUp.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted.GetCss(writer, inline, visited);
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon.GetCss(writer, inline, visited);
		}

		private void Page_Error(object sender, System.EventArgs e) {
		}
		public void CheckPermissions(HeContext heContext) {
			((IWebScreen) this.Page).CheckPermissions(heContext);
		}
		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}

		public ObjectKey Key {
			get {
				return ObjectKey.Parse("iTyaqMEO0EaYB+LktdRFhA"); 
			}
		}
		public bool isSecure {
			get {
				return ((IWebScreen) Page).isSecure; 
			}
		}
		public class lcvChangeSelectedRAG: VarsBag {
			public string inParamNewRAGStatusId;
			public lcvChangeSelectedRAG(string inParamNewRAGStatusId) {
				this.inParamNewRAGStatusId = inParamNewRAGStatusId;
			}
		}
		/// <summary>
		/// Action <code>CommandChangeSelectedRAG</code> that represents the Service Studio screen action
		///  <code>ChangeSelectedRAG</code> <p> Description: </p>
		/// </summary>
		private bool CommandChangeSelectedRAG(HeContext heContext, string inParamNewRAGStatusId) {
			CheckPermissions(heContext);
			lcvChangeSelectedRAG localVars = new lcvChangeSelectedRAG(inParamNewRAGStatusId);
			try {
				varLcCurrentSelectRAG = localVars.inParamNewRAGStatusId; // CurrentSelectRAG = NewRAGStatusId
				// Refresh Widget (wtWarapperSelectRAG)
				((OSPageViewState) Page).AjaxRefresh(wtWarapperSelectRAG, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandEdit</code> that represents the Service Studio screen action <code>Edit</code>
		///  <p> Description: </p>
		/// </summary>
		private bool CommandEdit(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				varLcCurrentTab = 2; // CurrentTab = 2
				ssEditRecordCauseOfConcernRecord = ((RCCauseOfConcernRecord) getWtListCausesOfConcernList().CurrentRec.ssENCauseOfConcern); // EditRecordCauseOfConcern.Record = ListCausesOfConcern.List.Current.CauseOfConcern
				varLcCurrentSelectRAG = getWtListCausesOfConcernList().CurrentRec.ssENRAGStatus.ssId; // CurrentSelectRAG = ListCausesOfConcern.List.Current.RAGStatus.Id
				varLcEdit = true; // Edit = True
				varLcCurrentRAG = getWtListCausesOfConcernList().CurrentRec.ssENRAGStatus.ssId; // CurrentRAG = ListCausesOfConcern.List.Current.RAGStatus.Id
				// Refresh Widget (wtPopUpCauseOfConcern)
				ssListCausesOfConcernListDoDataBind = true;
				ssLogCauseOfConcernListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtPopUpCauseOfConcern, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvSave: VarsBag {
			public int resStudentLog_Create_outParamStudentLogId = 0;

			public RLCauseOfConcernReasonRecordList queryResGetCauseOfConcernReasonById_outParamList = new RLCauseOfConcernReasonRecordList();
			public int queryResGetCauseOfConcernReasonById_outParamCount = 0;

			public int resCreateOrUpdateCauseOfConcern_outParamId = 0;

			public int resSendEmailToPLA_outParamEmailId = 0;
			public RLRAGStatusCauseOfConcernRecordList queryResGetCauseOfConcernsByStudentReference_outParamList = new RLRAGStatusCauseOfConcernRecordList();
			public int queryResGetCauseOfConcernsByStudentReference_outParamCount = 0;

			public Actions.lcoStudent_GetResponsible resStudent_GetResponsible = new Actions.lcoStudent_GetResponsible();
			public int resEmail1_outParamEmailId = 0;
			public lcvSave() {
			}
		}
		/// <summary>
		/// Action <code>CommandSave</code> that represents the Service Studio screen action <code>Save</code>
		///  <p> Description: </p>
		/// </summary>
		private bool CommandSave(HeContext heContext) {
			CheckPermissions(heContext);
			lcvSave localVars = new lcvSave();
			try {
				if ((ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssReasonId==BuiltInFunction.NullIdentifier())) {
					// Feedback_Message2
					Actions.ActionFeedback_Message(heContext, "Reason field required!", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
					// Update Screen
					return true;

				} else {
					if ((ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssDescription== "")) {
						// Feedback_Message
						Actions.ActionFeedback_Message(heContext, "Description field required!", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
						// Update Screen
						return true;

					} else {
						ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssStudentReference = inParamStudentReference; // EditRecordCauseOfConcern.Record.CauseOfConcern.StudentReference = StudentReference
						ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssCreatedBy = ((int) Global.App.OsContext.Session["UserID"]); // EditRecordCauseOfConcern.Record.CauseOfConcern.CreatedBy = UserID
						ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssCreatedAt = BuiltInFunction.CurrDateTime(); // EditRecordCauseOfConcern.Record.CauseOfConcern.CreatedAt = CurrDateTime
						ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssRAGStatusId = varLcCurrentSelectRAG; // EditRecordCauseOfConcern.Record.CauseOfConcern.RAGStatusId = CurrentSelectRAG
						// CreateOrUpdateCauseOfConcern
						ExtendedActions.CreateOrUpdateCauseOfConcern(heContext, ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ChangedAttributes, ((RCCauseOfConcernRecord) ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern), out localVars.resCreateOrUpdateCauseOfConcern_outParamId);
						// Query datasetGetCauseOfConcernReasonById
						int datasetGetCauseOfConcernReasonById_maxRecords = 0;
						localVars.queryResGetCauseOfConcernReasonById_outParamList = FuncCommandSave.datasetGetCauseOfConcernReasonById(heContext, datasetGetCauseOfConcernReasonById_maxRecords, IterationMultiplicity.Never, out localVars.queryResGetCauseOfConcernReasonById_outParamCount, ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssReasonId
						);
						// StudentLog_Create
						Actions.ActionStudentLog_Create(heContext, inParamStudentReference, ((int) Global.App.OsContext.Session["UserID"]), (((ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssId==BuiltInFunction.NullIdentifier())) ?("Raised Concern"):("Changed Cause for Concern")), ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("hTcMAzvg9kmgJqUGGgXnPg")).ssLogType, ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssDescription, varLcCurrentSelectRAG, false, 0, localVars.queryResGetCauseOfConcernReasonById_outParamList.CurrentRec.ssENCauseOfConcernReason.ssReason, "", 0, 0, "", 0, out localVars.resStudentLog_Create_outParamStudentLogId);
						// Query datasetGetCauseOfConcernsByStudentReference
						int datasetGetCauseOfConcernsByStudentReference_maxRecords = 0;
						localVars.queryResGetCauseOfConcernsByStudentReference_outParamList = FuncCommandSave.datasetGetCauseOfConcernsByStudentReference(heContext, datasetGetCauseOfConcernsByStudentReference_maxRecords, IterationMultiplicity.Never, out localVars.queryResGetCauseOfConcernsByStudentReference_outParamCount, inParamStudentReference
						);
						// NotifyWidget2
						ExtendedActions.NotifyWidget(heContext, RuntimeID, localVars.queryResGetCauseOfConcernsByStudentReference_outParamList.CurrentRec.ssENCauseOfConcern.ssRAGStatusId);
						inParamVisible = false; // Visible = False
						varLcCurrentTab = 1; // CurrentTab = 1
						varLcEdit = false; // Edit = False
						// Refresh Widget (wtPopUpCauseOfConcern)
						ssListCausesOfConcernListDoDataBind = true;
						ssLogCauseOfConcernListDoDataBind = true;
						((OSPageViewState) Page).AjaxRefresh(wtPopUpCauseOfConcern, "None", StoreViewState);
						// Student_GetResponsible
						Actions.ActionStudent_GetResponsible(heContext, inParamStudentReference, out localVars.resStudent_GetResponsible.outParamResponsibleName, out localVars.resStudent_GetResponsible.outParamResponsibleEmail);
						// CommitTransaction
						ExtendedActions.CommitTransaction(heContext);
						// Send Email
						localVars.resSendEmailToPLA_outParamEmailId = EmailProcessor.SendEmailRequest("http://" + Settings.Get(Settings.Configs.InternalAddress) + AppUtils.Instance.getImagePath(/*internalAccess*/true) + "Email1.aspx?" + "LogStudentId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(localVars.resStudentLog_Create_outParamStudentLogId)), "", localVars.resStudent_GetResponsible.outParamResponsibleEmail, "", "", 0, heContext.Session.TenantId, false, EmailProcessor.EmailType.Normal);
						// Feedback_Message3
						Actions.ActionFeedback_Message(heContext, "Message sent to Personal Tutor.", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("8xuePnp+TUO346Oyp3_dWQ")).ssId);
						if (((varLcCurrentRAG!=ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId) && (varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId))) {
							// Send Email
							localVars.resEmail1_outParamEmailId = EmailProcessor.SendEmailRequest("http://" + Settings.Get(Settings.Configs.InternalAddress) + AppUtils.Instance.getImagePath(/*internalAccess*/true) + "Email1.aspx?" + "LogStudentId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(localVars.resStudentLog_Create_outParamStudentLogId)), "", Functions.ssGetUser(heContext, ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssCreatedBy).ssENUser.ssEmail, "", "", 0, heContext.Session.TenantId, false, EmailProcessor.EmailType.Normal);

						}
						// Update Screen
						return true;

					}

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvChangeTab: VarsBag {
			public int inParamTab;
			public lcvChangeTab(int inParamTab) {
				this.inParamTab = inParamTab;
			}
		}
		/// <summary>
		/// Action <code>CommandChangeTab</code> that represents the Service Studio screen action
		///  <code>ChangeTab</code> <p> Description: </p>
		/// </summary>
		private bool CommandChangeTab(HeContext heContext, int inParamTab) {
			CheckPermissions(heContext);
			lcvChangeTab localVars = new lcvChangeTab(inParamTab);
			try {
				varLcCurrentTab = localVars.inParamTab; // CurrentTab = Tab
				ssEditRecordCauseOfConcernRecord = varLcCauseOfConcern_Clear; // EditRecordCauseOfConcern.Record = CauseOfConcern_Clear
				varLcCurrentSelectRAG = ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId; // CurrentSelectRAG = Raised
				// Refresh Widget (wtPopUpCauseOfConcern)
				ssListCausesOfConcernListDoDataBind = true;
				ssLogCauseOfConcernListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtPopUpCauseOfConcern, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public void webBlckPopUpCauseOfConcern_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowCommon.WBlkPopUp widget = (ssCaseConferencing.Flows.FlowCommon.WBlkPopUp) sender;
				widget.inParamVisible = inParamVisible;
				widget.inParamWidth = 501;
				widget.inParamHeight = 0;
				widget.inParamTop = (inParamtop+50);
				widget.inParamLeft = (inParamleft-443);
				widget.inParamBottom = (-1);
				widget.inParamRight = (-1);
				widget.inParamArrowLeft = 452;
				widget.inParamArrowRight = (-1);
				widget.inParamArrowTop = (-1);
				widget.inParamArrowBottom = (-1);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntTabWrapper_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntTabWrapper_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntTabWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "height:30px;text-align: left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntTabWrapper_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtTabWrapper)
		/// </summary>
		/// <returns>The Visible State of wtTabWrapper</returns>
		public bool cntTabWrapper_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container98_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container98_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container98_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((WebControl) sender).CssClass = (((varLcCurrentTab==1)) ?("TabEnabled"):("TabDisabled"));
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "width:249px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container98_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container98
		/// </summary>
		public void cnt_Container98_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeTab(heContext
				, 1)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container98)
		/// </summary>
		/// <returns>The Visible State of wt_Container98</returns>
		public bool cnt_Container98_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Table7_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Table7_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Table7_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "height:100%;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container55_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container55_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container55_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container55_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container55)
		/// </summary>
		/// <returns>The Visible State of wt_Container55</returns>
		public bool cnt_Container55_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance150_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("v8O5VJfAtEuGAFl1unUekw")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = HaNDUxEt7UmQxBMryjmnWA) Expression: "Personal Concern"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression61() {
			return "Personal Concern";
		}
		public void cnt_Container18_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container18_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container18_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((WebControl) sender).CssClass = (((varLcCurrentTab==2)) ?("TabEnabled"):("TabDisabled"));
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "width:248px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container18_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container18
		/// </summary>
		public void cnt_Container18_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeTab(heContext
				, 2)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container18)
		/// </summary>
		/// <returns>The Visible State of wt_Container18</returns>
		public bool cnt_Container18_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Table45_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Table45_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Table45_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "height:100%;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container97_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container97_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container97_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container97_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container97)
		/// </summary>
		/// <returns>The Visible State of wt_Container97</returns>
		public bool cnt_Container97_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance114_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EdAx1MS_gkWfsLiHNqAN4g")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = 0L9ZaAiPVEuk7lyfa6dNVw) Expression: "Raise Concern"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression76() {
			return "Raise Concern";
		}
		public void cntWrapperContent_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntWrapperContent_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntWrapperContent_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "border: 1px solid #E8E8E8;text-align:left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntWrapperContent_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperContent)
		/// </summary>
		/// <returns>The Visible State of wtWrapperContent</returns>
		public bool cntWrapperContent_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If33_hasRun=false;
		bool if_wt_If33_evalResult;
		public bool if_wt_If33() {
			if (if_wt_If33_hasRun) {
				if_wt_If33_hasRun = false;
				return if_wt_If33_evalResult;
			}
			if_wt_If33_hasRun = true;
			if_wt_If33_evalResult = (varLcCurrentTab==1);
			return if_wt_If33_evalResult;
		}

		public void cntHistory_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntHistory_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntHistory_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin:21px;color:#757575;font-size: 12px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntHistory_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtHistory)
		/// </summary>
		/// <returns>The Visible State of wtHistory</returns>
		public bool cntHistory_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntCurrentRAG2_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntCurrentRAG2_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntCurrentRAG2_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top:15px;font-weight: bold;float:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntCurrentRAG2_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtCurrentRAG2)
		/// </summary>
		/// <returns>The Visible State of wtCurrentRAG2</returns>
		public bool cntCurrentRAG2_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void recListListCausesOfConcern_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// widget wtListCausesOfConcern
				ssListCausesOfConcernList = queryResGetCausesForConcernByStudent_outParamList;
				ssListCausesOfConcernListDoDataBind = false;
				ssListCausesOfConcernListDataBound = true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void recListListCausesOfConcern_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssListCausesOfConcernList.Length > 0) {
					ssListCausesOfConcernList.CurrentRec = ssListCausesOfConcernList[ssListCausesOfConcernList.CurrentRowNumber];
				}
				if (ssListCausesOfConcernList.Length > e.SelectedIndex) {
					ssListCausesOfConcernList.CurrentRec = ssListCausesOfConcernList[e.SelectedIndex];
					ssListCausesOfConcernList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListListCausesOfConcern_Store(object dataItem, int index) {
			RCStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecord tmprec = (RCStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecord) dataItem;
			ArrayList tmpFields = new ArrayList();
			tmpFields.Add(tmprec.ssENRAGStatus.ssId == "" ?(object) null: tmprec.ssENRAGStatus.ssId);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENRAGStatus.ChangedAttributes, new BitArray(new bool[] {
				true, false, false, false, false
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENRAGStatus.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true, true, true
			}
			))));
			tmpFields.Add(tmprec.ssENCauseOfConcern.ssId == 0?(object) null: tmprec.ssENCauseOfConcern.ssId);
			tmpFields.Add(tmprec.ssENCauseOfConcern.ssReasonId == 0?(object) null: tmprec.ssENCauseOfConcern.ssReasonId);
			tmpFields.Add(tmprec.ssENCauseOfConcern.ssDescription == "" ?(object) null: tmprec.ssENCauseOfConcern.ssDescription);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENCauseOfConcern.ChangedAttributes, new BitArray(new bool[] {
				true, false, false, true, true, false, false
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENCauseOfConcern.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true, false, false, true, true
			}
			))));
			if (index < wtListCausesOfConcern_storage.Count) {
				wtListCausesOfConcern_storage[index] = tmpFields;
			} else {
				wtListCausesOfConcern_storage.Add(tmpFields);
			}
			return "";
		}
		public void recListListCausesOfConcern_Restore() {

			#region fetch ssListCausesOfConcernList.

			// Read the needed fields of ssListCausesOfConcernList from storewtListCausesOfConcern_list
			ssListCausesOfConcernList = new RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList();
			ArrayList storewtListCausesOfConcern_list;
			storewtListCausesOfConcern_list = (ArrayList) ViewStateAttributes.GetFromViewState("wtListCausesOfConcern_list", null);
			if (storewtListCausesOfConcern_list == null) {
				return;
			} else {

				foreach(ArrayList tmpFieldswtListCausesOfConcern_list in storewtListCausesOfConcern_list) {
					if (tmpFieldswtListCausesOfConcern_list != null) {
						// Aux current record variable
						RCStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecord tmpAuxCurrentRecordwtListCausesOfConcern_list = new RCStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecord(null);
						tmpAuxCurrentRecordwtListCausesOfConcern_list.ssENRAGStatus.ssId = (string) (tmpFieldswtListCausesOfConcern_list[0] == null ? "": tmpFieldswtListCausesOfConcern_list[0]);

						tmpAuxCurrentRecordwtListCausesOfConcern_list.ssENRAGStatus.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtListCausesOfConcern_list[1]);

						tmpAuxCurrentRecordwtListCausesOfConcern_list.ssENRAGStatus.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtListCausesOfConcern_list[2]);

						tmpAuxCurrentRecordwtListCausesOfConcern_list.ssENCauseOfConcern.ssId = (int) (tmpFieldswtListCausesOfConcern_list[3] == null ? 0: tmpFieldswtListCausesOfConcern_list[3]);

						tmpAuxCurrentRecordwtListCausesOfConcern_list.ssENCauseOfConcern.ssReasonId = (int) (tmpFieldswtListCausesOfConcern_list[4] == null ? 0: tmpFieldswtListCausesOfConcern_list[4]);

						tmpAuxCurrentRecordwtListCausesOfConcern_list.ssENCauseOfConcern.ssDescription = (string) (tmpFieldswtListCausesOfConcern_list[5] == null ? "": tmpFieldswtListCausesOfConcern_list[5]);

						tmpAuxCurrentRecordwtListCausesOfConcern_list.ssENCauseOfConcern.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtListCausesOfConcern_list[6]);

						tmpAuxCurrentRecordwtListCausesOfConcern_list.ssENCauseOfConcern.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtListCausesOfConcern_list[7]);

						ssListCausesOfConcernList.Append(tmpAuxCurrentRecordwtListCausesOfConcern_list);
					}
				}
			}
			ssListCausesOfConcernList.CurrentRowNumber = -1;
			#endregion


			#region fetch ssListCausesOfConcernList runtime properties state.


			if (storewtListCausesOfConcern_list.Count > 0) {
				ssListCausesOfConcernList.RestoreRecordListState(storewtListCausesOfConcern_list.Count - 1, false);
			} else {
				ssListCausesOfConcernList.CurrentRowNumber = 0;
			}

			#endregion

			wtListCausesOfConcern_storage = storewtListCausesOfConcern_list;
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListListCausesOfConcern_Clear(object sender, EventArgs e) {
			wtListCausesOfConcern_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListListCausesOfConcern_Rebuild(int startIndex, int lineCount) {
			if (ssListCausesOfConcernList.Length != -1) {
				wtListCausesOfConcern_storage.Clear();
				for (int i=startIndex; i<ssListCausesOfConcernList.Data.Count && i<startIndex+lineCount; i++) {
					recListListCausesOfConcern_Store(ssListCausesOfConcernList.Data[i], wtListCausesOfConcern_storage.Count);
				}
			}
		}
		public void recListListCausesOfConcern_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtListCausesOfConcern widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList getWtListCausesOfConcernList() {
			if (ssListCausesOfConcernListDoDataBind) {
				recListListCausesOfConcern_onDataBinding(this, null);
			}

			return ssListCausesOfConcernList;
		}
		public void cntWrapperList_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntWrapperList_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntWrapperList_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-bottom: 15px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntWrapperList_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperList)
		/// </summary>
		/// <returns>The Visible State of wtWrapperList</returns>
		public bool cntWrapperList_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntCurrentRAGSTatus2_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntCurrentRAGSTatus2_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntCurrentRAGSTatus2_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top: 30px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntCurrentRAGSTatus2_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtCurrentRAGSTatus2)
		/// </summary>
		/// <returns>The Visible State of wtCurrentRAGSTatus2</returns>
		public bool cntCurrentRAGSTatus2_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If88_hasRun=false;
		bool if_wt_If88_evalResult;
		public bool if_wt_If88() {
			if (if_wt_If88_hasRun) {
				if_wt_If88_hasRun = false;
				return if_wt_If88_evalResult;
			}
			if_wt_If88_hasRun = true;
			if_wt_If88_evalResult = (getWtListCausesOfConcernList().CurrentRec.ssENCauseOfConcern.ssRAGStatusId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId);
			return if_wt_If88_evalResult;
		}

		bool if_wt_If130_hasRun=false;
		bool if_wt_If130_evalResult;
		public bool if_wt_If130() {
			if (if_wt_If130_hasRun) {
				if_wt_If130_hasRun = false;
				return if_wt_If130_evalResult;
			}
			if_wt_If130_hasRun = true;
			if_wt_If130_evalResult = (getWtListCausesOfConcernList().CurrentRec.ssENCauseOfConcern.ssRAGStatusId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId);
			return if_wt_If130_evalResult;
		}

		bool if_wt_If51_hasRun=false;
		bool if_wt_If51_evalResult;
		public bool if_wt_If51() {
			if (if_wt_If51_hasRun) {
				if_wt_If51_hasRun = false;
				return if_wt_If51_evalResult;
			}
			if_wt_If51_hasRun = true;
			if_wt_If51_evalResult = (getWtListCausesOfConcernList().CurrentRec.ssENCauseOfConcern.ssRAGStatusId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId);
			return if_wt_If51_evalResult;
		}

		bool if_wt_If5_hasRun=false;
		bool if_wt_If5_evalResult;
		public bool if_wt_If5() {
			if (if_wt_If5_hasRun) {
				if_wt_If5_hasRun = false;
				return if_wt_If5_evalResult;
			}
			if_wt_If5_hasRun = true;
			if_wt_If5_evalResult = (getWtListCausesOfConcernList().CurrentRec.ssENCauseOfConcern.ssRAGStatusId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId);
			return if_wt_If5_evalResult;
		}

		public void cntDescriptionWrapper2_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntDescriptionWrapper2_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntDescriptionWrapper2_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inline-block;width:405px;height:70px;margin-top:5px;border: 1px solid #E8E8E8;margin-left:20px;position:absolute;padding: 0px 5px;overflow-y: auto;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntDescriptionWrapper2_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtDescriptionWrapper2)
		/// </summary>
		/// <returns>The Visible State of wtDescriptionWrapper2</returns>
		public bool cntDescriptionWrapper2_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Table99_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Table99_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Table99_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top: 0px;margin-left: -2px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container37_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container37_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container37_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container37_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container37)
		/// </summary>
		/// <returns>The Visible State of wt_Container37</returns>
		public bool cnt_Container37_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void expression_InlineExpression151_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				expression_InlineExpression151_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string expression_InlineExpression151_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-weight:bold;font-size:15px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = NW2k9imvQUWyDwORH951cA) Expression:
		///  ListCausesOfConcern.List.Current.CauseOfConcernReason.Reason
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression151() {
			return getWtListCausesOfConcernList().CurrentRec.ssENCauseOfConcernReason.ssReason;
		}
		public void expression_InlineExpression121_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				expression_InlineExpression121_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string expression_InlineExpression121_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #6F6A6A;font-size: 13px;font-weight:600;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = dxSfrgziEEmy252HiT4g0A) Expression:
		///  ListCausesOfConcern.List.Current.CauseOfConcern.Description
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression121() {
			return getWtListCausesOfConcernList().CurrentRec.ssENCauseOfConcern.ssDescription;
		}
		public void wt_TableCell135_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell135_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell135_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "width:15px;cursor: pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: top";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container87_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container87_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container87_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-size: 15px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container87_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container87
		/// </summary>
		public void cnt_Container87_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandEdit(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container87)
		/// </summary>
		/// <returns>The Visible State of wt_Container87</returns>
		public bool cnt_Container87_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance59_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("tD89gwpkFEyl4LnwdeU5OA")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container126_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container126_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container126_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #9C9898;font-size: 11px;font-weight:100;margin-top: 30px;margin-left:40px";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container126_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container126)
		/// </summary>
		/// <returns>The Visible State of wt_Container126</returns>
		public bool cnt_Container126_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = a4n2nQkoqU6zwnRE7HS_jQ) Expression:
		///  ListCausesOfConcern.List.Current.User.Name
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression112() {
			return getWtListCausesOfConcernList().CurrentRec.ssENUser.ssName;
		}
		public void cnt_Container52_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container52_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container52_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #9C9898;font-size: 11px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container52_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container52)
		/// </summary>
		/// <returns>The Visible State of wt_Container52</returns>
		public bool cnt_Container52_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance86_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
				widget.inParamDate = Convert.ToDateTime(getWtListCausesOfConcernList().CurrentRec.ssENCauseOfConcern.ssCreatedAt.ToString("yyyy-M-d"));
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntLogCauseforConcern_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntLogCauseforConcern_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntLogCauseforConcern_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top:15px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntLogCauseforConcern_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtLogCauseforConcern)
		/// </summary>
		/// <returns>The Visible State of wtLogCauseforConcern</returns>
		public bool cntLogCauseforConcern_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntCurrentHistory_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntCurrentHistory_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntCurrentHistory_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top:15px;float:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntCurrentHistory_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtCurrentHistory)
		/// </summary>
		/// <returns>The Visible State of wtCurrentHistory</returns>
		public bool cntCurrentHistory_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntContainerHistory_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntContainerHistory_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntContainerHistory_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntContainerHistory_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtContainerHistory)
		/// </summary>
		/// <returns>The Visible State of wtContainerHistory</returns>
		public bool cntContainerHistory_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntContainerHistoryTitle_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntContainerHistoryTitle_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntContainerHistoryTitle_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-left: 40px; margin-top: 0px;font-size: 10px;font-weight: normal;margin-top: 0px;width: 417px;border-bottom: dotted 1px #dadada;text-align: right;color: #aaa;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntContainerHistoryTitle_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtContainerHistoryTitle)
		/// </summary>
		/// <returns>The Visible State of wtContainerHistoryTitle</returns>
		public bool cntContainerHistoryTitle_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Text149_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Text149_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Text149_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-weight: bold;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void recListLogCauseOfConcern_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// widget wtLogCauseOfConcern
				ssLogCauseOfConcernList = varLcLogCauseOfConcern_List;
				ssLogCauseOfConcernListDoDataBind = false;
				ssLogCauseOfConcernListDataBound = true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void recListLogCauseOfConcern_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssLogCauseOfConcernList.Length > 0) {
					ssLogCauseOfConcernList.CurrentRec = ssLogCauseOfConcernList[ssLogCauseOfConcernList.CurrentRowNumber];
				}
				if (ssLogCauseOfConcernList.Length > e.SelectedIndex) {
					ssLogCauseOfConcernList.CurrentRec = ssLogCauseOfConcernList[e.SelectedIndex];
					ssLogCauseOfConcernList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListLogCauseOfConcern_Store(object dataItem, int index) {
			return "";
		}
		public void recListLogCauseOfConcern_Restore() {
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListLogCauseOfConcern_Clear(object sender, EventArgs e) {
			wtLogCauseOfConcern_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListLogCauseOfConcern_Rebuild(int startIndex, int lineCount) {
			if (ssLogCauseOfConcernList.Length != -1) {
				wtLogCauseOfConcern_storage.Clear();
				for (int i=startIndex; i<ssLogCauseOfConcernList.Data.Count && i<startIndex+lineCount; i++) {
					recListLogCauseOfConcern_Store(ssLogCauseOfConcernList.Data[i], wtLogCauseOfConcern_storage.Count);
				}
			}
		}
		public void recListLogCauseOfConcern_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtLogCauseOfConcern widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStudentUserStudentLogStudentLogTypeRecordList getWtLogCauseOfConcernList() {
			if (ssLogCauseOfConcernListDoDataBind) {
				recListLogCauseOfConcern_onDataBinding(this, null);
			}

			return ssLogCauseOfConcernList;
		}
		public void cnt_Container156_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container156_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container156_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container156_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container156)
		/// </summary>
		/// <returns>The Visible State of wt_Container156</returns>
		public bool cnt_Container156_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Table80_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Table80_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Table80_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top: 0px;padding:5px;margin-left: -7px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void wt_TableCell155_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_TableCell155_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_TableCell155_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntContainerHistoryIcon_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntContainerHistoryIcon_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntContainerHistoryIcon_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "position: relative;margin-top: 5px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntContainerHistoryIcon_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtContainerHistoryIcon)
		/// </summary>
		/// <returns>The Visible State of wtContainerHistoryIcon</returns>
		public bool cntContainerHistoryIcon_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If113_hasRun=false;
		bool if_wt_If113_evalResult;
		public bool if_wt_If113() {
			if (if_wt_If113_hasRun) {
				if_wt_If113_hasRun = false;
				return if_wt_If113_evalResult;
			}
			if_wt_If113_hasRun = true;
			if_wt_If113_evalResult = (varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.ssLogRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId);
			return if_wt_If113_evalResult;
		}

		bool if_wt_If133_hasRun=false;
		bool if_wt_If133_evalResult;
		public bool if_wt_If133() {
			if (if_wt_If133_hasRun) {
				if_wt_If133_hasRun = false;
				return if_wt_If133_evalResult;
			}
			if_wt_If133_hasRun = true;
			if_wt_If133_evalResult = (varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.ssLogRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId);
			return if_wt_If133_evalResult;
		}

		bool if_wt_If111_hasRun=false;
		bool if_wt_If111_evalResult;
		public bool if_wt_If111() {
			if (if_wt_If111_hasRun) {
				if_wt_If111_hasRun = false;
				return if_wt_If111_evalResult;
			}
			if_wt_If111_hasRun = true;
			if_wt_If111_evalResult = (varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.ssLogRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId);
			return if_wt_If111_evalResult;
		}

		bool if_wt_If140_hasRun=false;
		bool if_wt_If140_evalResult;
		public bool if_wt_If140() {
			if (if_wt_If140_hasRun) {
				if_wt_If140_hasRun = false;
				return if_wt_If140_evalResult;
			}
			if_wt_If140_hasRun = true;
			if_wt_If140_evalResult = (varLcLogCauseOfConcern_List.CurrentRec.ssENStudentLog.ssLogRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId);
			return if_wt_If140_evalResult;
		}

		public void cntContainerHistoryDescription_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntContainerHistoryDescription_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntContainerHistoryDescription_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "vertical-align: middle;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntContainerHistoryDescription_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtContainerHistoryDescription)
		/// </summary>
		/// <returns>The Visible State of wtContainerHistoryDescription</returns>
		public bool cntContainerHistoryDescription_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container89_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container89_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container89_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:relative;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container89_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container89)
		/// </summary>
		/// <returns>The Visible State of wt_Container89</returns>
		public bool cnt_Container89_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container11_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container11_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container11_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #6F6A6A;font-size: 15px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container11_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container11)
		/// </summary>
		/// <returns>The Visible State of wt_Container11</returns>
		public bool cnt_Container11_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = 3LZZsWb7CkGm5fG_kd2I7Q) Expression:
		///  LogCauseOfConcern.List.Current.StudentLog.DescriptionType + ", "
		/// + LogCauseOfConcern.List.Current.StudentLog.UserDescription
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression123() {
			return ((getWtLogCauseOfConcernList().CurrentRec.ssENStudentLog.ssDescriptionType+ ", ") +getWtLogCauseOfConcernList().CurrentRec.ssENStudentLog.ssUserDescription);
		}
		public void cnt_Container134_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container134_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container134_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #9C9898;font-size: 11px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container134_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container134)
		/// </summary>
		/// <returns>The Visible State of wt_Container134</returns>
		public bool cnt_Container134_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container141_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container141_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container141_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #9C9898;font-size: 11px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container141_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container141)
		/// </summary>
		/// <returns>The Visible State of wt_Container141</returns>
		public bool cnt_Container141_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Function to dump expression (Key = i+YvwpiCh06FDYXxW0xE_g) Expression: "by " +
		///  LogCauseOfConcern.List.Current.User.Name + " on "
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression132() {
			return (("by " +getWtLogCauseOfConcernList().CurrentRec.ssENUser.ssName) + " on ");
		}
		public void cnt_Container136_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container136_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container136_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #9C9898;font-size: 11px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container136_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container136)
		/// </summary>
		/// <returns>The Visible State of wt_Container136</returns>
		public bool cnt_Container136_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance116_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
				widget.inParamDate = Convert.ToDateTime(getWtLogCauseOfConcernList().CurrentRec.ssENStudentLog.ssDateTime.ToString("yyyy-M-d"));
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If138_hasRun=false;
		bool if_wt_If138_evalResult;
		public bool if_wt_If138() {
			if (if_wt_If138_hasRun) {
				if_wt_If138_hasRun = false;
				return if_wt_If138_evalResult;
			}
			if_wt_If138_hasRun = true;
			if_wt_If138_evalResult = (varLcCurrentTab==2);
			return if_wt_If138_evalResult;
		}

		public void cntChangeStatus_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntChangeStatus_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntChangeStatus_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntChangeStatus_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtChangeStatus)
		/// </summary>
		/// <returns>The Visible State of wtChangeStatus</returns>
		public bool cntChangeStatus_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntOverview2_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntOverview2_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntOverview2_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin:21px;color:#757575;font-size: 12px;text-align: left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntOverview2_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtOverview2)
		/// </summary>
		/// <returns>The Visible State of wtOverview2</returns>
		public bool cntOverview2_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container64_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container64_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container64_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container64_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container64)
		/// </summary>
		/// <returns>The Visible State of wt_Container64</returns>
		public bool cnt_Container64_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntReason_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntReason_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntReason_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-weight: bold;width:300px;margin-left:5px;margin-top:0;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntReason_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtReason)
		/// </summary>
		/// <returns>The Visible State of wtReason</returns>
		public bool cntReason_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Text137_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Text137_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Text137_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-weight: bold;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container10_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container10_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container10_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inline;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container10_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container10)
		/// </summary>
		/// <returns>The Visible State of wt_Container10</returns>
		public bool cnt_Container10_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container124_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container124_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container124_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container124_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container124)
		/// </summary>
		/// <returns>The Visible State of wt_Container124</returns>
		public bool cnt_Container124_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container83_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container83_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container83_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "height:25px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container83_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container83)
		/// </summary>
		/// <returns>The Visible State of wt_Container83</returns>
		public bool cnt_Container83_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void sel_ComboBox22_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				sel_ComboBox22_setInlineAttributes(sender, e);
				if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
				if (Rt_wt_ComboBox22.SpecialListVal == "0")
				((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
				RLCauseOfConcernReasonRecordList Rt_wt_ComboBox22_reclist = queryResGetCauseOfConcernReasons_outParamList;
				Rt_wt_ComboBox22_reclist.StartIteration();
				try {
					while (!Rt_wt_ComboBox22_reclist.Eof) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wt_ComboBox22_reclist.CurrentRec.ssENCauseOfConcernReason.ssReason, Convert.ToString(Rt_wt_ComboBox22_reclist.CurrentRec.ssENCauseOfConcernReason.ssId)));
						if (ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssReasonId == Convert.ToInt32(Convert.ToString(Rt_wt_ComboBox22_reclist.CurrentRec.ssENCauseOfConcernReason.ssId))) {
							((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
						}
						Rt_wt_ComboBox22_reclist.Advance();
					}
				} finally {
					Rt_wt_ComboBox22_reclist.EndIteration();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string sel_ComboBox22_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #6F6A6A;font-size: 15px;position:absolute;";
					oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
					} else {
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void sel_ComboBox22_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wt_ComboBox22.SpecialListVal = dropDown.SelectedValue.Substring(8);
				ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssReasonId = 0;
			}
			else {
				Rt_wt_ComboBox22.SpecialListVal = "";
				try {
					ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssReasonId = Convert.ToInt32(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_ComboBox22)
		/// </summary>
		/// <returns>The Visible State of wt_ComboBox22</returns>
		public bool sel_ComboBox22_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_ComboBox22)
		/// </summary>
		/// <returns>The Enabled State of wt_ComboBox22</returns>
		public bool sel_ComboBox22_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (sel_ComboBox22)
		/// </summary>
		/// <returns>The Mandatory Value of sel_ComboBox22</returns>
		public bool sel_ComboBox22_isMandatory() {
			return false;
		}

		public void cnt_Container81_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container81_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container81_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "position: relative;margin-top: 6px;margin-right:6px;cursor: pointer;float:right;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container81_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container81)
		/// </summary>
		/// <returns>The Visible State of wt_Container81</returns>
		public bool cnt_Container81_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cntDescription_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntDescription_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntDescription_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-top:15px;font-weight: bold;width:300px;margin-left:5px";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntDescription_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtDescription)
		/// </summary>
		/// <returns>The Visible State of wtDescription</returns>
		public bool cntDescription_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wt_Text62_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wt_Text62_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wt_Text62_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "font-weight: bold;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cntResponsible2_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntResponsible2_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntResponsible2_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cntResponsible2_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtResponsible2)
		/// </summary>
		/// <returns>The Visible State of wtResponsible2</returns>
		public bool cntResponsible2_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container95_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container95_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container95_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inline;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container95_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container95)
		/// </summary>
		/// <returns>The Visible State of wt_Container95</returns>
		public bool cnt_Container95_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void inputwtEditRecordCauseConcernInput_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				inputwtEditRecordCauseConcernInput_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string inputwtEditRecordCauseConcernInput_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: #6F6A6A;font-size: 15px;padding: 1px 6px;";
					oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
					} else {
						((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtEditRecordCauseConcernInput_input_value() {
			if (("" !=ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssDescription)) {
				return ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssDescription;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtEditRecordCauseConcernInput");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssDescription;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtEditRecordCauseConcernInput_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssDescription = ""; 
				} else {
					ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssDescription = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				ssEditRecordCauseOfConcernRecord.ssENCauseOfConcern.ssDescription = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtEditRecordCauseConcernInput)
		/// </summary>
		/// <returns>The Visible State of wtEditRecordCauseConcernInput</returns>
		public bool inputwtEditRecordCauseConcernInput_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wtEditRecordCauseConcernInput)
		/// </summary>
		/// <returns>The Enabled State of wtEditRecordCauseConcernInput</returns>
		public bool inputwtEditRecordCauseConcernInput_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtEditRecordCauseConcernInput)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtEditRecordCauseConcernInput</returns>
		public bool inputwtEditRecordCauseConcernInput_isMandatory() {
			return false;
		}

		public void cntWarapperSelectRAG_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cntWarapperSelectRAG_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cntWarapperSelectRAG_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:inlinemargin-top:15px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cntWarapperSelectRAG_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtWarapperSelectRAG)
		/// </summary>
		/// <returns>The Visible State of wtWarapperSelectRAG</returns>
		public bool cntWarapperSelectRAG_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container57_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container57_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container57_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = " width: 100px;cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = ((((varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId) || (((varLcCurrentSelectRAG!=ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId) && (varLcCurrentSelectRAG!=ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) && (varLcCurrentSelectRAG!=ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)))) ?("RAGSelectRaised"):("RAG_RaisedUnselect"));
				if (!cnt_Container57_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container57
		/// </summary>
		public void cnt_Container57_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeSelectedRAG(heContext
				, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container57)
		/// </summary>
		/// <returns>The Visible State of wt_Container57</returns>
		public bool cnt_Container57_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance15_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = ___WOooDz0S2Bvrbuxlnsg) Expression: "Not Sorted"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression39() {
			return "Not Sorted";
		}
		public void cnt_Container84_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container84_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container84_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = " width: 100px;cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("RAGSelectGreen"):("RAG_GreenUnselect"));
				if (!cnt_Container84_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container84
		/// </summary>
		public void cnt_Container84_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeSelectedRAG(heContext
				, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container84)
		/// </summary>
		/// <returns>The Visible State of wt_Container84</returns>
		public bool cnt_Container84_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance44_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = mkxIDKq0IUe4K0cJoaxjiA) Expression: "Green"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression8() {
			return "Green";
		}
		public void cnt_Container94_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container94_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container94_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = " width: 100px;cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("RAGSelectAmber"):("RAG_AmberUnselect"));
				if (!cnt_Container94_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container94
		/// </summary>
		public void cnt_Container94_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeSelectedRAG(heContext
				, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container94)
		/// </summary>
		/// <returns>The Visible State of wt_Container94</returns>
		public bool cnt_Container94_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance36_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = _HtprNWxp0qOQkPhKGHEiA) Expression: "Amber"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression118() {
			return "Amber";
		}
		public void cnt_Container68_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container68_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container68_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = " width: 100px;cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("RAGSelectRed"):("RAG_RedUnselect"));
				if (!cnt_Container68_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container68
		/// </summary>
		public void cnt_Container68_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandChangeSelectedRAG(heContext
				, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container68)
		/// </summary>
		/// <returns>The Visible State of wt_Container68</returns>
		public bool cnt_Container68_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance27_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container29_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container29_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container29_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "width:327px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container29_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container29)
		/// </summary>
		/// <returns>The Visible State of wt_Container29</returns>
		public bool cnt_Container29_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container65_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container65_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container65_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container65_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container65)
		/// </summary>
		/// <returns>The Visible State of wt_Container65</returns>
		public bool cnt_Container65_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void Hunspell_webBlck_WebBlockInstance24_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink widget = (proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink) sender;
				widget.inParamTextInputId = this.FindControl("wtEditRecordCauseConcernInput").ClientID;
				widget.inParamExtraStyle = "";
				widget.inParamInPopupWindow = true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container153_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container153_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container153_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container153_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container153)
		/// </summary>
		/// <returns>The Visible State of wt_Container153</returns>
		public bool cnt_Container153_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance77_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon widget = (ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon) sender;
				widget.inParamTextInputId = this.FindControl("wtEditRecordCauseConcernInput").ClientID;
				widget.inParamAutoCompleteType = ENAutoCompleteBankTypeEntity.GetRecordByKey(ObjectKey.Parse("0SXHbosqdk2gX_Ma6ZCbmQ")).ssId;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container125_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container125_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container125_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container125_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container125)
		/// </summary>
		/// <returns>The Visible State of wt_Container125</returns>
		public bool cnt_Container125_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container66_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container66_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container66_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container66_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container66)
		/// </summary>
		/// <returns>The Visible State of wt_Container66</returns>
		public bool cnt_Container66_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container49_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container49_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container49_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container49_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container49
		/// </summary>
		public void cnt_Container49_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandSave(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container49)
		/// </summary>
		/// <returns>The Visible State of wt_Container49</returns>
		public bool cnt_Container49_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance127_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EdAx1MS_gkWfsLiHNqAN4g")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If142_hasRun=false;
		bool if_wt_If142_evalResult;
		public bool if_wt_If142() {
			if (if_wt_If142_hasRun) {
				if_wt_If142_hasRun = false;
				return if_wt_If142_evalResult;
			}
			if_wt_If142_hasRun = true;
			if_wt_If142_evalResult = varLcEdit;
			return if_wt_If142_evalResult;
		}

		public void wtEditRecordCauseOfConcern_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wtEditRecordCauseOfConcern_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wtEditRecordCauseOfConcern_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void wtEditRecordCauseOfConcern_onDataBindingDataSource(object sender, System.EventArgs e) {
		}
		public static class FuncCommandChangeSelectedRAG {
		}
		public static class FuncCommandEdit {
		}
		public static class FuncCommandSave {

			/// <summary>
			/// Query Function "GetCauseOfConcernReasonById" of Action "Save"
			/// </summary>
			public static RLCauseOfConcernReasonRecordList datasetGetCauseOfConcernReasonById(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENCauseOfConcernReason.[REASON] o2, NULL o3");
				fromBuilder.Append(" FROM {CauseOfConcernReason} ENCauseOfConcernReason");
				whereBuilder.Append(" WHERE ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENCauseOfConcernReason.[ID] = @qpinP) AND (ENCauseOfConcernReason.[ID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENCauseOfConcernReason.[ID] IS NULL)");
				}
				orderByBuilder.Append(" ORDER BY ENCauseOfConcernReason.[REASON] ASC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLCauseOfConcernReasonRecordList outParamList = new RLCauseOfConcernReasonRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					true, false, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLCauseOfConcernReasonRecordList _tmp = new RLCauseOfConcernReasonRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CauseOfConcern.Save.GetCauseOfConcernReasonById.List");
						outParamList = (RLCauseOfConcernReasonRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CauseOfConcern.Save.GetCauseOfConcernReasonById.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLCauseOfConcernReasonRecordList _tmp = new RLCauseOfConcernReasonRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CauseOfConcern.Save.GetCauseOfConcernReasonById.List");
							outParamList = (RLCauseOfConcernReasonRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CauseOfConcern.Save.GetCauseOfConcernReasonById.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetCauseOfConcernsByStudentReferenceReadDB(ref RCRAGStatusCauseOfConcernRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENCauseOfConcern.Read(r, ref index);
				rec.ssENRAGStatus.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetCauseOfConcernsByStudentReference" of Action "Save"
			/// </summary>
			public static RLRAGStatusCauseOfConcernRecordList datasetGetCauseOfConcernsByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, ENCauseOfConcern.[RAGSTATUSID] o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12");
				fromBuilder.Append(" FROM ({RAGStatus} ENRAGStatus Inner JOIN {CauseOfConcern} ENCauseOfConcern ON (ENCauseOfConcern.[RAGSTATUSID] = ENRAGStatus.[ID])) ");
				whereBuilder.Append(" WHERE (ENRAGStatus.[ID] <> ");
				whereBuilder.Append("'" + ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId.Replace("'", "''") + "'");
				whereBuilder.Append(") AND ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENCauseOfConcern.[STUDENTREFERENCE] = @qpstP) AND (ENCauseOfConcern.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENCauseOfConcern.[STUDENTREFERENCE] IS NULL)");
				}
				orderByBuilder.Append(" ORDER BY ENRAGStatus.[ORDER] ASC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLRAGStatusCauseOfConcernRecordList outParamList = new RLRAGStatusCauseOfConcernRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetCauseOfConcernsByStudentReferenceReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[2];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, true, false, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLRAGStatusCauseOfConcernRecordList _tmp = new RLRAGStatusCauseOfConcernRecordList();
					_tmp.AlternateReadDBMethod = datasetGetCauseOfConcernsByStudentReferenceReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CauseOfConcern.Save.GetCauseOfConcernsByStudentReference.List");
						outParamList = (RLRAGStatusCauseOfConcernRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CauseOfConcern.Save.GetCauseOfConcernsByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLRAGStatusCauseOfConcernRecordList _tmp = new RLRAGStatusCauseOfConcernRecordList();
						_tmp.AlternateReadDBMethod = datasetGetCauseOfConcernsByStudentReferenceReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CauseOfConcern.Save.GetCauseOfConcernsByStudentReference.List");
							outParamList = (RLRAGStatusCauseOfConcernRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CauseOfConcern.Save.GetCauseOfConcernsByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}
		public static class FuncCommandChangeTab {
		}
		public static class FuncssPreparation {

			private static void datasetGetCausesForConcernByStudentReadDB(ref RCStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENCauseOfConcern.Read(r, ref index);
				rec.ssENCauseOfConcernReason.Read(r, ref index);
				rec.ssENRAGStatus.Read(r, ref index);
				rec.ssENStudent.Read(r, ref index);
				rec.ssENUser.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetCausesForConcernByStudent" of Action "Preparation"
			/// </summary>
			public static RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList datasetGetCausesForConcernByStudent(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Multiple {ListCausesOfConcern}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("ENCauseOfConcern.[ID] o1, NULL o2, ENCauseOfConcern.[RAGSTATUSID] o3, ENCauseOfConcern.[REASONID] o4, ENCauseOfConcern.[DESCRIPTION] o5, NULL o6, ENCauseOfConcern.[CREATEDAT] o7, NULL o8, ENCauseOfConcernReason.[REASON] o9, NULL o10, ENRAGStatus.[ID] o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27, NULL o28, NULL o29, NULL o30, NULL o31, NULL o32, NULL o33, NULL o34, NULL o35, NULL o36, NULL o37, NULL o38, NULL o39, NULL o40, NULL o41, NULL o42, NULL o43, ENUser.[NAME] o44, NULL o45, NULL o46, NULL o47, NULL o48, NULL o49, NULL o50, NULL o51, NULL o52");
				fromBuilder.Append(" FROM (((({Student} ENStudent Inner JOIN {CauseOfConcern} ENCauseOfConcern ON (ENCauseOfConcern.[STUDENTREFERENCE] = ENStudent.[STUDENTREFERENCE]))  Inner JOIN {RAGStatus} ENRAGStatus ON (ENCauseOfConcern.[RAGSTATUSID] = ENRAGStatus.[ID]))  Inner JOIN {CauseOfConcernReason} ENCauseOfConcernReason ON (ENCauseOfConcern.[REASONID] = ENCauseOfConcernReason.[ID]))  Inner JOIN {User} ENUser ON (ENCauseOfConcern.[CREATEDBY] = ENUser.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENCauseOfConcern.[STUDENTREFERENCE] = @qpstP) AND (ENCauseOfConcern.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENCauseOfConcern.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (ENCauseOfConcern.[RAGSTATUSID] <> ");
				whereBuilder.Append("'" + ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId.Replace("'", "''") + "'");
				whereBuilder.Append(")");
				orderByBuilder.Append(" ORDER BY ENCauseOfConcern.[CREATEDAT] DESC , ENRAGStatus.[ORDER] ASC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList outParamList = new RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetCausesForConcernByStudentReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[5];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					false, true, false, true, true, true, true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					false, true, true, true, true
				}
				);
				opt[3] = new BitArray(new bool[] {
					true, false, true
				}
				);
				opt[4] = new BitArray(new bool[] {
					false, true, false, false, false, true, false
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList _tmp = new RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList();
					_tmp.AlternateReadDBMethod = datasetGetCausesForConcernByStudentReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CauseOfConcern.Preparation.GetCausesForConcernByStudent.List");
						outParamList = (RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CauseOfConcern.Preparation.GetCausesForConcernByStudent.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList _tmp = new RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList();
						_tmp.AlternateReadDBMethod = datasetGetCausesForConcernByStudentReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CauseOfConcern.Preparation.GetCausesForConcernByStudent.List");
							outParamList = (RLStudentUserRAGStatusCauseOfConcernReasonCauseOfConcernRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CauseOfConcern.Preparation.GetCausesForConcernByStudent.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			/// <summary>
			/// Query Function "GetCauseOfConcernReasons" of Action "Preparation"
			/// </summary>
			public static RLCauseOfConcernReasonRecordList datasetGetCauseOfConcernReasons(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount) {
				// Query Iterations: Multiple {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("ENCauseOfConcernReason.[ID] o1, ENCauseOfConcernReason.[REASON] o2, NULL o3");
				fromBuilder.Append(" FROM {CauseOfConcernReason} ENCauseOfConcernReason");
				whereBuilder.Append(" WHERE (ENCauseOfConcernReason.[IS_ACTIVE] = 1)");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLCauseOfConcernReasonRecordList outParamList = new RLCauseOfConcernReasonRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					false, false, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLCauseOfConcernReasonRecordList _tmp = new RLCauseOfConcernReasonRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CauseOfConcern.Preparation.GetCauseOfConcernReasons.List");
						outParamList = (RLCauseOfConcernReasonRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CauseOfConcern.Preparation.GetCauseOfConcernReasons.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLCauseOfConcernReasonRecordList _tmp = new RLCauseOfConcernReasonRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CauseOfConcern.Preparation.GetCauseOfConcernReasons.List");
							outParamList = (RLCauseOfConcernReasonRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CauseOfConcern.Preparation.GetCauseOfConcernReasons.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetStudentLogsByStudentReferenceReadDB(ref RCStudentUserStudentLogStudentLogTypeRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENStudent.Read(r, ref index);
				rec.ssENStudentLog.Read(r, ref index);
				rec.ssENStudentLogType.Read(r, ref index);
				rec.ssENUser.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetStudentLogsByStudentReference" of Action "Preparation"
			/// </summary>
			public static RLStudentUserStudentLogStudentLogTypeRecordList datasetGetStudentLogsByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Multiple {LogCauseOfConcern}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27, NULL o28, NULL o29, ENStudentLog.[DATETIME] o30, NULL o31, NULL o32, ENStudentLog.[USERDESCRIPTION] o33, ENStudentLog.[LOGRAGID] o34, NULL o35, NULL o36, NULL o37, NULL o38, NULL o39, NULL o40, NULL o41, NULL o42, NULL o43, NULL o44, NULL o45, NULL o46, NULL o47, NULL o48, NULL o49, NULL o50, NULL o51, NULL o52, NULL o53, NULL o54, NULL o55, NULL o56, NULL o57, NULL o58, NULL o59, NULL o60, NULL o61, NULL o62, NULL o63, NULL o64, ENStudentLog.[DESCRIPTIONTYPE] o65, NULL o66, NULL o67, NULL o68, NULL o69, NULL o70, NULL o71, NULL o72, NULL o73, NULL o74, NULL o75, ENUser.[NAME] o76, NULL o77, NULL o78, NULL o79, NULL o80, NULL o81, NULL o82, NULL o83, NULL o84");
				fromBuilder.Append(" FROM ((({StudentLog} ENStudentLog Left JOIN {StudentLogType} ENStudentLogType ON (ENStudentLog.[STUDENTLOGTYPE] = ENStudentLogType.[LOGTYPE]))  Left JOIN {Student} ENStudent ON (ENStudentLog.[STUDENTREFERENCE] = ENStudent.[STUDENTREFERENCE]))  Left JOIN {User} ENUser ON (ENStudentLog.[EVENTBY] = ENUser.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudentLog.[STUDENTREFERENCE] = @qpstP) AND (ENStudentLog.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudentLog.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (ENStudentLog.[STUDENTLOGTYPE] = ");
				whereBuilder.Append("'" + ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("hTcMAzvg9kmgJqUGGgXnPg")).ssLogType.Replace("'", "''") + "'");
				whereBuilder.Append(")");
				orderByBuilder.Append(" ORDER BY ENStudentLog.[DATETIME] DESC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentUserStudentLogStudentLogTypeRecordList outParamList = new RLStudentUserStudentLogStudentLogTypeRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetStudentLogsByStudentReferenceReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[4];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					false, true, false, true, true, true, true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, true, false, true, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true
				}
				);
				opt[3] = new BitArray(new bool[] {
					true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentUserStudentLogStudentLogTypeRecordList _tmp = new RLStudentUserStudentLogStudentLogTypeRecordList();
					_tmp.AlternateReadDBMethod = datasetGetStudentLogsByStudentReferenceReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CauseOfConcern.Preparation.GetStudentLogsByStudentReference.List");
						outParamList = (RLStudentUserStudentLogStudentLogTypeRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CauseOfConcern.Preparation.GetStudentLogsByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentUserStudentLogStudentLogTypeRecordList _tmp = new RLStudentUserStudentLogStudentLogTypeRecordList();
						_tmp.AlternateReadDBMethod = datasetGetStudentLogsByStudentReferenceReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query StaffView.PopUp_CauseOfConcern.Preparation.GetStudentLogsByStudentReference.List");
							outParamList = (RLStudentUserStudentLogStudentLogTypeRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query StaffView.PopUp_CauseOfConcern.Preparation.GetStudentLogsByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}

		public override Control FindControl(string id) {
			if (id == "wtTabWrapper") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtTabWrapper");
			}
			if (id == "wt_Container98") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container98");
			}
			if (id == "wt_Table7") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Table7");
			}
			if (id == "wt_TableRow12") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableRow12");
			}
			if (id == "wt_TableCell109") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableCell109");
			}
			if (id == "wt_Container55") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container55");
			}
			if (id == "RichWidgets_wt_WebBlockInstance150") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance150");
			}
			if (id == "wt_InlineExpression61") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_InlineExpression61");
			}
			if (id == "wt_Container18") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container18");
			}
			if (id == "wt_Table45") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Table45");
			}
			if (id == "wt_TableRow17") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableRow17");
			}
			if (id == "wt_TableCell146") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableCell146");
			}
			if (id == "wt_Container97") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container97");
			}
			if (id == "RichWidgets_wt_WebBlockInstance114") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance114");
			}
			if (id == "wt_InlineExpression76") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_InlineExpression76");
			}
			if (id == "wtWrapperContent") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtWrapperContent");
			}
			if (id == "wt_If33") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_If33");
			}
			if (id == "wt_If33T") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_If33T");
			}
			if (id == "wtHistory") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtHistory");
			}
			if (id == "wtCurrentRAG2") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtCurrentRAG2");
			}
			if (id == "wtListCausesOfConcern") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtListCausesOfConcern");
			}
			if (id == "wtLogCauseforConcern") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtLogCauseforConcern");
			}
			if (id == "wtCurrentHistory") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtCurrentHistory");
			}
			if (id == "wtContainerHistory") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtContainerHistory");
			}
			if (id == "wtContainerHistoryTitle") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtContainerHistoryTitle");
			}
			if (id == "wt_Text149") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Text149");
			}
			if (id == "wtLogCauseOfConcern") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtLogCauseOfConcern");
			}
			if (id == "wt_If33F") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_If33F");
			}
			if (id == "wt_If138") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_If138");
			}
			if (id == "wt_If138T") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_If138T");
			}
			if (id == "wtChangeStatus") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtChangeStatus");
			}
			if (id == "wtOverview2") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtOverview2");
			}
			if (id == "wt_Container64") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container64");
			}
			if (id == "wtReason") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtReason");
			}
			if (id == "wt_Text137") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Text137");
			}
			if (id == "wt_Container10") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container10");
			}
			if (id == "wt_Container124") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container124");
			}
			if (id == "wt_Container83") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container83");
			}
			if (id == "wt_ComboBox22") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_ComboBox22");
			}
			if (id == "wt_Container81") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container81");
			}
			if (id == "wt_Image108") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Image108");
			}
			if (id == "wtDescription") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtDescription");
			}
			if (id == "wt_Text62") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Text62");
			}
			if (id == "wtResponsible2") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtResponsible2");
			}
			if (id == "wt_Container95") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container95");
			}
			if (id == "wtEditRecordCauseConcernInput") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtEditRecordCauseConcernInput");
			}
			if (id == "wtWarapperSelectRAG") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtWarapperSelectRAG");
			}
			if (id == "wt_Table96") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Table96");
			}
			if (id == "wt_TableRow60") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableRow60");
			}
			if (id == "wt_TableCell23") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableCell23");
			}
			if (id == "wt_Container57") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container57");
			}
			if (id == "RichWidgets_wt_WebBlockInstance15") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance15");
			}
			if (id == "wt_InlineExpression39") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_InlineExpression39");
			}
			if (id == "wt_TableRow2") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableRow2");
			}
			if (id == "wt_TableCell119") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableCell119");
			}
			if (id == "wt_Container84") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container84");
			}
			if (id == "RichWidgets_wt_WebBlockInstance44") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance44");
			}
			if (id == "wt_InlineExpression8") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_InlineExpression8");
			}
			if (id == "wt_TableRow144") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableRow144");
			}
			if (id == "wt_TableCell110") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableCell110");
			}
			if (id == "wt_Container94") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container94");
			}
			if (id == "RichWidgets_wt_WebBlockInstance36") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance36");
			}
			if (id == "wt_InlineExpression118") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_InlineExpression118");
			}
			if (id == "wt_TableRow16") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableRow16");
			}
			if (id == "wt_TableCell105") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableCell105");
			}
			if (id == "wt_Container68") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container68");
			}
			if (id == "RichWidgets_wt_WebBlockInstance27") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance27");
			}
			if (id == "wt_Text42") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Text42");
			}
			if (id == "wt_Container29") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container29");
			}
			if (id == "wt_Table120") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Table120");
			}
			if (id == "wt_TableRow34") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableRow34");
			}
			if (id == "wt_TableCell129") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableCell129");
			}
			if (id == "wt_Container65") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container65");
			}
			if (id == "Hunspell_wt_WebBlockInstance24") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("Hunspell_wt_WebBlockInstance24");
			}
			if (id == "wt_Container153") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container153");
			}
			if (id == "wt_WebBlockInstance77") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_WebBlockInstance77");
			}
			if (id == "wt_TableCell139") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_TableCell139");
			}
			if (id == "wt_Container125") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container125");
			}
			if (id == "wt_Container66") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container66");
			}
			if (id == "wt_Container49") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Container49");
			}
			if (id == "RichWidgets_wt_WebBlockInstance127") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("RichWidgets_wt_WebBlockInstance127");
			}
			if (id == "wt_If142") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_If142");
			}
			if (id == "wt_If142T") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_If142T");
			}
			if (id == "wt_Text3") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Text3");
			}
			if (id == "wt_If142F") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_If142F");
			}
			if (id == "wt_Text100") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_Text100");
			}
			if (id == "wt_If138F") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wt_If138F");
			}
			if (id == "wtEditRecordCauseOfConcern") {
				return wtPopUpCauseOfConcern.wtPopupContent.FindControl("wtEditRecordCauseOfConcern");
			}
			return base.FindControl(id);
		}
		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			_isRendering = true;
			Page_Load(null, null); _isRendering = false;
			this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}
		public override string WebBlockIdentifier {
			get {
				return "CaseConferencing.KiTyaqMEO0EaYB_LktdRFhA";
			}
		}
	}

}
