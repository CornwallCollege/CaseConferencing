/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Web.SessionState;
using System.IO;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Runtime.Serialization;
using System.Web.Caching;
using System.Text;


namespace ssCaseConferencing.Flows.FlowLearnerView {
	public abstract class WBlkLearnerDetailsLayout: OSUserControl, IWebScreen, INegotiateTabIndexes, IAjaxNotifyEvent {

		/// <summary>
		/// Delegate Definitions
		/// </summary>
		/// <summary>
		/// Custom Events Definitions
		/// </summary>
		/// <summary>
		/// Parameters and Local Variables Definitions
		/// </summary>
		/// <summary>
		/// Screen Input Parameter inParamStudentReference. Description:
		/// </summary>
		public string inParamStudentReference = "";
		/// <summary>
		/// Screen Input Parameter inParamCategoryId. Description:
		/// </summary>
		public int inParamCategoryId = BuiltInFunction.NullIdentifier();
		/// <summary>
		/// Screen Input Parameter inParamOfferingCode. Description:
		/// </summary>
		public string inParamOfferingCode = "";
		/// <summary>
		/// Screen Input Parameter inParamShowUnit. Description:
		/// </summary>
		public bool inParamShowUnit = false;
		/// <summary>
		/// Screen Input Parameter inParamShowTarget. Description:
		/// </summary>
		public bool inParamShowTarget = false;
		/// <summary>
		/// Screen Input Parameter inParamActiveLearnerDetailMenu. Description:
		/// </summary>
		public string inParamActiveLearnerDetailMenu = "";
		/// <summary>
		/// Screen Input Parameter inParamSessionId. Description:
		/// </summary>
		public int inParamSessionId = 0;
		/// <summary>
		/// Screen Input Parameter inParamCourseCode. Description:
		/// </summary>
		public string inParamCourseCode = "";
		/// <summary>
		/// Screen Input Parameter inParamFromLearnerList. Description:
		/// </summary>
		public bool inParamFromLearnerList = false;
		/// <summary>
		/// Screen Input Parameter inParamActiveTab. Description:
		/// </summary>
		public int inParamActiveTab = ENTabsEntity.GetRecordByKey(ObjectKey.Parse("avXIv1WG4UWcoRPTcOjaOw")).ssId;
		/// <summary>
		/// Variable ThemeProvider_wt_WebBlockInstance217
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main ThemeProvider_wt_WebBlockInstance217;
		/// <summary>
		/// Variable "True" if the Widget wt_If63
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If63T;

		/// <summary>
		/// Variable "True" if the Widget wt_If63
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If63F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container194;
		/// <summary>
		/// Variable ThemeProvider_wtBreadcrumb
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkBreadCrumb ThemeProvider_wtBreadcrumb;
		/// <summary>
		/// Variable (wt_Link47) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link47;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container227;
		/// <summary>
		/// Variable (wt_Link112) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link112;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container92;
		/// <summary>
		/// Variable (wt_Link52) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link52;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container176;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container115;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container186;
		/// <summary>
		/// Variable ThemeProvider_wtTabs
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTabsClient ThemeProvider_wtTabs;
		/// <summary>
		/// Variable (wt_Link31) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link31;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container58;
		/// <summary>
		/// Variable "True" if the Widget wt_If62
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If62T;

		/// <summary>
		/// Variable "True" if the Widget wt_If62
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If62F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container110;
		/// <summary>
		/// Variable "True" if the Widget wt_If191
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If191T;

		/// <summary>
		/// Variable "True" if the Widget wt_If191
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If191F;
		/// <summary>
		/// Variable (wt_Link81) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link81;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container45;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container85;
		/// <summary>
		/// Variable "True" if the Widget wt_If134
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If134T;

		/// <summary>
		/// Variable "True" if the Widget wt_If134
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If134F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container39;
		/// <summary>
		/// Variable "True" if the Widget wt_If116
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If116T;

		/// <summary>
		/// Variable "True" if the Widget wt_If116
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If116F;
		/// <summary>
		/// Variable (wt_Link223) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link223;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container6;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container150;
		/// <summary>
		/// Variable "True" if the Widget wt_If46
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If46T;

		/// <summary>
		/// Variable "True" if the Widget wt_If46
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If46F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container203;
		/// <summary>
		/// Variable "True" if the Widget wt_If43
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If43T;

		/// <summary>
		/// Variable "True" if the Widget wt_If43
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If43F;
		/// <summary>
		/// Variable (wt_Link114) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link114;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container3;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container160;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container103;
		/// <summary>
		/// Variable "True" if the Widget wt_If68
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If68T;

		/// <summary>
		/// Variable "True" if the Widget wt_If68
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If68F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container221;
		/// <summary>
		/// Variable "True" if the Widget wt_If38
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If38T;

		/// <summary>
		/// Variable "True" if the Widget wt_If38
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If38F;
		/// <summary>
		/// Variable (wt_Link40) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link40;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container69;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container156;
		/// <summary>
		/// Variable "True" if the Widget wt_If204
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If204T;

		/// <summary>
		/// Variable "True" if the Widget wt_If204
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If204F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container128;
		/// <summary>
		/// Variable "True" if the Widget wt_If199
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If199T;

		/// <summary>
		/// Variable "True" if the Widget wt_If199
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If199F;
		/// <summary>
		/// Variable (wt_Link13) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wt_Link13;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container61;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container208;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container56;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container222;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container175;
		/// <summary>
		/// Variable "True" if the Widget wt_If133
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If133T;

		/// <summary>
		/// Variable "True" if the Widget wt_If133
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If133F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container35;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container77;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container151;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container84;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container201;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container53;
		/// <summary>
		/// Variable "True" if the Widget wt_If4
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If4T;

		/// <summary>
		/// Variable "True" if the Widget wt_If4
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If4F;
		/// <summary>
		/// Variable "True" if the Widget wt_If5
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If5T;

		/// <summary>
		/// Variable "True" if the Widget wt_If5
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If5F;
		/// <summary>
		/// Variable "True" if the Widget wt_If30
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If30T;

		/// <summary>
		/// Variable "True" if the Widget wt_If30
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If30F;
		/// <summary>
		/// Variable "True" if the Widget wt_If55
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If55T;

		/// <summary>
		/// Variable "True" if the Widget wt_If55
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If55F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container207;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container139;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container90;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container121;
		/// <summary>
		/// Variable "True" if the Widget wt_If215
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If215T;

		/// <summary>
		/// Variable "True" if the Widget wt_If215
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If215F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container101;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container171;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container122;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container155;
		/// <summary>
		/// Variable "True" if the Widget wt_If183
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If183T;

		/// <summary>
		/// Variable "True" if the Widget wt_If183
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If183F;
		/// <summary>
		/// Variable "True" if the Widget wt_If118
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If118T;

		/// <summary>
		/// Variable "True" if the Widget wt_If118
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If118F;
		/// <summary>
		/// Variable "True" if the Widget wt_If21
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If21T;

		/// <summary>
		/// Variable "True" if the Widget wt_If21
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If21F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container129;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container124;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container145;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container143;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container180;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container142;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container188;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container97;
		public OutSystems.HubEdition.WebWidgets.Container wtRAG;
		public ITemplate phRAG {
			get; set; 
		}
		/// <summary>
		/// Variable "True" if the Widget wt_If44
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If44T;

		/// <summary>
		/// Variable "True" if the Widget wt_If44
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If44F;
		public OutSystems.HubEdition.WebWidgets.Container wtILP;
		public ITemplate phILP {
			get; set; 
		}
		/// <summary>
		/// Variable "True" if the Widget wt_If76
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If76T;

		/// <summary>
		/// Variable "True" if the Widget wt_If76
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If76F;
		public OutSystems.HubEdition.WebWidgets.Container wtSIAS;
		public ITemplate phSIAS {
			get; set; 
		}
		/// <summary>
		/// Variable "True" if the Widget wt_If113
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If113T;

		/// <summary>
		/// Variable "True" if the Widget wt_If113
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If113F;
		public OutSystems.HubEdition.WebWidgets.Container wtProgramme;
		public ITemplate phProgramme {
			get; set; 
		}
		/// <summary>
		/// Variable "True" if the Widget wt_If87
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If87T;

		/// <summary>
		/// Variable "True" if the Widget wt_If87
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If87F;
		public OutSystems.HubEdition.WebWidgets.Container wtSafeguarding;
		public ITemplate phSafeguarding {
			get; set; 
		}
		/// <summary>
		/// Variable "True" if the Widget wt_If161
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If161T;

		/// <summary>
		/// Variable "True" if the Widget wt_If161
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If161F;
		public OutSystems.HubEdition.WebWidgets.Container wtProgressReport;
		public ITemplate phProgressReport {
			get; set; 
		}
		private bool _isRendering = false;
		public HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();
		public string InstanceID;
		public string RuntimeID= "";
		RLStudentRecordList queryResGetStudentByStudentReference_outParamList = new RLStudentRecordList();
		int queryResGetStudentByStudentReference_outParamCount = 0;
		RLClusterCCSessionRecordList queryResGetCCSessionById_outParamList = new RLClusterCCSessionRecordList();
		int queryResGetCCSessionById_outParamCount = 0;
		RCStudentStudentLogRecord resStudentLog_GetCurrentValues_outParamStudentLog = new RCStudentStudentLogRecord(null);
		RCAcademicYear2Record resGetAcademicYearValues2_outParamAcademicYear = new RCAcademicYear2Record(null);
		RLIntRecordList queryResGetOverallAttendance_outParamList = new RLIntRecordList();
		int queryResGetOverallAttendance_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			if ((inParamSessionId!=BuiltInFunction.NullIdentifier())) {
				// Query datasetGetCCSessionById
				int datasetGetCCSessionById_maxRecords = 1;
				if (datasetGetCCSessionById_maxRecords < 1) datasetGetCCSessionById_maxRecords = 1;
				queryResGetCCSessionById_outParamList = FuncssPreparation.datasetGetCCSessionById(heContext, datasetGetCCSessionById_maxRecords, IterationMultiplicity.Never, out queryResGetCCSessionById_outParamCount, inParamSessionId
				);

			}
			// StudentLog_GetCurrentValues
			Actions.ActionStudentLog_GetCurrentValues(heContext, inParamStudentReference, out resStudentLog_GetCurrentValues_outParamStudentLog);
			// GetAcademicYearValues2
			Actions.ActionGetAcademicYearValues2(heContext, ENAcademicYearType2Entity.GetRecordByKey(ObjectKey.Parse("8ZDe8cEZhk2DF16FIzuk9A")).ssId, "", out resGetAcademicYearValues2_outParamAcademicYear);
			// Query datasetGetStudentByStudentReference
			int datasetGetStudentByStudentReference_maxRecords = 1;
			if (datasetGetStudentByStudentReference_maxRecords < 1) datasetGetStudentByStudentReference_maxRecords = 1;
			queryResGetStudentByStudentReference_outParamList = FuncssPreparation.datasetGetStudentByStudentReference(heContext, datasetGetStudentByStudentReference_maxRecords, IterationMultiplicity.Never, out queryResGetStudentByStudentReference_outParamCount, inParamStudentReference
			);
			// Query QueryGetOverallAttendance
			int QueryGetOverallAttendance_maxRecords = 0;
			queryResGetOverallAttendance_outParamList = FuncssPreparation.QueryGetOverallAttendance(heContext, QueryGetOverallAttendance_maxRecords, IterationMultiplicity.Never, out queryResGetOverallAttendance_outParamCount, inParamStudentReference
			, resGetAcademicYearValues2_outParamAcademicYear.ssENAcademicYear2.ssYY_YY
			);
		}
		static WBlkLearnerDetailsLayout() {
		}
		override protected void OnInit(EventArgs e) {
			InitializeComponent();
			base.OnInit(e);
			if (phRAG != null) {
				phRAG.InstantiateIn(wtRAG); 
			}
			if (phILP != null) {
				phILP.InstantiateIn(wtILP); 
			}
			if (phSIAS != null) {
				phSIAS.InstantiateIn(wtSIAS); 
			}
			if (phProgramme != null) {
				phProgramme.InstantiateIn(wtProgramme); 
			}
			if (phSafeguarding != null) {
				phSafeguarding.InstantiateIn(wtSafeguarding); 
			}
			if (phProgressReport != null) {
				phProgressReport.InstantiateIn(wtProgressReport); 
			}
		}
		private void InitializeComponent() {
			ThemeProvider_wt_WebBlockInstance217 = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main) FindControl("ThemeProvider_wt_WebBlockInstance217");
			wt_Container194 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container194");
			ThemeProvider_wtBreadcrumb = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkBreadCrumb) FindControl("ThemeProvider_wtBreadcrumb");
			wt_Link47 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link47");
			wt_Container227 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container227");
			wt_Link112 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link112");
			wt_Container92 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container92");
			wt_Link52 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link52");
			wt_Container176 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container176");
			wt_Container115 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container115");
			wt_Container186 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container186");
			ThemeProvider_wtTabs = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTabsClient) FindControl("ThemeProvider_wtTabs");
			wt_Link31 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link31");
			wt_Container58 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container58");
			wt_Container110 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container110");
			wt_Link81 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link81");
			wt_Container45 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container45");
			wt_Container85 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container85");
			wt_Container39 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container39");
			wt_Link223 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link223");
			wt_Container6 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container6");
			wt_Container150 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container150");
			wt_Container203 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container203");
			wt_Link114 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link114");
			wt_Container3 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container3");
			wt_Container160 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container160");
			wt_Container103 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container103");
			wt_Container221 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container221");
			wt_Link40 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link40");
			wt_Container69 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container69");
			wt_Container156 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container156");
			wt_Container128 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container128");
			wt_Link13 = (OutSystems.HubEdition.WebWidgets.HyperLink) FindControl("wt_Link13");
			wt_Container61 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container61");
			wt_Container208 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container208");
			wt_Container56 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container56");
			wt_Container222 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container222");
			wt_Container175 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container175");
			wt_Container35 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container35");
			wt_Container77 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container77");
			wt_Container151 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container151");
			wt_Container84 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container84");
			wt_Container201 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container201");
			wt_Container53 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container53");
			wt_Container207 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container207");
			wt_Container139 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container139");
			wt_Container90 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container90");
			wt_Container121 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container121");
			wt_Container101 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container101");
			wt_Container171 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container171");
			wt_Container122 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container122");
			wt_Container155 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container155");
			wt_Container129 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container129");
			wt_Container124 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container124");
			wt_Container145 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container145");
			wt_Container143 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container143");
			wt_Container180 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container180");
			wt_Container142 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container142");
			wt_Container188 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container188");
			wt_Container97 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container97");
			wtRAG = (OutSystems.HubEdition.WebWidgets.PlaceholderContainer) FindControl("wtRAG");
			wtILP = (OutSystems.HubEdition.WebWidgets.PlaceholderContainer) FindControl("wtILP");
			wtSIAS = (OutSystems.HubEdition.WebWidgets.PlaceholderContainer) FindControl("wtSIAS");
			wtProgramme = (OutSystems.HubEdition.WebWidgets.PlaceholderContainer) FindControl("wtProgramme");
			wtSafeguarding = (OutSystems.HubEdition.WebWidgets.PlaceholderContainer) FindControl("wtSafeguarding");
			wtProgressReport = (OutSystems.HubEdition.WebWidgets.PlaceholderContainer) FindControl("wtProgressReport");
			this.Load += new System.EventHandler(this.Page_Load);
			this.Unload += new System.EventHandler(this.Page_Unload);
		}
		private void Page_Load(object sender, System.EventArgs e) {
			((OSPageViewState) Page).EnableResetViewState();
			heContext = Global.App.OsContext;
			RuntimeID = ClientID;
			if (!Visible) return;
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!IsPostBack || _isRendering) {
					// register this block in the page so for later outputting the block javascript includes in their correct order
					((OSPage) Page).RegisterBlock(this);
					if (_isRendering) {
						Preparation(heContext);
					}
					bool bindEditRecords = IsViewStateEmpty;
				} else {
					FetchViewState();
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}
		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			if (!WasRendered) {
				return;
			}
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}
		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}
		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}


		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();

			#region store queryResGetCCSessionById_outParamList.

			int tmpcurrentrownumberqueryResGetCCSessionById_outParamList = queryResGetCCSessionById_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetCCSessionById_outParamList = queryResGetCCSessionById_outParamList.Eof;
			ArrayList storequeryResGetCCSessionById_outParamList = new ArrayList();

			// Write the needed fields of queryResGetCCSessionById_outParamList to the storequeryResGetCCSessionById_outParamList
			if (!queryResGetCCSessionById_outParamList.Empty) {
				try {
					queryResGetCCSessionById_outParamList.StartIteration();

					while (!queryResGetCCSessionById_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetCCSessionById_outParamList = new ArrayList();
						tmpFieldsqueryResGetCCSessionById_outParamList.Add(queryResGetCCSessionById_outParamList.CurrentRec.ssENCluster.ssClusterDescription == "" ?(object) null: queryResGetCCSessionById_outParamList.CurrentRec.ssENCluster.ssClusterDescription);
						tmpFieldsqueryResGetCCSessionById_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCCSessionById_outParamList.CurrentRec.ssENCluster.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetCCSessionById_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCCSessionById_outParamList.CurrentRec.ssENCluster.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, true, true
						}
						))));
						tmpFieldsqueryResGetCCSessionById_outParamList.Add(queryResGetCCSessionById_outParamList.CurrentRec.ssENCCSession.ssDescription == "" ?(object) null: queryResGetCCSessionById_outParamList.CurrentRec.ssENCCSession.ssDescription);
						tmpFieldsqueryResGetCCSessionById_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCCSessionById_outParamList.CurrentRec.ssENCCSession.ChangedAttributes, new BitArray(new bool[] {
							false, true, false, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetCCSessionById_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCCSessionById_outParamList.CurrentRec.ssENCCSession.OptimizedAttributes, new BitArray(new bool[] {
							true, false, true, true, true, true, true, true
						}
						))));
						storequeryResGetCCSessionById_outParamList.Add(tmpFieldsqueryResGetCCSessionById_outParamList);
						queryResGetCCSessionById_outParamList.Advance();
					}
				} finally {
					queryResGetCCSessionById_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetCCSessionById_outParamList", storequeryResGetCCSessionById_outParamList, null);

			#endregion


			#region store queryResGetCCSessionById_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetCCSessionById_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetCCSessionById_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetCCSessionById_outParamList_eof", tmpeofqueryResGetCCSessionById_outParamList, false);
			queryResGetCCSessionById_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCCSessionById_outParamList, tmpeofqueryResGetCCSessionById_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudent_ssHasCurrentActiveEnrolment", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssHasCurrentActiveEnrolment, false);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudent_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ChangedAttributes, new BitArray(new bool[] {
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudent_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.OptimizedAttributes, new BitArray(new bool[] {
				true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true
			}
			)))), null);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssStudentRAG", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG, "");
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssCauseOfConcernRAG", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssCauseOfConcernRAG, "");
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssRewardsGoldNumber", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssRewardsGoldNumber, 0);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssRewardsGreenNumber", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssRewardsGreenNumber, 0);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssVocPeriodRAG", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssVocPeriodRAG, "");
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssVocOverallRAG", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssVocOverallRAG, "");
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssVocCompletedUnits", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssVocCompletedUnits, 0);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssVocRegisteredUnits", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssVocRegisteredUnits, 0);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMathPeriodRAG", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMathPeriodRAG, "");
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMathOverallRAG", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMathOverallRAG, "");
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMathCompletedUnits", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMathCompletedUnits, 0);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMathRegisteredUnits", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMathRegisteredUnits, 0);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssEngPeriodRAG", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssEngPeriodRAG, "");
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssEngOverallRAG", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssEngOverallRAG, "");
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssEngCompletedUnits", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssEngCompletedUnits, 0);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssEngRegisteredUnits", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssEngRegisteredUnits, 0);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMLWPeriodRAG", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMLWPeriodRAG, "");
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMLWOverallRAG", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMLWOverallRAG, "");
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMLWCompletedUnits", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMLWCompletedUnits, 0);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMLWRegisteredUnits", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMLWRegisteredUnits, 0);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssDisciplinaryType", resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssDisciplinaryType, "");
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ChangedAttributes, new BitArray(new bool[] {
				false, false, false, false, false, false, false, false, false, true, false, false, false, false, true, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, true, false, false, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.OptimizedAttributes, new BitArray(new bool[] {
				true, true, true, true, true, true, true, true, true, false, true, true, true, true, false, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, false, true, true, true, true
			}
			)))), null);

			#region store queryResGetOverallAttendance_outParamList.

			int tmpcurrentrownumberqueryResGetOverallAttendance_outParamList = queryResGetOverallAttendance_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetOverallAttendance_outParamList = queryResGetOverallAttendance_outParamList.Eof;
			ArrayList storequeryResGetOverallAttendance_outParamList = new ArrayList();

			// Write the needed fields of queryResGetOverallAttendance_outParamList to the storequeryResGetOverallAttendance_outParamList
			if (!queryResGetOverallAttendance_outParamList.Empty) {
				try {
					queryResGetOverallAttendance_outParamList.StartIteration();

					while (!queryResGetOverallAttendance_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetOverallAttendance_outParamList = new ArrayList();
						tmpFieldsqueryResGetOverallAttendance_outParamList.Add(queryResGetOverallAttendance_outParamList.CurrentRec.ssSTInt.ssValue == 0?(object) null: queryResGetOverallAttendance_outParamList.CurrentRec.ssSTInt.ssValue);
						storequeryResGetOverallAttendance_outParamList.Add(tmpFieldsqueryResGetOverallAttendance_outParamList);
						queryResGetOverallAttendance_outParamList.Advance();
					}
				} finally {
					queryResGetOverallAttendance_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetOverallAttendance_outParamList", storequeryResGetOverallAttendance_outParamList, null);

			#endregion


			#region store queryResGetOverallAttendance_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetOverallAttendance_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetOverallAttendance_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetOverallAttendance_outParamList_eof", tmpeofqueryResGetOverallAttendance_outParamList, false);
			queryResGetOverallAttendance_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetOverallAttendance_outParamList, tmpeofqueryResGetOverallAttendance_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("inParamStudentReference", inParamStudentReference, "");
			ViewStateAttributes.SetInViewState("inParamCategoryId", inParamCategoryId, 0);
			ViewStateAttributes.SetInViewState("inParamOfferingCode", inParamOfferingCode, "");
			ViewStateAttributes.SetInViewState("inParamShowUnit", inParamShowUnit, false);
			ViewStateAttributes.SetInViewState("inParamShowTarget", inParamShowTarget, false);
			ViewStateAttributes.SetInViewState("inParamActiveLearnerDetailMenu", inParamActiveLearnerDetailMenu, "");
			ViewStateAttributes.SetInViewState("inParamSessionId", inParamSessionId, 0);
			ViewStateAttributes.SetInViewState("inParamCourseCode", inParamCourseCode, "");
			ViewStateAttributes.SetInViewState("inParamFromLearnerList", inParamFromLearnerList, false);
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			if (IsViewStateEmpty) return;
			try {

				#region fetch queryResGetCCSessionById_outParamList.

				// Read the needed fields of queryResGetCCSessionById_outParamList from storequeryResGetCCSessionById_outParamList
				queryResGetCCSessionById_outParamList = new RLClusterCCSessionRecordList();
				ArrayList storequeryResGetCCSessionById_outParamList;
				storequeryResGetCCSessionById_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetCCSessionById_outParamList", null);
				if (storequeryResGetCCSessionById_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetCCSessionById_outParamList in storequeryResGetCCSessionById_outParamList) {
						if (tmpFieldsqueryResGetCCSessionById_outParamList != null) {
							// Aux current record variable
							RCClusterCCSessionRecord tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList = new RCClusterCCSessionRecord(null);
							tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList.ssENCluster.ssClusterDescription = (string) (tmpFieldsqueryResGetCCSessionById_outParamList[0] == null ? "": tmpFieldsqueryResGetCCSessionById_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList.ssENCluster.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCCSessionById_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList.ssENCluster.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCCSessionById_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList.ssENCCSession.ssDescription = (string) (tmpFieldsqueryResGetCCSessionById_outParamList[3] == null ? "": tmpFieldsqueryResGetCCSessionById_outParamList[3]);

							tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList.ssENCCSession.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCCSessionById_outParamList[4]);

							tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList.ssENCCSession.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCCSessionById_outParamList[5]);

							queryResGetCCSessionById_outParamList.Append(tmpAuxCurrentRecordqueryResGetCCSessionById_outParamList);
						}
					}
				}
				queryResGetCCSessionById_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetCCSessionById_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetCCSessionById_outParamList;
				tmpcurrentrownumberqueryResGetCCSessionById_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetCCSessionById_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetCCSessionById_outParamList;
				tmpeofqueryResGetCCSessionById_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetCCSessionById_outParamList_eof", false);
				queryResGetCCSessionById_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCCSessionById_outParamList, tmpeofqueryResGetCCSessionById_outParamList);

				#endregion

				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssHasCurrentActiveEnrolment = (bool) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudent_ssHasCurrentActiveEnrolment", false);
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudent_ChangedAttributes", null));
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudent_OptimizedAttributes", null));
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG = (string) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssStudentRAG", "");
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssCauseOfConcernRAG = (string) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssCauseOfConcernRAG", "");
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssRewardsGoldNumber = (int) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssRewardsGoldNumber", 0);
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssRewardsGreenNumber = (int) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssRewardsGreenNumber", 0);
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssVocPeriodRAG = (string) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssVocPeriodRAG", "");
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssVocOverallRAG = (string) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssVocOverallRAG", "");
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssVocCompletedUnits = (int) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssVocCompletedUnits", 0);
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssVocRegisteredUnits = (int) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssVocRegisteredUnits", 0);
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMathPeriodRAG = (string) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMathPeriodRAG", "");
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMathOverallRAG = (string) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMathOverallRAG", "");
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMathCompletedUnits = (int) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMathCompletedUnits", 0);
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMathRegisteredUnits = (int) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMathRegisteredUnits", 0);
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssEngPeriodRAG = (string) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssEngPeriodRAG", "");
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssEngOverallRAG = (string) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssEngOverallRAG", "");
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssEngCompletedUnits = (int) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssEngCompletedUnits", 0);
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssEngRegisteredUnits = (int) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssEngRegisteredUnits", 0);
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMLWPeriodRAG = (string) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMLWPeriodRAG", "");
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMLWOverallRAG = (string) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMLWOverallRAG", "");
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMLWCompletedUnits = (int) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMLWCompletedUnits", 0);
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMLWRegisteredUnits = (int) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssMLWRegisteredUnits", 0);
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssDisciplinaryType = (string) ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ssDisciplinaryType", "");
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_ChangedAttributes", null));
				resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("resStudentLog_GetCurrentValues_outParamStudentLog_ssENStudentLog_OptimizedAttributes", null));

				#region fetch queryResGetOverallAttendance_outParamList.

				// Read the needed fields of queryResGetOverallAttendance_outParamList from storequeryResGetOverallAttendance_outParamList
				queryResGetOverallAttendance_outParamList = new RLIntRecordList();
				ArrayList storequeryResGetOverallAttendance_outParamList;
				storequeryResGetOverallAttendance_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetOverallAttendance_outParamList", null);
				if (storequeryResGetOverallAttendance_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetOverallAttendance_outParamList in storequeryResGetOverallAttendance_outParamList) {
						if (tmpFieldsqueryResGetOverallAttendance_outParamList != null) {
							// Aux current record variable
							RCIntRecord tmpAuxCurrentRecordqueryResGetOverallAttendance_outParamList = new RCIntRecord(null);
							tmpAuxCurrentRecordqueryResGetOverallAttendance_outParamList.ssSTInt.ssValue = (int) (tmpFieldsqueryResGetOverallAttendance_outParamList[0] == null ? 0: tmpFieldsqueryResGetOverallAttendance_outParamList[0]);

							queryResGetOverallAttendance_outParamList.Append(tmpAuxCurrentRecordqueryResGetOverallAttendance_outParamList);
						}
					}
				}
				queryResGetOverallAttendance_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetOverallAttendance_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetOverallAttendance_outParamList;
				tmpcurrentrownumberqueryResGetOverallAttendance_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetOverallAttendance_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetOverallAttendance_outParamList;
				tmpeofqueryResGetOverallAttendance_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetOverallAttendance_outParamList_eof", false);
				queryResGetOverallAttendance_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetOverallAttendance_outParamList, tmpeofqueryResGetOverallAttendance_outParamList);

				#endregion

				inParamStudentReference = (string) ViewStateAttributes.GetFromViewState("inParamStudentReference", "");
				inParamCategoryId = (int) ViewStateAttributes.GetFromViewState("inParamCategoryId", 0);
				inParamOfferingCode = (string) ViewStateAttributes.GetFromViewState("inParamOfferingCode", "");
				inParamShowUnit = (bool) ViewStateAttributes.GetFromViewState("inParamShowUnit", false);
				inParamShowTarget = (bool) ViewStateAttributes.GetFromViewState("inParamShowTarget", false);
				inParamActiveLearnerDetailMenu = (string) ViewStateAttributes.GetFromViewState("inParamActiveLearnerDetailMenu", "");
				inParamSessionId = (int) ViewStateAttributes.GetFromViewState("inParamSessionId", 0);
				inParamCourseCode = (string) ViewStateAttributes.GetFromViewState("inParamCourseCode", "");
				inParamFromLearnerList = (bool) ViewStateAttributes.GetFromViewState("inParamFromLearnerList", false);
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}

		/// <summary>
		/// Store visibility information of the web block and input widgets in the viewstate
		/// </summary>
		protected override void StoreInputsAndWebBlockVisibility() {
			ViewStateAttributes.EnsureNotEmpty();
		}
		/// <summary>
		/// Restore visibility information of the web block and input widgets from the viewstate
		/// </summary>
		protected override void RestoreInputsAndWebBlockVisibility() {
			WasRendered = true;
		}

		private void Page_Unload(object sender, System.EventArgs e) {
		}

		public LocalState PushStack() {
			throw new NotImplementedException();
		}

		public void doRefreshScreen(HeContext heContext) {
			((IWebScreen) this.Parent.Page).doRefreshScreen(heContext);
		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			StoreViewState();
			((IWebScreen) this.Parent.Page).doAJAXRefreshScreen(heContext);
		}

		public static void GetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			string blockId = "CaseConferencing.KY8fQXOFtqEiDzEzWU_VcSw";
			if (visited.Contains(blockId)) {
				return; 
			}
			visited.Add(blockId);
			if (!inline) {
				GetCssIncludes(writer, visited);
			} else {
				GetInlineCss(writer, visited);
			}
		}

		private static void GetCssIncludes(TextWriter writer, HashSet<string> visited) {
			InnerGetCss(writer, false, visited);
			CssHelper.WriteCssInclude(writer, AppUtils.Instance.getImagePath() + "Blocks/CaseConferencing/LearnerView/LearnerDetailsLayout.css" + AppUtils.Instance.CacheInvalidationSuffix);
		}

		private static void GetInlineCss(TextWriter writer, HashSet<string> visited) {
			StringWriter localCssWriter = new StringWriter();
			localCssWriter.NewLine = writer.NewLine;
			string localCss = Environment.NewLine;
			InnerGetCss(localCssWriter, true, visited);
			localCss += localCssWriter.ToString();
			HashSet<string> cssVisited = new HashSet<string>();
			string read;
			AppUtils.getResourceFileContent(out read, "Blocks\\CaseConferencing\\LearnerView\\LearnerDetailsLayout.css");
			localCss += OutSystems.HubEdition.RuntimePlatform.Email.EmailHelper.FlattenCSSFile(read, "Blocks\\CaseConferencing\\LearnerView\\LearnerDetailsLayout.css", cssVisited);
			writer.Write(localCss);
		}

		private static void InnerGetCss(TextWriter writer, bool inline, HashSet<string> visited) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate.GetCss(writer, inline, visited);
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main.GetCss(writer, inline, visited);
			proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkBreadCrumb.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCaseConference.WBlkCCSessionActionsFloatingPanel.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetails_StudentInfo.GetCss(writer, inline, visited);
			proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTabsClient.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetailsCategoryMenu.GetCss(writer, inline, visited);
		}

		private void Page_Error(object sender, System.EventArgs e) {
		}
		public void CheckPermissions(HeContext heContext) {
			((IWebScreen) this.Page).CheckPermissions(heContext);
		}
		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}

		public ObjectKey Key {
			get {
				return ObjectKey.Parse("Y8fQXOFtqEiDzEzWU_VcSw"); 
			}
		}
		public bool isSecure {
			get {
				return ((IWebScreen) Page).isSecure; 
			}
		}
		/// <summary>
		/// Action <code>CommandOnClickDisciplinary</code> that represents the Service Studio screen action
		///  <code>OnClickDisciplinary</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnClickDisciplinary(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Destination = LearnerDetailsDisciplinary

				if (OSPage.IsAjaxRequest) {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "u6TQFg6rnkqXFgZMrI5IaA";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsDisciplinary"] = screenParameters;
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
							 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
							 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
							 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsDisciplinary.aspx" + sURLQuery;
							((OSPageViewState) Page).RedirectLocation = sURL;
							return false;

						} else {
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
							 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
							 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
							 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsDisciplinary.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				} else {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "u6TQFg6rnkqXFgZMrI5IaA";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsDisciplinary"] = screenParameters;
							Server.Transfer("LearnerDetailsDisciplinary.aspx");
							return false;

						} else {
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "u6TQFg6rnkqXFgZMrI5IaA";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsDisciplinary"] = screenParameters;
							string sURLQuery = null;
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsDisciplinary.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandOnClickRewards</code> that represents the Service Studio screen action
		///  <code>OnClickRewards</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnClickRewards(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Destination = LearnerDetailsRewards

				if (OSPage.IsAjaxRequest) {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "P7pINiAh0EKJ+Z1YPDM69Q";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsRewards"] = screenParameters;
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
							 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
							 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
							 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsRewards.aspx" + sURLQuery;
							((OSPageViewState) Page).RedirectLocation = sURL;
							return false;

						} else {
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
							 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
							 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
							 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsRewards.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				} else {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "P7pINiAh0EKJ+Z1YPDM69Q";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsRewards"] = screenParameters;
							Server.Transfer("LearnerDetailsRewards.aspx");
							return false;

						} else {
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "P7pINiAh0EKJ+Z1YPDM69Q";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsRewards"] = screenParameters;
							string sURLQuery = null;
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsRewards.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandOnClickCauseForConcern</code> that represents the Service Studio screen action
		///  <code>OnClickCauseForConcern</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnClickCauseForConcern(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Destination = LearnerDetailsCauseForConcern

				if (OSPage.IsAjaxRequest) {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "sxZNcq5Pq0Wqm2gNOcl23g";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsCauseForConcern"] = screenParameters;
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
							 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
							 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
							 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsCauseForConcern.aspx" + sURLQuery;
							((OSPageViewState) Page).RedirectLocation = sURL;
							return false;

						} else {
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
							 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
							 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
							 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsCauseForConcern.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				} else {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "sxZNcq5Pq0Wqm2gNOcl23g";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsCauseForConcern"] = screenParameters;
							Server.Transfer("LearnerDetailsCauseForConcern.aspx");
							return false;

						} else {
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "sxZNcq5Pq0Wqm2gNOcl23g";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsCauseForConcern"] = screenParameters;
							string sURLQuery = null;
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsCauseForConcern.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandOnClickExtraCurricularActivities</code> that represents the Service Studio
		///  screen action <code>OnClickExtraCurricularActivities</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnClickExtraCurricularActivities(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Destination = LearnerDetailsExtraCurr

				if (OSPage.IsAjaxRequest) {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "0FzMLAR53US45oDBwsUemw";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsExtraCurr"] = screenParameters;
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
							 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
							 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
							 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsExtraCurr.aspx" + sURLQuery;
							((OSPageViewState) Page).RedirectLocation = sURL;
							return false;

						} else {
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
							 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
							 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
							 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsExtraCurr.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				} else {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "0FzMLAR53US45oDBwsUemw";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsExtraCurr"] = screenParameters;
							Server.Transfer("LearnerDetailsExtraCurr.aspx");
							return false;

						} else {
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "0FzMLAR53US45oDBwsUemw";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsExtraCurr"] = screenParameters;
							string sURLQuery = null;
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsExtraCurr.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, BuiltInFunction.EncodeHtml(((string) Global.App.OsContext.Session["ExceptionMessage"])), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandOnClickOverview</code> that represents the Service Studio screen action
		///  <code>OnClickOverview</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnClickOverview(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Destination = LearnerDetailsOverview

				if (OSPage.IsAjaxRequest) {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "Ll6e8OlyEUirEGk6MODdUA";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"] = screenParameters;
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
							 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
							 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
							 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsOverview.aspx" + sURLQuery;
							((OSPageViewState) Page).RedirectLocation = sURL;
							return false;

						} else {
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
							 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
							 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
							 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsOverview.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				} else {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "Ll6e8OlyEUirEGk6MODdUA";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"] = screenParameters;
							Server.Transfer("LearnerDetailsOverview.aspx");
							return false;

						} else {
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "Ll6e8OlyEUirEGk6MODdUA";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"] = screenParameters;
							string sURLQuery = null;
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsOverview.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOnNotify: VarsBag {
			public string resNotifyWidgetGetMessage_outParamMessage = "";

			public lcvOnNotify() {
			}
		}
		/// <summary>
		/// Action <code>CommandOnNotify</code> that represents the Service Studio screen action
		///  <code>OnNotify</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnNotify(HeContext heContext) {
			CheckPermissions(heContext);
			lcvOnNotify localVars = new lcvOnNotify();
			try {
				// NotifyWidgetGetMessage
				ExtendedActions.NotifyWidgetGetMessage(heContext, out localVars.resNotifyWidgetGetMessage_outParamMessage);
				if ((localVars.resNotifyWidgetGetMessage_outParamMessage== "Refresh")) {
					// Destination = LearnerDetailsOverview

					if (OSPage.IsAjaxRequest) {
						// go to target page
						{

							if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
								((OSPage) Page).ClearErrorHandler();
								// get parameters
								heContext.Session["_ScreenParametersKey"] = "Ll6e8OlyEUirEGk6MODdUA";
								ArrayList screenParameters = new ArrayList();
								screenParameters.Add(inParamStudentReference);
								screenParameters.Add(inParamSessionId);
								screenParameters.Add(inParamCourseCode);
								screenParameters.Add(false);
								Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"] = screenParameters;
								string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
								 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
								 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
								 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode("False");
								sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
								string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsOverview.aspx" + sURLQuery;
								((OSPageViewState) Page).RedirectLocation = sURL;
								return false;

							} else {
								string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
								 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
								 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
								 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode("False");
								sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
								string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsOverview.aspx" + sURLQuery;
								((OSPage) Page).ClearErrorHandler();
								Response.BufferOutput = true;
								if (!OSPage.IsAjaxRequest) {
									Response.Redirect(sURL);
								} else {
									((OSPageViewState) Page).RedirectLocation = sURL;
								}
								return false;

							}
						}
					} else {
						// go to target page
						{

							if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
								((OSPage) Page).ClearErrorHandler();
								// get parameters
								heContext.Session["_ScreenParametersKey"] = "Ll6e8OlyEUirEGk6MODdUA";
								ArrayList screenParameters = new ArrayList();
								screenParameters.Add(inParamStudentReference);
								screenParameters.Add(inParamSessionId);
								screenParameters.Add(inParamCourseCode);
								screenParameters.Add(false);
								Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"] = screenParameters;
								Server.Transfer("LearnerDetailsOverview.aspx");
								return false;

							} else {
								// get parameters
								heContext.Session["_ScreenParametersKey"] = "Ll6e8OlyEUirEGk6MODdUA";
								ArrayList screenParameters = new ArrayList();
								screenParameters.Add(inParamStudentReference);
								screenParameters.Add(inParamSessionId);
								screenParameters.Add(inParamCourseCode);
								screenParameters.Add(false);
								Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"] = screenParameters;
								string sURLQuery = null;
								sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
								string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsOverview.aspx" + sURLQuery;
								((OSPage) Page).ClearErrorHandler();
								Response.BufferOutput = true;
								if (!OSPage.IsAjaxRequest) {
									Response.Redirect(sURL);
								} else {
									((OSPageViewState) Page).RedirectLocation = sURL;
								}
								return false;

							}
						}
					}

				} else {
					// Update Screen
					return true;

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandOnClickPENPortrait</code> that represents the Service Studio screen action
		///  <code>OnClickPENPortrait</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnClickPENPortrait(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Destination = LearnerDetailsPENPortrait

				if (OSPage.IsAjaxRequest) {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "FTJPnXE1QEyxOLVYnwopUQ";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(0);
							screenParameters.Add("");
							screenParameters.Add(false);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsPENPortrait"] = screenParameters;
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference);
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsPENPortrait.aspx" + sURLQuery;
							((OSPageViewState) Page).RedirectLocation = sURL;
							return false;

						} else {
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference);
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsPENPortrait.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				} else {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "FTJPnXE1QEyxOLVYnwopUQ";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(0);
							screenParameters.Add("");
							screenParameters.Add(false);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsPENPortrait"] = screenParameters;
							Server.Transfer("LearnerDetailsPENPortrait.aspx");
							return false;

						} else {
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "FTJPnXE1QEyxOLVYnwopUQ";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(0);
							screenParameters.Add("");
							screenParameters.Add(false);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsPENPortrait"] = screenParameters;
							string sURLQuery = null;
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsPENPortrait.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, BuiltInFunction.EncodeHtml(((string) Global.App.OsContext.Session["ExceptionMessage"])), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandOnClickAtendance</code> that represents the Service Studio screen action
		///  <code>OnClickAtendance</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnClickAtendance(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Destination = LearnerDetailsAttendance

				if (OSPage.IsAjaxRequest) {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "+2xnMZWZ_UqOlbAPIQSvPQ";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsAttendance"] = screenParameters;
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
							 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
							 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
							 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsAttendance.aspx" + sURLQuery;
							((OSPageViewState) Page).RedirectLocation = sURL;
							return false;

						} else {
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference) + "&" +
							 "SessionID=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId)) + "&" +
							 "CourseCode=" + System.Web.HttpUtility.UrlEncode(inParamCourseCode) + "&" +
							 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsAttendance.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				} else {
					// go to target page
					{

						if ((((IWebScreen) Page).isSecure || RuntimePlatformUtils.RequestIsSecure(Request)) && (heContext.AppInfo.eSpaceId == Global.eSpaceId)) {
							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "+2xnMZWZ_UqOlbAPIQSvPQ";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsAttendance"] = screenParameters;
							Server.Transfer("LearnerDetailsAttendance.aspx");
							return false;

						} else {
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "+2xnMZWZ_UqOlbAPIQSvPQ";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(inParamStudentReference);
							screenParameters.Add(inParamSessionId);
							screenParameters.Add(inParamCourseCode);
							screenParameters.Add(inParamFromLearnerList);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsAttendance"] = screenParameters;
							string sURLQuery = null;
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsAttendance.aspx" + sURLQuery;
							((OSPage) Page).ClearErrorHandler();
							Response.BufferOutput = true;
							if (!OSPage.IsAjaxRequest) {
								Response.Redirect(sURL);
							} else {
								((OSPageViewState) Page).RedirectLocation = sURL;
							}
							return false;

						}
					}
				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public void ThemeProvider_webBlck_WebBlockInstance217_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main) sender;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void webBlck_WebBlockInstance78_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate widget = (ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate) sender;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If63_hasRun=false;
		bool if_wt_If63_evalResult;
		public bool if_wt_If63() {
			if (if_wt_If63_hasRun) {
				if_wt_If63_hasRun = false;
				return if_wt_If63_evalResult;
			}
			if_wt_If63_hasRun = true;
			if_wt_If63_evalResult = (inParamSessionId==BuiltInFunction.NullIdentifier());
			return if_wt_If63_evalResult;
		}

		public void ThemeProvider_webBlck_WebBlockInstance67_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main) sender;
				widget.inParamActiveMenuItem = ((inParamFromLearnerList) ?(ENMenuItem2Entity.GetRecordByKey(ObjectKey.Parse("Zf1l6h4nhEKi9bGDu571Zw")).ssId):(ENMenuItem2Entity.GetRecordByKey(ObjectKey.Parse("fmJ189Eh1ESMcFcWCOyaBg")).ssId));
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container194_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container194_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container194_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "color: white;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container194_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container194)
		/// </summary>
		/// <returns>The Visible State of wt_Container194</returns>
		public bool cnt_Container194_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void ThemeProvider_webBlckBreadcrumb_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkBreadCrumb widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkBreadCrumb) sender;
				widget.inParamSeparator = RsseSpaceThemeProvider.DefaultValues.ReferenceWebFlow_Common2_ReferenceWebBlock_BreadCrumb_Variables_ReferenceSerializableInputParameter_Separator;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link47)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link47)</returns>
		public string lnk_Link47_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("CCSessionId", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "CCSession_Edit", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link47)
		/// </summary>
		/// <returns>title of the Link (wt_Link47)</returns>
		public string
		lnk_Link47_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link47)
		/// </summary>
		/// <returns>The Visible State of wt_Link47</returns>
		public bool lnk_Link47_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link47)
		/// </summary>
		/// <returns>The Enabled State of wt_Link47</returns>
		public bool lnk_Link47_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container227_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container227_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container227_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container227_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container227)
		/// </summary>
		/// <returns>The Visible State of wt_Container227</returns>
		public bool cnt_Container227_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance185_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("Iqs32xXjXE+ICbLVRQVIzg")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = 2nFiE_VTnUyqYqfqn5JrjA) Expression:
		///  GetCCSessionById.List.Current.CCSession.Description
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression15() {
			return queryResGetCCSessionById_outParamList.CurrentRec.ssENCCSession.ssDescription;
		}
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link112)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link112)</returns>
		public string lnk_Link112_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("CCSessionId", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "CCSessionStep2_Edit", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link112)
		/// </summary>
		/// <returns>title of the Link (wt_Link112)</returns>
		public string
		lnk_Link112_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link112)
		/// </summary>
		/// <returns>The Visible State of wt_Link112</returns>
		public bool lnk_Link112_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link112)
		/// </summary>
		/// <returns>The Enabled State of wt_Link112</returns>
		public bool lnk_Link112_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container92_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container92_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container92_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container92_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container92)
		/// </summary>
		/// <returns>The Visible State of wt_Container92</returns>
		public bool cnt_Container92_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance219_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("2DFx6X0sh0GYKNklWr5t1A")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = ClMyQx78g0Ocahh19gDB4w) Expression:
		///  GetCCSessionById.List.Current.Cluster.ClusterDescription
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression51() {
			return queryResGetCCSessionById_outParamList.CurrentRec.ssENCluster.ssClusterDescription;
		}
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link52)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link52)</returns>
		public string lnk_Link52_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("SessionID", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("CourseCode", System.Web.HttpUtility.UrlEncode(inParamCourseCode, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "StaffView", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link52)
		/// </summary>
		/// <returns>title of the Link (wt_Link52)</returns>
		public string
		lnk_Link52_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link52)
		/// </summary>
		/// <returns>The Visible State of wt_Link52</returns>
		public bool lnk_Link52_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link52)
		/// </summary>
		/// <returns>The Enabled State of wt_Link52</returns>
		public bool lnk_Link52_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container176_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container176_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container176_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container176_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container176)
		/// </summary>
		/// <returns>The Visible State of wt_Container176</returns>
		public bool cnt_Container176_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance152_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("BDbvGpjWkkirEM_ATP7B6Q")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = VDwx3GAyyE6VshvV98D3tA) Expression: CourseCode
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression190() {
			return inParamCourseCode;
		}
		public void RichWidgets_webBlck_WebBlockInstance218_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("F0OdMTnS+E63CzTzGXJvyg")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = PSIB3lOHrEaQPC3sIpgGvQ) Expression:
		///  GetStudentByStudentReference.List.Current.Student.Forenames + " "
		/// + GetStudentByStudentReference.List.Current.Student.Surname
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression195() {
			return ((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssForenames+ " ") +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssSurname);
		}
		public void cnt_Container115_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container115_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container115_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container115_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container115)
		/// </summary>
		/// <returns>The Visible State of wt_Container115</returns>
		public bool cnt_Container115_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance210_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
				ssCaseConferencing.Flows.FlowCaseConference.WBlkCCSessionActionsFloatingPanel widget = (ssCaseConferencing.Flows.FlowCaseConference.WBlkCCSessionActionsFloatingPanel) sender;
				widget.inParamCCSessionId = inParamSessionId;
				widget.inParamStepId = 4;
				widget.inParamIsStaffView = false;
				widget.inParamCourseCode = inParamCourseCode;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxNotify event handler for widget wt_WebBlockInstance210
		/// </summary>
		public void webBlck_WebBlockInstance210_AjaxNotify(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnNotify(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container186_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container186_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container186_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container186_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container186)
		/// </summary>
		/// <returns>The Visible State of wt_Container186</returns>
		public bool cnt_Container186_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void webBlck_WebBlockInstance206_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
				ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetails_StudentInfo widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetails_StudentInfo) sender;
				widget.inParamStudentReference = inParamStudentReference;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxNotify event handler for widget wt_WebBlockInstance206
		/// </summary>
		public void webBlck_WebBlockInstance206_AjaxNotify(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnNotify(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void ThemeProvider_webBlckTabs_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTabsClient widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowCommon.WBlkTabsClient) sender;
				widget.inParamActiveTab = inParamActiveTab;
				widget.inParamLoadOnClick = false;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void lnk_Link31_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				lnk_Link31_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string lnk_Link31_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "text-decoration: none; color:  black;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link31)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link31)</returns>
		public string lnk_Link31_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("SessionID", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("CourseCode", System.Web.HttpUtility.UrlEncode(inParamCourseCode, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsOverview", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link31)
		/// </summary>
		/// <returns>title of the Link (wt_Link31)</returns>
		public string
		lnk_Link31_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link31)
		/// </summary>
		/// <returns>The Visible State of wt_Link31</returns>
		public bool lnk_Link31_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link31)
		/// </summary>
		/// <returns>The Enabled State of wt_Link31</returns>
		public bool lnk_Link31_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container58_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container58_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container58_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container58_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container58)
		/// </summary>
		/// <returns>The Visible State of wt_Container58</returns>
		public bool cnt_Container58_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance144_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("tuqsB0w_c0i6HbPDdmyy9w")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If62_hasRun=false;
		bool if_wt_If62_evalResult;
		public bool if_wt_If62() {
			if (if_wt_If62_hasRun) {
				if_wt_If62_hasRun = false;
				return if_wt_If62_evalResult;
			}
			if_wt_If62_hasRun = true;
			if_wt_If62_evalResult = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("oDZDk7vbjky0HYuBDlfjVg")).ssId) ==BuiltInFunction.NullIdentifier());
			return if_wt_If62_evalResult;
		}

		public void cnt_Container110_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container110_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container110_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container110_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container110)
		/// </summary>
		/// <returns>The Visible State of wt_Container110</returns>
		public bool cnt_Container110_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance147_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("I19JY1SUkEC+0j_09LvKzQ")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If191_hasRun=false;
		bool if_wt_If191_evalResult;
		public bool if_wt_If191() {
			if (if_wt_If191_hasRun) {
				if_wt_If191_hasRun = false;
				return if_wt_If191_evalResult;
			}
			if_wt_If191_hasRun = true;
			if_wt_If191_evalResult = (inParamActiveTab!=ENTabsEntity.GetRecordByKey(ObjectKey.Parse("G2Uii45UX0ShwQzIkCqqYw")).ssId);
			return if_wt_If191_evalResult;
		}

		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link81)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link81)</returns>
		public string lnk_Link81_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("ActiveTabId", System.Web.HttpUtility.UrlEncode(Convert.ToString(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("G2Uii45UX0ShwQzIkCqqYw")).ssId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("CourseCode", System.Web.HttpUtility.UrlEncode(inParamCourseCode, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("SessionID", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsTabs", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link81)
		/// </summary>
		/// <returns>title of the Link (wt_Link81)</returns>
		public string
		lnk_Link81_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link81)
		/// </summary>
		/// <returns>The Visible State of wt_Link81</returns>
		public bool lnk_Link81_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link81)
		/// </summary>
		/// <returns>The Enabled State of wt_Link81</returns>
		public bool lnk_Link81_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container45_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container45_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container45_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container45_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container45)
		/// </summary>
		/// <returns>The Visible State of wt_Container45</returns>
		public bool cnt_Container45_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance168_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("I19JY1SUkEC+0j_09LvKzQ")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container85_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container85_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container85_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container85_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container85)
		/// </summary>
		/// <returns>The Visible State of wt_Container85</returns>
		public bool cnt_Container85_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance80_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("I19JY1SUkEC+0j_09LvKzQ")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If134_hasRun=false;
		bool if_wt_If134_evalResult;
		public bool if_wt_If134() {
			if (if_wt_If134_hasRun) {
				if_wt_If134_hasRun = false;
				return if_wt_If134_evalResult;
			}
			if_wt_If134_hasRun = true;
			if_wt_If134_evalResult = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("BdSwjq8l9Uut8VgU4iW3KQ")).ssId) ==BuiltInFunction.NullIdentifier());
			return if_wt_If134_evalResult;
		}

		public void cnt_Container39_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container39_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container39_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container39_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container39)
		/// </summary>
		/// <returns>The Visible State of wt_Container39</returns>
		public bool cnt_Container39_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance213_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("xNXAcdyuYkeTl3_Zgby_+A")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If116_hasRun=false;
		bool if_wt_If116_evalResult;
		public bool if_wt_If116() {
			if (if_wt_If116_hasRun) {
				if_wt_If116_hasRun = false;
				return if_wt_If116_evalResult;
			}
			if_wt_If116_hasRun = true;
			if_wt_If116_evalResult = (inParamActiveTab!=ENTabsEntity.GetRecordByKey(ObjectKey.Parse("eJi6gCb3qkGul3Pczs28IQ")).ssId);
			return if_wt_If116_evalResult;
		}

		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link223)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link223)</returns>
		public string lnk_Link223_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("ActiveTabId", System.Web.HttpUtility.UrlEncode(Convert.ToString(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("eJi6gCb3qkGul3Pczs28IQ")).ssId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsTabs", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link223)
		/// </summary>
		/// <returns>title of the Link (wt_Link223)</returns>
		public string
		lnk_Link223_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link223)
		/// </summary>
		/// <returns>The Visible State of wt_Link223</returns>
		public bool lnk_Link223_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link223)
		/// </summary>
		/// <returns>The Enabled State of wt_Link223</returns>
		public bool lnk_Link223_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container6_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container6_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container6_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container6_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container6)
		/// </summary>
		/// <returns>The Visible State of wt_Container6</returns>
		public bool cnt_Container6_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance20_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("xNXAcdyuYkeTl3_Zgby_+A")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container150_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container150_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container150_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container150_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container150)
		/// </summary>
		/// <returns>The Visible State of wt_Container150</returns>
		public bool cnt_Container150_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance32_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("xNXAcdyuYkeTl3_Zgby_+A")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If46_hasRun=false;
		bool if_wt_If46_evalResult;
		public bool if_wt_If46() {
			if (if_wt_If46_hasRun) {
				if_wt_If46_hasRun = false;
				return if_wt_If46_evalResult;
			}
			if_wt_If46_hasRun = true;
			if_wt_If46_evalResult = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("gX1uWQRPF0OdhW_TC7mxQA")).ssId) ==BuiltInFunction.NullIdentifier());
			return if_wt_If46_evalResult;
		}

		public void cnt_Container203_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container203_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container203_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container203_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container203)
		/// </summary>
		/// <returns>The Visible State of wt_Container203</returns>
		public bool cnt_Container203_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance99_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("BDbvGpjWkkirEM_ATP7B6Q")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If43_hasRun=false;
		bool if_wt_If43_evalResult;
		public bool if_wt_If43() {
			if (if_wt_If43_hasRun) {
				if_wt_If43_hasRun = false;
				return if_wt_If43_evalResult;
			}
			if_wt_If43_hasRun = true;
			if_wt_If43_evalResult = (inParamActiveTab!=ENTabsEntity.GetRecordByKey(ObjectKey.Parse("S7hpV6ytl0SPxsAENlFs8g")).ssId);
			return if_wt_If43_evalResult;
		}

		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link114)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link114)</returns>
		public string lnk_Link114_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("ActiveTabId", System.Web.HttpUtility.UrlEncode(Convert.ToString(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("S7hpV6ytl0SPxsAENlFs8g")).ssId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("SessionID", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("FromLearnerList", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("CourseCode", System.Web.HttpUtility.UrlEncode(inParamCourseCode, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsTabs", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link114)
		/// </summary>
		/// <returns>title of the Link (wt_Link114)</returns>
		public string
		lnk_Link114_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link114)
		/// </summary>
		/// <returns>The Visible State of wt_Link114</returns>
		public bool lnk_Link114_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link114)
		/// </summary>
		/// <returns>The Enabled State of wt_Link114</returns>
		public bool lnk_Link114_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container3_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container3_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container3_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container3_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container3)
		/// </summary>
		/// <returns>The Visible State of wt_Container3</returns>
		public bool cnt_Container3_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance41_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("BDbvGpjWkkirEM_ATP7B6Q")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container160_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container160_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container160_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container160_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container160)
		/// </summary>
		/// <returns>The Visible State of wt_Container160</returns>
		public bool cnt_Container160_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance169_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("BDbvGpjWkkirEM_ATP7B6Q")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container103_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container103_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container103_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container103_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container103)
		/// </summary>
		/// <returns>The Visible State of wt_Container103</returns>
		public bool cnt_Container103_isVisible() {
			return true;
		}

		bool if_wt_If68_hasRun=false;
		bool if_wt_If68_evalResult;
		public bool if_wt_If68() {
			if (if_wt_If68_hasRun) {
				if_wt_If68_hasRun = false;
				return if_wt_If68_evalResult;
			}
			if_wt_If68_hasRun = true;
			if_wt_If68_evalResult = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("58QulFjuCkeyZloWLgduIw")).ssId) ==BuiltInFunction.NullIdentifier());
			return if_wt_If68_evalResult;
		}

		public void cnt_Container221_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container221_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container221_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container221_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container221)
		/// </summary>
		/// <returns>The Visible State of wt_Container221</returns>
		public bool cnt_Container221_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance126_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("TdLOWtVwZUaoIuVq+LcKbQ")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If38_hasRun=false;
		bool if_wt_If38_evalResult;
		public bool if_wt_If38() {
			if (if_wt_If38_hasRun) {
				if_wt_If38_hasRun = false;
				return if_wt_If38_evalResult;
			}
			if_wt_If38_hasRun = true;
			if_wt_If38_evalResult = (inParamActiveTab!=ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId);
			return if_wt_If38_evalResult;
		}

		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link40)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link40)</returns>
		public string lnk_Link40_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("FromLearnerList", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("ActiveTabId", System.Web.HttpUtility.UrlEncode(Convert.ToString(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("CourseCode", System.Web.HttpUtility.UrlEncode(inParamCourseCode, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("SessionID", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsTabs", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link40)
		/// </summary>
		/// <returns>title of the Link (wt_Link40)</returns>
		public string
		lnk_Link40_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link40)
		/// </summary>
		/// <returns>The Visible State of wt_Link40</returns>
		public bool lnk_Link40_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link40)
		/// </summary>
		/// <returns>The Enabled State of wt_Link40</returns>
		public bool lnk_Link40_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container69_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container69_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container69_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container69_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container69)
		/// </summary>
		/// <returns>The Visible State of wt_Container69</returns>
		public bool cnt_Container69_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance225_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("TdLOWtVwZUaoIuVq+LcKbQ")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container156_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container156_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container156_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container156_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container156)
		/// </summary>
		/// <returns>The Visible State of wt_Container156</returns>
		public bool cnt_Container156_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance65_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("TdLOWtVwZUaoIuVq+LcKbQ")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If204_hasRun=false;
		bool if_wt_If204_evalResult;
		public bool if_wt_If204() {
			if (if_wt_If204_hasRun) {
				if_wt_If204_hasRun = false;
				return if_wt_If204_evalResult;
			}
			if_wt_If204_hasRun = true;
			if_wt_If204_evalResult = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("13ZfNiegn0i11q3tspFIjA")).ssId) ==BuiltInFunction.NullIdentifier());
			return if_wt_If204_evalResult;
		}

		public void cnt_Container128_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container128_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container128_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container128_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container128)
		/// </summary>
		/// <returns>The Visible State of wt_Container128</returns>
		public bool cnt_Container128_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance158_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("x_v_kGkKLUSh1XiKU_Gydg")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = JLceFef1skuq33Hz5r5pog) Expression: "Progress Report"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression17() {
			return "Progress Report";
		}
		bool if_wt_If199_hasRun=false;
		bool if_wt_If199_evalResult;
		public bool if_wt_If199() {
			if (if_wt_If199_hasRun) {
				if_wt_If199_hasRun = false;
				return if_wt_If199_evalResult;
			}
			if_wt_If199_hasRun = true;
			if_wt_If199_evalResult = (inParamActiveTab!=ENTabsEntity.GetRecordByKey(ObjectKey.Parse("dMF9PjLsLkuXJfDGk7dH+g")).ssId);
			return if_wt_If199_evalResult;
		}

		/// <summary>
		/// Gets the Navigate URL for the link of variable (wt_Link13)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wt_Link13)</returns>
		public string lnk_Link13_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId || (this.Page is IEmailScreen) || !((IWebScreen) Page).isSecure) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("ActiveTabId", System.Web.HttpUtility.UrlEncode(Convert.ToString(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("dMF9PjLsLkuXJfDGk7dH+g")).ssId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("CourseCode", System.Web.HttpUtility.UrlEncode(inParamCourseCode, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("SessionID", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamSessionId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("FromLearnerList", System.Web.HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssStudentReference, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsTabs", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wt_Link13)
		/// </summary>
		/// <returns>title of the Link (wt_Link13)</returns>
		public string
		lnk_Link13_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link13)
		/// </summary>
		/// <returns>The Visible State of wt_Link13</returns>
		public bool lnk_Link13_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link13)
		/// </summary>
		/// <returns>The Enabled State of wt_Link13</returns>
		public bool lnk_Link13_isEnabled() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true; 
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container61_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container61_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container61_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container61_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container61)
		/// </summary>
		/// <returns>The Visible State of wt_Container61</returns>
		public bool cnt_Container61_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance172_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("x_v_kGkKLUSh1XiKU_Gydg")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = pOrgTo5ICU6imA+4X7TM_Q) Expression: "Progress Report"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression66() {
			return "Progress Report";
		}
		public void cnt_Container208_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container208_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container208_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container208_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container208)
		/// </summary>
		/// <returns>The Visible State of wt_Container208</returns>
		public bool cnt_Container208_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void RichWidgets_webBlck_WebBlockInstance211_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
				widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("x_v_kGkKLUSh1XiKU_Gydg")).ssClass;
				widget.inParamSize = "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Function to dump expression (Key = rB9mtlL_MUK5PDpJoaeM6Q) Expression: "Progress Report"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression162() {
			return "Progress Report";
		}
		public void cnt_Container56_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container56_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container56_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container56_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container56)
		/// </summary>
		/// <returns>The Visible State of wt_Container56</returns>
		public bool cnt_Container56_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container222_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container222_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container222_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((inParamActiveLearnerDetailMenu==ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("PDlAuJH5IU+CKfwA2BkWhg")).ssMenu)) ?("LearnerDetailsMenuEntryActive"):("LearnerDetailsMenuEntry"));
				if (!cnt_Container222_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container222
		/// </summary>
		public void cnt_Container222_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnClickOverview(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container222)
		/// </summary>
		/// <returns>The Visible State of wt_Container222</returns>
		public bool cnt_Container222_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container175_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container175_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container175_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((WebControl) sender).CssClass = ((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssHasCurrentActiveEnrolment) ?((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("LearnerDetailsMenuRAGRed"):((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("LearnerDetailsMenuRAGAmber"):((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssStudentRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("LearnerDetailsMenuRAGGreen"):("LearnerDetailsMenuRAGBlue"))))))):("LearnerDetailsMenuRAGSilver")) + " OSInline";
				if (!cnt_Container175_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container175)
		/// </summary>
		/// <returns>The Visible State of wt_Container175</returns>
		public bool cnt_Container175_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If133_hasRun=false;
		bool if_wt_If133_evalResult;
		public bool if_wt_If133() {
			if (if_wt_If133_hasRun) {
				if_wt_If133_hasRun = false;
				return if_wt_If133_evalResult;
			}
			if_wt_If133_hasRun = true;
			if_wt_If133_evalResult = (((Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("GMC2Cg5OBk2I5KHK3cOUQg")).ssId) !=BuiltInFunction.NullIdentifier()) || (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("YTsq6VHZQE69vax4kHoYBA")).ssId) !=BuiltInFunction.NullIdentifier())) || (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("GROqSKyUPUq3TwhHOucRIg")).ssId) !=BuiltInFunction.NullIdentifier()));
			return if_wt_If133_evalResult;
		}

		public void webBlck_WebBlockInstance141_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetailsCategoryMenu widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetailsCategoryMenu) sender;
				widget.inParamStudentReference = inParamStudentReference;
				widget.inParamCategoryId = ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("9J+4M6ZeU0+g4qKAzSFbVg")).ssId;
				widget.inParamOfferingCode = inParamOfferingCode;
				widget.inParamShowOfferings = (inParamCategoryId==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("9J+4M6ZeU0+g4qKAzSFbVg")).ssId);
				widget.inParamShowUnit = inParamShowUnit;
				widget.inParamShowTarget = inParamShowTarget;
				widget.inParamShorttermRAG = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMathPeriodRAG;
				widget.inParamOverallRAG = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMathOverallRAG;
				widget.inParamCompletedUnits = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMathCompletedUnits;
				widget.inParamTotalUnits = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMathRegisteredUnits;
				widget.inParamActiveMenu = (inParamActiveLearnerDetailMenu==ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("BKxVq0tJM0ypnmJx2gJ4fg")).ssMenu);
				widget.inParamFromLearnerList = inParamFromLearnerList;
				widget.inParamCourseCode = inParamCourseCode;
				widget.inParamSessionID = inParamSessionId;
				widget.inParamHasActiveEnrolments = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssHasCurrentActiveEnrolment;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void webBlck_WebBlockInstance75_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetailsCategoryMenu widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetailsCategoryMenu) sender;
				widget.inParamStudentReference = inParamStudentReference;
				widget.inParamCategoryId = ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("hh0WWQ2FF0acLTzRV4EL3Q")).ssId;
				widget.inParamOfferingCode = inParamOfferingCode;
				widget.inParamShowOfferings = (inParamCategoryId==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("hh0WWQ2FF0acLTzRV4EL3Q")).ssId);
				widget.inParamShowUnit = inParamShowUnit;
				widget.inParamShowTarget = inParamShowTarget;
				widget.inParamShorttermRAG = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssEngPeriodRAG;
				widget.inParamOverallRAG = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssEngOverallRAG;
				widget.inParamCompletedUnits = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssEngCompletedUnits;
				widget.inParamTotalUnits = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssEngRegisteredUnits;
				widget.inParamActiveMenu = (inParamActiveLearnerDetailMenu==ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("AJe4MlTQ1EiLCVbgVQghzg")).ssMenu);
				widget.inParamFromLearnerList = inParamFromLearnerList;
				widget.inParamCourseCode = inParamCourseCode;
				widget.inParamSessionID = inParamSessionId;
				widget.inParamHasActiveEnrolments = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssHasCurrentActiveEnrolment;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void webBlck_WebBlockInstance131_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetailsCategoryMenu widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetailsCategoryMenu) sender;
				widget.inParamStudentReference = inParamStudentReference;
				widget.inParamCategoryId = ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId;
				widget.inParamOfferingCode = inParamOfferingCode;
				widget.inParamShowOfferings = (inParamCategoryId==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("I5ItVHe6+E69W5co5NxJ0g")).ssId);
				widget.inParamShowUnit = inParamShowUnit;
				widget.inParamShowTarget = inParamShowTarget;
				widget.inParamShorttermRAG = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssVocPeriodRAG;
				widget.inParamOverallRAG = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssVocOverallRAG;
				widget.inParamCompletedUnits = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssVocCompletedUnits;
				widget.inParamTotalUnits = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssVocRegisteredUnits;
				widget.inParamActiveMenu = (inParamActiveLearnerDetailMenu==ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("uWzfeECgZEyjcKt1EjSxSQ")).ssMenu);
				widget.inParamFromLearnerList = inParamFromLearnerList;
				widget.inParamCourseCode = inParamCourseCode;
				widget.inParamSessionID = inParamSessionId;
				widget.inParamHasActiveEnrolments = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssHasCurrentActiveEnrolment;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void webBlck_WebBlockInstance205_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetailsCategoryMenu widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetailsCategoryMenu) sender;
				widget.inParamStudentReference = inParamStudentReference;
				widget.inParamCategoryId = ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("iy5u49fNYkGR3K77QLSz4g")).ssId;
				widget.inParamOfferingCode = inParamOfferingCode;
				widget.inParamShowOfferings = (inParamCategoryId==ENCategoryEntity.GetRecordByKey(ObjectKey.Parse("iy5u49fNYkGR3K77QLSz4g")).ssId);
				widget.inParamShowUnit = inParamShowUnit;
				widget.inParamShowTarget = inParamShowTarget;
				widget.inParamShorttermRAG = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMLWPeriodRAG;
				widget.inParamOverallRAG = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMLWOverallRAG;
				widget.inParamCompletedUnits = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMLWCompletedUnits;
				widget.inParamTotalUnits = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssMLWRegisteredUnits;
				widget.inParamActiveMenu = (inParamActiveLearnerDetailMenu==ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("BTKwtnNy5Em0DSrsweb2wA")).ssMenu);
				widget.inParamFromLearnerList = inParamFromLearnerList;
				widget.inParamCourseCode = inParamCourseCode;
				widget.inParamSessionID = inParamSessionId;
				widget.inParamHasActiveEnrolments = resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssHasCurrentActiveEnrolment;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public void cnt_Container35_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container35_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container35_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((inParamActiveLearnerDetailMenu==ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("XBgstjuBBEGeNGmwxODbwQ")).ssMenu)) ?("LearnerDetailsMenuEntryActive"):("LearnerDetailsMenuEntry"));
				if (!cnt_Container35_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container35
		/// </summary>
		public void cnt_Container35_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnClickAtendance(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container35)
		/// </summary>
		/// <returns>The Visible State of wt_Container35</returns>
		public bool cnt_Container35_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container77_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container77_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container77_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				((WebControl) sender).CssClass = ((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssHasCurrentActiveEnrolment) ?((((queryResGetOverallAttendance_outParamList.CurrentRec.ssSTInt.ssValue>90)) ?("LearnerDetailsMenuRAGGreen"):((((queryResGetOverallAttendance_outParamList.CurrentRec.ssSTInt.ssValue>=80)) ?("LearnerDetailsMenuRAGAmber"):("LearnerDetailsMenuRAGRed"))))):("LearnerDetailsMenuRAGSilver")) + " OSInline";
				if (!cnt_Container77_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container77)
		/// </summary>
		/// <returns>The Visible State of wt_Container77</returns>
		public bool cnt_Container77_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container151_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container151_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container151_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((inParamActiveLearnerDetailMenu==ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("FYItQb2Jv0WY6p0za1Y9HQ")).ssMenu)) ?("LearnerDetailsMenuEntryActive"):("LearnerDetailsMenuEntry"));
				if (!cnt_Container151_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container151
		/// </summary>
		public void cnt_Container151_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnClickCauseForConcern(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container151)
		/// </summary>
		/// <returns>The Visible State of wt_Container151</returns>
		public bool cnt_Container151_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container84_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container84_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container84_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = ((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssHasCurrentActiveEnrolment) ?((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("LearnerDetailsMenuRAGRed"):((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("LearnerDetailsMenuRAGAmber"):((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId)) ?("LearnerDetailsMenuRAGBlue"):("LearnerDetailsMenuRAGGrey"))))))):("LearnerDetailsMenuRAGSilver")) + " OSInline";
				if (!cnt_Container84_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container84)
		/// </summary>
		/// <returns>The Visible State of wt_Container84</returns>
		public bool cnt_Container84_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container201_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container201_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container201_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container201_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container201)
		/// </summary>
		/// <returns>The Visible State of wt_Container201</returns>
		public bool cnt_Container201_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container53_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container53_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container53_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = (((inParamActiveLearnerDetailMenu!=ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("FYItQb2Jv0WY6p0za1Y9HQ")).ssMenu)) ?("float:right;margin-right:10px;margin-top:4px;line-height:initial;padding:6px;"):("float:right;margin-right:25px;margin-top:4px;line-height:initial;padding:5px 5px 2px 5px;background-color:white;border-radius:4px;"));
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container53_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container53)
		/// </summary>
		/// <returns>The Visible State of wt_Container53</returns>
		public bool cnt_Container53_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If4_hasRun=false;
		bool if_wt_If4_evalResult;
		public bool if_wt_If4() {
			if (if_wt_If4_hasRun) {
				if_wt_If4_hasRun = false;
				return if_wt_If4_evalResult;
			}
			if_wt_If4_hasRun = true;
			if_wt_If4_evalResult = (resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId);
			return if_wt_If4_evalResult;
		}

		bool if_wt_If5_hasRun=false;
		bool if_wt_If5_evalResult;
		public bool if_wt_If5() {
			if (if_wt_If5_hasRun) {
				if_wt_If5_hasRun = false;
				return if_wt_If5_evalResult;
			}
			if_wt_If5_hasRun = true;
			if_wt_If5_evalResult = (resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId);
			return if_wt_If5_evalResult;
		}

		bool if_wt_If30_hasRun=false;
		bool if_wt_If30_evalResult;
		public bool if_wt_If30() {
			if (if_wt_If30_hasRun) {
				if_wt_If30_hasRun = false;
				return if_wt_If30_evalResult;
			}
			if_wt_If30_hasRun = true;
			if_wt_If30_evalResult = (resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId);
			return if_wt_If30_evalResult;
		}

		bool if_wt_If55_hasRun=false;
		bool if_wt_If55_evalResult;
		public bool if_wt_If55() {
			if (if_wt_If55_hasRun) {
				if_wt_If55_hasRun = false;
				return if_wt_If55_evalResult;
			}
			if_wt_If55_hasRun = true;
			if_wt_If55_evalResult = (resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId);
			return if_wt_If55_evalResult;
		}

		public void cnt_Container207_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container207_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container207_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((inParamActiveLearnerDetailMenu==ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("2g94gmPpP0uRcGB6URHhlg")).ssMenu)) ?("LearnerDetailsMenuEntryActive"):("LearnerDetailsMenuEntry"));
				if (!cnt_Container207_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container207
		/// </summary>
		public void cnt_Container207_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnClickDisciplinary(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container207)
		/// </summary>
		/// <returns>The Visible State of wt_Container207</returns>
		public bool cnt_Container207_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container139_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container139_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container139_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = ((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssHasCurrentActiveEnrolment) ?((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("LearnerDetailsMenuRAGRed"):((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("LearnerDetailsMenuRAGAmber"):((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssCauseOfConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId)) ?("LearnerDetailsMenuRAGBlue"):("LearnerDetailsMenuRAGGrey"))))))):("LearnerDetailsMenuRAGSilver")) + " OSInline";
				if (!cnt_Container139_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container139)
		/// </summary>
		/// <returns>The Visible State of wt_Container139</returns>
		public bool cnt_Container139_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container90_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container90_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container90_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container90_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container90)
		/// </summary>
		/// <returns>The Visible State of wt_Container90</returns>
		public bool cnt_Container90_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container121_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container121_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container121_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = (((inParamActiveLearnerDetailMenu!=ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("2g94gmPpP0uRcGB6URHhlg")).ssMenu)) ?("float:right;margin-right:10px;margin-top:4px;line-height:initial;padding:6px;"):("float:right;margin-right:25px;margin-top:4px;line-height:initial;padding:5px 5px 2px 5px;background-color:white;border-radius:4px;"));
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container121_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container121)
		/// </summary>
		/// <returns>The Visible State of wt_Container121</returns>
		public bool cnt_Container121_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If215_hasRun=false;
		bool if_wt_If215_evalResult;
		public bool if_wt_If215() {
			if (if_wt_If215_hasRun) {
				if_wt_If215_hasRun = false;
				return if_wt_If215_evalResult;
			}
			if_wt_If215_hasRun = true;
			if_wt_If215_evalResult = (resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssDisciplinaryType!=BuiltInFunction.NullTextIdentifier());
			return if_wt_If215_evalResult;
		}

		public void cnt_Container101_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container101_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container101_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((inParamActiveLearnerDetailMenu==ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("9G1BIwlQuU+bEOIJtOZmgg")).ssMenu)) ?("LearnerDetailsMenuEntryActive"):("LearnerDetailsMenuEntry"));
				if (!cnt_Container101_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container101
		/// </summary>
		public void cnt_Container101_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnClickRewards(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container101)
		/// </summary>
		/// <returns>The Visible State of wt_Container101</returns>
		public bool cnt_Container101_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container171_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container171_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container171_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = ((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudent.ssHasCurrentActiveEnrolment) ?((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssRewardsGoldNumber>0)) ?("LearnerDetailsMenuRAGGold"):((((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssRewardsGreenNumber>0)) ?("LearnerDetailsMenuRAGSilver"):("LearnerDetailsMenuRAGGrey"))))):("LearnerDetailsMenuRAGSilver")) + " OSInline";
				if (!cnt_Container171_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container171)
		/// </summary>
		/// <returns>The Visible State of wt_Container171</returns>
		public bool cnt_Container171_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container122_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container122_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container122_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container122_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container122)
		/// </summary>
		/// <returns>The Visible State of wt_Container122</returns>
		public bool cnt_Container122_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container155_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container155_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container155_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = (((inParamActiveLearnerDetailMenu!=ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("9G1BIwlQuU+bEOIJtOZmgg")).ssMenu)) ?("float:right;margin-right:8px;margin-top:4px;padding:6px;line-height:initial;"):("float:right;margin-right:23px;margin-top:4px;line-height:initial;padding:6px 5px 1px 5px;background-color:white;border-radius:4px;"));
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container155_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container155)
		/// </summary>
		/// <returns>The Visible State of wt_Container155</returns>
		public bool cnt_Container155_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		bool if_wt_If183_hasRun=false;
		bool if_wt_If183_evalResult;
		public bool if_wt_If183() {
			if (if_wt_If183_hasRun) {
				if_wt_If183_hasRun = false;
				return if_wt_If183_evalResult;
			}
			if_wt_If183_hasRun = true;
			if_wt_If183_evalResult = ((resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssRewardsGoldNumber==0) && (resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssRewardsGreenNumber==0));
			return if_wt_If183_evalResult;
		}

		bool if_wt_If118_hasRun=false;
		bool if_wt_If118_evalResult;
		public bool if_wt_If118() {
			if (if_wt_If118_hasRun) {
				if_wt_If118_hasRun = false;
				return if_wt_If118_evalResult;
			}
			if_wt_If118_hasRun = true;
			if_wt_If118_evalResult = (resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssRewardsGoldNumber>0);
			return if_wt_If118_evalResult;
		}

		public void img_Image54_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				img_Image54_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string img_Image54_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-left:2px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the Width of the image (wt_Image54)
		/// </summary>
		/// <returns>Width of the Image (wt_Image54)</returns>
		public string img_Image54_actualWidth() {
			return HttpUtility.HtmlEncode("18");
		}
		bool if_wt_If21_hasRun=false;
		bool if_wt_If21_evalResult;
		public bool if_wt_If21() {
			if (if_wt_If21_hasRun) {
				if_wt_If21_hasRun = false;
				return if_wt_If21_evalResult;
			}
			if_wt_If21_hasRun = true;
			if_wt_If21_evalResult = (resStudentLog_GetCurrentValues_outParamStudentLog.ssENStudentLog.ssRewardsGreenNumber>0);
			return if_wt_If21_evalResult;
		}

		public void img_Image86_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				img_Image86_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string img_Image86_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "margin-left:2px;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the Width of the image (wt_Image86)
		/// </summary>
		/// <returns>Width of the Image (wt_Image86)</returns>
		public string img_Image86_actualWidth() {
			return HttpUtility.HtmlEncode("18");
		}
		public void cnt_Container129_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container129_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container129_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((inParamActiveLearnerDetailMenu==ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("YYbozKebT0yxtusKlcCl8g")).ssMenu)) ?("LearnerDetailsMenuEntryActive"):("LearnerDetailsMenuEntry"));
				if (!cnt_Container129_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container129
		/// </summary>
		public void cnt_Container129_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnClickPENPortrait(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container129)
		/// </summary>
		/// <returns>The Visible State of wt_Container129</returns>
		public bool cnt_Container129_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container124_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container124_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container124_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container124_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container124)
		/// </summary>
		/// <returns>The Visible State of wt_Container124</returns>
		public bool cnt_Container124_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container145_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container145_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container145_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container145_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container145)
		/// </summary>
		/// <returns>The Visible State of wt_Container145</returns>
		public bool cnt_Container145_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container143_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container143_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container143_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = (((inParamActiveLearnerDetailMenu!=ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("9G1BIwlQuU+bEOIJtOZmgg")).ssMenu)) ?("float:right;margin-right:8px;margin-top:4px;padding:6px;line-height:initial;"):("float:right;margin-right:23px;margin-top:4px;line-height:initial;padding:6px 5px 1px 5px;background-color:white;border-radius:4px;"));
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container143_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container143)
		/// </summary>
		/// <returns>The Visible State of wt_Container143</returns>
		public bool cnt_Container143_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container180_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container180_setInlineAttributes(sender, e);
				((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container180_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "cursor:pointer;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				((WebControl) sender).CssClass = (((inParamActiveLearnerDetailMenu==ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("lZuVMfPwsUWaoiSJX2RofQ")).ssMenu)) ?("LearnerDetailsMenuEntryActive"):("LearnerDetailsMenuEntry"));
				if (!cnt_Container180_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container180
		/// </summary>
		public void cnt_Container180_AjaxClick(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (CommandOnClickExtraCurricularActivities(heContext
				)) {
					doAJAXRefreshScreen(heContext);
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container180)
		/// </summary>
		/// <returns>The Visible State of wt_Container180</returns>
		public bool cnt_Container180_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container142_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container142_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container142_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container142_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container142)
		/// </summary>
		/// <returns>The Visible State of wt_Container142</returns>
		public bool cnt_Container142_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container188_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container188_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container188_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = "float:left;";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
				if (!cnt_Container188_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container188)
		/// </summary>
		/// <returns>The Visible State of wt_Container188</returns>
		public bool cnt_Container188_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void cnt_Container97_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				cnt_Container97_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string cnt_Container97_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				if (!cnt_Container97_isVisible()) {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					{
						string newstyledef;
						string oldstyledef;
						newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
						oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
						if (oldstyledef != null) {
							if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
							((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
						} else {
							((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
						}
					}
				} else {
					string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
					if (stylevalue != null) {
						((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
					}
				}
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container97)
		/// </summary>
		/// <returns>The Visible State of wt_Container97</returns>
		public bool cnt_Container97_isVisible() {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return true;
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}

		public void wtRAG_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wtRAG_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wtRAG_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If44_hasRun=false;
		bool if_wt_If44_evalResult;
		public bool if_wt_If44() {
			if (if_wt_If44_hasRun) {
				if_wt_If44_hasRun = false;
				return if_wt_If44_evalResult;
			}
			if_wt_If44_hasRun = true;
			if_wt_If44_evalResult = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("oDZDk7vbjky0HYuBDlfjVg")).ssId) !=BuiltInFunction.NullIdentifier());
			return if_wt_If44_evalResult;
		}

		public void wtILP_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wtILP_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wtILP_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If76_hasRun=false;
		bool if_wt_If76_evalResult;
		public bool if_wt_If76() {
			if (if_wt_If76_hasRun) {
				if_wt_If76_hasRun = false;
				return if_wt_If76_evalResult;
			}
			if_wt_If76_hasRun = true;
			if_wt_If76_evalResult = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("BdSwjq8l9Uut8VgU4iW3KQ")).ssId) !=BuiltInFunction.NullIdentifier());
			return if_wt_If76_evalResult;
		}

		public void wtSIAS_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wtSIAS_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wtSIAS_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If113_hasRun=false;
		bool if_wt_If113_evalResult;
		public bool if_wt_If113() {
			if (if_wt_If113_hasRun) {
				if_wt_If113_hasRun = false;
				return if_wt_If113_evalResult;
			}
			if_wt_If113_hasRun = true;
			if_wt_If113_evalResult = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("gX1uWQRPF0OdhW_TC7mxQA")).ssId) !=BuiltInFunction.NullIdentifier());
			return if_wt_If113_evalResult;
		}

		public void wtProgramme_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wtProgramme_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wtProgramme_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If87_hasRun=false;
		bool if_wt_If87_evalResult;
		public bool if_wt_If87() {
			if (if_wt_If87_hasRun) {
				if_wt_If87_hasRun = false;
				return if_wt_If87_evalResult;
			}
			if_wt_If87_hasRun = true;
			if_wt_If87_evalResult = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("58QulFjuCkeyZloWLgduIw")).ssId) !=BuiltInFunction.NullIdentifier());
			return if_wt_If87_evalResult;
		}

		public void wtSafeguarding_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wtSafeguarding_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wtSafeguarding_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		bool if_wt_If161_hasRun=false;
		bool if_wt_If161_evalResult;
		public bool if_wt_If161() {
			if (if_wt_If161_hasRun) {
				if_wt_If161_hasRun = false;
				return if_wt_If161_evalResult;
			}
			if_wt_If161_hasRun = true;
			if_wt_If161_evalResult = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("13ZfNiegn0i11q3tspFIjA")).ssId) !=BuiltInFunction.NullIdentifier());
			return if_wt_If161_evalResult;
		}

		public void wtProgressReport_onDataBinding(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				wtProgressReport_setInlineAttributes(sender, e);
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public string wtProgressReport_setInlineAttributes(object sender, System.EventArgs e) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				return "";
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}
		}
		public static class FuncCommandOnClickDisciplinary {
		}
		public static class FuncCommandOnClickRewards {
		}
		public static class FuncCommandOnClickCauseForConcern {
		}
		public static class FuncCommandOnClickExtraCurricularActivities {
		}
		public static class FuncCommandOnClickOverview {
		}
		public static class FuncCommandOnNotify {
		}
		public static class FuncCommandOnClickPENPortrait {
		}
		public static class FuncCommandOnClickAtendance {
		}
		public static class FuncssPreparation {

			/// <summary>
			/// Query Function "GetStudentByStudentReference" of Action "Preparation"
			/// </summary>
			public static RLStudentRecordList datasetGetStudentByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENStudent.[FORENAMES] o2, ENStudent.[SURNAME] o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27");
				fromBuilder.Append(" FROM {Student} ENStudent");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudent.[STUDENTREFERENCE] = @qpstP) AND (ENStudent.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudent.[STUDENTREFERENCE] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentRecordList outParamList = new RLStudentRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentRecordList _tmp = new RLStudentRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsLayout.Preparation.GetStudentByStudentReference.List");
						outParamList = (RLStudentRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsLayout.Preparation.GetStudentByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentRecordList _tmp = new RLStudentRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsLayout.Preparation.GetStudentByStudentReference.List");
							outParamList = (RLStudentRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsLayout.Preparation.GetStudentByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetCCSessionByIdReadDB(ref RCClusterCCSessionRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENCCSession.Read(r, ref index);
				rec.ssENCluster.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetCCSessionById" of Action "Preparation"
			/// </summary>
			public static RLClusterCCSessionRecordList datasetGetCCSessionById(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENCCSession.[DESCRIPTION] o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, ENCluster.[CLUSTERDESCRIPTION] o11, NULL o12, NULL o13, NULL o14, NULL o15");
				fromBuilder.Append(" FROM ({Cluster} ENCluster Inner JOIN {CCSession} ENCCSession ON (ENCCSession.[CLUSTERID] = ENCluster.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENCCSession.[ID] = @qpinP) AND (ENCCSession.[ID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENCCSession.[ID] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLClusterCCSessionRecordList outParamList = new RLClusterCCSessionRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetCCSessionByIdReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[2];
				opt[0] = new BitArray(new bool[] {
					true, true, false, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, false, true, true, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLClusterCCSessionRecordList _tmp = new RLClusterCCSessionRecordList();
					_tmp.AlternateReadDBMethod = datasetGetCCSessionByIdReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsLayout.Preparation.GetCCSessionById.List");
						outParamList = (RLClusterCCSessionRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsLayout.Preparation.GetCCSessionById.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLClusterCCSessionRecordList _tmp = new RLClusterCCSessionRecordList();
						_tmp.AlternateReadDBMethod = datasetGetCCSessionByIdReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsLayout.Preparation.GetCCSessionById.List");
							outParamList = (RLClusterCCSessionRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsLayout.Preparation.GetCCSessionById.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			/// <summary>
			/// Query Function "GetOverallAttendance" of Action "Preparation"
			/// </summary>
			public static RLIntRecordList QueryGetOverallAttendance(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstStudentReference, string qpstAcademicYear) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords == 1));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				sqlCmd.CreateParameter("@qpstStudentReference", DbType.String, qpstStudentReference);
				sqlCmd.CreateParameter("@qpstAcademicYear", DbType.String, qpstAcademicYear);
				string advSql = "SELECT DISTINCT   " +
				 "    CASE   " +
				 "        WHEN  {StudentAttendance}.[STUDENTREFERENCE] IS NULL OR  {StudentAttendance}.[OVERALLPERCENTAGEATTENDANCE] = 0 THEN -1   " +
				 "        ELSE  {StudentAttendance}.[OVERALLPERCENTAGEATTENDANCE]  " +
				 "    END [OVERALLATTENDANCE]  " +
				 "FROM   " +
				 "     {StudentAttendance}   " +
				 "WHERE   " +
				 "     {StudentAttendance}.[STUDENTREFERENCE] = @qpstStudentReference   " +
				 "AND   " +
				 "     {StudentAttendance}.[ACADEMICYEAR] = @qpstAcademicYear  " +
				 "AND   " +
				 "     {StudentAttendance}.[OFFERINGCODE] = 'Overall'";
				string sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				AppUtils.Instance.CheckReadOnlyEntityReferences(advSql);
				sqlCmd.CommandText = sql;
				try {
					RLIntRecordList outParamList = new RLIntRecordList();
					outParamList.Transaction = trans;
					BitArray[] opt = new BitArray[1];
					opt[0] = new BitArray(new bool[] {
						false
					}
					);
					outParamList.AllOptimizedAttributes = opt;
					if (multiplicity == IterationMultiplicity.Multiple) {
						RLIntRecordList _tmp = new RLIntRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						_tmp.MaxRecords = maxRecords;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsLayout.Preparation.GetOverallAttendance.List");
							outParamList = (RLIntRecordList) _tmp.Duplicate();
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else if (multiplicity == IterationMultiplicity.Never) {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsLayout.Preparation.GetOverallAttendance.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							outParamList.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsLayout.Preparation.GetOverallAttendance.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				} catch (System.InvalidOperationException aqExcep) {
					if (aqExcep.Message.StartsWith("Command parameter[")) {
						throw new DataBaseException("Problems accessing parameters in advanced query GetOverallAttendance in Preparation in LearnerDetailsLayout in LearnerView in CaseConferencing (SELECT DISTINCT       CASE           WHEN {StudentAttendance}.[StudentReference] IS NULL OR {StudentAttendance}.[OverallPercentageAttendance] = 0 THEN -1           ELSE {StudentAttendance}.[OverallPercentageAttendance]      END [OVERALLATTENDANCE]  FROM       {StudentAttendance}   WHERE       {StudentAttendance}.[StudentReference] = @StudentReference   AND       {StudentAttendance}.[AcademicYear] = @AcademicYear  AND       {StudentAttendance}.[OfferingCode] = 'Overall'): " + aqExcep.Message);
					}
					throw new DataBaseException("Error in advanced query GetOverallAttendance in Preparation in LearnerDetailsLayout in LearnerView in CaseConferencing (SELECT DISTINCT       CASE           WHEN {StudentAttendance}.[StudentReference] IS NULL OR {StudentAttendance}.[OverallPercentageAttendance] = 0 THEN -1           ELSE {StudentAttendance}.[OverallPercentageAttendance]      END [OVERALLATTENDANCE]  FROM       {StudentAttendance}   WHERE       {StudentAttendance}.[StudentReference] = @StudentReference   AND       {StudentAttendance}.[AcademicYear] = @AcademicYear  AND       {StudentAttendance}.[OfferingCode] = 'Overall'): " + aqExcep.Message);
				} catch (Exception aqExcep) {
					throw new DataBaseException("Error in advanced query GetOverallAttendance in Preparation in LearnerDetailsLayout in LearnerView in CaseConferencing (SELECT DISTINCT       CASE           WHEN {StudentAttendance}.[StudentReference] IS NULL OR {StudentAttendance}.[OverallPercentageAttendance] = 0 THEN -1           ELSE {StudentAttendance}.[OverallPercentageAttendance]      END [OVERALLATTENDANCE]  FROM       {StudentAttendance}   WHERE       {StudentAttendance}.[StudentReference] = @StudentReference   AND       {StudentAttendance}.[AcademicYear] = @AcademicYear  AND       {StudentAttendance}.[OfferingCode] = 'Overall'): " + aqExcep.Message);
				}
			}
		}

		public override Control FindControl(string id) {
			if (id == "wt_WebBlockInstance78") {
				return ThemeProvider_wt_WebBlockInstance217.wtHelpUpdate.FindControl("wt_WebBlockInstance78");
			}
			if (id == "wt_If63") {
				return ThemeProvider_wt_WebBlockInstance217.wtHeaderActions.FindControl("wt_If63");
			}
			if (id == "wt_If63T") {
				return ThemeProvider_wt_WebBlockInstance217.wtHeaderActions.FindControl("wt_If63T");
			}
			if (id == "ThemeProvider_wt_WebBlockInstance67") {
				return ThemeProvider_wt_WebBlockInstance217.wtHeaderActions.FindControl("ThemeProvider_wt_WebBlockInstance67");
			}
			if (id == "wt_If63F") {
				return ThemeProvider_wt_WebBlockInstance217.wtHeaderActions.FindControl("wt_If63F");
			}
			if (id == "wt_Container194") {
				return ThemeProvider_wt_WebBlockInstance217.wtHeaderActions.FindControl("wt_Container194");
			}
			if (id == "ThemeProvider_wtBreadcrumb") {
				return ThemeProvider_wt_WebBlockInstance217.wtHeaderActions.FindControl("ThemeProvider_wtBreadcrumb");
			}
			if (id == "wt_Link47") {
				return ThemeProvider_wtBreadcrumb.wtLevel1.FindControl("wt_Link47");
			}
			if (id == "wt_Container227") {
				return ThemeProvider_wtBreadcrumb.wtLevel1.FindControl("wt_Container227");
			}
			if (id == "RichWidgets_wt_WebBlockInstance185") {
				return ThemeProvider_wtBreadcrumb.wtLevel1.FindControl("RichWidgets_wt_WebBlockInstance185");
			}
			if (id == "wt_InlineExpression15") {
				return ThemeProvider_wtBreadcrumb.wtLevel1.FindControl("wt_InlineExpression15");
			}
			if (id == "wt_Link112") {
				return ThemeProvider_wtBreadcrumb.wtLevel2.FindControl("wt_Link112");
			}
			if (id == "wt_Container92") {
				return ThemeProvider_wtBreadcrumb.wtLevel2.FindControl("wt_Container92");
			}
			if (id == "RichWidgets_wt_WebBlockInstance219") {
				return ThemeProvider_wtBreadcrumb.wtLevel2.FindControl("RichWidgets_wt_WebBlockInstance219");
			}
			if (id == "wt_InlineExpression51") {
				return ThemeProvider_wtBreadcrumb.wtLevel2.FindControl("wt_InlineExpression51");
			}
			if (id == "wt_Link52") {
				return ThemeProvider_wtBreadcrumb.wtLevel3.FindControl("wt_Link52");
			}
			if (id == "wt_Container176") {
				return ThemeProvider_wtBreadcrumb.wtLevel3.FindControl("wt_Container176");
			}
			if (id == "RichWidgets_wt_WebBlockInstance152") {
				return ThemeProvider_wtBreadcrumb.wtLevel3.FindControl("RichWidgets_wt_WebBlockInstance152");
			}
			if (id == "wt_InlineExpression190") {
				return ThemeProvider_wtBreadcrumb.wtLevel3.FindControl("wt_InlineExpression190");
			}
			if (id == "RichWidgets_wt_WebBlockInstance218") {
				return ThemeProvider_wtBreadcrumb.wtLevel4.FindControl("RichWidgets_wt_WebBlockInstance218");
			}
			if (id == "wt_InlineExpression195") {
				return ThemeProvider_wtBreadcrumb.wtLevel4.FindControl("wt_InlineExpression195");
			}
			if (id == "wt_Container115") {
				return ThemeProvider_wt_WebBlockInstance217.wtMainContent.FindControl("wt_Container115");
			}
			if (id == "wt_WebBlockInstance210") {
				return ThemeProvider_wt_WebBlockInstance217.wtMainContent.FindControl("wt_WebBlockInstance210");
			}
			if (id == "wt_Container186") {
				return ThemeProvider_wt_WebBlockInstance217.wtMainContent.FindControl("wt_Container186");
			}
			if (id == "wt_WebBlockInstance206") {
				return ThemeProvider_wt_WebBlockInstance217.wtMainContent.FindControl("wt_WebBlockInstance206");
			}
			if (id == "ThemeProvider_wtTabs") {
				return ThemeProvider_wt_WebBlockInstance217.wtMainContent.FindControl("ThemeProvider_wtTabs");
			}
			if (id == "wt_Link31") {
				return ThemeProvider_wtTabs.wtTab1.FindControl("wt_Link31");
			}
			if (id == "wt_Container58") {
				return ThemeProvider_wtTabs.wtTab1.FindControl("wt_Container58");
			}
			if (id == "RichWidgets_wt_WebBlockInstance144") {
				return ThemeProvider_wtTabs.wtTab1.FindControl("RichWidgets_wt_WebBlockInstance144");
			}
			if (id == "wt_Text102") {
				return ThemeProvider_wtTabs.wtTab1.FindControl("wt_Text102");
			}
			if (id == "wt_If62") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("wt_If62");
			}
			if (id == "wt_If62T") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("wt_If62T");
			}
			if (id == "wt_Container110") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("wt_Container110");
			}
			if (id == "RichWidgets_wt_WebBlockInstance147") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("RichWidgets_wt_WebBlockInstance147");
			}
			if (id == "wt_Text12") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("wt_Text12");
			}
			if (id == "wt_If62F") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("wt_If62F");
			}
			if (id == "wt_If191") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("wt_If191");
			}
			if (id == "wt_If191T") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("wt_If191T");
			}
			if (id == "wt_Link81") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("wt_Link81");
			}
			if (id == "wt_Container45") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("wt_Container45");
			}
			if (id == "RichWidgets_wt_WebBlockInstance168") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("RichWidgets_wt_WebBlockInstance168");
			}
			if (id == "wt_Text117") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("wt_Text117");
			}
			if (id == "wt_If191F") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("wt_If191F");
			}
			if (id == "wt_Container85") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("wt_Container85");
			}
			if (id == "RichWidgets_wt_WebBlockInstance80") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("RichWidgets_wt_WebBlockInstance80");
			}
			if (id == "wt_Text202") {
				return ThemeProvider_wtTabs.wtTab2.FindControl("wt_Text202");
			}
			if (id == "wt_If134") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("wt_If134");
			}
			if (id == "wt_If134T") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("wt_If134T");
			}
			if (id == "wt_Container39") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("wt_Container39");
			}
			if (id == "RichWidgets_wt_WebBlockInstance213") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("RichWidgets_wt_WebBlockInstance213");
			}
			if (id == "wt_Text174") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("wt_Text174");
			}
			if (id == "wt_If134F") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("wt_If134F");
			}
			if (id == "wt_If116") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("wt_If116");
			}
			if (id == "wt_If116T") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("wt_If116T");
			}
			if (id == "wt_Link223") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("wt_Link223");
			}
			if (id == "wt_Container6") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("wt_Container6");
			}
			if (id == "RichWidgets_wt_WebBlockInstance20") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("RichWidgets_wt_WebBlockInstance20");
			}
			if (id == "wt_Text83") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("wt_Text83");
			}
			if (id == "wt_If116F") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("wt_If116F");
			}
			if (id == "wt_Container150") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("wt_Container150");
			}
			if (id == "RichWidgets_wt_WebBlockInstance32") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("RichWidgets_wt_WebBlockInstance32");
			}
			if (id == "wt_Text166") {
				return ThemeProvider_wtTabs.wtTab3.FindControl("wt_Text166");
			}
			if (id == "wt_If46") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("wt_If46");
			}
			if (id == "wt_If46T") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("wt_If46T");
			}
			if (id == "wt_Container203") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("wt_Container203");
			}
			if (id == "RichWidgets_wt_WebBlockInstance99") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("RichWidgets_wt_WebBlockInstance99");
			}
			if (id == "wt_Text96") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("wt_Text96");
			}
			if (id == "wt_If46F") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("wt_If46F");
			}
			if (id == "wt_If43") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("wt_If43");
			}
			if (id == "wt_If43T") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("wt_If43T");
			}
			if (id == "wt_Link114") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("wt_Link114");
			}
			if (id == "wt_Container3") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("wt_Container3");
			}
			if (id == "RichWidgets_wt_WebBlockInstance41") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("RichWidgets_wt_WebBlockInstance41");
			}
			if (id == "wt_Text27") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("wt_Text27");
			}
			if (id == "wt_If43F") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("wt_If43F");
			}
			if (id == "wt_Container160") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("wt_Container160");
			}
			if (id == "RichWidgets_wt_WebBlockInstance169") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("RichWidgets_wt_WebBlockInstance169");
			}
			if (id == "wt_Text138") {
				return ThemeProvider_wtTabs.wtTab4.FindControl("wt_Text138");
			}
			if (id == "wt_Container103") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_Container103");
			}
			if (id == "wt_If68") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_If68");
			}
			if (id == "wt_If68T") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_If68T");
			}
			if (id == "wt_Container221") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_Container221");
			}
			if (id == "RichWidgets_wt_WebBlockInstance126") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("RichWidgets_wt_WebBlockInstance126");
			}
			if (id == "wt_Text220") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_Text220");
			}
			if (id == "wt_If68F") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_If68F");
			}
			if (id == "wt_If38") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_If38");
			}
			if (id == "wt_If38T") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_If38T");
			}
			if (id == "wt_Link40") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_Link40");
			}
			if (id == "wt_Container69") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_Container69");
			}
			if (id == "RichWidgets_wt_WebBlockInstance225") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("RichWidgets_wt_WebBlockInstance225");
			}
			if (id == "wt_Text33") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_Text33");
			}
			if (id == "wt_If38F") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_If38F");
			}
			if (id == "wt_Container156") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_Container156");
			}
			if (id == "RichWidgets_wt_WebBlockInstance65") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("RichWidgets_wt_WebBlockInstance65");
			}
			if (id == "wt_Text140") {
				return ThemeProvider_wtTabs.wtTab5.FindControl("wt_Text140");
			}
			if (id == "wt_If204") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("wt_If204");
			}
			if (id == "wt_If204T") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("wt_If204T");
			}
			if (id == "wt_Container128") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("wt_Container128");
			}
			if (id == "RichWidgets_wt_WebBlockInstance158") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("RichWidgets_wt_WebBlockInstance158");
			}
			if (id == "wt_InlineExpression17") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("wt_InlineExpression17");
			}
			if (id == "wt_If204F") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("wt_If204F");
			}
			if (id == "wt_If199") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("wt_If199");
			}
			if (id == "wt_If199T") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("wt_If199T");
			}
			if (id == "wt_Link13") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("wt_Link13");
			}
			if (id == "wt_Container61") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("wt_Container61");
			}
			if (id == "RichWidgets_wt_WebBlockInstance172") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("RichWidgets_wt_WebBlockInstance172");
			}
			if (id == "wt_InlineExpression66") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("wt_InlineExpression66");
			}
			if (id == "wt_If199F") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("wt_If199F");
			}
			if (id == "wt_Container208") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("wt_Container208");
			}
			if (id == "RichWidgets_wt_WebBlockInstance211") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("RichWidgets_wt_WebBlockInstance211");
			}
			if (id == "wt_InlineExpression162") {
				return ThemeProvider_wtTabs.wtTab6.FindControl("wt_InlineExpression162");
			}
			if (id == "wt_Container56") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container56");
			}
			if (id == "wt_Container222") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container222");
			}
			if (id == "wt_Container175") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container175");
			}
			if (id == "wt_Text1") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Text1");
			}
			if (id == "wt_If133") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If133");
			}
			if (id == "wt_If133T") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If133T");
			}
			if (id == "wt_WebBlockInstance141") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_WebBlockInstance141");
			}
			if (id == "wt_WebBlockInstance75") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_WebBlockInstance75");
			}
			if (id == "wt_WebBlockInstance131") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_WebBlockInstance131");
			}
			if (id == "wt_WebBlockInstance205") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_WebBlockInstance205");
			}
			if (id == "wt_If133F") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If133F");
			}
			if (id == "wt_Container35") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container35");
			}
			if (id == "wt_Container77") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container77");
			}
			if (id == "wt_Text157") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Text157");
			}
			if (id == "wt_Container151") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container151");
			}
			if (id == "wt_Container84") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container84");
			}
			if (id == "wt_Container201") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container201");
			}
			if (id == "wt_Text136") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Text136");
			}
			if (id == "wt_Container53") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container53");
			}
			if (id == "wt_If4") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If4");
			}
			if (id == "wt_If4T") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If4T");
			}
			if (id == "wt_Image18") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Image18");
			}
			if (id == "wt_If4F") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If4F");
			}
			if (id == "wt_If5") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If5");
			}
			if (id == "wt_If5T") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If5T");
			}
			if (id == "wt_Image177") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Image177");
			}
			if (id == "wt_If5F") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If5F");
			}
			if (id == "wt_If30") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If30");
			}
			if (id == "wt_If30T") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If30T");
			}
			if (id == "wt_Image120") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Image120");
			}
			if (id == "wt_If30F") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If30F");
			}
			if (id == "wt_If55") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If55");
			}
			if (id == "wt_If55T") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If55T");
			}
			if (id == "wt_Image149") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Image149");
			}
			if (id == "wt_If55F") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If55F");
			}
			if (id == "wt_Image48") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Image48");
			}
			if (id == "wt_Container207") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container207");
			}
			if (id == "wt_Container139") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container139");
			}
			if (id == "wt_Container90") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container90");
			}
			if (id == "wt_Text49") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Text49");
			}
			if (id == "wt_Container121") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container121");
			}
			if (id == "wt_If215") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If215");
			}
			if (id == "wt_If215T") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If215T");
			}
			if (id == "wt_Image42") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Image42");
			}
			if (id == "wt_If215F") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If215F");
			}
			if (id == "wt_Container101") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container101");
			}
			if (id == "wt_Container171") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container171");
			}
			if (id == "wt_Container122") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container122");
			}
			if (id == "wt_Text216") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Text216");
			}
			if (id == "wt_Container155") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container155");
			}
			if (id == "wt_If183") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If183");
			}
			if (id == "wt_If183T") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If183T");
			}
			if (id == "wt_Image226") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Image226");
			}
			if (id == "wt_If183F") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If183F");
			}
			if (id == "wt_If118") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If118");
			}
			if (id == "wt_If118T") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If118T");
			}
			if (id == "wt_Image54") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Image54");
			}
			if (id == "wt_If118F") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If118F");
			}
			if (id == "wt_If21") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If21");
			}
			if (id == "wt_If21T") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If21T");
			}
			if (id == "wt_Image86") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Image86");
			}
			if (id == "wt_If21F") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_If21F");
			}
			if (id == "wt_Container129") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container129");
			}
			if (id == "wt_Container124") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container124");
			}
			if (id == "wt_Container145") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container145");
			}
			if (id == "wt_Text159") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Text159");
			}
			if (id == "wt_Container143") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container143");
			}
			if (id == "wt_Container180") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container180");
			}
			if (id == "wt_Container142") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container142");
			}
			if (id == "wt_Container188") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container188");
			}
			if (id == "wt_Text127") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Text127");
			}
			if (id == "wt_Container97") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wt_Container97");
			}
			if (id == "wtRAG") {
				return ThemeProvider_wtTabs.wtContent1.FindControl("wtRAG");
			}
			if (id == "wt_If44") {
				return ThemeProvider_wtTabs.wtContent2.FindControl("wt_If44");
			}
			if (id == "wt_If44T") {
				return ThemeProvider_wtTabs.wtContent2.FindControl("wt_If44T");
			}
			if (id == "wtILP") {
				return ThemeProvider_wtTabs.wtContent2.FindControl("wtILP");
			}
			if (id == "wt_If44F") {
				return ThemeProvider_wtTabs.wtContent2.FindControl("wt_If44F");
			}
			if (id == "wt_If76") {
				return ThemeProvider_wtTabs.wtContent3.FindControl("wt_If76");
			}
			if (id == "wt_If76T") {
				return ThemeProvider_wtTabs.wtContent3.FindControl("wt_If76T");
			}
			if (id == "wtSIAS") {
				return ThemeProvider_wtTabs.wtContent3.FindControl("wtSIAS");
			}
			if (id == "wt_If76F") {
				return ThemeProvider_wtTabs.wtContent3.FindControl("wt_If76F");
			}
			if (id == "wt_If113") {
				return ThemeProvider_wtTabs.wtContent4.FindControl("wt_If113");
			}
			if (id == "wt_If113T") {
				return ThemeProvider_wtTabs.wtContent4.FindControl("wt_If113T");
			}
			if (id == "wtProgramme") {
				return ThemeProvider_wtTabs.wtContent4.FindControl("wtProgramme");
			}
			if (id == "wt_If113F") {
				return ThemeProvider_wtTabs.wtContent4.FindControl("wt_If113F");
			}
			if (id == "wt_If87") {
				return ThemeProvider_wtTabs.wtContent5.FindControl("wt_If87");
			}
			if (id == "wt_If87T") {
				return ThemeProvider_wtTabs.wtContent5.FindControl("wt_If87T");
			}
			if (id == "wtSafeguarding") {
				return ThemeProvider_wtTabs.wtContent5.FindControl("wtSafeguarding");
			}
			if (id == "wt_If87F") {
				return ThemeProvider_wtTabs.wtContent5.FindControl("wt_If87F");
			}
			if (id == "wt_If161") {
				return ThemeProvider_wtTabs.wtContent6.FindControl("wt_If161");
			}
			if (id == "wt_If161T") {
				return ThemeProvider_wtTabs.wtContent6.FindControl("wt_If161T");
			}
			if (id == "wtProgressReport") {
				return ThemeProvider_wtTabs.wtContent6.FindControl("wtProgressReport");
			}
			if (id == "wt_If161F") {
				return ThemeProvider_wtTabs.wtContent6.FindControl("wt_If161F");
			}
			return base.FindControl(id);
		}
		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			_isRendering = true;
			Page_Load(null, null); _isRendering = false;
			this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}
		public override string WebBlockIdentifier {
			get {
				return "CaseConferencing.KY8fQXOFtqEiDzEzWU_VcSw";
			}
		}
	}

}
