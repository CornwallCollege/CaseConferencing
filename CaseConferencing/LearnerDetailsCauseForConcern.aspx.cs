/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.IO;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Runtime.Serialization;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Web.Caching;
using System.Text;
using System.Resources;

namespace ssCaseConferencing.Flows.FlowLearnerView {

	public class ScrnLearnerDetailsCauseForConcern: OSPageViewStateCompressed, IWebScreen, INegotiateTabIndexes, IBookmarkableURL {


		public ScrnLearnerDetailsCauseForConcern(): base(CaseConferencing_Properties.QuirksMode) {
		}


		/// <summary>
		/// Screen Input Parameter inParamStudentReference. Description:
		/// </summary>
		public string inParamStudentReference = "";
		/// <summary>
		/// Screen Input Parameter inParamSessionID. Description:
		/// </summary>
		public int inParamSessionID = 0;
		/// <summary>
		/// Screen Input Parameter inParamCourseCode. Description:
		/// </summary>
		public string inParamCourseCode = "";
		/// <summary>
		/// Screen Input Parameter inParamFromLearnerList. Description:
		/// </summary>
		public bool inParamFromLearnerList = false;
		/// <summary>
		/// Variable <code>varLcCurrentSelectRAG</code> that represents the Service Studio local variable
		///  <code>CurrentSelectRAG</code> <p>Description: </p>
		/// </summary>
		string varLcCurrentSelectRAG = ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId;

		/// <summary>
		/// Variable <code>varLcVisible</code> that represents the Service Studio local variable
		///  <code>Visible</code> <p>Description: </p>
		/// </summary>
		bool varLcVisible = false;

		/// <summary>
		/// Variable <code>varLcReasonId</code> that represents the Service Studio local variable
		///  <code>ReasonId</code> <p>Description: </p>
		/// </summary>
		int varLcReasonId = 0;

		/// <summary>
		/// Variable <code>varLcDescriptionConcern</code> that represents the Service Studio local variable
		///  <code>DescriptionConcern</code> <p>Description: </p>
		/// </summary>
		string varLcDescriptionConcern = "";

		/// <summary>
		/// Variable <code>varLcNewConcernRAG</code> that represents the Service Studio local variable
		///  <code>NewConcernRAG</code> <p>Description: </p>
		/// </summary>
		string varLcNewConcernRAG = ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId;

		/// <summary>
		/// Variable <code>varLcOldRAG</code> that represents the Service Studio local variable
		///  <code>OldRAG</code> <p>Description: </p>
		/// </summary>
		string varLcOldRAG = "";

		/// <summary>
		/// Variable <code>varLcSortDesc</code> that represents the Service Studio local variable
		///  <code>SortDesc</code> <p>Description: </p>
		/// </summary>
		bool varLcSortDesc = false;

		/// <summary>
		/// Variable <code>varLcGetStudentLogsByStudentReference_Sort</code> that represents the Service Studio
		///  local variable <code>GetStudentLogsByStudentReference_Sort</code> <p>Description: Created by th
		/// e upgrade of 'GetStudentLogsByStudentReference' to an Aggregate. Corresponds to the old query
		///  parameter 'Sort'.</p>
		/// </summary>
		string varLcGetStudentLogsByStudentReference_Sort = "";

		/// <summary>
		/// Variable wt_WebBlockInstance117
		/// </summary>
		protected ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout wt_WebBlockInstance117;
		protected OutSystems.HubEdition.WebWidgets.Container wtCauseForConcernRaise;
		protected OutSystems.HubEdition.WebWidgets.Container wtCauseForConcern;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container97;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container160;
		/// <summary>
		/// Variable "True" if the Widget wt_If229
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If229T;

		/// <summary>
		/// Variable "True" if the Widget wt_If229
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If229F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container7;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container55;
		protected OutSystems.HubEdition.WebWidgets.Container wtRaiseCauseForConcern;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container52;
		protected OutSystems.HubEdition.WebWidgets.Container wtReason;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container86;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container34;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtComboBoxReasonValidatorRequired;
		protected SelectRtWidget Rt_wtComboBoxReason = new SelectRtWidget();
		RLCauseOfConcernReasonRecordList Rt_wtComboBoxReason_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.Container wtResponsible2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container123;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtConcernDescriptionValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtConcernDescriptionValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container71;
		protected OutSystems.HubEdition.WebWidgets.Container wtWarapperSelectRAG;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container101;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container63;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container40;
		/// <summary>
		/// Variable "True" if the Widget wt_If103
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If103T;

		/// <summary>
		/// Variable "True" if the Widget wt_If103
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If103F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container132;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container48;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container208;
		protected OutSystems.HubEdition.WebWidgets.Container wtButton_CauseForConcern;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container221;
		/// <summary>
		/// Variable (wt_Link213) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link213;
		/// <summary>
		/// Auxiliar Edit Record record variable
		/// </summary>
		RCCauseOfConcernRecord ssEditRecordCauseForConcernRecord = new RCCauseOfConcernRecord(null);

		/// <summary>
		/// Edit Record Valid Runtime Property
		/// </summary>
		public bool wtEditRecordCauseForConcern_Valid() {
			bool res = true;
			return res;
		}

		protected OutSystems.HubEdition.WebWidgets.Container wtCauseForConcernList;
		private RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList _ssGetCauseForConcern_ListList = new RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList();
		public RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList ssGetCauseForConcern_ListList {
			get {
				return _ssGetCauseForConcern_ListList; 
			}
			set {
				_ssGetCauseForConcern_ListList = value;
				wtGetCauseForConcern_List.DataSource = value;
				ssGetCauseForConcern_ListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtGetCauseForConcern_List;
		public ArrayList wtGetCauseForConcern_List_storage = new ArrayList();
		protected bool ssGetCauseForConcern_ListList_notUsedYet = true;
		protected bool ssGetCauseForConcern_ListListDoDataBind;
		protected bool ssGetCauseForConcern_ListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wtCauseForConcernCurrent;
		/// <summary>
		/// Variable "True" if the Widget wt_If99
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If99T;

		/// <summary>
		/// Variable "True" if the Widget wt_If99
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If99F;
		protected OutSystems.HubEdition.WebWidgets.Container wtViewCauseForConcern;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container193;
		/// <summary>
		/// Variable "True" if the Widget wt_If41
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If41T;

		/// <summary>
		/// Variable "True" if the Widget wt_If41
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If41F;
		/// <summary>
		/// Variable "True" if the Widget wt_If191
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If191T;

		/// <summary>
		/// Variable "True" if the Widget wt_If191
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If191F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container162;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container76;
		protected OutSystems.HubEdition.WebWidgets.Container wtResponsible4;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container69;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container207;
		/// <summary>
		/// Variable "True" if the Widget wt_If46
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If46T;

		/// <summary>
		/// Variable "True" if the Widget wt_If46
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If46F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container112;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container98;
		/// <summary>
		/// Variable (wtDeleteConcern) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.HyperLink wtDeleteConcern;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container137;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container124;
		protected OutSystems.HubEdition.WebWidgets.Container wtEditCauseForConcern;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container146;
		protected OutSystems.HubEdition.WebWidgets.Container wtReason2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container223;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container80;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_ComboBox195ValidatorRequired;
		protected SelectRtWidget Rt_wt_ComboBox195 = new SelectRtWidget();
		RLCauseOfConcernReasonRecordList Rt_wt_ComboBox195_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.Container wtResponsible3;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container102;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtEditCauseForConcernDescriptionValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtEditCauseForConcernDescriptionValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wtWarapperSelectRAG2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container31;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container153;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container92;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container28;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container114;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container67;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container196;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container56;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container218;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container37;
		/// <summary>
		/// Variable (wt_Link15) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link15;
		protected OutSystems.HubEdition.WebWidgets.Container wtCauseForConcernLog2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container148;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container36;
		/// <summary>
		/// Variable (wt_Link190) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link190;
		protected OutSystems.HubEdition.WebWidgets.Container wtSort2;
		private RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList _ssGetCauseForConcernLog_List2List = new RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList();
		public RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList ssGetCauseForConcernLog_List2List {
			get {
				return _ssGetCauseForConcernLog_List2List; 
			}
			set {
				_ssGetCauseForConcernLog_List2List = value;
				wtGetCauseForConcernLog_List2.DataSource = value;
				ssGetCauseForConcernLog_List2ListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtGetCauseForConcernLog_List2;
		public ArrayList wtGetCauseForConcernLog_List2_storage = new ArrayList();
		protected bool ssGetCauseForConcernLog_List2List_notUsedYet = true;
		protected bool ssGetCauseForConcernLog_List2ListDoDataBind;
		protected bool ssGetCauseForConcernLog_List2ListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperList3;
		/// <summary>
		/// Variable "True" if the Widget wt_If60
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If60T;

		/// <summary>
		/// Variable "True" if the Widget wt_If60
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If60F;
		/// <summary>
		/// Variable "True" if the Widget wt_If106
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If106T;

		/// <summary>
		/// Variable "True" if the Widget wt_If106
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If106F;
		/// <summary>
		/// Variable "True" if the Widget wt_If64
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If64T;

		/// <summary>
		/// Variable "True" if the Widget wt_If64
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If64F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container45;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container178;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container166;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container210;
		protected OutSystems.HubEdition.WebWidgets.Container wtCauseForConcernLog;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container22;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container192;
		/// <summary>
		/// Variable (wt_Link61) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link61;
		protected OutSystems.HubEdition.WebWidgets.Container wtSort;
		/// <summary>
		/// Variable "True" if the Widget wt_If161
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If161T;

		/// <summary>
		/// Variable "True" if the Widget wt_If161
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If161F;
		private RLUserStudentLogStudentLogTypeRecordList _ssGetCauseForConcernLog_ListList = new RLUserStudentLogStudentLogTypeRecordList();
		public RLUserStudentLogStudentLogTypeRecordList ssGetCauseForConcernLog_ListList {
			get {
				return _ssGetCauseForConcernLog_ListList; 
			}
			set {
				_ssGetCauseForConcernLog_ListList = value;
				wtGetCauseForConcernLog_List.DataSource = value;
				ssGetCauseForConcernLog_ListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtGetCauseForConcernLog_List;
		public ArrayList wtGetCauseForConcernLog_List_storage = new ArrayList();
		protected bool ssGetCauseForConcernLog_ListList_notUsedYet = true;
		protected bool ssGetCauseForConcernLog_ListListDoDataBind;
		protected bool ssGetCauseForConcernLog_ListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperList2;
		/// <summary>
		/// Variable "True" if the Widget wt_If139
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If139T;

		/// <summary>
		/// Variable "True" if the Widget wt_If139
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If139F;
		/// <summary>
		/// Variable "True" if the Widget wt_If91
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If91T;

		/// <summary>
		/// Variable "True" if the Widget wt_If91
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If91F;
		/// <summary>
		/// Variable "True" if the Widget wt_If51
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If51T;

		/// <summary>
		/// Variable "True" if the Widget wt_If51
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If51F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container212;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container18;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container165;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container118;


		protected override void GetBlocksCss(TextWriter writer, bool inline, HashSet<string> visited) {
			ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor.GetCss(writer, inline, visited);

		}

		protected override void GetWidgetsCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}







		protected override string GetInlineStyleSheetInclude() {
			throw new InvalidOperationException();
		}





		protected override bool PageAllowsCallbacks() {
			return true;
		}


		protected string GetRequestInfoJavaScript() {
			return GetRequestInfoJavaScript("sxZNcq5Pq0Wqm2gNOcl23g", "LearnerDetailsCauseForConcern");
		}

		protected string GetVisitCode() {
			SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
			if (session["osIsNewVisit"] != null && ((bool) session["osIsNewVisit"])
			// && !NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)
			&& RuntimePlatformUtils.IsValidRequestForVisit()) {
				return "<script type=\"text/javascript\">outsystems.internal.$.get(\"/CaseConferencing/_status.aspx\")</script>";
			}
			return "";
		}

		public string GetCallbackDebug() {
			if (Request.HttpMethod == "GET" && Request.QueryString["__CALLBACK_DEBUG"] != null && Request.QueryString["__CALLBACK_DEBUG"] != "") {
				if (Request.QueryString["__CALLBACK_DEBUG"] == OutSystems.HubEdition.RuntimePlatform.AppInfo.GetParameter(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Callback_Debug_Information_Key)) {
					return OutSystems.HubEdition.RuntimePlatform.AppInfo.GetAppInfo().GetCallbackDebugInformation();
				}
			}
			return "";
		}

		protected string GetHeadTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadTop, "sxZNcq5Pq0Wqm2gNOcl23g", "LearnerDetailsCauseForConcern");
		}

		protected string GetHeadBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadBottom, "sxZNcq5Pq0Wqm2gNOcl23g", "LearnerDetailsCauseForConcern");
		}

		protected string GetBodyTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyTop, "sxZNcq5Pq0Wqm2gNOcl23g", "LearnerDetailsCauseForConcern");
		}

		protected string GetBodyBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyBottom, "sxZNcq5Pq0Wqm2gNOcl23g", "LearnerDetailsCauseForConcern");
		}

		HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();



		static ScrnLearnerDetailsCauseForConcern() {
		}


		RLCauseOfConcernReasonRecordList queryResGetCauseOfConcernReasons2_outParamList = new RLCauseOfConcernReasonRecordList();
		int queryResGetCauseOfConcernReasons2_outParamCount = 0;
		int resUserCheck_outParamPermissionType = 0;
		RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList queryResGetCauseOfConcernLearnerNotes_outParamList = new RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList();
		int queryResGetCauseOfConcernLearnerNotes_outParamCount = 0;
		RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList queryResGetCauseForConcern_outParamList = new RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList();
		int queryResGetCauseForConcern_outParamCount = 0;
		RLUserStudentLogStudentLogTypeRecordList queryResGetStudentLogsByStudentReference_outParamList = new RLUserStudentLogStudentLogTypeRecordList();
		int queryResGetStudentLogsByStudentReference_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// UserCheck
			Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("b2pJMuDp8U6rt2CiqWNG1A")).ssId, out resUserCheck_outParamPermissionType);
			// Query datasetGetCauseForConcern
			int datasetGetCauseForConcern_maxRecords = Math.Max(wtGetCauseForConcern_List.StartIndex + wtGetCauseForConcern_List.LineCount + 1, 0);
			queryResGetCauseForConcern_outParamList = FuncssPreparation.datasetGetCauseForConcern(heContext, datasetGetCauseForConcern_maxRecords, IterationMultiplicity.Multiple, out queryResGetCauseForConcern_outParamCount, inParamStudentReference
			);
			// Query datasetGetCauseOfConcernReasons2
			int datasetGetCauseOfConcernReasons2_maxRecords = 0;
			queryResGetCauseOfConcernReasons2_outParamList = FuncssPreparation.datasetGetCauseOfConcernReasons2(heContext, datasetGetCauseOfConcernReasons2_maxRecords, IterationMultiplicity.Multiple, out queryResGetCauseOfConcernReasons2_outParamCount);
			// Created by the upgrade of 'GetStudentLogsByStudentReference' to an Aggregate.
			varLcGetStudentLogsByStudentReference_Sort = ((varLcSortDesc) ?("{StudentLog}.[id] desc"):("{StudentLog}.[id] asc")); // GetStudentLogsByStudentReference_Sort = internalIf
			// Query datasetGetStudentLogsByStudentReference
			int datasetGetStudentLogsByStudentReference_maxRecords = Math.Max(wtGetCauseForConcernLog_List.StartIndex + wtGetCauseForConcernLog_List.LineCount + 1, 0);
			queryResGetStudentLogsByStudentReference_outParamList = FuncssPreparation.datasetGetStudentLogsByStudentReference(heContext, datasetGetStudentLogsByStudentReference_maxRecords, IterationMultiplicity.Multiple, out queryResGetStudentLogsByStudentReference_outParamCount, varLcGetStudentLogsByStudentReference_Sort
			, inParamStudentReference
			);
			varLcOldRAG = queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssCauseOfConcernRAG; // OldRAG = GetStudentLogsByStudentReference.List.Current.StudentLog.CauseOfConcernRAG
			// Query datasetGetCauseOfConcernLearnerNotes
			int datasetGetCauseOfConcernLearnerNotes_maxRecords = Math.Max(wtGetCauseForConcernLog_List2.StartIndex + wtGetCauseForConcernLog_List2.LineCount + 1, 0);
			queryResGetCauseOfConcernLearnerNotes_outParamList = FuncssPreparation.datasetGetCauseOfConcernLearnerNotes(heContext, datasetGetCauseOfConcernLearnerNotes_maxRecords, IterationMultiplicity.Multiple, out queryResGetCauseOfConcernLearnerNotes_outParamCount, inParamStudentReference
			);
		}


		protected override BaseAppUtils GetAppUtils() {
			return AppUtils.Instance;
		}

		protected override string OwnCssUrl {
			get {
				return "LearnerDetailsCauseForConcern.css"; 
			}
		}

		protected override string OwnCssFile {
			get {
				return "LearnerDetailsCauseForConcern.css"; 
			}
		}

		protected override string BasicCssUrl {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string BasicCssFile {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssUrl {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssFile {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssUrl {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssFile {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssUrl {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssFile {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssUrl {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssFile {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string ThemeCssUrl {
			get {
				return RsseSpaceThemeProvider.Themes.ThemeThemeProvider.ThemeCssUrl; 
			}
		}

		protected override string ThemeCssFile {
			get {
				return "ReferenceTheme.ThemeProvider.css"; 
			}
		}

		protected override string ThemeExtraCssUrl {
			get {
				return RsseSpaceRichWidgets.Themes.ThemeLondonFixed.ThemeExtraCssUrl; 
			}
		}

		protected override string ThemeExtraCssFile {
			get {
				return "ReferenceTheme.LondonFixed.extra.css"; 
			}
		}

		public override bool IsUsingMobileTheme {
			get {
				return false; 
			}
		}

		protected override string OwnJavascriptInclude {
			get {
				return ""; 
			}
		}

		public override string XUACompatibleOverride {
			get {
				return null; 
			}
		}

		protected void InitializeUrls() {
			Uri uri = new Uri((RuntimePlatformUtils.RequestIsSecure(Request) ? "https": "http") + Request.Url.ToString().Substring(Request.Url.Scheme.Length));
			string applicationUrl = AppUtils.Instance.getImagePath(/*internalAccess*/false,/*includeSessionIdIfNeeded*/ false);
			actionUrl = "";
			bookmarkableUrl = uri.GetLeftPart(UriPartial.Authority) + applicationUrl;
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			if ((inParamStudentReference!= "")) {
				parameters.Add(new Pair<string, string>("StudentReference", HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			}
			if ((inParamSessionID!=0)) {
				parameters.Add(new Pair<string, string>("SessionID", HttpUtility.UrlEncode(Convert.ToString(inParamSessionID), Request.ContentEncoding)));
			}
			if ((inParamCourseCode!= "")) {
				parameters.Add(new Pair<string, string>("CourseCode", HttpUtility.UrlEncode(inParamCourseCode, Request.ContentEncoding)));
			}
			if ((inParamFromLearnerList!=false)) {
				parameters.Add(new Pair<string, string>("FromLearnerList", HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList), Request.ContentEncoding)));
			}
			if (Request.AppRelativeCurrentExecutionFilePath.IndexOf('/', 2) == -1) {
				AppInfo appInfo = AppInfo.GetAppInfo();
				if (appInfo != null) {
					string pageHeader = appInfo.OsContext.OsISAPIFilter.GetPage(Request);
					if (appInfo.OsContext.IsCookielessSession || (pageHeader != null && pageHeader.IndexOf('/', 1) != -1)) {
						actionUrl = applicationUrl;
					}
				}
				actionUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsCauseForConcern", parameters,/*useParamsOnlyIfNeededForRule*/ true);
			}
			bookmarkableUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsCauseForConcern", parameters,/*useParamsOnlyIfNeededForRule*/ false);

		}

		protected override void OnInit(EventArgs e) {
			HeContext heContext = AppInfo.GetAppInfo().OsContext;
			heContext.CurrentScreen = this;
			try {
				heContext.CurrentExecutionFileName = Path.GetFileName(Request.CurrentExecutionFilePath);
			} catch {}
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wt_WebBlockInstance117 = (ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout) FindControl("wt_WebBlockInstance117");
			wtCauseForConcernRaise = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtCauseForConcernRaise");
			wtCauseForConcern = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtCauseForConcern");
			wt_Container97 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container97");
			wt_Container160 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container160");
			wt_Container7 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container7");
			wt_Container55 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container55");
			wtRaiseCauseForConcern = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtRaiseCauseForConcern");
			wt_Container52 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container52");
			wtReason = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtReason");
			wt_Container86 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container86");
			wt_Container34 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container34");
			wtResponsible2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtResponsible2");
			wt_Container123 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container123");
			wt_Container71 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container71");
			wtWarapperSelectRAG = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtWarapperSelectRAG");
			wt_Container2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container2");
			wt_Container101 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container101");
			wt_Container63 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container63");
			wt_Container40 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container40");
			wt_Container132 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container132");
			wt_Container48 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container48");
			wt_Container208 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container208");
			wtButton_CauseForConcern = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtButton_CauseForConcern");
			wt_Container221 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container221");
			wt_Link213 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link213");
			if (this.wt_Link213 != null) {
				this.wt_Link213.Click += new System.EventHandler(this.wt_Link213_Click);
			}
			wtCauseForConcernList = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtCauseForConcernList");
			wtGetCauseForConcern_List = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtGetCauseForConcern_List");
			wtGetCauseForConcern_List.StartIndexExpression = () => 0;
			wtGetCauseForConcern_List.LineCountExpression = () => 50;
			if (this.wt_Link15 != null) {
				this.wt_Link15.Click += new System.EventHandler(this.wt_Link15_Click);
			}
			wtCauseForConcernLog2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtCauseForConcernLog2");
			wt_Container148 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container148");
			wt_Container36 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container36");
			wt_Link190 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link190");
			if (this.wt_Link190 != null) {
				this.wt_Link190.Click += new System.EventHandler(this.wt_Link190_Click);
			}
			wtSort2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtSort2");
			wtGetCauseForConcernLog_List2 = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtGetCauseForConcernLog_List2");
			wtGetCauseForConcernLog_List2.StartIndexExpression = () => 0;
			wtGetCauseForConcernLog_List2.LineCountExpression = () => 999;
			wtCauseForConcernLog = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtCauseForConcernLog");
			wt_Container22 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container22");
			wt_Container192 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container192");
			wt_Link61 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link61");
			if (this.wt_Link61 != null) {
				this.wt_Link61.Click += new System.EventHandler(this.wt_Link61_Click);
			}
			wtSort = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtSort");
			wtGetCauseForConcernLog_List = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtGetCauseForConcernLog_List");
			wtGetCauseForConcernLog_List.StartIndexExpression = () => 0;
			wtGetCauseForConcernLog_List.LineCountExpression = () => 999;
			Page.Error += new EventHandler(Page_Error);
			this.Load += new System.EventHandler(this.Page_Load);
			this.PreRender += new System.EventHandler(this.Page_PreRender);
		}

		public override Control FindControl(string id) {
			if (id == "wtCauseForConcernRaise") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtCauseForConcernRaise");
			}
			if (id == "wtCauseForConcern") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtCauseForConcern");
			}
			if (id == "wt_Container97") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container97");
			}
			if (id == "wt_Container160") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container160");
			}
			if (id == "wt_Text143") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Text143");
			}
			if (id == "wt_If229") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_If229");
			}
			if (id == "wt_If229T") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_If229T");
			}
			if (id == "wt_Container7") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container7");
			}
			if (id == "wt_Container55") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container55");
			}
			if (id == "RichWidgets_wt_WebBlockInstance159") {
				return wt_WebBlockInstance117.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance159");
			}
			if (id == "wt_Text133") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Text133");
			}
			if (id == "wt_If229F") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_If229F");
			}
			if (id == "wtRaiseCauseForConcern") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtRaiseCauseForConcern");
			}
			if (id == "wt_Container52") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container52");
			}
			if (id == "wtReason") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtReason");
			}
			if (id == "wt_Text74") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Text74");
			}
			if (id == "wt_Container86") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container86");
			}
			if (id == "wt_Container34") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container34");
			}
			if (id == "wtComboBoxReason") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtComboBoxReason");
			}
			if (id == "wtResponsible2") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtResponsible2");
			}
			if (id == "wt_Container123") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container123");
			}
			if (id == "wtConcernDescription") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtConcernDescription");
			}
			if (id == "wt_Container71") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container71");
			}
			if (id == "wtWarapperSelectRAG") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtWarapperSelectRAG");
			}
			if (id == "wt_Table107") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Table107");
			}
			if (id == "wt_TableRow77") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_TableRow77");
			}
			if (id == "wt_TableCell29") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_TableCell29");
			}
			if (id == "wt_Container2") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container2");
			}
			if (id == "RichWidgets_wt_WebBlockInstance172") {
				return wt_WebBlockInstance117.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance172");
			}
			if (id == "wt_InlineExpression27") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_InlineExpression27");
			}
			if (id == "wt_TableRow95") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_TableRow95");
			}
			if (id == "wt_TableCell186") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_TableCell186");
			}
			if (id == "wt_Container101") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container101");
			}
			if (id == "RichWidgets_wt_WebBlockInstance116") {
				return wt_WebBlockInstance117.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance116");
			}
			if (id == "wt_InlineExpression170") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_InlineExpression170");
			}
			if (id == "wt_TableRow194") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_TableRow194");
			}
			if (id == "wt_TableCell199") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_TableCell199");
			}
			if (id == "wt_Container63") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container63");
			}
			if (id == "RichWidgets_wt_WebBlockInstance84") {
				return wt_WebBlockInstance117.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance84");
			}
			if (id == "wt_InlineExpression25") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_InlineExpression25");
			}
			if (id == "wt_TableRow53") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_TableRow53");
			}
			if (id == "wt_TableCell216") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_TableCell216");
			}
			if (id == "wt_Container40") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container40");
			}
			if (id == "RichWidgets_wt_WebBlockInstance111") {
				return wt_WebBlockInstance117.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance111");
			}
			if (id == "wt_Text85") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Text85");
			}
			if (id == "wt_If103") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_If103");
			}
			if (id == "wt_If103T") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_If103T");
			}
			if (id == "wt_Container132") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container132");
			}
			if (id == "wt_Container48") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container48");
			}
			if (id == "Hunspell_wt_WebBlockInstance228") {
				return wt_WebBlockInstance117.wtRAG.FindControl("Hunspell_wt_WebBlockInstance228");
			}
			if (id == "wt_Container208") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container208");
			}
			if (id == "wt_WebBlockInstance75") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_WebBlockInstance75");
			}
			if (id == "wtButton_CauseForConcern") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtButton_CauseForConcern");
			}
			if (id == "RichWidgets_wt_WebBlockInstance94") {
				return wt_WebBlockInstance117.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance94");
			}
			if (id == "wt_Text152") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Text152");
			}
			if (id == "wt_Container221") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container221");
			}
			if (id == "wt_Text187") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Text187");
			}
			if (id == "wt_Link213") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Link213");
			}
			if (id == "wt_Text206") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Text206");
			}
			if (id == "wt_If103F") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_If103F");
			}
			if (id == "wtEditRecordCauseForConcern") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtEditRecordCauseForConcern");
			}
			if (id == "wtCauseForConcernList") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtCauseForConcernList");
			}
			if (id == "wtGetCauseForConcern_List") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtGetCauseForConcern_List");
			}
			if (id == "wtCauseForConcernLog2") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtCauseForConcernLog2");
			}
			if (id == "wt_Container148") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container148");
			}
			if (id == "wt_Container36") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container36");
			}
			if (id == "wt_Text73") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Text73");
			}
			if (id == "wt_Link190") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Link190");
			}
			if (id == "wtSort2") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtSort2");
			}
			if (id == "wtGetCauseForConcernLog_List2") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtGetCauseForConcernLog_List2");
			}
			if (id == "wtCauseForConcernLog") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtCauseForConcernLog");
			}
			if (id == "wt_Container22") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container22");
			}
			if (id == "wt_Container192") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Container192");
			}
			if (id == "wt_Text185") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Text185");
			}
			if (id == "wt_Link61") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_Link61");
			}
			if (id == "wtSort") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtSort");
			}
			if (id == "wt_If161") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_If161");
			}
			if (id == "wt_If161T") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_If161T");
			}
			if (id == "RichWidgets_wt_WebBlockInstance8") {
				return wt_WebBlockInstance117.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance8");
			}
			if (id == "wt_If161F") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wt_If161F");
			}
			if (id == "RichWidgets_wt_WebBlockInstance204") {
				return wt_WebBlockInstance117.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance204");
			}
			if (id == "wtGetCauseForConcernLog_List") {
				return wt_WebBlockInstance117.wtRAG.FindControl("wtGetCauseForConcernLog_List");
			}

			return base.FindControl(id);
		}


		private void Page_Load(object sender, System.EventArgs e) {
			// init vars
			AppInfo appInfo = Global.App;
			if (appInfo != null) {
				heContext = appInfo.OsContext;
			}
			Response.ContentType = "text/html; charset=" + Response.ContentEncoding.WebName;
			OutSystems.HubEdition.RuntimePlatform.Web.JavaScriptManager.CheckRelativeJavaScriptPrefix(AppUtils.Instance.getImagePath());
			appInfo.IsLoadingScreen = !IsPostBack;
			((OSPageViewState) Page).EnableResetViewState();
			if (!IsPostBack) {
				ArrayList screenParameters = (ArrayList) Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsCauseForConcern"];
				bool screenParametersInSession = false;
				object screenParametersKey = heContext.Session["_ScreenParametersKey"];
				if ((screenParametersKey == null || this.Key.Equals(ObjectKey.Parse(Convert.ToString(screenParametersKey)))) && screenParameters != null) {
					try {
						if (screenParameters.Count > 0) {
							object paramValue = screenParameters[0];
							if (paramValue != null) {
								inParamStudentReference = (string) paramValue;
							}
						}
						if (screenParameters.Count > 1) {
							object paramValue = screenParameters[1];
							if (paramValue != null) {
								inParamSessionID = (int) paramValue;
							}
						}
						if (screenParameters.Count > 2) {
							object paramValue = screenParameters[2];
							if (paramValue != null) {
								inParamCourseCode = (string) paramValue;
							}
						}
						if (screenParameters.Count > 3) {
							object paramValue = screenParameters[3];
							if (paramValue != null) {
								inParamFromLearnerList = (bool) paramValue;
							}
						}
						screenParametersInSession = true;
					} catch (Exception parametersException) {
						ErrorLog.LogApplicationError("Failed to load Screen Input Parameters from session.", "ScreenParametersKey = " + screenParametersKey + ", Count = " + screenParameters.Count + "\r\n" + parametersException.StackTrace, heContext, "Global");
					} finally {
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsCauseForConcern"] = null;
						heContext.Session["_ScreenParametersKey"] = null;
					}
				}
				else if (Request.HttpMethod == "GET") {
					if (Request.QueryString["StudentReference"] != null) {
						inParamStudentReference = Request.QueryString["StudentReference"];
					}
					if (Request.QueryString["SessionID"] != null) {
						inParamSessionID = Convert.ToInt32(Request.QueryString["SessionID"]);
					}
					if (Request.QueryString["CourseCode"] != null) {
						inParamCourseCode = Request.QueryString["CourseCode"];
					}
					if (Request.QueryString["FromLearnerList"] != null) {
						inParamFromLearnerList = (Request.QueryString["FromLearnerList"]).ToLowerInvariant() == "true";
					}
				}
				else if (Request.HttpMethod == "POST") {
					if (Request.Form["StudentReference"] != null) {
						inParamStudentReference = Request.Form["StudentReference"];
					}
					if (Request.Form["SessionID"] != null) {
						inParamSessionID = Convert.ToInt32(Request.Form["SessionID"]);
					}
					if (Request.Form["CourseCode"] != null) {
						inParamCourseCode = Request.Form["CourseCode"];
					}
					if (Request.Form["FromLearnerList"] != null) {
						inParamFromLearnerList = (Request.Form["FromLearnerList"]).ToLowerInvariant() == "true";
					}
				}
			}
			if (!appInfo.IsApplicationEnabled) {
				ErrorLog.LogApplicationError(new Exception("eSpace " + appInfo.eSpaceName + " is disabled"), heContext, "Global");
				String contact = BuiltInFunction.EncodeUrl(RuntimePlatformUtils.GetAdministrationEmail());
				try {
					Server.Transfer("/customHandlers/app_offline.aspx?contact=" + contact + "&errorCode=APPLICATION_OFFLINE");
				}
				catch (System.Threading.ThreadAbortException) {}
				catch {
					Response.Redirect("/customHandlers/internalerror.aspx");
				}
			}
			InitializeUrls();
			Actions.ActionOnBeginWebRequest(heContext);
			if (!IsPostBack) {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				Preparation(heContext);
				bool bindEditRecords = !IsPostBack;
				if (bindEditRecords) {
					wtEditRecordCauseForConcern_onDataBindingDataSource(this.FindControl("wtEditRecordCauseForConcern"), null);
				}
				ssGetCauseForConcern_ListListDoDataBind = true;
				ssGetCauseForConcernLog_List2ListDoDataBind = true;
				ssGetCauseForConcernLog_ListListDoDataBind = true;
				Title = "LearnerDetailsCauseForConcern"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerDetailsCauseForConcern", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} else {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				FetchViewState();
			}

		}

		private bool _negociateTabIndexesExecuted = false;

		private void Page_PreRender(object sender, System.EventArgs e) {
			ClientScript.RegisterArrayDeclaration("OsPage_Validators", "{}");
			if (!_negociateTabIndexesExecuted) {
				NegotiateTabIndexes();
				_negociateTabIndexesExecuted = true;
			}
			foreach(Control child in this.Controls) {
				DisableViewState(child);
			}
		}

		private void NegotiateTabIndexes() {
			short tabindex=1;
			tabindex = NegotiateTabIndexes(tabindex, true);
		}

		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}



		private void Page_Error(object sender, System.EventArgs e) {
			if (! new ssCaseConferencing.Flows.FlowLearnerView.ExceptionHandler(this, false).HandleException()) {
				DatabaseAccess.FreeupResources(false);
				Server.Transfer("_WebErrorPage.aspx");
			}
		}

		public override void ClearErrorHandler() {
			Error -= Page_Error;
		}

		public void CheckPermissions(HeContext heContext) {
			{
				bool check;
				ExtendedActions.CheckCaseConferencingBackofficeRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckPLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSuperUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSafeGuardingLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckRegisteredRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportPractitionerRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSLARole(heContext, 0, out check);
				if (check) return;
			}
			throw new ExcptNotCaseConferencingBackoffice("CaseConferencingBackoffice role required");
		}


		public ObjectKey Key {
			get {
				return ObjectKey.Parse("sxZNcq5Pq0Wqm2gNOcl23g"); 
			}
		}

		public bool isSecure {
			get {
				return true; 
			}
		}


		/// <summary>
		/// Action <code>CommandOpenEditCauseForConcern</code> that represents the Service Studio screen action
		///  <code>OpenEditCauseForConcern</code> <p> Description: </p>
		/// </summary>
		private bool CommandOpenEditCauseForConcern(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				varLcVisible = (!varLcVisible); // Visible = notVisible
				// Refresh Widget (wtRaiseCauseForConcern)
				((OSPageViewState) Page).AjaxRefresh(wtRaiseCauseForConcern, "VerticalSlide", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandSort</code> that represents the Service Studio screen action <code>Sort</code>
		///  <p> Description: </p>
		/// </summary>
		private bool CommandSort(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				varLcSortDesc = (!varLcSortDesc); // SortDesc = notSortDesc
				// Created by the upgrade of 'GetStudentLogsByStudentReference' to an Aggregate.
				varLcGetStudentLogsByStudentReference_Sort = ((varLcSortDesc) ?("{StudentLog}.[id] desc"):("{StudentLog}.[id] asc")); // GetStudentLogsByStudentReference_Sort = internalIf
				// Query datasetGetStudentLogsByStudentReference
				{
					int datasetGetStudentLogsByStudentReference_maxRecords = Math.Max(wtGetCauseForConcernLog_List.StartIndex + wtGetCauseForConcernLog_List.LineCount + 1, 0);
					queryResGetStudentLogsByStudentReference_outParamList = FuncssPreparation.datasetGetStudentLogsByStudentReference(heContext, datasetGetStudentLogsByStudentReference_maxRecords, IterationMultiplicity.Multiple, out queryResGetStudentLogsByStudentReference_outParamCount, varLcGetStudentLogsByStudentReference_Sort
					, inParamStudentReference
					);
				}
				// Refresh Widget (wtCauseForConcernLog)
				ssGetCauseForConcernLog_ListListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtCauseForConcernLog, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandEdit</code> that represents the Service Studio screen action <code>Edit</code>
		///  <p> Description: </p>
		/// </summary>
		private bool CommandEdit(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				queryResGetCauseForConcern_outParamList.CurrentRec.ssSTBoolean.ssValue = true; // GetCauseForConcern.List.Current.Boolean.Value = True
				ssEditRecordCauseForConcernRecord = ((RCCauseOfConcernRecord) getWtGetCauseForConcern_ListList().CurrentRec.ssENCauseOfConcern); // EditRecordCauseForConcern.Record = GetCauseForConcern_List.List.Current.CauseOfConcern
				varLcCurrentSelectRAG = ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssRAGStatusId; // CurrentSelectRAG = EditRecordCauseForConcern.Record.CauseOfConcern.RAGStatusId
				// Refresh Widget (wtCauseForConcernCurrent)
				((OSPageViewState) Page).AjaxRefresh(Utils.getSelectedControlInRecordWidget(wtGetCauseForConcern_List, "wtCauseForConcernCurrent"), "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandOnDeleteConcernNotify</code> that represents the Service Studio screen action
		///  <code>OnDeleteConcernNotify</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnDeleteConcernNotify(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Query datasetGetCauseForConcern
				{
					int datasetGetCauseForConcern_maxRecords = Math.Max(wtGetCauseForConcern_List.StartIndex + wtGetCauseForConcern_List.LineCount + 1, 0);
					queryResGetCauseForConcern_outParamList = FuncssPreparation.datasetGetCauseForConcern(heContext, datasetGetCauseForConcern_maxRecords, IterationMultiplicity.Multiple, out queryResGetCauseForConcern_outParamCount, inParamStudentReference
					);
				}
				// Refresh Widget (wtCauseForConcernList)
				ssGetCauseForConcern_ListListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtCauseForConcernList, "None", StoreViewState);
				// Created by the upgrade of 'GetStudentLogsByStudentReference' to an Aggregate.
				varLcGetStudentLogsByStudentReference_Sort = ((varLcSortDesc) ?("{StudentLog}.[id] desc"):("{StudentLog}.[id] asc")); // GetStudentLogsByStudentReference_Sort = internalIf
				// Query datasetGetStudentLogsByStudentReference
				{
					int datasetGetStudentLogsByStudentReference_maxRecords = Math.Max(wtGetCauseForConcernLog_List.StartIndex + wtGetCauseForConcernLog_List.LineCount + 1, 0);
					queryResGetStudentLogsByStudentReference_outParamList = FuncssPreparation.datasetGetStudentLogsByStudentReference(heContext, datasetGetStudentLogsByStudentReference_maxRecords, IterationMultiplicity.Multiple, out queryResGetStudentLogsByStudentReference_outParamCount, varLcGetStudentLogsByStudentReference_Sort
					, inParamStudentReference
					);
				}
				// Refresh Widget (wtCauseForConcernLog)
				ssGetCauseForConcernLog_ListListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtCauseForConcernLog, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvChangeConcern: VarsBag {
			public int resCreateOrUpdateCauseOfConcern_outParamId = 0;

			public int resStudentLog_Create_outParamStudentLogId = 0;

			public int resEmail1_outParamEmailId = 0;
			public Actions.lcoStudent_GetResponsible resStudent_GetResponsible = new Actions.lcoStudent_GetResponsible();
			public RLCauseOfConcernReasonRecordList queryResGetCauseOfConcernReasonById_outParamList = new RLCauseOfConcernReasonRecordList();
			public int queryResGetCauseOfConcernReasonById_outParamCount = 0;

			public int resEmail2_outParamEmailId = 0;
			public lcvChangeConcern() {
			}
		}
		/// <summary>
		/// Action <code>CommandChangeConcern</code> that represents the Service Studio screen action
		///  <code>ChangeConcern</code> <p> Description: </p>
		/// </summary>
		private bool CommandChangeConcern(HeContext heContext) {
			CheckPermissions(heContext);
			lcvChangeConcern localVars = new lcvChangeConcern();
			try {
				if ((ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssReasonId==BuiltInFunction.NullIdentifier())) {
					// Feedback_Message2
					Actions.ActionFeedback_Message(heContext, "Reason Field and Reason type Required!", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
					// Update Screen
					return true;

				} else {
					if (((ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssDescription== "") || (ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssReasonId==BuiltInFunction.NullIdentifier()))) {
						// Feedback_Message
						Actions.ActionFeedback_Message(heContext, "Description Field and Reason type Required!", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
						// Update Screen
						return true;

					} else {
						ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssStudentReference = inParamStudentReference; // EditRecordCauseForConcern.Record.CauseOfConcern.StudentReference = StudentReference
						ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssCreatedBy = ((int) Global.App.OsContext.Session["UserID"]); // EditRecordCauseForConcern.Record.CauseOfConcern.CreatedBy = UserID
						ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssCreatedAt = BuiltInFunction.CurrDateTime(); // EditRecordCauseForConcern.Record.CauseOfConcern.CreatedAt = CurrDateTime
						ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssRAGStatusId = varLcCurrentSelectRAG; // EditRecordCauseForConcern.Record.CauseOfConcern.RAGStatusId = CurrentSelectRAG
						// CreateOrUpdateCauseOfConcern
						ExtendedActions.CreateOrUpdateCauseOfConcern(heContext, ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ChangedAttributes, ((RCCauseOfConcernRecord) ssEditRecordCauseForConcernRecord.ssENCauseOfConcern), out localVars.resCreateOrUpdateCauseOfConcern_outParamId);
						// Query datasetGetCauseOfConcernReasonById
						int datasetGetCauseOfConcernReasonById_maxRecords = 0;
						localVars.queryResGetCauseOfConcernReasonById_outParamList = FuncCommandChangeConcern.datasetGetCauseOfConcernReasonById(heContext, datasetGetCauseOfConcernReasonById_maxRecords, IterationMultiplicity.Never, out localVars.queryResGetCauseOfConcernReasonById_outParamCount, ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssReasonId
						);
						// StudentLog_Create
						Actions.ActionStudentLog_Create(heContext, inParamStudentReference, ((int) Global.App.OsContext.Session["UserID"]), "Changed Concern", ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("hTcMAzvg9kmgJqUGGgXnPg")).ssLogType, ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssDescription, varLcCurrentSelectRAG, false, 0, localVars.queryResGetCauseOfConcernReasonById_outParamList.CurrentRec.ssENCauseOfConcernReason.ssReason, "", 0, 0, "", 0, out localVars.resStudentLog_Create_outParamStudentLogId);
						// Created by the upgrade of 'GetStudentLogsByStudentReference' to an Aggregate.
						varLcGetStudentLogsByStudentReference_Sort = ((varLcSortDesc) ?("{StudentLog}.[id] desc"):("{StudentLog}.[id] asc")); // GetStudentLogsByStudentReference_Sort = internalIf
						// Query datasetGetStudentLogsByStudentReference
						{
							int datasetGetStudentLogsByStudentReference_maxRecords = Math.Max(wtGetCauseForConcernLog_List.StartIndex + wtGetCauseForConcernLog_List.LineCount + 1, 0);
							queryResGetStudentLogsByStudentReference_outParamList = FuncssPreparation.datasetGetStudentLogsByStudentReference(heContext, datasetGetStudentLogsByStudentReference_maxRecords, IterationMultiplicity.Multiple, out queryResGetStudentLogsByStudentReference_outParamCount, varLcGetStudentLogsByStudentReference_Sort
							, inParamStudentReference
							);
						}
						// Student_GetResponsible
						Actions.ActionStudent_GetResponsible(heContext, inParamStudentReference, out localVars.resStudent_GetResponsible.outParamResponsibleName, out localVars.resStudent_GetResponsible.outParamResponsibleEmail);
						// Send Email
						localVars.resEmail1_outParamEmailId = EmailProcessor.SendEmailRequest("http://" + Settings.Get(Settings.Configs.InternalAddress) + AppUtils.Instance.getImagePath(/*internalAccess*/true) + "Email1.aspx?" + "LogStudentId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(localVars.resStudentLog_Create_outParamStudentLogId)), "", localVars.resStudent_GetResponsible.outParamResponsibleEmail, "", "", 0, heContext.Session.TenantId, false, EmailProcessor.EmailType.Normal);
						// Feedback_Message3
						Actions.ActionFeedback_Message(heContext, "Message sent to Personal Tutor.", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("8xuePnp+TUO346Oyp3_dWQ")).ssId);
						// ChangeRAG
						if ((queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssCauseOfConcernRAG!=varLcOldRAG)) {
							// Destination = LearnerDetailsCauseForConcern

							if (OSPage.IsAjaxRequest) {
								// go to target page
								{

									((OSPage) Page).ClearErrorHandler();
									// get parameters
									heContext.Session["_ScreenParametersKey"] = "sxZNcq5Pq0Wqm2gNOcl23g";
									ArrayList screenParameters = new ArrayList();
									screenParameters.Add(inParamStudentReference);
									screenParameters.Add(0);
									screenParameters.Add("");
									screenParameters.Add(false);
									Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsCauseForConcern"] = screenParameters;
									string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference);
									sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
									string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsCauseForConcern.aspx" + sURLQuery;
									((OSPageViewState) Page).RedirectLocation = sURL;
									return false;

								}
							} else {
								// go to target page
								{

									((OSPage) Page).ClearErrorHandler();
									// get parameters
									heContext.Session["_ScreenParametersKey"] = "sxZNcq5Pq0Wqm2gNOcl23g";
									ArrayList screenParameters = new ArrayList();
									screenParameters.Add(inParamStudentReference);
									screenParameters.Add(0);
									screenParameters.Add("");
									screenParameters.Add(false);
									Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsCauseForConcern"] = screenParameters;
									Server.Transfer("LearnerDetailsCauseForConcern.aspx");
									return false;

								}
							}

						} else {
							// Query datasetGetCauseForConcern
							{
								int datasetGetCauseForConcern_maxRecords = Math.Max(wtGetCauseForConcern_List.StartIndex + wtGetCauseForConcern_List.LineCount + 1, 0);
								queryResGetCauseForConcern_outParamList = FuncssPreparation.datasetGetCauseForConcern(heContext, datasetGetCauseForConcern_maxRecords, IterationMultiplicity.Multiple, out queryResGetCauseForConcern_outParamCount, inParamStudentReference
								);
							}
							queryResGetCauseForConcern_outParamList.CurrentRec.ssSTBoolean.ssValue = false; // GetCauseForConcern.List.Current.Boolean.Value = False
							if ((varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) {
								// Refresh Widget (wtCauseForConcernList)
								ssGetCauseForConcern_ListListDoDataBind = true;
								((OSPageViewState) Page).AjaxRefresh(wtCauseForConcernList, "None", StoreViewState);

							} else {
								// Refresh Widget (wtGetCauseForConcern_List)
								((OSPageViewState) Page).AjaxRefresh(wtGetCauseForConcern_List, getWtGetCauseForConcern_ListList().CurrentRowNumber, "None", "Refresh", false, null, StoreViewState);

							}
							// Refresh Widget (wtCauseForConcernLog)
							ssGetCauseForConcernLog_ListListDoDataBind = true;
							((OSPageViewState) Page).AjaxRefresh(wtCauseForConcernLog, "None", StoreViewState);
							if (((varLcOldRAG!=ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId) && (varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId))) {
								// Send Email
								localVars.resEmail2_outParamEmailId = EmailProcessor.SendEmailRequest("http://" + Settings.Get(Settings.Configs.InternalAddress) + AppUtils.Instance.getImagePath(/*internalAccess*/true) + "Email1.aspx?" + "LogStudentId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(localVars.resStudentLog_Create_outParamStudentLogId)), "", Functions.ssGetUser(heContext, ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssCreatedBy).ssENUser.ssEmail, "", "", 0, heContext.Session.TenantId, false, EmailProcessor.EmailType.Normal);

							}
							// Update Screen
							return true;

						}

					}

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvRaiseConcern: VarsBag {
			public Actions.lcoStudent_GetResponsible resStudent_GetResponsible = new Actions.lcoStudent_GetResponsible();
			public RLCauseOfConcernReasonRecordList queryResGetCauseOfConcernReasonById_outParamList = new RLCauseOfConcernReasonRecordList();
			public int queryResGetCauseOfConcernReasonById_outParamCount = 0;

			public int resStudentLog_Create_outParamStudentLogId = 0;

			public int resEmail1_outParamEmailId = 0;
			public int resCreateCauseOfConcern_outParamId = 0;

			public lcvRaiseConcern() {
			}
		}
		/// <summary>
		/// Action <code>CommandRaiseConcern</code> that represents the Service Studio screen action
		///  <code>RaiseConcern</code> <p> Description: </p>
		/// </summary>
		private bool CommandRaiseConcern(HeContext heContext) {
			CheckPermissions(heContext);
			lcvRaiseConcern localVars = new lcvRaiseConcern();
			try {
				if ((varLcReasonId==BuiltInFunction.NullIdentifier())) {
					// Feedback_Message2
					Actions.ActionFeedback_Message(heContext, "Reason field required!", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
					// Update Screen
					return true;

				} else {
					if ((varLcDescriptionConcern== "")) {
						// Feedback_Message
						Actions.ActionFeedback_Message(heContext, "Description field required!", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
						// Update Screen
						return true;

					} else {
						varLcVisible = false; // Visible = False
						ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssStudentReference = inParamStudentReference; // EditRecordCauseForConcern.Record.CauseOfConcern.StudentReference = StudentReference
						ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssRAGStatusId = varLcNewConcernRAG; // EditRecordCauseForConcern.Record.CauseOfConcern.RAGStatusId = NewConcernRAG
						ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssReasonId = varLcReasonId; // EditRecordCauseForConcern.Record.CauseOfConcern.ReasonId = ReasonId
						ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssDescription = varLcDescriptionConcern; // EditRecordCauseForConcern.Record.CauseOfConcern.Description = DescriptionConcern
						ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssCreatedBy = ((int) Global.App.OsContext.Session["UserID"]); // EditRecordCauseForConcern.Record.CauseOfConcern.CreatedBy = UserID
						ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssCreatedAt = BuiltInFunction.CurrDate(); // EditRecordCauseForConcern.Record.CauseOfConcern.CreatedAt = CurrDate
						ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssId = BuiltInFunction.NullIdentifier(); // EditRecordCauseForConcern.Record.CauseOfConcern.Id = NullIdentifier
						// CreateCauseOfConcern
						ExtendedActions.CreateCauseOfConcern(heContext, ssEditRecordCauseForConcernRecord, out localVars.resCreateCauseOfConcern_outParamId);
						// Query datasetGetCauseOfConcernReasonById
						int datasetGetCauseOfConcernReasonById_maxRecords = 0;
						localVars.queryResGetCauseOfConcernReasonById_outParamList = FuncCommandRaiseConcern.datasetGetCauseOfConcernReasonById(heContext, datasetGetCauseOfConcernReasonById_maxRecords, IterationMultiplicity.Never, out localVars.queryResGetCauseOfConcernReasonById_outParamCount, varLcReasonId
						);
						// StudentLog_Create
						Actions.ActionStudentLog_Create(heContext, inParamStudentReference, ((int) Global.App.OsContext.Session["UserID"]), "Raise Concern", ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("hTcMAzvg9kmgJqUGGgXnPg")).ssLogType, varLcDescriptionConcern, varLcNewConcernRAG, false, 0, localVars.queryResGetCauseOfConcernReasonById_outParamList.CurrentRec.ssENCauseOfConcernReason.ssReason, "", 0, 0, "", 0, out localVars.resStudentLog_Create_outParamStudentLogId);
						// Created by the upgrade of 'GetStudentLogsByStudentReference' to an Aggregate.
						varLcGetStudentLogsByStudentReference_Sort = ((varLcSortDesc) ?("{StudentLog}.[id] desc"):("{StudentLog}.[id] asc")); // GetStudentLogsByStudentReference_Sort = internalIf
						// Query datasetGetStudentLogsByStudentReference
						{
							int datasetGetStudentLogsByStudentReference_maxRecords = Math.Max(wtGetCauseForConcernLog_List.StartIndex + wtGetCauseForConcernLog_List.LineCount + 1, 0);
							queryResGetStudentLogsByStudentReference_outParamList = FuncssPreparation.datasetGetStudentLogsByStudentReference(heContext, datasetGetStudentLogsByStudentReference_maxRecords, IterationMultiplicity.Multiple, out queryResGetStudentLogsByStudentReference_outParamCount, varLcGetStudentLogsByStudentReference_Sort
							, inParamStudentReference
							);
						}
						// Student_GetResponsible
						Actions.ActionStudent_GetResponsible(heContext, inParamStudentReference, out localVars.resStudent_GetResponsible.outParamResponsibleName, out localVars.resStudent_GetResponsible.outParamResponsibleEmail);
						// Send Email
						localVars.resEmail1_outParamEmailId = EmailProcessor.SendEmailRequest("http://" + Settings.Get(Settings.Configs.InternalAddress) + AppUtils.Instance.getImagePath(/*internalAccess*/true) + "Email1.aspx?" + "LogStudentId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(localVars.resStudentLog_Create_outParamStudentLogId)), "", localVars.resStudent_GetResponsible.outParamResponsibleEmail, "", "", 0, heContext.Session.TenantId, false, EmailProcessor.EmailType.Normal);
						// Feedback_Message3
						Actions.ActionFeedback_Message(heContext, "Message sent to Personal Tutor.", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("8xuePnp+TUO346Oyp3_dWQ")).ssId);
						// ChangeRAG
						if ((queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssCauseOfConcernRAG!=varLcOldRAG)) {
							// Destination = LearnerDetailsCauseForConcern

							if (OSPage.IsAjaxRequest) {
								// go to target page
								{

									((OSPage) Page).ClearErrorHandler();
									// get parameters
									heContext.Session["_ScreenParametersKey"] = "sxZNcq5Pq0Wqm2gNOcl23g";
									ArrayList screenParameters = new ArrayList();
									screenParameters.Add(inParamStudentReference);
									screenParameters.Add(0);
									screenParameters.Add("");
									screenParameters.Add(false);
									Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsCauseForConcern"] = screenParameters;
									string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference);
									sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
									string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsCauseForConcern.aspx" + sURLQuery;
									((OSPageViewState) Page).RedirectLocation = sURL;
									return false;

								}
							} else {
								// go to target page
								{

									((OSPage) Page).ClearErrorHandler();
									// get parameters
									heContext.Session["_ScreenParametersKey"] = "sxZNcq5Pq0Wqm2gNOcl23g";
									ArrayList screenParameters = new ArrayList();
									screenParameters.Add(inParamStudentReference);
									screenParameters.Add(0);
									screenParameters.Add("");
									screenParameters.Add(false);
									Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsCauseForConcern"] = screenParameters;
									Server.Transfer("LearnerDetailsCauseForConcern.aspx");
									return false;

								}
							}

						} else {
							// Query datasetGetCauseForConcern
							{
								int datasetGetCauseForConcern_maxRecords = Math.Max(wtGetCauseForConcern_List.StartIndex + wtGetCauseForConcern_List.LineCount + 1, 0);
								queryResGetCauseForConcern_outParamList = FuncssPreparation.datasetGetCauseForConcern(heContext, datasetGetCauseForConcern_maxRecords, IterationMultiplicity.Multiple, out queryResGetCauseForConcern_outParamCount, inParamStudentReference
								);
							}
							varLcReasonId = BuiltInFunction.NullIdentifier(); // ReasonId = NullIdentifier
							varLcDescriptionConcern = ""; // DescriptionConcern = ""
							varLcNewConcernRAG = ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId; // NewConcernRAG = Raised
							// Refresh Widget (wtCauseForConcernRaise)
							ssGetCauseForConcern_ListListDoDataBind = true;
							((OSPageViewState) Page).AjaxRefresh(wtCauseForConcernRaise, "None", StoreViewState);
							// Refresh Widget (wtCauseForConcernList)
							ssGetCauseForConcern_ListListDoDataBind = true;
							((OSPageViewState) Page).AjaxRefresh(wtCauseForConcernList, "None", StoreViewState);
							// Refresh Widget (wtCauseForConcernLog)
							ssGetCauseForConcernLog_ListListDoDataBind = true;
							((OSPageViewState) Page).AjaxRefresh(wtCauseForConcernLog, "None", StoreViewState);
							// Update Screen
							return true;

						}

					}

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvCancel: VarsBag {
			public bool inParamRaise;
			public lcvCancel(bool inParamRaise) {
				this.inParamRaise = inParamRaise;
			}
		}
		/// <summary>
		/// Action <code>CommandCancel</code> that represents the Service Studio screen action
		///  <code>Cancel</code> <p> Description: </p>
		/// </summary>
		private bool CommandCancel(HeContext heContext, bool inParamRaise) {
			CheckPermissions(heContext);
			lcvCancel localVars = new lcvCancel(inParamRaise);
			try {
				if ((localVars.inParamRaise==true)) {
					varLcVisible = false; // Visible = False
					// Refresh Widget (wtCauseForConcernRaise)
					ssGetCauseForConcern_ListListDoDataBind = true;
					((OSPageViewState) Page).AjaxRefresh(wtCauseForConcernRaise, "None", StoreViewState);

				} else {
					queryResGetCauseForConcern_outParamList.CurrentRec.ssSTBoolean.ssValue = false; // GetCauseForConcern.List.Current.Boolean.Value = False
					// Refresh Widget (wtCauseForConcernCurrent)
					((OSPageViewState) Page).AjaxRefresh(Utils.getSelectedControlInRecordWidget(wtGetCauseForConcern_List, "wtCauseForConcernCurrent"), "None", StoreViewState);

				}
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvChangeSelectedRAG: VarsBag {
			public string inParamNewRAGStatusId;
			public bool inParamNew;
			public lcvChangeSelectedRAG(string inParamNewRAGStatusId, bool inParamNew) {
				this.inParamNewRAGStatusId = inParamNewRAGStatusId;
				this.inParamNew = inParamNew;
			}
		}
		/// <summary>
		/// Action <code>CommandChangeSelectedRAG</code> that represents the Service Studio screen action
		///  <code>ChangeSelectedRAG</code> <p> Description: </p>
		/// </summary>
		private bool CommandChangeSelectedRAG(HeContext heContext, string inParamNewRAGStatusId, bool inParamNew) {
			CheckPermissions(heContext);
			lcvChangeSelectedRAG localVars = new lcvChangeSelectedRAG(inParamNewRAGStatusId, inParamNew);
			try {
				if ((localVars.inParamNew==true)) {
					varLcNewConcernRAG = localVars.inParamNewRAGStatusId; // NewConcernRAG = NewRAGStatusId
					// Refresh Widget (wtWarapperSelectRAG)
					((OSPageViewState) Page).AjaxRefresh(wtWarapperSelectRAG, "None", StoreViewState);

				} else {
					varLcCurrentSelectRAG = localVars.inParamNewRAGStatusId; // CurrentSelectRAG = NewRAGStatusId
					// Refresh Widget (wtWarapperSelectRAG2)
					((OSPageViewState) Page).AjaxRefresh(Utils.getSelectedControlInRecordWidget(wtGetCauseForConcern_List, "wtWarapperSelectRAG2"), "None", StoreViewState);

				}
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// wt_WebBlockInstance117 Functions
		/// </summary>
		public void webBlck_WebBlockInstance117_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout widget = (ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout) sender;
			widget.inParamStudentReference = inParamStudentReference;
			widget.inParamCategoryId = BuiltInFunction.NullIdentifier();
			widget.inParamOfferingCode = "";
			widget.inParamShowUnit = false;
			widget.inParamShowTarget = false;
			widget.inParamActiveLearnerDetailMenu = ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("FYItQb2Jv0WY6p0za1Y9HQ")).ssMenu;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamCourseCode = inParamCourseCode;
			widget.inParamFromLearnerList = inParamFromLearnerList;
			widget.inParamActiveTab = ENTabsEntity.GetRecordByKey(ObjectKey.Parse("avXIv1WG4UWcoRPTcOjaOw")).ssId;
		}
		/// <summary>
		/// wtCauseForConcernRaise Functions
		/// </summary>
		public void cntCauseForConcernRaise_onDataBinding(object sender, System.EventArgs e) {
			cntCauseForConcernRaise_setInlineAttributes(sender, e);
		}
		public string cntCauseForConcernRaise_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntCauseForConcernRaise_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtCauseForConcernRaise)
		/// </summary>
		/// <returns>The Visible State of wtCauseForConcernRaise</returns>
		public bool cntCauseForConcernRaise_isVisible() {
			return true;
		}

		/// <summary>
		/// wtCauseForConcern Functions
		/// </summary>
		public void cntCauseForConcern_onDataBinding(object sender, System.EventArgs e) {
			cntCauseForConcern_setInlineAttributes(sender, e);
		}
		public string cntCauseForConcern_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntCauseForConcern_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtCauseForConcern)
		/// </summary>
		/// <returns>The Visible State of wtCauseForConcern</returns>
		public bool cntCauseForConcern_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container97 Functions
		/// </summary>
		public void cnt_Container97_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container97_setInlineAttributes(sender, e);
		}
		public string cnt_Container97_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container97_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container97)
		/// </summary>
		/// <returns>The Visible State of wt_Container97</returns>
		public bool cnt_Container97_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container160 Functions
		/// </summary>
		public void cnt_Container160_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container160_setInlineAttributes(sender, e);
		}
		public string cnt_Container160_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-bottom:2px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container160_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container160)
		/// </summary>
		/// <returns>The Visible State of wt_Container160</returns>
		public bool cnt_Container160_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If229 Functions
		/// </summary>
		bool if_wt_If229_hasRun=false;
		bool if_wt_If229_evalResult;
		public bool if_wt_If229() {
			if (if_wt_If229_hasRun) {
				if_wt_If229_hasRun = false;
				return if_wt_If229_evalResult;
			}
			if_wt_If229_hasRun = true;
			if_wt_If229_evalResult = (resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId);
			return if_wt_If229_evalResult;
		}

		/// <summary>
		/// wt_Container7 Functions
		/// </summary>
		public void cnt_Container7_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container7_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container7_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "float:right;margin-top: -4px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container7_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container7
		/// </summary>
		public void cnt_Container7_AjaxClick(object sender, System.EventArgs e) {
			if (CommandOpenEditCauseForConcern(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container7)
		/// </summary>
		/// <returns>The Visible State of wt_Container7</returns>
		public bool cnt_Container7_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container55 Functions
		/// </summary>
		public void cnt_Container55_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container55_setInlineAttributes(sender, e);
		}
		public string cnt_Container55_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container55_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container55)
		/// </summary>
		/// <returns>The Visible State of wt_Container55</returns>
		public bool cnt_Container55_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance159 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance159_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EdAx1MS_gkWfsLiHNqAN4g")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wtRaiseCauseForConcern Functions
		/// </summary>
		public void cntRaiseCauseForConcern_onDataBinding(object sender, System.EventArgs e) {
			cntRaiseCauseForConcern_setInlineAttributes(sender, e);
		}
		public string cntRaiseCauseForConcern_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin:21px;color:#757575;font-size: 12px;text-align: left;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntRaiseCauseForConcern_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtRaiseCauseForConcern)
		/// </summary>
		/// <returns>The Visible State of wtRaiseCauseForConcern</returns>
		public bool cntRaiseCauseForConcern_isVisible() {
			return varLcVisible;
		}

		/// <summary>
		/// wt_Container52 Functions
		/// </summary>
		public void cnt_Container52_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container52_setInlineAttributes(sender, e);
		}
		public string cnt_Container52_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container52_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container52)
		/// </summary>
		/// <returns>The Visible State of wt_Container52</returns>
		public bool cnt_Container52_isVisible() {
			return true;
		}

		/// <summary>
		/// wtReason Functions
		/// </summary>
		public void cntReason_onDataBinding(object sender, System.EventArgs e) {
			cntReason_setInlineAttributes(sender, e);
		}
		public string cntReason_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight: bold;width:300px;margin-left:5px;margin-top:0;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntReason_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtReason)
		/// </summary>
		/// <returns>The Visible State of wtReason</returns>
		public bool cntReason_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text74 Functions
		/// </summary>
		public void wt_Text74_onDataBinding(object sender, System.EventArgs e) {
			wt_Text74_setInlineAttributes(sender, e);
		}
		public string wt_Text74_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight: bold;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container86 Functions
		/// </summary>
		public void cnt_Container86_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container86_setInlineAttributes(sender, e);
		}
		public string cnt_Container86_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container86_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container86)
		/// </summary>
		/// <returns>The Visible State of wt_Container86</returns>
		public bool cnt_Container86_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container34 Functions
		/// </summary>
		public void cnt_Container34_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container34_setInlineAttributes(sender, e);
		}
		public string cnt_Container34_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container34_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container34)
		/// </summary>
		/// <returns>The Visible State of wt_Container34</returns>
		public bool cnt_Container34_isVisible() {
			return true;
		}

		/// <summary>
		/// wtComboBoxReason Functions
		/// </summary>
		public void selComboBoxReason_onDataBinding(object sender, System.EventArgs e) {
			selComboBoxReason_setInlineAttributes(sender, e);
			if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
			if (Rt_wtComboBoxReason.SpecialListVal == "0")
			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
			RLCauseOfConcernReasonRecordList Rt_wtComboBoxReason_reclist = queryResGetCauseOfConcernReasons2_outParamList;
			Rt_wtComboBoxReason_reclist.StartIteration();
			try {
				while (!Rt_wtComboBoxReason_reclist.Eof) {
					((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wtComboBoxReason_reclist.CurrentRec.ssENCauseOfConcernReason.ssReason, Convert.ToString(Rt_wtComboBoxReason_reclist.CurrentRec.ssENCauseOfConcernReason.ssId)));
					if (varLcReasonId == Convert.ToInt32(Convert.ToString(Rt_wtComboBoxReason_reclist.CurrentRec.ssENCauseOfConcernReason.ssId))) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
					}
					Rt_wtComboBoxReason_reclist.Advance();
				}
			} finally {
				Rt_wtComboBoxReason_reclist.EndIteration();
			}
		}
		public string selComboBoxReason_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: #6F6A6A;font-size: 15px;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		public void selComboBoxReason_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wtComboBoxReason.SpecialListVal = dropDown.SelectedValue.Substring(8);
				varLcReasonId = 0;
			}
			else {
				Rt_wtComboBoxReason.SpecialListVal = "";
				try {
					varLcReasonId = Convert.ToInt32(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtComboBoxReason)
		/// </summary>
		/// <returns>The Visible State of wtComboBoxReason</returns>
		public bool selComboBoxReason_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtComboBoxReason)
		/// </summary>
		/// <returns>The Enabled State of wtComboBoxReason</returns>
		public bool selComboBoxReason_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (selComboBoxReason)
		/// </summary>
		/// <returns>The Mandatory Value of selComboBoxReason</returns>
		public bool selComboBoxReason_isMandatory() {
			return false;
		}

		/// <summary>
		/// wtResponsible2 Functions
		/// </summary>
		public void cntResponsible2_onDataBinding(object sender, System.EventArgs e) {
			cntResponsible2_setInlineAttributes(sender, e);
		}
		public string cntResponsible2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding-top:5px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntResponsible2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtResponsible2)
		/// </summary>
		/// <returns>The Visible State of wtResponsible2</returns>
		public bool cntResponsible2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container123 Functions
		/// </summary>
		public void cnt_Container123_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container123_setInlineAttributes(sender, e);
		}
		public string cnt_Container123_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container123_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container123)
		/// </summary>
		/// <returns>The Visible State of wt_Container123</returns>
		public bool cnt_Container123_isVisible() {
			return true;
		}

		/// <summary>
		/// wtConcernDescription Functions
		/// </summary>
		public void inputwtConcernDescription_onDataBinding(object sender, System.EventArgs e) {
			inputwtConcernDescription_setInlineAttributes(sender, e);
		}
		public string inputwtConcernDescription_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: #6F6A6A;font-size: 15px;padding: 1px 6px;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtConcernDescription_input_value() {
			if (("" !=varLcDescriptionConcern)) {
				return varLcDescriptionConcern;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtConcernDescription");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return varLcDescriptionConcern;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtConcernDescription_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					varLcDescriptionConcern = ""; 
				} else {
					varLcDescriptionConcern = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				varLcDescriptionConcern = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtConcernDescription)
		/// </summary>
		/// <returns>The Visible State of wtConcernDescription</returns>
		public bool inputwtConcernDescription_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtConcernDescription)
		/// </summary>
		/// <returns>The Enabled State of wtConcernDescription</returns>
		public bool inputwtConcernDescription_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtConcernDescription)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtConcernDescription</returns>
		public bool inputwtConcernDescription_isMandatory() {
			return false;
		}

		/// <summary>
		/// wt_Container71 Functions
		/// </summary>
		public void cnt_Container71_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container71_setInlineAttributes(sender, e);
		}
		public string cnt_Container71_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container71_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container71)
		/// </summary>
		/// <returns>The Visible State of wt_Container71</returns>
		public bool cnt_Container71_isVisible() {
			return true;
		}

		/// <summary>
		/// wtWarapperSelectRAG Functions
		/// </summary>
		public void cntWarapperSelectRAG_onDataBinding(object sender, System.EventArgs e) {
			cntWarapperSelectRAG_setInlineAttributes(sender, e);
		}
		public string cntWarapperSelectRAG_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inlinemargin-top:15px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWarapperSelectRAG_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWarapperSelectRAG)
		/// </summary>
		/// <returns>The Visible State of wtWarapperSelectRAG</returns>
		public bool cntWarapperSelectRAG_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container2 Functions
		/// </summary>
		public void cnt_Container2_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container2_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcNewConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId)) ?("RAGSelectRaised"):("RAG_RaisedUnselect"));
			if (!cnt_Container2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container2
		/// </summary>
		public void cnt_Container2_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedRAG(heContext
			, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId, true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container2)
		/// </summary>
		/// <returns>The Visible State of wt_Container2</returns>
		public bool cnt_Container2_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance172 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance172_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression27 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = Jw6_GvcROUq9LNONnh_MEw) Expression: "Not Sorted"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression27() {
			return "Not Sorted";
		}
		/// <summary>
		/// wt_Container101 Functions
		/// </summary>
		public void cnt_Container101_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container101_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container101_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcNewConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("RAGSelectGreen"):("RAG_GreenUnselect"));
			if (!cnt_Container101_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container101
		/// </summary>
		public void cnt_Container101_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedRAG(heContext
			, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId, true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container101)
		/// </summary>
		/// <returns>The Visible State of wt_Container101</returns>
		public bool cnt_Container101_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance116 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance116_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression170 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 95Kwvxk0CU+CYrl3IRFN0g) Expression: "Green"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression170() {
			return "Green";
		}
		/// <summary>
		/// wt_Container63 Functions
		/// </summary>
		public void cnt_Container63_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container63_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container63_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcNewConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("RAGSelectAmber"):("RAG_AmberUnselect"));
			if (!cnt_Container63_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container63
		/// </summary>
		public void cnt_Container63_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedRAG(heContext
			, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId, true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container63)
		/// </summary>
		/// <returns>The Visible State of wt_Container63</returns>
		public bool cnt_Container63_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance84 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance84_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression25 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = kFaGF6tO6EK66SGqHbL9xA) Expression: "Amber"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression25() {
			return "Amber";
		}
		/// <summary>
		/// wt_Container40 Functions
		/// </summary>
		public void cnt_Container40_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container40_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container40_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcNewConcernRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("RAGSelectRed"):("RAG_RedUnselect"));
			if (!cnt_Container40_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container40
		/// </summary>
		public void cnt_Container40_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedRAG(heContext
			, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId, true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container40)
		/// </summary>
		/// <returns>The Visible State of wt_Container40</returns>
		public bool cnt_Container40_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance111 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance111_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_If103 Functions
		/// </summary>
		bool if_wt_If103_hasRun=false;
		bool if_wt_If103_evalResult;
		public bool if_wt_If103() {
			if (if_wt_If103_hasRun) {
				if_wt_If103_hasRun = false;
				return if_wt_If103_evalResult;
			}
			if_wt_If103_hasRun = true;
			if_wt_If103_evalResult = (resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId);
			return if_wt_If103_evalResult;
		}

		/// <summary>
		/// wt_Container132 Functions
		/// </summary>
		public void cnt_Container132_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container132_setInlineAttributes(sender, e);
		}
		public string cnt_Container132_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:371px;padding-top:5px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container132_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container132)
		/// </summary>
		/// <returns>The Visible State of wt_Container132</returns>
		public bool cnt_Container132_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container48 Functions
		/// </summary>
		public void cnt_Container48_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container48_setInlineAttributes(sender, e);
		}
		public string cnt_Container48_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container48_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container48)
		/// </summary>
		/// <returns>The Visible State of wt_Container48</returns>
		public bool cnt_Container48_isVisible() {
			return true;
		}

		/// <summary>
		/// Hunspell_wt_WebBlockInstance228 Functions
		/// </summary>
		public void Hunspell_webBlck_WebBlockInstance228_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink widget = (proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink) sender;
			widget.inParamTextInputId = this.FindControl("wtConcernDescription").ClientID;
			widget.inParamExtraStyle = "";
			widget.inParamInPopupWindow = true;
		}
		/// <summary>
		/// wt_Container208 Functions
		/// </summary>
		public void cnt_Container208_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container208_setInlineAttributes(sender, e);
		}
		public string cnt_Container208_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container208_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container208)
		/// </summary>
		/// <returns>The Visible State of wt_Container208</returns>
		public bool cnt_Container208_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance75 Functions
		/// </summary>
		public void webBlck_WebBlockInstance75_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon widget = (ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon) sender;
			widget.inParamTextInputId = this.FindControl("wtConcernDescription").ClientID;
			widget.inParamAutoCompleteType = ENAutoCompleteBankTypeEntity.GetRecordByKey(ObjectKey.Parse("0SXHbosqdk2gX_Ma6ZCbmQ")).ssId;
		}
		/// <summary>
		/// wtButton_CauseForConcern Functions
		/// </summary>
		public void cntButton_CauseForConcern_onDataBinding(object sender, System.EventArgs e) {
			cntButton_CauseForConcern_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cntButton_CauseForConcern_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntButton_CauseForConcern_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wtButton_CauseForConcern
		/// </summary>
		public void cntButton_CauseForConcern_AjaxClick(object sender, System.EventArgs e) {
			if (CommandRaiseConcern(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtButton_CauseForConcern)
		/// </summary>
		/// <returns>The Visible State of wtButton_CauseForConcern</returns>
		public bool cntButton_CauseForConcern_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance94 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance94_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EdAx1MS_gkWfsLiHNqAN4g")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container221 Functions
		/// </summary>
		public void cnt_Container221_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container221_setInlineAttributes(sender, e);
		}
		public string cnt_Container221_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-top: 7px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container221_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container221)
		/// </summary>
		/// <returns>The Visible State of wt_Container221</returns>
		public bool cnt_Container221_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link213 Functions
		/// </summary>
		public void lnk_Link213_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link213_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandCancel(heContext, true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link213)
		/// </summary>
		/// <returns>title of the Link (wt_Link213)</returns>
		public string
		lnk_Link213_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link213)
		/// </summary>
		/// <returns>The Visible State of wt_Link213</returns>
		public bool lnk_Link213_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link213)
		/// </summary>
		/// <returns>The Enabled State of wt_Link213</returns>
		public bool lnk_Link213_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wtEditRecordCauseForConcern Functions
		/// </summary>
		public void wtEditRecordCauseForConcern_onDataBinding(object sender, System.EventArgs e) {
			wtEditRecordCauseForConcern_setInlineAttributes(sender, e);
		}
		public string wtEditRecordCauseForConcern_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:none;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		public void wtEditRecordCauseForConcern_onDataBindingDataSource(object sender, System.EventArgs e) {
		}
		/// <summary>
		/// wtCauseForConcernList Functions
		/// </summary>
		public void cntCauseForConcernList_onDataBinding(object sender, System.EventArgs e) {
			cntCauseForConcernList_setInlineAttributes(sender, e);
		}
		public string cntCauseForConcernList_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "border-top: solid 1px #dadada;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntCauseForConcernList_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtCauseForConcernList)
		/// </summary>
		/// <returns>The Visible State of wtCauseForConcernList</returns>
		public bool cntCauseForConcernList_isVisible() {
			return true;
		}

		/// <summary>
		/// wtGetCauseForConcern_List Functions
		/// </summary>
		public void recListGetCauseForConcern_List_onDataBinding(object sender, System.EventArgs e) {
			// widget wtGetCauseForConcern_List
			ssGetCauseForConcern_ListList = queryResGetCauseForConcern_outParamList;
			ssGetCauseForConcern_ListListDoDataBind = false;
			ssGetCauseForConcern_ListListDataBound = true;
		}
		public void recListGetCauseForConcern_List_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssGetCauseForConcern_ListList.Length > 0) {
					ssGetCauseForConcern_ListList.CurrentRec = ssGetCauseForConcern_ListList[ssGetCauseForConcern_ListList.CurrentRowNumber];
				}
				if (ssGetCauseForConcern_ListList.Length > e.SelectedIndex) {
					ssGetCauseForConcern_ListList.CurrentRec = ssGetCauseForConcern_ListList[e.SelectedIndex];
					ssGetCauseForConcern_ListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListGetCauseForConcern_List_Store(object dataItem, int index) {
			RCStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecord tmprec = (RCStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecord) dataItem;
			ArrayList tmpFields = new ArrayList();
			tmpFields.Add(tmprec.ssENUser.ssName == "" ?(object) null: tmprec.ssENUser.ssName);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENUser.ChangedAttributes, new BitArray(new bool[] {
				false, false, true, false, false, false, false, false, false, false, false
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENUser.OptimizedAttributes, new BitArray(new bool[] {
				true, true, false, true, true, true, true, true, true, true, true
			}
			))));
			tmpFields.Add(tmprec.ssENCauseOfConcernReason.ssReason == "" ?(object) null: tmprec.ssENCauseOfConcernReason.ssReason);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENCauseOfConcernReason.ChangedAttributes, new BitArray(new bool[] {
				false, true, false
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENCauseOfConcernReason.OptimizedAttributes, new BitArray(new bool[] {
				true, false, true
			}
			))));
			tmpFields.Add(tmprec.ssENCauseOfConcern.ssId == 0?(object) null: tmprec.ssENCauseOfConcern.ssId);
			tmpFields.Add(tmprec.ssENCauseOfConcern.ssRAGStatusId == "" ?(object) null: tmprec.ssENCauseOfConcern.ssRAGStatusId);
			tmpFields.Add(tmprec.ssENCauseOfConcern.ssReasonId == 0?(object) null: tmprec.ssENCauseOfConcern.ssReasonId);
			tmpFields.Add(tmprec.ssENCauseOfConcern.ssDescription == "" ?(object) null: tmprec.ssENCauseOfConcern.ssDescription);
			tmpFields.Add(tmprec.ssENCauseOfConcern.ssCreatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: tmprec.ssENCauseOfConcern.ssCreatedAt);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENCauseOfConcern.ChangedAttributes, new BitArray(new bool[] {
				true, false, true, true, true, false, true
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENCauseOfConcern.OptimizedAttributes, new BitArray(new bool[] {
				false, true, false, false, false, true, false
			}
			))));
			if (index < wtGetCauseForConcern_List_storage.Count) {
				wtGetCauseForConcern_List_storage[index] = tmpFields;
			} else {
				wtGetCauseForConcern_List_storage.Add(tmpFields);
			}
			return "";
		}
		public void recListGetCauseForConcern_List_Restore() {

			#region fetch ssGetCauseForConcern_ListList.

			// Read the needed fields of ssGetCauseForConcern_ListList from storewtGetCauseForConcern_List_list
			ssGetCauseForConcern_ListList = new RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList();
			ArrayList storewtGetCauseForConcern_List_list;
			storewtGetCauseForConcern_List_list = (ArrayList) ViewStateAttributes.GetFromViewState("wtGetCauseForConcern_List_list", null);
			if (storewtGetCauseForConcern_List_list == null) {
				return;
			} else {

				foreach(ArrayList tmpFieldswtGetCauseForConcern_List_list in storewtGetCauseForConcern_List_list) {
					if (tmpFieldswtGetCauseForConcern_List_list != null) {
						// Aux current record variable
						RCStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecord tmpAuxCurrentRecordwtGetCauseForConcern_List_list = new RCStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecord(null);
						tmpAuxCurrentRecordwtGetCauseForConcern_List_list.ssENUser.ssName = (string) (tmpFieldswtGetCauseForConcern_List_list[0] == null ? "": tmpFieldswtGetCauseForConcern_List_list[0]);

						tmpAuxCurrentRecordwtGetCauseForConcern_List_list.ssENUser.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtGetCauseForConcern_List_list[1]);

						tmpAuxCurrentRecordwtGetCauseForConcern_List_list.ssENUser.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtGetCauseForConcern_List_list[2]);

						tmpAuxCurrentRecordwtGetCauseForConcern_List_list.ssENCauseOfConcernReason.ssReason = (string) (tmpFieldswtGetCauseForConcern_List_list[3] == null ? "": tmpFieldswtGetCauseForConcern_List_list[3]);

						tmpAuxCurrentRecordwtGetCauseForConcern_List_list.ssENCauseOfConcernReason.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtGetCauseForConcern_List_list[4]);

						tmpAuxCurrentRecordwtGetCauseForConcern_List_list.ssENCauseOfConcernReason.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtGetCauseForConcern_List_list[5]);

						tmpAuxCurrentRecordwtGetCauseForConcern_List_list.ssENCauseOfConcern.ssId = (int) (tmpFieldswtGetCauseForConcern_List_list[6] == null ? 0: tmpFieldswtGetCauseForConcern_List_list[6]);

						tmpAuxCurrentRecordwtGetCauseForConcern_List_list.ssENCauseOfConcern.ssRAGStatusId = (string) (tmpFieldswtGetCauseForConcern_List_list[7] == null ? "": tmpFieldswtGetCauseForConcern_List_list[7]);

						tmpAuxCurrentRecordwtGetCauseForConcern_List_list.ssENCauseOfConcern.ssReasonId = (int) (tmpFieldswtGetCauseForConcern_List_list[8] == null ? 0: tmpFieldswtGetCauseForConcern_List_list[8]);

						tmpAuxCurrentRecordwtGetCauseForConcern_List_list.ssENCauseOfConcern.ssDescription = (string) (tmpFieldswtGetCauseForConcern_List_list[9] == null ? "": tmpFieldswtGetCauseForConcern_List_list[9]);

						tmpAuxCurrentRecordwtGetCauseForConcern_List_list.ssENCauseOfConcern.ssCreatedAt = (DateTime) (tmpFieldswtGetCauseForConcern_List_list[10] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldswtGetCauseForConcern_List_list[10]);

						tmpAuxCurrentRecordwtGetCauseForConcern_List_list.ssENCauseOfConcern.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtGetCauseForConcern_List_list[11]);

						tmpAuxCurrentRecordwtGetCauseForConcern_List_list.ssENCauseOfConcern.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtGetCauseForConcern_List_list[12]);

						ssGetCauseForConcern_ListList.Append(tmpAuxCurrentRecordwtGetCauseForConcern_List_list);
					}
				}
			}
			ssGetCauseForConcern_ListList.CurrentRowNumber = -1;
			#endregion


			#region fetch ssGetCauseForConcern_ListList runtime properties state.


			if (storewtGetCauseForConcern_List_list.Count > 0) {
				ssGetCauseForConcern_ListList.RestoreRecordListState(storewtGetCauseForConcern_List_list.Count - 1, false);
			} else {
				ssGetCauseForConcern_ListList.CurrentRowNumber = 0;
			}

			#endregion

			wtGetCauseForConcern_List_storage = storewtGetCauseForConcern_List_list;
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListGetCauseForConcern_List_Clear(object sender, EventArgs e) {
			wtGetCauseForConcern_List_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListGetCauseForConcern_List_Rebuild(int startIndex, int lineCount) {
			if (ssGetCauseForConcern_ListList.Length != -1) {
				wtGetCauseForConcern_List_storage.Clear();
				for (int i=startIndex; i<ssGetCauseForConcern_ListList.Data.Count && i<startIndex+lineCount; i++) {
					recListGetCauseForConcern_List_Store(ssGetCauseForConcern_ListList.Data[i], wtGetCauseForConcern_List_storage.Count);
				}
			}
		}
		public void recListGetCauseForConcern_List_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtGetCauseForConcern_List widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList getWtGetCauseForConcern_ListList() {
			if (ssGetCauseForConcern_ListListDoDataBind) {
				recListGetCauseForConcern_List_onDataBinding(this, null);
			}

			return ssGetCauseForConcern_ListList;
		}
		/// <summary>
		/// wtCauseForConcernCurrent Functions
		/// </summary>
		public void cntCauseForConcernCurrent_onDataBinding(object sender, System.EventArgs e) {
			cntCauseForConcernCurrent_setInlineAttributes(sender, e);
		}
		public string cntCauseForConcernCurrent_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntCauseForConcernCurrent_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtCauseForConcernCurrent)
		/// </summary>
		/// <returns>The Visible State of wtCauseForConcernCurrent</returns>
		public bool cntCauseForConcernCurrent_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If99 Functions
		/// </summary>
		bool if_wt_If99_hasRun=false;
		bool if_wt_If99_evalResult;
		public bool if_wt_If99() {
			if (if_wt_If99_hasRun) {
				if_wt_If99_hasRun = false;
				return if_wt_If99_evalResult;
			}
			if_wt_If99_hasRun = true;
			if_wt_If99_evalResult = (!queryResGetCauseForConcern_outParamList.CurrentRec.ssSTBoolean.ssValue);
			return if_wt_If99_evalResult;
		}

		/// <summary>
		/// wtViewCauseForConcern Functions
		/// </summary>
		public void cntViewCauseForConcern_onDataBinding(object sender, System.EventArgs e) {
			cntViewCauseForConcern_setInlineAttributes(sender, e);
		}
		public string cntViewCauseForConcern_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin: 21px 0px 21px 21px;color:#757575;font-size: 12px;text-align: left;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntViewCauseForConcern_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtViewCauseForConcern)
		/// </summary>
		/// <returns>The Visible State of wtViewCauseForConcern</returns>
		public bool cntViewCauseForConcern_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container193 Functions
		/// </summary>
		public void cnt_Container193_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container193_setInlineAttributes(sender, e);
		}
		public string cnt_Container193_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container193_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container193)
		/// </summary>
		/// <returns>The Visible State of wt_Container193</returns>
		public bool cnt_Container193_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If41 Functions
		/// </summary>
		bool if_wt_If41_hasRun=false;
		bool if_wt_If41_evalResult;
		public bool if_wt_If41() {
			if (if_wt_If41_hasRun) {
				if_wt_If41_hasRun = false;
				return if_wt_If41_evalResult;
			}
			if_wt_If41_hasRun = true;
			if_wt_If41_evalResult = (queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.ssRAGStatusId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId);
			return if_wt_If41_evalResult;
		}

		/// <summary>
		/// wt_If191 Functions
		/// </summary>
		bool if_wt_If191_hasRun=false;
		bool if_wt_If191_evalResult;
		public bool if_wt_If191() {
			if (if_wt_If191_hasRun) {
				if_wt_If191_hasRun = false;
				return if_wt_If191_evalResult;
			}
			if_wt_If191_hasRun = true;
			if_wt_If191_evalResult = (queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.ssRAGStatusId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId);
			return if_wt_If191_evalResult;
		}

		/// <summary>
		/// wt_Container162 Functions
		/// </summary>
		public void cnt_Container162_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container162_setInlineAttributes(sender, e);
		}
		public string cnt_Container162_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-size:13px;margin-top: 2px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container162_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container162)
		/// </summary>
		/// <returns>The Visible State of wt_Container162</returns>
		public bool cnt_Container162_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression70 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = m77oQSZDEkWwYDouo1S5Kw) Expression:
		///  GetCauseForConcern_List.List.Current.CauseOfConcernReason.Reason
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression70() {
			return getWtGetCauseForConcern_ListList().CurrentRec.ssENCauseOfConcernReason.ssReason;
		}
		/// <summary>
		/// wt_Container76 Functions
		/// </summary>
		public void cnt_Container76_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container76_setInlineAttributes(sender, e);
		}
		public string cnt_Container76_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container76_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container76)
		/// </summary>
		/// <returns>The Visible State of wt_Container76</returns>
		public bool cnt_Container76_isVisible() {
			return true;
		}

		/// <summary>
		/// wtResponsible4 Functions
		/// </summary>
		public void cntResponsible4_onDataBinding(object sender, System.EventArgs e) {
			cntResponsible4_setInlineAttributes(sender, e);
		}
		public string cntResponsible4_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntResponsible4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtResponsible4)
		/// </summary>
		/// <returns>The Visible State of wtResponsible4</returns>
		public bool cntResponsible4_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container69 Functions
		/// </summary>
		public void cnt_Container69_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container69_setInlineAttributes(sender, e);
		}
		public string cnt_Container69_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline-block;width:300px;height:70px;border:1px solid #E8E8E8;padding: 2px 5px; color: #6F6A6A;font-size: 13px;overflow-y: auto;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container69_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container69)
		/// </summary>
		/// <returns>The Visible State of wt_Container69</returns>
		public bool cnt_Container69_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression181 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = whfwxhYoWUqpwnfTN7QpJw) Expression:
		///  GetCauseForConcern_List.List.Current.CauseOfConcern.Description
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression181() {
			return getWtGetCauseForConcern_ListList().CurrentRec.ssENCauseOfConcern.ssDescription;
		}
		/// <summary>
		/// wt_Container207 Functions
		/// </summary>
		public void cnt_Container207_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container207_setInlineAttributes(sender, e);
		}
		public string cnt_Container207_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container207_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container207)
		/// </summary>
		/// <returns>The Visible State of wt_Container207</returns>
		public bool cnt_Container207_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression57 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = mYpONxxd0kKcCsSzFJ0LMg) Expression: "by " +
		///  GetCauseForConcern_List.List.Current.User.Name + " on "
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression57() {
			return (("by " +getWtGetCauseForConcern_ListList().CurrentRec.ssENUser.ssName) + " on ");
		}
		/// <summary>
		/// wt_WebBlockInstance130 Functions
		/// </summary>
		public void webBlck_WebBlockInstance130_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
			widget.inParamDate = Convert.ToDateTime(getWtGetCauseForConcern_ListList().CurrentRec.ssENCauseOfConcern.ssCreatedAt.ToString("yyyy-M-d"));
		}
		/// <summary>
		/// wt_If46 Functions
		/// </summary>
		bool if_wt_If46_hasRun=false;
		bool if_wt_If46_evalResult;
		public bool if_wt_If46() {
			if (if_wt_If46_hasRun) {
				if_wt_If46_hasRun = false;
				return if_wt_If46_evalResult;
			}
			if_wt_If46_hasRun = true;
			if_wt_If46_evalResult = (Functions.rssespaceuserpermissions_ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("DaIOBQLy+0G_cJJYoAts5A")).ssId) ==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId);
			return if_wt_If46_evalResult;
		}

		/// <summary>
		/// wt_Container112 Functions
		/// </summary>
		public void cnt_Container112_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container112_setInlineAttributes(sender, e);
		}
		public string cnt_Container112_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:310px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container112_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container112)
		/// </summary>
		/// <returns>The Visible State of wt_Container112</returns>
		public bool cnt_Container112_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container98 Functions
		/// </summary>
		public void cnt_Container98_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container98_setInlineAttributes(sender, e);
		}
		public string cnt_Container98_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container98_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container98)
		/// </summary>
		/// <returns>The Visible State of wt_Container98</returns>
		public bool cnt_Container98_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance26 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance26_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor) sender;
			widget.inParamLinkOrButtonWidgetId = Utils.getControlInRecordWidget(wtGetCauseForConcern_List, "wtDeleteConcern").ClientID;
			widget.inParamTitle = " ";
			widget.inParamWidthPx = -1;
			widget.inParamHeightPx = -1;
			widget.inParamAutoResize = true;
			widget.inParamRecenterOnResize = false;
			widget.inParamHideCloseButton = false;
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance26
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance26_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOnDeleteConcernNotify(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wtDeleteConcern Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wtDeleteConcern)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wtDeleteConcern)</returns>
		public string lnkDeleteConcern_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("CauseOfConcernId", System.Web.HttpUtility.UrlEncode(Convert.ToString(getWtGetCauseForConcern_ListList().CurrentRec.ssENCauseOfConcern.ssId), Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "DeleteConcern", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the title of the link (wtDeleteConcern)
		/// </summary>
		/// <returns>title of the Link (wtDeleteConcern)</returns>
		public string
		lnkDeleteConcern_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtDeleteConcern)
		/// </summary>
		/// <returns>The Visible State of wtDeleteConcern</returns>
		public bool lnkDeleteConcern_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtDeleteConcern)
		/// </summary>
		/// <returns>The Enabled State of wtDeleteConcern</returns>
		public bool lnkDeleteConcern_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container137 Functions
		/// </summary>
		public void cnt_Container137_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container137_setInlineAttributes(sender, e);
		}
		public string cnt_Container137_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container137_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container137)
		/// </summary>
		/// <returns>The Visible State of wt_Container137</returns>
		public bool cnt_Container137_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container124 Functions
		/// </summary>
		public void cnt_Container124_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container124_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container124_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container124_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container124
		/// </summary>
		public void cnt_Container124_AjaxClick(object sender, System.EventArgs e) {
			if (CommandEdit(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container124)
		/// </summary>
		/// <returns>The Visible State of wt_Container124</returns>
		public bool cnt_Container124_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance12 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance12_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("jA5F7R9HAUWaOlj0y8fkDA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wtEditCauseForConcern Functions
		/// </summary>
		public void cntEditCauseForConcern_onDataBinding(object sender, System.EventArgs e) {
			cntEditCauseForConcern_setInlineAttributes(sender, e);
		}
		public string cntEditCauseForConcern_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin: 21px 0px 21px 21px;color:#757575;font-size: 12px;text-align: left;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntEditCauseForConcern_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtEditCauseForConcern)
		/// </summary>
		/// <returns>The Visible State of wtEditCauseForConcern</returns>
		public bool cntEditCauseForConcern_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container146 Functions
		/// </summary>
		public void cnt_Container146_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container146_setInlineAttributes(sender, e);
		}
		public string cnt_Container146_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container146_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container146)
		/// </summary>
		/// <returns>The Visible State of wt_Container146</returns>
		public bool cnt_Container146_isVisible() {
			return true;
		}

		/// <summary>
		/// wtReason2 Functions
		/// </summary>
		public void cntReason2_onDataBinding(object sender, System.EventArgs e) {
			cntReason2_setInlineAttributes(sender, e);
		}
		public string cntReason2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight: bold;width:300px;margin-left:5px;margin-top:0;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntReason2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtReason2)
		/// </summary>
		/// <returns>The Visible State of wtReason2</returns>
		public bool cntReason2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text163 Functions
		/// </summary>
		public void wt_Text163_onDataBinding(object sender, System.EventArgs e) {
			wt_Text163_setInlineAttributes(sender, e);
		}
		public string wt_Text163_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight: bold;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container223 Functions
		/// </summary>
		public void cnt_Container223_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container223_setInlineAttributes(sender, e);
		}
		public string cnt_Container223_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container223_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container223)
		/// </summary>
		/// <returns>The Visible State of wt_Container223</returns>
		public bool cnt_Container223_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container80 Functions
		/// </summary>
		public void cnt_Container80_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container80_setInlineAttributes(sender, e);
		}
		public string cnt_Container80_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container80_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container80)
		/// </summary>
		/// <returns>The Visible State of wt_Container80</returns>
		public bool cnt_Container80_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_ComboBox195 Functions
		/// </summary>
		public void sel_ComboBox195_onDataBinding(object sender, System.EventArgs e) {
			sel_ComboBox195_setInlineAttributes(sender, e);
			if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_0"));
			if (Rt_wt_ComboBox195.SpecialListVal == "0")
			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
			RLCauseOfConcernReasonRecordList Rt_wt_ComboBox195_reclist = queryResGetCauseOfConcernReasons2_outParamList;
			Rt_wt_ComboBox195_reclist.StartIteration();
			try {
				while (!Rt_wt_ComboBox195_reclist.Eof) {
					((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wt_ComboBox195_reclist.CurrentRec.ssENCauseOfConcernReason.ssReason, Convert.ToString(Rt_wt_ComboBox195_reclist.CurrentRec.ssENCauseOfConcernReason.ssId)));
					if (ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssReasonId == Convert.ToInt32(Convert.ToString(Rt_wt_ComboBox195_reclist.CurrentRec.ssENCauseOfConcernReason.ssId))) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
					}
					Rt_wt_ComboBox195_reclist.Advance();
				}
			} finally {
				Rt_wt_ComboBox195_reclist.EndIteration();
			}
		}
		public string sel_ComboBox195_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: #6F6A6A;font-size: 13px;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		public void sel_ComboBox195_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssReasonId = 0;
			}
			else {
				try {
					ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssReasonId = Convert.ToInt32(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_ComboBox195)
		/// </summary>
		/// <returns>The Visible State of wt_ComboBox195</returns>
		public bool sel_ComboBox195_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_ComboBox195)
		/// </summary>
		/// <returns>The Enabled State of wt_ComboBox195</returns>
		public bool sel_ComboBox195_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (sel_ComboBox195)
		/// </summary>
		/// <returns>The Mandatory Value of sel_ComboBox195</returns>
		public bool sel_ComboBox195_isMandatory() {
			return false;
		}

		/// <summary>
		/// wtResponsible3 Functions
		/// </summary>
		public void cntResponsible3_onDataBinding(object sender, System.EventArgs e) {
			cntResponsible3_setInlineAttributes(sender, e);
		}
		public string cntResponsible3_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntResponsible3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtResponsible3)
		/// </summary>
		/// <returns>The Visible State of wtResponsible3</returns>
		public bool cntResponsible3_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container102 Functions
		/// </summary>
		public void cnt_Container102_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container102_setInlineAttributes(sender, e);
		}
		public string cnt_Container102_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container102_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container102)
		/// </summary>
		/// <returns>The Visible State of wt_Container102</returns>
		public bool cnt_Container102_isVisible() {
			return true;
		}

		/// <summary>
		/// wtEditCauseForConcernDescription Functions
		/// </summary>
		public void inputwtEditCauseForConcernDescription_onDataBinding(object sender, System.EventArgs e) {
			inputwtEditCauseForConcernDescription_setInlineAttributes(sender, e);
		}
		public string inputwtEditCauseForConcernDescription_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: #6F6A6A;font-size: 13px;padding: 1px 6px;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtEditCauseForConcernDescription_input_value() {
			if (("" !=ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssDescription)) {
				return ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssDescription;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) Utils.getSelectedControlInRecordWidget(wtGetCauseForConcern_List, "wtEditCauseForConcernDescription");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssDescription;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtEditCauseForConcernDescription_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssDescription = ""; 
				} else {
					ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssDescription = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssDescription = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtEditCauseForConcernDescription)
		/// </summary>
		/// <returns>The Visible State of wtEditCauseForConcernDescription</returns>
		public bool inputwtEditCauseForConcernDescription_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtEditCauseForConcernDescription)
		/// </summary>
		/// <returns>The Enabled State of wtEditCauseForConcernDescription</returns>
		public bool inputwtEditCauseForConcernDescription_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtEditCauseForConcernDescription)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtEditCauseForConcernDescription</returns>
		public bool inputwtEditCauseForConcernDescription_isMandatory() {
			return false;
		}

		/// <summary>
		/// wtWarapperSelectRAG2 Functions
		/// </summary>
		public void cntWarapperSelectRAG2_onDataBinding(object sender, System.EventArgs e) {
			cntWarapperSelectRAG2_setInlineAttributes(sender, e);
		}
		public string cntWarapperSelectRAG2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inlinemargin-top:15px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWarapperSelectRAG2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWarapperSelectRAG2)
		/// </summary>
		/// <returns>The Visible State of wtWarapperSelectRAG2</returns>
		public bool cntWarapperSelectRAG2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container31 Functions
		/// </summary>
		public void cnt_Container31_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container31_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container31_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId)) ?("RAGSelectRaised"):("RAG_RaisedUnselect"));
			if (!cnt_Container31_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container31
		/// </summary>
		public void cnt_Container31_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedRAG(heContext
			, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container31)
		/// </summary>
		/// <returns>The Visible State of wt_Container31</returns>
		public bool cnt_Container31_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance43 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance43_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression129 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = s1K6k0boa0KXrAvrCNwl2g) Expression: "Not Sorted"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression129() {
			return "Not Sorted";
		}
		/// <summary>
		/// wt_Container153 Functions
		/// </summary>
		public void cnt_Container153_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container153_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container153_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId)) ?("RAGSelectGreen"):("RAG_GreenUnselect"));
			if (!cnt_Container153_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container153
		/// </summary>
		public void cnt_Container153_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedRAG(heContext
			, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container153)
		/// </summary>
		/// <returns>The Visible State of wt_Container153</returns>
		public bool cnt_Container153_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance135 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance135_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression173 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = D43bwNPHyEeziXXtax1azQ) Expression: "Green"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression173() {
			return "Green";
		}
		/// <summary>
		/// wt_Container92 Functions
		/// </summary>
		public void cnt_Container92_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container92_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container92_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId)) ?("RAGSelectAmber"):("RAG_AmberUnselect"));
			if (!cnt_Container92_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container92
		/// </summary>
		public void cnt_Container92_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedRAG(heContext
			, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container92)
		/// </summary>
		/// <returns>The Visible State of wt_Container92</returns>
		public bool cnt_Container92_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance164 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance164_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression215 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = zHW37Ibq906tGfDgJlerTA) Expression: "Amber"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression215() {
			return "Amber";
		}
		/// <summary>
		/// wt_Container28 Functions
		/// </summary>
		public void cnt_Container28_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container28_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container28_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcCurrentSelectRAG==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId)) ?("RAGSelectRed"):("RAG_RedUnselect"));
			if (!cnt_Container28_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container28
		/// </summary>
		public void cnt_Container28_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedRAG(heContext
			, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container28)
		/// </summary>
		/// <returns>The Visible State of wt_Container28</returns>
		public bool cnt_Container28_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance4 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance4_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container114 Functions
		/// </summary>
		public void cnt_Container114_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container114_setInlineAttributes(sender, e);
		}
		public string cnt_Container114_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:320px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container114_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container114)
		/// </summary>
		/// <returns>The Visible State of wt_Container114</returns>
		public bool cnt_Container114_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container67 Functions
		/// </summary>
		public void cnt_Container67_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container67_setInlineAttributes(sender, e);
		}
		public string cnt_Container67_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container67_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container67)
		/// </summary>
		/// <returns>The Visible State of wt_Container67</returns>
		public bool cnt_Container67_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container196 Functions
		/// </summary>
		public void cnt_Container196_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container196_setInlineAttributes(sender, e);
		}
		public string cnt_Container196_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container196_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container196)
		/// </summary>
		/// <returns>The Visible State of wt_Container196</returns>
		public bool cnt_Container196_isVisible() {
			return true;
		}

		/// <summary>
		/// Hunspell_wt_WebBlockInstance141 Functions
		/// </summary>
		public void Hunspell_webBlck_WebBlockInstance141_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink widget = (proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink) sender;
			widget.inParamTextInputId = Utils.getControlInRecordWidget(wtGetCauseForConcern_List, "wtEditCauseForConcernDescription").ClientID;
			widget.inParamExtraStyle = "";
			widget.inParamInPopupWindow = true;
		}
		/// <summary>
		/// wt_Container56 Functions
		/// </summary>
		public void cnt_Container56_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container56_setInlineAttributes(sender, e);
		}
		public string cnt_Container56_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container56_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container56)
		/// </summary>
		/// <returns>The Visible State of wt_Container56</returns>
		public bool cnt_Container56_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance10 Functions
		/// </summary>
		public void webBlck_WebBlockInstance10_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon widget = (ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon) sender;
			widget.inParamTextInputId = Utils.getControlInRecordWidget(wtGetCauseForConcern_List, "wtEditCauseForConcernDescription").ClientID;
			widget.inParamAutoCompleteType = ENAutoCompleteBankTypeEntity.GetRecordByKey(ObjectKey.Parse("0SXHbosqdk2gX_Ma6ZCbmQ")).ssId;
		}
		/// <summary>
		/// wt_Container218 Functions
		/// </summary>
		public void cnt_Container218_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container218_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container218_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container218_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container218
		/// </summary>
		public void cnt_Container218_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeConcern(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container218)
		/// </summary>
		/// <returns>The Visible State of wt_Container218</returns>
		public bool cnt_Container218_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance87 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance87_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("jA5F7R9HAUWaOlj0y8fkDA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container37 Functions
		/// </summary>
		public void cnt_Container37_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container37_setInlineAttributes(sender, e);
		}
		public string cnt_Container37_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-top:7px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container37_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container37)
		/// </summary>
		/// <returns>The Visible State of wt_Container37</returns>
		public bool cnt_Container37_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link15 Functions
		/// </summary>
		public void lnk_Link15_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link15_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandCancel(heContext, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link15)
		/// </summary>
		/// <returns>title of the Link (wt_Link15)</returns>
		public string
		lnk_Link15_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link15)
		/// </summary>
		/// <returns>The Visible State of wt_Link15</returns>
		public bool lnk_Link15_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link15)
		/// </summary>
		/// <returns>The Enabled State of wt_Link15</returns>
		public bool lnk_Link15_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wtCauseForConcernLog2 Functions
		/// </summary>
		public void cntCauseForConcernLog2_onDataBinding(object sender, System.EventArgs e) {
			cntCauseForConcernLog2_setInlineAttributes(sender, e);
		}
		public string cntCauseForConcernLog2_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntCauseForConcernLog2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtCauseForConcernLog2)
		/// </summary>
		/// <returns>The Visible State of wtCauseForConcernLog2</returns>
		public bool cntCauseForConcernLog2_isVisible() {
			return (((queryResGetStudentLogsByStudentReference_outParamList.Empty==false)) ?(true):(false));
		}

		/// <summary>
		/// wt_Container148 Functions
		/// </summary>
		public void cnt_Container148_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container148_setInlineAttributes(sender, e);
		}
		public string cnt_Container148_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding: 15px; font-size: 18px;text-shadow: 0px 1px 2px #dadada;color:#666;border-bottom: solid 1px #dadada;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container148_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container148)
		/// </summary>
		/// <returns>The Visible State of wt_Container148</returns>
		public bool cnt_Container148_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container36 Functions
		/// </summary>
		public void cnt_Container36_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container36_setInlineAttributes(sender, e);
		}
		public string cnt_Container36_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container36_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container36)
		/// </summary>
		/// <returns>The Visible State of wt_Container36</returns>
		public bool cnt_Container36_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link190 Functions
		/// </summary>
		public void lnk_Link190_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link190_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandSort(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link190)
		/// </summary>
		/// <returns>title of the Link (wt_Link190)</returns>
		public string
		lnk_Link190_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link190)
		/// </summary>
		/// <returns>The Visible State of wt_Link190</returns>
		public bool lnk_Link190_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link190)
		/// </summary>
		/// <returns>The Enabled State of wt_Link190</returns>
		public bool lnk_Link190_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wtSort2 Functions
		/// </summary>
		public void cntSort2_onDataBinding(object sender, System.EventArgs e) {
			cntSort2_setInlineAttributes(sender, e);
		}
		public string cntSort2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "float:right;font-size:10px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntSort2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtSort2)
		/// </summary>
		/// <returns>The Visible State of wtSort2</returns>
		public bool cntSort2_isVisible() {
			return true;
		}

		/// <summary>
		/// wtGetCauseForConcernLog_List2 Functions
		/// </summary>
		public void recListGetCauseForConcernLog_List2_onDataBinding(object sender, System.EventArgs e) {
			// widget wtGetCauseForConcernLog_List2
			ssGetCauseForConcernLog_List2List = queryResGetCauseOfConcernLearnerNotes_outParamList;
			ssGetCauseForConcernLog_List2ListDoDataBind = false;
			ssGetCauseForConcernLog_List2ListDataBound = true;
		}
		public void recListGetCauseForConcernLog_List2_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssGetCauseForConcernLog_List2List.Length > 0) {
					ssGetCauseForConcernLog_List2List.CurrentRec = ssGetCauseForConcernLog_List2List[ssGetCauseForConcernLog_List2List.CurrentRowNumber];
				}
				if (ssGetCauseForConcernLog_List2List.Length > e.SelectedIndex) {
					ssGetCauseForConcernLog_List2List.CurrentRec = ssGetCauseForConcernLog_List2List[e.SelectedIndex];
					ssGetCauseForConcernLog_List2List.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListGetCauseForConcernLog_List2_Store(object dataItem, int index) {
			return "";
		}
		public void recListGetCauseForConcernLog_List2_Restore() {
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListGetCauseForConcernLog_List2_Clear(object sender, EventArgs e) {
			wtGetCauseForConcernLog_List2_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListGetCauseForConcernLog_List2_Rebuild(int startIndex, int lineCount) {
			if (ssGetCauseForConcernLog_List2List.Length != -1) {
				wtGetCauseForConcernLog_List2_storage.Clear();
				for (int i=startIndex; i<ssGetCauseForConcernLog_List2List.Data.Count && i<startIndex+lineCount; i++) {
					recListGetCauseForConcernLog_List2_Store(ssGetCauseForConcernLog_List2List.Data[i], wtGetCauseForConcernLog_List2_storage.Count);
				}
			}
		}
		public void recListGetCauseForConcernLog_List2_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtGetCauseForConcernLog_List2 widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList getWtGetCauseForConcernLog_List2List() {
			if (ssGetCauseForConcernLog_List2ListDoDataBind) {
				recListGetCauseForConcernLog_List2_onDataBinding(this, null);
			}

			return ssGetCauseForConcernLog_List2List;
		}
		/// <summary>
		/// wtWrapperList3 Functions
		/// </summary>
		public void cntWrapperList3_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperList3_setInlineAttributes(sender, e);
		}
		public string cntWrapperList3_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ((((BuiltInFunction.Mod(getWtGetCauseForConcernLog_List2List().CurrentRowNumber, 2M) ==0M)) ?("background-color:#F8F8F8;"):("")) + (((getWtGetCauseForConcernLog_List2List().CurrentRowNumber==0)) ?("border-top: solid 1px #dadada;"):("")));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperList3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperList3)
		/// </summary>
		/// <returns>The Visible State of wtWrapperList3</returns>
		public bool cntWrapperList3_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Table20 Functions
		/// </summary>
		public void wt_Table20_onDataBinding(object sender, System.EventArgs e) {
			wt_Table20_setInlineAttributes(sender, e);
		}
		public string wt_Table20_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin:2px;padding: 4px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_TableCell151 Functions
		/// </summary>
		public void wt_TableCell151_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell151_setInlineAttributes(sender, e);
		}
		public string wt_TableCell151_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_If60 Functions
		/// </summary>
		bool if_wt_If60_hasRun=false;
		bool if_wt_If60_evalResult;
		public bool if_wt_If60() {
			if (if_wt_If60_hasRun) {
				if_wt_If60_hasRun = false;
				return if_wt_If60_evalResult;
			}
			if_wt_If60_hasRun = true;
			if_wt_If60_evalResult = (getWtGetCauseForConcernLog_List2List().CurrentRec.ssENRAGStatus.ssId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId);
			return if_wt_If60_evalResult;
		}

		/// <summary>
		/// wt_If106 Functions
		/// </summary>
		bool if_wt_If106_hasRun=false;
		bool if_wt_If106_evalResult;
		public bool if_wt_If106() {
			if (if_wt_If106_hasRun) {
				if_wt_If106_hasRun = false;
				return if_wt_If106_evalResult;
			}
			if_wt_If106_hasRun = true;
			if_wt_If106_evalResult = (getWtGetCauseForConcernLog_List2List().CurrentRec.ssENRAGStatus.ssId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId);
			return if_wt_If106_evalResult;
		}

		/// <summary>
		/// wt_If64 Functions
		/// </summary>
		bool if_wt_If64_hasRun=false;
		bool if_wt_If64_evalResult;
		public bool if_wt_If64() {
			if (if_wt_If64_hasRun) {
				if_wt_If64_hasRun = false;
				return if_wt_If64_evalResult;
			}
			if_wt_If64_hasRun = true;
			if_wt_If64_evalResult = (getWtGetCauseForConcernLog_List2List().CurrentRec.ssENRAGStatus.ssId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId);
			return if_wt_If64_evalResult;
		}

		/// <summary>
		/// wt_TableCell202 Functions
		/// </summary>
		public void wt_TableCell202_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell202_setInlineAttributes(sender, e);
		}
		public string wt_TableCell202_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container45 Functions
		/// </summary>
		public void cnt_Container45_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container45_setInlineAttributes(sender, e);
		}
		public string cnt_Container45_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight:700;line-height:16px;font-size: 13px;color: #575555;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container45_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container45)
		/// </summary>
		/// <returns>The Visible State of wt_Container45</returns>
		public bool cnt_Container45_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression120 Functions
		/// </summary>
		public void expression_InlineExpression120_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression120_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression120_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: #6F6A6A;font-size: 13px;font-weight:600;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = KNeoherBrkSRbzAZoeJhiQ) Expression:
		///  GetCauseForConcernLog_List2.List.Current.CauseOfConcernReason.Reason
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression120() {
			return getWtGetCauseForConcernLog_List2List().CurrentRec.ssENCauseOfConcernReason.ssReason;
		}
		/// <summary>
		/// wt_TableCell226 Functions
		/// </summary>
		public void wt_TableCell226_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell226_setInlineAttributes(sender, e);
		}
		public string wt_TableCell226_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container178 Functions
		/// </summary>
		public void cnt_Container178_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container178_setInlineAttributes(sender, e);
		}
		public string cnt_Container178_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight:500;line-height:16px;font-size: 13px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container178_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container178)
		/// </summary>
		/// <returns>The Visible State of wt_Container178</returns>
		public bool cnt_Container178_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression16 Functions
		/// </summary>
		public void expression_InlineExpression16_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression16_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression16_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "style";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = BOvTDvfdqEWa3Y9KcT56wg) Expression:
		///  GetCauseForConcernLog_List2.List.Current.CauseOfConcernLearnerNotes.Description
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression16() {
			return getWtGetCauseForConcernLog_List2List().CurrentRec.ssENCauseOfConcernLearnerNotes.ssDescription;
		}
		/// <summary>
		/// wt_TableCell180 Functions
		/// </summary>
		public void wt_TableCell180_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell180_setInlineAttributes(sender, e);
		}
		public string wt_TableCell180_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "min-width: 200px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container166 Functions
		/// </summary>
		public void cnt_Container166_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container166_setInlineAttributes(sender, e);
		}
		public string cnt_Container166_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding-right: 15px;float:right;color:#C2C2C2;font-size: 12px;margin-right: 5px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container166_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container166)
		/// </summary>
		/// <returns>The Visible State of wt_Container166</returns>
		public bool cnt_Container166_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container210 Functions
		/// </summary>
		public void cnt_Container210_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container210_setInlineAttributes(sender, e);
		}
		public string cnt_Container210_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container210_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container210)
		/// </summary>
		/// <returns>The Visible State of wt_Container210</returns>
		public bool cnt_Container210_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression81 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 1xHgTdOp5ECtglFT+nm0Uw) Expression: " on "
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression81() {
			return " on ";
		}
		/// <summary>
		/// wt_WebBlockInstance158 Functions
		/// </summary>
		public void webBlck_WebBlockInstance158_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
			widget.inParamDate = Convert.ToDateTime(getWtGetCauseForConcernLog_List2List().CurrentRec.ssENCauseOfConcernLearnerNotes.ssCreatedOn.ToString("yyyy-M-d"));
		}
		/// <summary>
		/// wtCauseForConcernLog Functions
		/// </summary>
		public void cntCauseForConcernLog_onDataBinding(object sender, System.EventArgs e) {
			cntCauseForConcernLog_setInlineAttributes(sender, e);
		}
		public string cntCauseForConcernLog_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntCauseForConcernLog_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtCauseForConcernLog)
		/// </summary>
		/// <returns>The Visible State of wtCauseForConcernLog</returns>
		public bool cntCauseForConcernLog_isVisible() {
			return (((queryResGetStudentLogsByStudentReference_outParamList.Empty==false)) ?(true):(false));
		}

		/// <summary>
		/// wt_Container22 Functions
		/// </summary>
		public void cnt_Container22_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container22_setInlineAttributes(sender, e);
		}
		public string cnt_Container22_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding: 15px; font-size: 18px;text-shadow: 0px 1px 2px #dadada;color:#666;border-bottom: solid 1px #dadada;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container22_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container22)
		/// </summary>
		/// <returns>The Visible State of wt_Container22</returns>
		public bool cnt_Container22_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container192 Functions
		/// </summary>
		public void cnt_Container192_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container192_setInlineAttributes(sender, e);
		}
		public string cnt_Container192_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container192_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container192)
		/// </summary>
		/// <returns>The Visible State of wt_Container192</returns>
		public bool cnt_Container192_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link61 Functions
		/// </summary>
		public void lnk_Link61_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link61_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandSort(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link61)
		/// </summary>
		/// <returns>title of the Link (wt_Link61)</returns>
		public string
		lnk_Link61_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link61)
		/// </summary>
		/// <returns>The Visible State of wt_Link61</returns>
		public bool lnk_Link61_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link61)
		/// </summary>
		/// <returns>The Enabled State of wt_Link61</returns>
		public bool lnk_Link61_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wtSort Functions
		/// </summary>
		public void cntSort_onDataBinding(object sender, System.EventArgs e) {
			cntSort_setInlineAttributes(sender, e);
		}
		public string cntSort_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "float:right;font-size:10px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntSort_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtSort)
		/// </summary>
		/// <returns>The Visible State of wtSort</returns>
		public bool cntSort_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If161 Functions
		/// </summary>
		bool if_wt_If161_hasRun=false;
		bool if_wt_If161_evalResult;
		public bool if_wt_If161() {
			if (if_wt_If161_hasRun) {
				if_wt_If161_hasRun = false;
				return if_wt_If161_evalResult;
			}
			if_wt_If161_hasRun = true;
			if_wt_If161_evalResult = varLcSortDesc;
			return if_wt_If161_evalResult;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance8 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance8_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("9RxI7fctdEuibC9LPhQHEQ")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance204 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance204_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("0oZEgsWl4UO5GJRA0kOIRQ")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wtGetCauseForConcernLog_List Functions
		/// </summary>
		public void recListGetCauseForConcernLog_List_onDataBinding(object sender, System.EventArgs e) {
			// widget wtGetCauseForConcernLog_List
			ssGetCauseForConcernLog_ListList = queryResGetStudentLogsByStudentReference_outParamList;
			ssGetCauseForConcernLog_ListListDoDataBind = false;
			ssGetCauseForConcernLog_ListListDataBound = true;
		}
		public void recListGetCauseForConcernLog_List_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssGetCauseForConcernLog_ListList.Length > 0) {
					ssGetCauseForConcernLog_ListList.CurrentRec = ssGetCauseForConcernLog_ListList[ssGetCauseForConcernLog_ListList.CurrentRowNumber];
				}
				if (ssGetCauseForConcernLog_ListList.Length > e.SelectedIndex) {
					ssGetCauseForConcernLog_ListList.CurrentRec = ssGetCauseForConcernLog_ListList[e.SelectedIndex];
					ssGetCauseForConcernLog_ListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListGetCauseForConcernLog_List_Store(object dataItem, int index) {
			return "";
		}
		public void recListGetCauseForConcernLog_List_Restore() {
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListGetCauseForConcernLog_List_Clear(object sender, EventArgs e) {
			wtGetCauseForConcernLog_List_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListGetCauseForConcernLog_List_Rebuild(int startIndex, int lineCount) {
			if (ssGetCauseForConcernLog_ListList.Length != -1) {
				wtGetCauseForConcernLog_List_storage.Clear();
				for (int i=startIndex; i<ssGetCauseForConcernLog_ListList.Data.Count && i<startIndex+lineCount; i++) {
					recListGetCauseForConcernLog_List_Store(ssGetCauseForConcernLog_ListList.Data[i], wtGetCauseForConcernLog_List_storage.Count);
				}
			}
		}
		public void recListGetCauseForConcernLog_List_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtGetCauseForConcernLog_List widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLUserStudentLogStudentLogTypeRecordList getWtGetCauseForConcernLog_ListList() {
			if (ssGetCauseForConcernLog_ListListDoDataBind) {
				recListGetCauseForConcernLog_List_onDataBinding(this, null);
			}

			return ssGetCauseForConcernLog_ListList;
		}
		/// <summary>
		/// wtWrapperList2 Functions
		/// </summary>
		public void cntWrapperList2_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperList2_setInlineAttributes(sender, e);
		}
		public string cntWrapperList2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ((((BuiltInFunction.Mod(getWtGetCauseForConcernLog_ListList().CurrentRowNumber, 2M) ==0M)) ?("background-color:#F8F8F8;"):("")) + (((getWtGetCauseForConcernLog_ListList().CurrentRowNumber==0)) ?("border-top: solid 1px #dadada;"):("")));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperList2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperList2)
		/// </summary>
		/// <returns>The Visible State of wtWrapperList2</returns>
		public bool cntWrapperList2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Table205 Functions
		/// </summary>
		public void wt_Table205_onDataBinding(object sender, System.EventArgs e) {
			wt_Table205_setInlineAttributes(sender, e);
		}
		public string wt_Table205_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin:2px;padding: 4px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_TableCell125 Functions
		/// </summary>
		public void wt_TableCell125_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell125_setInlineAttributes(sender, e);
		}
		public string wt_TableCell125_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_If139 Functions
		/// </summary>
		bool if_wt_If139_hasRun=false;
		bool if_wt_If139_evalResult;
		public bool if_wt_If139() {
			if (if_wt_If139_hasRun) {
				if_wt_If139_hasRun = false;
				return if_wt_If139_evalResult;
			}
			if_wt_If139_hasRun = true;
			if_wt_If139_evalResult = (queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssLogRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("FyPKXxSFRUuY5g7bOusMrA")).ssId);
			return if_wt_If139_evalResult;
		}

		/// <summary>
		/// wt_If91 Functions
		/// </summary>
		bool if_wt_If91_hasRun=false;
		bool if_wt_If91_evalResult;
		public bool if_wt_If91() {
			if (if_wt_If91_hasRun) {
				if_wt_If91_hasRun = false;
				return if_wt_If91_evalResult;
			}
			if_wt_If91_hasRun = true;
			if_wt_If91_evalResult = (queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssLogRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("jY_plfZLbEmiO9KjvKGM3Q")).ssId);
			return if_wt_If91_evalResult;
		}

		/// <summary>
		/// wt_If51 Functions
		/// </summary>
		bool if_wt_If51_hasRun=false;
		bool if_wt_If51_evalResult;
		public bool if_wt_If51() {
			if (if_wt_If51_hasRun) {
				if_wt_If51_hasRun = false;
				return if_wt_If51_evalResult;
			}
			if_wt_If51_hasRun = true;
			if_wt_If51_evalResult = (queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssLogRAGId==ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId);
			return if_wt_If51_evalResult;
		}

		/// <summary>
		/// wt_TableCell72 Functions
		/// </summary>
		public void wt_TableCell72_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell72_setInlineAttributes(sender, e);
		}
		public string wt_TableCell72_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container212 Functions
		/// </summary>
		public void cnt_Container212_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container212_setInlineAttributes(sender, e);
		}
		public string cnt_Container212_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight:700;line-height:16px;font-size: 13px;color: #575555;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container212_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container212)
		/// </summary>
		/// <returns>The Visible State of wt_Container212</returns>
		public bool cnt_Container212_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression105 Functions
		/// </summary>
		public void expression_InlineExpression105_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression105_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression105_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "style";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = _mxmdiyEVkKaklBus4a2Nw) Expression:
		///  GetCauseForConcernLog_List.List.Current.StudentLog.Description
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression105() {
			return getWtGetCauseForConcernLog_ListList().CurrentRec.ssENStudentLog.ssDescription;
		}
		/// <summary>
		/// wt_TableCell227 Functions
		/// </summary>
		public void wt_TableCell227_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell227_setInlineAttributes(sender, e);
		}
		public string wt_TableCell227_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container18 Functions
		/// </summary>
		public void cnt_Container18_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container18_setInlineAttributes(sender, e);
		}
		public string cnt_Container18_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight:500;line-height:16px;font-size: 13px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container18_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container18)
		/// </summary>
		/// <returns>The Visible State of wt_Container18</returns>
		public bool cnt_Container18_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression82 Functions
		/// </summary>
		public void expression_InlineExpression82_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression82_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression82_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: #6F6A6A;font-size: 13px;font-weight:600;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = qazOT6YB3EunuxjtUbd73g) Expression:
		///  GetCauseForConcernLog_List.List.Current.StudentLog.UserDescription
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression82() {
			return getWtGetCauseForConcernLog_ListList().CurrentRec.ssENStudentLog.ssUserDescription;
		}
		/// <summary>
		/// wt_TableCell138 Functions
		/// </summary>
		public void wt_TableCell138_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell138_setInlineAttributes(sender, e);
		}
		public string wt_TableCell138_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "min-width: 200px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container165 Functions
		/// </summary>
		public void cnt_Container165_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container165_setInlineAttributes(sender, e);
		}
		public string cnt_Container165_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding-right: 15px;float:right;color:#C2C2C2;font-size: 12px;margin-right: 5px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container165_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container165)
		/// </summary>
		/// <returns>The Visible State of wt_Container165</returns>
		public bool cnt_Container165_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression150 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = serTqPv4ZkSTs7ONrAWhvQ) Expression:
		///  GetCauseForConcernLog_List.List.Current.User.Name
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression150() {
			return getWtGetCauseForConcernLog_ListList().CurrentRec.ssENUser.ssName;
		}
		/// <summary>
		/// wt_Container118 Functions
		/// </summary>
		public void cnt_Container118_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container118_setInlineAttributes(sender, e);
		}
		public string cnt_Container118_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container118_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container118)
		/// </summary>
		/// <returns>The Visible State of wt_Container118</returns>
		public bool cnt_Container118_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression126 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = TWz5kczz7k+jG2ecx0YH7A) Expression: " on "
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression126() {
			return " on ";
		}
		/// <summary>
		/// wt_WebBlockInstance176 Functions
		/// </summary>
		public void webBlck_WebBlockInstance176_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
			widget.inParamDate = Convert.ToDateTime(getWtGetCauseForConcernLog_ListList().CurrentRec.ssENStudentLog.ssDateTime.ToString("yyyy-M-d"));
		}


		public static class FuncCommandOpenEditCauseForConcern {
		}
		public static class FuncCommandSort {
		}
		public static class FuncCommandEdit {
		}
		public static class FuncCommandOnDeleteConcernNotify {
		}
		public static class FuncCommandChangeConcern {

			/// <summary>
			/// Query Function "GetCauseOfConcernReasonById" of Action "ChangeConcern"
			/// </summary>
			public static RLCauseOfConcernReasonRecordList datasetGetCauseOfConcernReasonById(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENCauseOfConcernReason.[REASON] o2, NULL o3");
				fromBuilder.Append(" FROM {CauseOfConcernReason} ENCauseOfConcernReason");
				whereBuilder.Append(" WHERE ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENCauseOfConcernReason.[ID] = @qpinP) AND (ENCauseOfConcernReason.[ID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENCauseOfConcernReason.[ID] IS NULL)");
				}
				orderByBuilder.Append(" ORDER BY ENCauseOfConcernReason.[REASON] ASC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLCauseOfConcernReasonRecordList outParamList = new RLCauseOfConcernReasonRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					true, false, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLCauseOfConcernReasonRecordList _tmp = new RLCauseOfConcernReasonRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsCauseForConcern.ChangeConcern.GetCauseOfConcernReasonById.List");
						outParamList = (RLCauseOfConcernReasonRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsCauseForConcern.ChangeConcern.GetCauseOfConcernReasonById.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLCauseOfConcernReasonRecordList _tmp = new RLCauseOfConcernReasonRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsCauseForConcern.ChangeConcern.GetCauseOfConcernReasonById.List");
							outParamList = (RLCauseOfConcernReasonRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsCauseForConcern.ChangeConcern.GetCauseOfConcernReasonById.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}
		public static class FuncCommandRaiseConcern {

			/// <summary>
			/// Query Function "GetCauseOfConcernReasonById" of Action "RaiseConcern"
			/// </summary>
			public static RLCauseOfConcernReasonRecordList datasetGetCauseOfConcernReasonById(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENCauseOfConcernReason.[REASON] o2, NULL o3");
				fromBuilder.Append(" FROM {CauseOfConcernReason} ENCauseOfConcernReason");
				whereBuilder.Append(" WHERE ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENCauseOfConcernReason.[ID] = @qpinP) AND (ENCauseOfConcernReason.[ID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENCauseOfConcernReason.[ID] IS NULL)");
				}
				orderByBuilder.Append(" ORDER BY ENCauseOfConcernReason.[REASON] ASC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLCauseOfConcernReasonRecordList outParamList = new RLCauseOfConcernReasonRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					true, false, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLCauseOfConcernReasonRecordList _tmp = new RLCauseOfConcernReasonRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsCauseForConcern.RaiseConcern.GetCauseOfConcernReasonById.List");
						outParamList = (RLCauseOfConcernReasonRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsCauseForConcern.RaiseConcern.GetCauseOfConcernReasonById.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLCauseOfConcernReasonRecordList _tmp = new RLCauseOfConcernReasonRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsCauseForConcern.RaiseConcern.GetCauseOfConcernReasonById.List");
							outParamList = (RLCauseOfConcernReasonRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsCauseForConcern.RaiseConcern.GetCauseOfConcernReasonById.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}
		public static class FuncCommandCancel {
		}
		public static class FuncCommandChangeSelectedRAG {
		}
		public static class FuncssPreparation {

			/// <summary>
			/// Query Function "GetCauseOfConcernReasons2" of Action "Preparation"
			/// </summary>
			public static RLCauseOfConcernReasonRecordList datasetGetCauseOfConcernReasons2(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount) {
				// Query Iterations: Multiple {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("ENCauseOfConcernReason.[ID] o1, ENCauseOfConcernReason.[REASON] o2, NULL o3");
				fromBuilder.Append(" FROM {CauseOfConcernReason} ENCauseOfConcernReason");
				whereBuilder.Append(" WHERE (ENCauseOfConcernReason.[IS_ACTIVE] = 1)");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLCauseOfConcernReasonRecordList outParamList = new RLCauseOfConcernReasonRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					false, false, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLCauseOfConcernReasonRecordList _tmp = new RLCauseOfConcernReasonRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetCauseOfConcernReasons2.List");
						outParamList = (RLCauseOfConcernReasonRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetCauseOfConcernReasons2.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLCauseOfConcernReasonRecordList _tmp = new RLCauseOfConcernReasonRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetCauseOfConcernReasons2.List");
							outParamList = (RLCauseOfConcernReasonRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetCauseOfConcernReasons2.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetCauseOfConcernLearnerNotesReadDB(ref RCUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENCauseOfConcern.Read(r, ref index);
				rec.ssENCauseOfConcernLearnerNotes.Read(r, ref index);
				rec.ssENCauseOfConcernReason.Read(r, ref index);
				rec.ssENRAGStatus.Read(r, ref index);
				rec.ssENUser.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetCauseOfConcernLearnerNotes" of Action "Preparation"
			/// </summary>
			public static RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList datasetGetCauseOfConcernLearnerNotes(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Multiple {GetCauseForConcernLog_List2}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, ENCauseOfConcernLearnerNotes.[DESCRIPTION] o12, ENCauseOfConcernLearnerNotes.[CREATEDON] o13, NULL o14, NULL o15, ENCauseOfConcernReason.[REASON] o16, NULL o17, ENRAGStatus.[ID] o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27, NULL o28, NULL o29, NULL o30, NULL o31, NULL o32");
				fromBuilder.Append(" FROM (((({CauseOfConcernLearnerNotes} ENCauseOfConcernLearnerNotes Left JOIN {CauseOfConcern} ENCauseOfConcern ON (ENCauseOfConcernLearnerNotes.[CASEOFCONCERNID] = ENCauseOfConcern.[ID]))  Left JOIN {RAGStatus} ENRAGStatus ON (ENCauseOfConcern.[RAGSTATUSID] = ENRAGStatus.[ID]))  Left JOIN {CauseOfConcernReason} ENCauseOfConcernReason ON (ENCauseOfConcern.[REASONID] = ENCauseOfConcernReason.[ID]))  Left JOIN {User} ENUser ON (ENCauseOfConcernLearnerNotes.[USERID] = ENUser.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENCauseOfConcern.[STUDENTREFERENCE] = @qpstP) AND (ENCauseOfConcern.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENCauseOfConcern.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (ENCauseOfConcernLearnerNotes.[IS_ACTIVE] = 1)");
				orderByBuilder.Append(" ORDER BY ENCauseOfConcernReason.[ID] ASC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList outParamList = new RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetCauseOfConcernLearnerNotesReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[5];
				opt[0] = new BitArray(new bool[] {
					false, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					false, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, false, true
				}
				);
				opt[3] = new BitArray(new bool[] {
					true, true, true, true, false, false, true
				}
				);
				opt[4] = new BitArray(new bool[] {
					true, true, true, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList _tmp = new RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList();
					_tmp.AlternateReadDBMethod = datasetGetCauseOfConcernLearnerNotesReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetCauseOfConcernLearnerNotes.List");
						outParamList = (RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetCauseOfConcernLearnerNotes.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList _tmp = new RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList();
						_tmp.AlternateReadDBMethod = datasetGetCauseOfConcernLearnerNotesReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetCauseOfConcernLearnerNotes.List");
							outParamList = (RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetCauseOfConcernLearnerNotes.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetCauseForConcernReadDB(ref RCStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecord rec, IDataReader r) {
				int index = 0;
				rec.ssSTBoolean.Read(r, ref index);
				rec.ssENCauseOfConcern.Read(r, ref index);
				rec.ssENCauseOfConcernReason.Read(r, ref index);
				rec.ssENStudent.Read(r, ref index);
				rec.ssENUser.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetCauseForConcern" of Action "Preparation"
			/// </summary>
			public static RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList datasetGetCauseForConcern(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Multiple {GetCauseForConcern_List}
				// Refresh Query 0_DUijW8K0akU40jm4EtCQ Iterations: Multiple {GetCauseForConcern_List}
				// Refresh Query x8nA4Riw9UmutVHEHkksxA Iterations: Multiple {GetCauseForConcern_List}
				// Refresh Query _rescJ_N3kOPZA9_elmovA Iterations: Multiple {GetCauseForConcern_List}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENCauseOfConcern.[ID] o2, NULL o3, ENCauseOfConcern.[RAGSTATUSID] o4, ENCauseOfConcern.[REASONID] o5, ENCauseOfConcern.[DESCRIPTION] o6, NULL o7, ENCauseOfConcern.[CREATEDAT] o8, NULL o9, ENCauseOfConcernReason.[REASON] o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27, NULL o28, NULL o29, NULL o30, NULL o31, NULL o32, NULL o33, NULL o34, NULL o35, NULL o36, NULL o37, NULL o38, NULL o39, ENUser.[NAME] o40, NULL o41, NULL o42, NULL o43, NULL o44, NULL o45, NULL o46, NULL o47, NULL o48");
				fromBuilder.Append(" FROM ((({User} ENUser Inner JOIN {CauseOfConcern} ENCauseOfConcern ON (ENCauseOfConcern.[CREATEDBY] = ENUser.[ID]))  Left JOIN {Student} ENStudent ON (ENCauseOfConcern.[STUDENTREFERENCE] = ENStudent.[STUDENTREFERENCE]))  Left JOIN {CauseOfConcernReason} ENCauseOfConcernReason ON (ENCauseOfConcern.[REASONID] = ENCauseOfConcernReason.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudent.[STUDENTREFERENCE] = @qpstP) AND (ENStudent.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudent.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (ENCauseOfConcern.[RAGSTATUSID] <> ");
				whereBuilder.Append("'" + ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("u0BaxHGj1kKk2eULnLokxA")).ssId.Replace("'", "''") + "'");
				whereBuilder.Append(")");
				orderByBuilder.Append(" ORDER BY ENCauseOfConcern.[RAGSTATUSID] DESC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList outParamList = new RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetCauseForConcernReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[5];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					false, true, false, true, true, true, true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					false
				}
				);
				opt[3] = new BitArray(new bool[] {
					true, false, true
				}
				);
				opt[4] = new BitArray(new bool[] {
					false, true, false, false, false, true, false
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList _tmp = new RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList();
					_tmp.AlternateReadDBMethod = datasetGetCauseForConcernReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetCauseForConcern.List");
						outParamList = (RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetCauseForConcern.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList _tmp = new RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList();
						_tmp.AlternateReadDBMethod = datasetGetCauseForConcernReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetCauseForConcern.List");
							outParamList = (RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetCauseForConcern.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetStudentLogsByStudentReferenceReadDB(ref RCUserStudentLogStudentLogTypeRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENStudentLog.Read(r, ref index);
				rec.ssENStudentLogType.Read(r, ref index);
				rec.ssENUser.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetStudentLogsByStudentReference" of Action "Preparation"
			/// </summary>
			public static RLUserStudentLogStudentLogTypeRecordList datasetGetStudentLogsByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP, string qpstP1) {
				// Query Iterations: Multiple {GetCauseForConcernLog_List}
				// Refresh Query QE_b2lyBQEqgkyAnk6RSJQ Iterations: Multiple {GetCauseForConcernLog_List}
				// Refresh Query oNxTOKmsy0eHhnt2TqOGFA Iterations: Multiple {GetCauseForConcernLog_List}
				// Refresh Query zNMwqBwnh0q6cX3u3TFyXw Iterations: Multiple {GetCauseForConcernLog_List}
				// Refresh Query ouSeEiTrrEaRVG_rd0bm1Q Iterations: Multiple {GetCauseForConcernLog_List}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, ENStudentLog.[DATETIME] o3, NULL o4, ENStudentLog.[DESCRIPTION] o5, ENStudentLog.[USERDESCRIPTION] o6, ENStudentLog.[LOGRAGID] o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, ENStudentLog.[CAUSEOFCONCERNRAG] o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27, NULL o28, NULL o29, NULL o30, NULL o31, NULL o32, NULL o33, NULL o34, NULL o35, NULL o36, NULL o37, NULL o38, NULL o39, NULL o40, NULL o41, NULL o42, NULL o43, NULL o44, NULL o45, NULL o46, NULL o47, NULL o48, ENUser.[NAME] o49, NULL o50, NULL o51, NULL o52, NULL o53, NULL o54, NULL o55, NULL o56, NULL o57");
				fromBuilder.Append(" FROM (({StudentLog} ENStudentLog Left JOIN {StudentLogType} ENStudentLogType ON (ENStudentLog.[STUDENTLOGTYPE] = ENStudentLogType.[LOGTYPE]))  Left JOIN {User} ENUser ON (ENStudentLog.[EVENTBY] = ENUser.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP1.Trim() != "") {
					whereBuilder.Append("((ENStudentLog.[STUDENTREFERENCE] = @qpstP1) AND (ENStudentLog.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP1", DbType.String, qpstP1);
				} else {
					whereBuilder.Append("(ENStudentLog.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (ENStudentLog.[STUDENTLOGTYPE] = ");
				whereBuilder.Append("'" + ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("hTcMAzvg9kmgJqUGGgXnPg")).ssLogType.Replace("'", "''") + "'");
				whereBuilder.Append(")");
				if (qpstP.Trim() != "") {
					orderByBuilder.Append(" ORDER BY ");
					List<string> orderByColumns = new List<string>();
					orderByColumns.AddRange(BaseAppUtils.ReplaceEntityReferencesInOrderBy(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstP, new string[] { "User", "StudentLogType", "StudentLog"
					}
					, new string[] { "ENUser", "ENStudentLogType", "ENStudentLog"
					}
					).Split(','));
					orderByBuilder.Append(BaseAppUtils.GetOrderByColumnsWithoutDuplicates(orderByColumns));
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLUserStudentLogStudentLogTypeRecordList outParamList = new RLUserStudentLogStudentLogTypeRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetStudentLogsByStudentReferenceReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[3];
				opt[0] = new BitArray(new bool[] {
					false, true, false, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, true, false, true, false, false, false, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLUserStudentLogStudentLogTypeRecordList _tmp = new RLUserStudentLogStudentLogTypeRecordList();
					_tmp.AlternateReadDBMethod = datasetGetStudentLogsByStudentReferenceReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetStudentLogsByStudentReference.List");
						outParamList = (RLUserStudentLogStudentLogTypeRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetStudentLogsByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLUserStudentLogStudentLogTypeRecordList _tmp = new RLUserStudentLogStudentLogTypeRecordList();
						_tmp.AlternateReadDBMethod = datasetGetStudentLogsByStudentReferenceReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetStudentLogsByStudentReference.List");
							outParamList = (RLUserStudentLogStudentLogTypeRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsCauseForConcern.Preparation.GetStudentLogsByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}



		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}


		public LocalState PushStack() {
			return null;
		}

		public void doRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				Preparation(heContext);

				Title = "LearnerDetailsCauseForConcern"; ssGetCauseForConcern_ListListDoDataBind = true;
				ssGetCauseForConcernLog_List2ListDoDataBind = true;
				ssGetCauseForConcernLog_ListListDoDataBind = true;
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerDetailsCauseForConcern", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// Perform the partial databind
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerDetailsCauseForConcern", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Ajax", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}



		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();

			#region store queryResGetCauseOfConcernReasons2_outParamList.

			int tmpcurrentrownumberqueryResGetCauseOfConcernReasons2_outParamList = queryResGetCauseOfConcernReasons2_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetCauseOfConcernReasons2_outParamList = queryResGetCauseOfConcernReasons2_outParamList.Eof;
			ArrayList storequeryResGetCauseOfConcernReasons2_outParamList = new ArrayList();

			// Write the needed fields of queryResGetCauseOfConcernReasons2_outParamList to the storequeryResGetCauseOfConcernReasons2_outParamList
			if (!queryResGetCauseOfConcernReasons2_outParamList.Empty) {
				try {
					queryResGetCauseOfConcernReasons2_outParamList.StartIteration();

					while (!queryResGetCauseOfConcernReasons2_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList = new ArrayList();
						tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList.Add(queryResGetCauseOfConcernReasons2_outParamList.CurrentRec.ssENCauseOfConcernReason.ssId == 0?(object) null: queryResGetCauseOfConcernReasons2_outParamList.CurrentRec.ssENCauseOfConcernReason.ssId);
						tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList.Add(queryResGetCauseOfConcernReasons2_outParamList.CurrentRec.ssENCauseOfConcernReason.ssReason == "" ?(object) null: queryResGetCauseOfConcernReasons2_outParamList.CurrentRec.ssENCauseOfConcernReason.ssReason);
						tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCauseOfConcernReasons2_outParamList.CurrentRec.ssENCauseOfConcernReason.ChangedAttributes, new BitArray(new bool[] {
							true, true, false
						}
						))));
						tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCauseOfConcernReasons2_outParamList.CurrentRec.ssENCauseOfConcernReason.OptimizedAttributes, new BitArray(new bool[] {
							false, false, true
						}
						))));
						storequeryResGetCauseOfConcernReasons2_outParamList.Add(tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList);
						queryResGetCauseOfConcernReasons2_outParamList.Advance();
					}
				} finally {
					queryResGetCauseOfConcernReasons2_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetCauseOfConcernReasons2_outParamList", storequeryResGetCauseOfConcernReasons2_outParamList, null);

			#endregion


			#region store queryResGetCauseOfConcernReasons2_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetCauseOfConcernReasons2_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetCauseOfConcernReasons2_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetCauseOfConcernReasons2_outParamList_eof", tmpeofqueryResGetCauseOfConcernReasons2_outParamList, false);
			queryResGetCauseOfConcernReasons2_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCauseOfConcernReasons2_outParamList, tmpeofqueryResGetCauseOfConcernReasons2_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("resUserCheck_outParamPermissionType", resUserCheck_outParamPermissionType, 0);

			#region store queryResGetCauseOfConcernLearnerNotes_outParamList.

			int tmpcurrentrownumberqueryResGetCauseOfConcernLearnerNotes_outParamList = queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetCauseOfConcernLearnerNotes_outParamList = queryResGetCauseOfConcernLearnerNotes_outParamList.Eof;
			ArrayList storequeryResGetCauseOfConcernLearnerNotes_outParamList = new ArrayList();

			// Write the needed fields of queryResGetCauseOfConcernLearnerNotes_outParamList to the storequeryResGetCauseOfConcernLearnerNotes_outParamList
			if (!queryResGetCauseOfConcernLearnerNotes_outParamList.Empty) {
				try {
					queryResGetCauseOfConcernLearnerNotes_outParamList.StartIteration();

					while (!queryResGetCauseOfConcernLearnerNotes_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList = new ArrayList();
						tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList.Add(queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENRAGStatus.ssId == "" ?(object) null: queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENRAGStatus.ssId);
						tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENRAGStatus.ChangedAttributes, new BitArray(new bool[] {
							true, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENRAGStatus.OptimizedAttributes, new BitArray(new bool[] {
							false, true, true, true, true
						}
						))));
						tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList.Add(queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENCauseOfConcernReason.ssReason == "" ?(object) null: queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENCauseOfConcernReason.ssReason);
						tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENCauseOfConcernReason.ChangedAttributes, new BitArray(new bool[] {
							false, true, false
						}
						))));
						tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENCauseOfConcernReason.OptimizedAttributes, new BitArray(new bool[] {
							true, false, true
						}
						))));
						tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList.Add(queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENCauseOfConcernLearnerNotes.ssDescription == "" ?(object) null: queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENCauseOfConcernLearnerNotes.ssDescription);
						tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList.Add(queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENCauseOfConcernLearnerNotes.ssCreatedOn == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENCauseOfConcernLearnerNotes.ssCreatedOn);
						tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENCauseOfConcernLearnerNotes.ChangedAttributes, new BitArray(new bool[] {
							false, false, false, false, true, true, false
						}
						))));
						tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRec.ssENCauseOfConcernLearnerNotes.OptimizedAttributes, new BitArray(new bool[] {
							true, true, true, true, false, false, true
						}
						))));
						storequeryResGetCauseOfConcernLearnerNotes_outParamList.Add(tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList);
						queryResGetCauseOfConcernLearnerNotes_outParamList.Advance();
					}
				} finally {
					queryResGetCauseOfConcernLearnerNotes_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetCauseOfConcernLearnerNotes_outParamList", storequeryResGetCauseOfConcernLearnerNotes_outParamList, null);

			#endregion


			#region store queryResGetCauseOfConcernLearnerNotes_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetCauseOfConcernLearnerNotes_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetCauseOfConcernLearnerNotes_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetCauseOfConcernLearnerNotes_outParamList_eof", tmpeofqueryResGetCauseOfConcernLearnerNotes_outParamList, false);
			queryResGetCauseOfConcernLearnerNotes_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCauseOfConcernLearnerNotes_outParamList, tmpeofqueryResGetCauseOfConcernLearnerNotes_outParamList);

			#endregion


			#region store queryResGetCauseForConcern_outParamList.

			int tmpcurrentrownumberqueryResGetCauseForConcern_outParamList = queryResGetCauseForConcern_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetCauseForConcern_outParamList = queryResGetCauseForConcern_outParamList.Eof;
			ArrayList storequeryResGetCauseForConcern_outParamList = new ArrayList();

			// Write the needed fields of queryResGetCauseForConcern_outParamList to the storequeryResGetCauseForConcern_outParamList
			if (!queryResGetCauseForConcern_outParamList.Empty) {
				try {
					queryResGetCauseForConcern_outParamList.StartIteration();

					while (!queryResGetCauseForConcern_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetCauseForConcern_outParamList = new ArrayList();
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(queryResGetCauseForConcern_outParamList.CurrentRec.ssENUser.ssName == "" ?(object) null: queryResGetCauseForConcern_outParamList.CurrentRec.ssENUser.ssName);
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCauseForConcern_outParamList.CurrentRec.ssENUser.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCauseForConcern_outParamList.CurrentRec.ssENUser.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(queryResGetCauseForConcern_outParamList.CurrentRec.ssSTBoolean.ssValue == false?(object) null: queryResGetCauseForConcern_outParamList.CurrentRec.ssSTBoolean.ssValue);
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcernReason.ssReason == "" ?(object) null: queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcernReason.ssReason);
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcernReason.ChangedAttributes, new BitArray(new bool[] {
							false, true, false
						}
						))));
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcernReason.OptimizedAttributes, new BitArray(new bool[] {
							true, false, true
						}
						))));
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.ssId == 0?(object) null: queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.ssId);
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.ssRAGStatusId == "" ?(object) null: queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.ssRAGStatusId);
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.ssReasonId == 0?(object) null: queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.ssReasonId);
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.ssDescription == "" ?(object) null: queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.ssDescription);
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.ssCreatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.ssCreatedAt);
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.ChangedAttributes, new BitArray(new bool[] {
							true, false, true, true, true, false, true
						}
						))));
						tmpFieldsqueryResGetCauseForConcern_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetCauseForConcern_outParamList.CurrentRec.ssENCauseOfConcern.OptimizedAttributes, new BitArray(new bool[] {
							false, true, false, false, false, true, false
						}
						))));
						storequeryResGetCauseForConcern_outParamList.Add(tmpFieldsqueryResGetCauseForConcern_outParamList);
						queryResGetCauseForConcern_outParamList.Advance();
					}
				} finally {
					queryResGetCauseForConcern_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetCauseForConcern_outParamList", storequeryResGetCauseForConcern_outParamList, null);

			#endregion


			#region store queryResGetCauseForConcern_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetCauseForConcern_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetCauseForConcern_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetCauseForConcern_outParamList_eof", tmpeofqueryResGetCauseForConcern_outParamList, false);
			queryResGetCauseForConcern_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCauseForConcern_outParamList, tmpeofqueryResGetCauseForConcern_outParamList);

			#endregion


			#region store queryResGetStudentLogsByStudentReference_outParamList.

			int tmpcurrentrownumberqueryResGetStudentLogsByStudentReference_outParamList = queryResGetStudentLogsByStudentReference_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetStudentLogsByStudentReference_outParamList = queryResGetStudentLogsByStudentReference_outParamList.Eof;
			ArrayList storequeryResGetStudentLogsByStudentReference_outParamList = new ArrayList();

			// Write the needed fields of queryResGetStudentLogsByStudentReference_outParamList to the storequeryResGetStudentLogsByStudentReference_outParamList
			if (!queryResGetStudentLogsByStudentReference_outParamList.Empty) {
				try {
					queryResGetStudentLogsByStudentReference_outParamList.StartIteration();

					while (!queryResGetStudentLogsByStudentReference_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList = new ArrayList();
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENUser.ssName == "" ?(object) null: queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENUser.ssName);
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENUser.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENUser.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssDateTime == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssDateTime);
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssDescription == "" ?(object) null: queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssDescription);
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssUserDescription == "" ?(object) null: queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssUserDescription);
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssLogRAGId == "" ?(object) null: queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssLogRAGId);
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
						}
						))));
						storequeryResGetStudentLogsByStudentReference_outParamList.Add(tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList);
						queryResGetStudentLogsByStudentReference_outParamList.Advance();
					}
				} finally {
					queryResGetStudentLogsByStudentReference_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetStudentLogsByStudentReference_outParamList", storequeryResGetStudentLogsByStudentReference_outParamList, null);

			#endregion


			#region store queryResGetStudentLogsByStudentReference_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetStudentLogsByStudentReference_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetStudentLogsByStudentReference_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetStudentLogsByStudentReference_outParamList_eof", tmpeofqueryResGetStudentLogsByStudentReference_outParamList, false);
			queryResGetStudentLogsByStudentReference_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentLogsByStudentReference_outParamList, tmpeofqueryResGetStudentLogsByStudentReference_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("inParamStudentReference", inParamStudentReference, "");
			ViewStateAttributes.SetInViewState("inParamSessionID", inParamSessionID, 0);
			ViewStateAttributes.SetInViewState("inParamCourseCode", inParamCourseCode, "");
			ViewStateAttributes.SetInViewState("inParamFromLearnerList", inParamFromLearnerList, false);
			ViewStateAttributes.SetInViewState("varLcCurrentSelectRAG", varLcCurrentSelectRAG, "");
			ViewStateAttributes.SetInViewState("varLcVisible", varLcVisible, false);
			ViewStateAttributes.SetInViewState("varLcReasonId", varLcReasonId, 0);
			ViewStateAttributes.SetInViewState("varLcDescriptionConcern", varLcDescriptionConcern, "");
			ViewStateAttributes.SetInViewState("varLcNewConcernRAG", varLcNewConcernRAG, "");
			ViewStateAttributes.SetInViewState("varLcOldRAG", varLcOldRAG, "");
			ViewStateAttributes.SetInViewState("varLcSortDesc", varLcSortDesc, false);
			ViewStateAttributes.SetInViewState("wtComboBoxReason_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtComboBoxReason")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtConcernDescription_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtConcernDescription")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtEditRecordCauseForConcern_record_ssENCauseOfConcern_ssId", ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssId, 0);
			ViewStateAttributes.SetInViewState("wtEditRecordCauseForConcern_record_ssENCauseOfConcern_ssReasonId", ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssReasonId, 0);
			ViewStateAttributes.SetInViewState("wtEditRecordCauseForConcern_record_ssENCauseOfConcern_ssDescription", ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssDescription, "");
			ViewStateAttributes.SetInViewState("wtEditRecordCauseForConcern_record_ssENCauseOfConcern_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ChangedAttributes, new BitArray(new bool[] {
				true, false, false, true, true, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("wtEditRecordCauseForConcern_record_ssENCauseOfConcern_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true, false, false, true, true
			}
			)))), null);
			if (IsAjaxRequest) {
				recListGetCauseForConcern_List_Rebuild((ssGetCauseForConcern_ListListDataBound ? wtGetCauseForConcern_List.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtGetCauseForConcern_List.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtGetCauseForConcern_List_list", wtGetCauseForConcern_List_storage, null);
			if (IsAjaxRequest) {
				recListGetCauseForConcernLog_List2_Rebuild((ssGetCauseForConcernLog_List2ListDataBound ? wtGetCauseForConcernLog_List2.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtGetCauseForConcernLog_List2.LineCount);
			}
			if (IsAjaxRequest) {
				recListGetCauseForConcernLog_List_Rebuild((ssGetCauseForConcernLog_ListListDataBound ? wtGetCauseForConcernLog_List.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtGetCauseForConcernLog_List.LineCount);
			}
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			try {

				#region fetch queryResGetCauseOfConcernReasons2_outParamList.

				// Read the needed fields of queryResGetCauseOfConcernReasons2_outParamList from storequeryResGetCauseOfConcernReasons2_outParamList
				queryResGetCauseOfConcernReasons2_outParamList = new RLCauseOfConcernReasonRecordList();
				ArrayList storequeryResGetCauseOfConcernReasons2_outParamList;
				storequeryResGetCauseOfConcernReasons2_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetCauseOfConcernReasons2_outParamList", null);
				if (storequeryResGetCauseOfConcernReasons2_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList in storequeryResGetCauseOfConcernReasons2_outParamList) {
						if (tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList != null) {
							// Aux current record variable
							RCCauseOfConcernReasonRecord tmpAuxCurrentRecordqueryResGetCauseOfConcernReasons2_outParamList = new RCCauseOfConcernReasonRecord(null);
							tmpAuxCurrentRecordqueryResGetCauseOfConcernReasons2_outParamList.ssENCauseOfConcernReason.ssId = (int) (tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList[0] == null ? 0: tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernReasons2_outParamList.ssENCauseOfConcernReason.ssReason = (string) (tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList[1] == null ? "": tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernReasons2_outParamList.ssENCauseOfConcernReason.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernReasons2_outParamList.ssENCauseOfConcernReason.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseOfConcernReasons2_outParamList[3]);

							queryResGetCauseOfConcernReasons2_outParamList.Append(tmpAuxCurrentRecordqueryResGetCauseOfConcernReasons2_outParamList);
						}
					}
				}
				queryResGetCauseOfConcernReasons2_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetCauseOfConcernReasons2_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetCauseOfConcernReasons2_outParamList;
				tmpcurrentrownumberqueryResGetCauseOfConcernReasons2_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetCauseOfConcernReasons2_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetCauseOfConcernReasons2_outParamList;
				tmpeofqueryResGetCauseOfConcernReasons2_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetCauseOfConcernReasons2_outParamList_eof", false);
				queryResGetCauseOfConcernReasons2_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCauseOfConcernReasons2_outParamList, tmpeofqueryResGetCauseOfConcernReasons2_outParamList);

				#endregion

				resUserCheck_outParamPermissionType = (int) ViewStateAttributes.GetFromViewState("resUserCheck_outParamPermissionType", 0);

				#region fetch queryResGetCauseOfConcernLearnerNotes_outParamList.

				// Read the needed fields of queryResGetCauseOfConcernLearnerNotes_outParamList from storequeryResGetCauseOfConcernLearnerNotes_outParamList
				queryResGetCauseOfConcernLearnerNotes_outParamList = new RLUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecordList();
				ArrayList storequeryResGetCauseOfConcernLearnerNotes_outParamList;
				storequeryResGetCauseOfConcernLearnerNotes_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetCauseOfConcernLearnerNotes_outParamList", null);
				if (storequeryResGetCauseOfConcernLearnerNotes_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList in storequeryResGetCauseOfConcernLearnerNotes_outParamList) {
						if (tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList != null) {
							// Aux current record variable
							RCUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecord tmpAuxCurrentRecordqueryResGetCauseOfConcernLearnerNotes_outParamList = new RCUserRAGStatusCauseOfConcernReasonCauseOfConcernLearnerNotesCauseOfConcernRecord(null);
							tmpAuxCurrentRecordqueryResGetCauseOfConcernLearnerNotes_outParamList.ssENRAGStatus.ssId = (string) (tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[0] == null ? "": tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernLearnerNotes_outParamList.ssENRAGStatus.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernLearnerNotes_outParamList.ssENRAGStatus.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernLearnerNotes_outParamList.ssENCauseOfConcernReason.ssReason = (string) (tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[3] == null ? "": tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[3]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernLearnerNotes_outParamList.ssENCauseOfConcernReason.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[4]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernLearnerNotes_outParamList.ssENCauseOfConcernReason.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[5]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernLearnerNotes_outParamList.ssENCauseOfConcernLearnerNotes.ssDescription = (string) (tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[6] == null ? "": tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[6]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernLearnerNotes_outParamList.ssENCauseOfConcernLearnerNotes.ssCreatedOn = (DateTime) (tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[7] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[7]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernLearnerNotes_outParamList.ssENCauseOfConcernLearnerNotes.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[8]);

							tmpAuxCurrentRecordqueryResGetCauseOfConcernLearnerNotes_outParamList.ssENCauseOfConcernLearnerNotes.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseOfConcernLearnerNotes_outParamList[9]);

							queryResGetCauseOfConcernLearnerNotes_outParamList.Append(tmpAuxCurrentRecordqueryResGetCauseOfConcernLearnerNotes_outParamList);
						}
					}
				}
				queryResGetCauseOfConcernLearnerNotes_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetCauseOfConcernLearnerNotes_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetCauseOfConcernLearnerNotes_outParamList;
				tmpcurrentrownumberqueryResGetCauseOfConcernLearnerNotes_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetCauseOfConcernLearnerNotes_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetCauseOfConcernLearnerNotes_outParamList;
				tmpeofqueryResGetCauseOfConcernLearnerNotes_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetCauseOfConcernLearnerNotes_outParamList_eof", false);
				queryResGetCauseOfConcernLearnerNotes_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCauseOfConcernLearnerNotes_outParamList, tmpeofqueryResGetCauseOfConcernLearnerNotes_outParamList);

				#endregion


				#region fetch queryResGetCauseForConcern_outParamList.

				// Read the needed fields of queryResGetCauseForConcern_outParamList from storequeryResGetCauseForConcern_outParamList
				queryResGetCauseForConcern_outParamList = new RLStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecordList();
				ArrayList storequeryResGetCauseForConcern_outParamList;
				storequeryResGetCauseForConcern_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetCauseForConcern_outParamList", null);
				if (storequeryResGetCauseForConcern_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetCauseForConcern_outParamList in storequeryResGetCauseForConcern_outParamList) {
						if (tmpFieldsqueryResGetCauseForConcern_outParamList != null) {
							// Aux current record variable
							RCStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecord tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList = new RCStudentUserBooleanCauseOfConcernReasonCauseOfConcernRecord(null);
							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssENUser.ssName = (string) (tmpFieldsqueryResGetCauseForConcern_outParamList[0] == null ? "": tmpFieldsqueryResGetCauseForConcern_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssENUser.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseForConcern_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssENUser.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseForConcern_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssSTBoolean.ssValue = (bool) (tmpFieldsqueryResGetCauseForConcern_outParamList[3] == null ? false: tmpFieldsqueryResGetCauseForConcern_outParamList[3]);

							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssENCauseOfConcernReason.ssReason = (string) (tmpFieldsqueryResGetCauseForConcern_outParamList[4] == null ? "": tmpFieldsqueryResGetCauseForConcern_outParamList[4]);

							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssENCauseOfConcernReason.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseForConcern_outParamList[5]);

							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssENCauseOfConcernReason.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseForConcern_outParamList[6]);

							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssENCauseOfConcern.ssId = (int) (tmpFieldsqueryResGetCauseForConcern_outParamList[7] == null ? 0: tmpFieldsqueryResGetCauseForConcern_outParamList[7]);

							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssENCauseOfConcern.ssRAGStatusId = (string) (tmpFieldsqueryResGetCauseForConcern_outParamList[8] == null ? "": tmpFieldsqueryResGetCauseForConcern_outParamList[8]);

							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssENCauseOfConcern.ssReasonId = (int) (tmpFieldsqueryResGetCauseForConcern_outParamList[9] == null ? 0: tmpFieldsqueryResGetCauseForConcern_outParamList[9]);

							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssENCauseOfConcern.ssDescription = (string) (tmpFieldsqueryResGetCauseForConcern_outParamList[10] == null ? "": tmpFieldsqueryResGetCauseForConcern_outParamList[10]);

							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssENCauseOfConcern.ssCreatedAt = (DateTime) (tmpFieldsqueryResGetCauseForConcern_outParamList[11] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsqueryResGetCauseForConcern_outParamList[11]);

							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssENCauseOfConcern.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseForConcern_outParamList[12]);

							tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList.ssENCauseOfConcern.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetCauseForConcern_outParamList[13]);

							queryResGetCauseForConcern_outParamList.Append(tmpAuxCurrentRecordqueryResGetCauseForConcern_outParamList);
						}
					}
				}
				queryResGetCauseForConcern_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetCauseForConcern_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetCauseForConcern_outParamList;
				tmpcurrentrownumberqueryResGetCauseForConcern_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetCauseForConcern_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetCauseForConcern_outParamList;
				tmpeofqueryResGetCauseForConcern_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetCauseForConcern_outParamList_eof", false);
				queryResGetCauseForConcern_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetCauseForConcern_outParamList, tmpeofqueryResGetCauseForConcern_outParamList);

				#endregion


				#region fetch queryResGetStudentLogsByStudentReference_outParamList.

				// Read the needed fields of queryResGetStudentLogsByStudentReference_outParamList from storequeryResGetStudentLogsByStudentReference_outParamList
				queryResGetStudentLogsByStudentReference_outParamList = new RLUserStudentLogStudentLogTypeRecordList();
				ArrayList storequeryResGetStudentLogsByStudentReference_outParamList;
				storequeryResGetStudentLogsByStudentReference_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetStudentLogsByStudentReference_outParamList", null);
				if (storequeryResGetStudentLogsByStudentReference_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList in storequeryResGetStudentLogsByStudentReference_outParamList) {
						if (tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList != null) {
							// Aux current record variable
							RCUserStudentLogStudentLogTypeRecord tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList = new RCUserStudentLogStudentLogTypeRecord(null);
							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENUser.ssName = (string) (tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[0] == null ? "": tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENUser.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENUser.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENStudentLog.ssDateTime = (DateTime) (tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[3] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[3]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENStudentLog.ssDescription = (string) (tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[4] == null ? "": tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[4]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENStudentLog.ssUserDescription = (string) (tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[5] == null ? "": tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[5]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENStudentLog.ssLogRAGId = (string) (tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[6] == null ? "": tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[6]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENStudentLog.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[7]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENStudentLog.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[8]);

							queryResGetStudentLogsByStudentReference_outParamList.Append(tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList);
						}
					}
				}
				queryResGetStudentLogsByStudentReference_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetStudentLogsByStudentReference_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetStudentLogsByStudentReference_outParamList;
				tmpcurrentrownumberqueryResGetStudentLogsByStudentReference_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetStudentLogsByStudentReference_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetStudentLogsByStudentReference_outParamList;
				tmpeofqueryResGetStudentLogsByStudentReference_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetStudentLogsByStudentReference_outParamList_eof", false);
				queryResGetStudentLogsByStudentReference_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentLogsByStudentReference_outParamList, tmpeofqueryResGetStudentLogsByStudentReference_outParamList);

				#endregion

				inParamStudentReference = (string) ViewStateAttributes.GetFromViewState("inParamStudentReference", "");
				inParamSessionID = (int) ViewStateAttributes.GetFromViewState("inParamSessionID", 0);
				inParamCourseCode = (string) ViewStateAttributes.GetFromViewState("inParamCourseCode", "");
				inParamFromLearnerList = (bool) ViewStateAttributes.GetFromViewState("inParamFromLearnerList", false);
				varLcCurrentSelectRAG = (string) ViewStateAttributes.GetFromViewState("varLcCurrentSelectRAG", "");
				varLcVisible = (bool) ViewStateAttributes.GetFromViewState("varLcVisible", false);
				varLcReasonId = (int) ViewStateAttributes.GetFromViewState("varLcReasonId", 0);
				varLcDescriptionConcern = (string) ViewStateAttributes.GetFromViewState("varLcDescriptionConcern", "");
				varLcNewConcernRAG = (string) ViewStateAttributes.GetFromViewState("varLcNewConcernRAG", "");
				varLcOldRAG = (string) ViewStateAttributes.GetFromViewState("varLcOldRAG", "");
				varLcSortDesc = (bool) ViewStateAttributes.GetFromViewState("varLcSortDesc", false);
				((IWidgetRuntimeProperties) this.FindControl("wtComboBoxReason")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtComboBoxReason_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtConcernDescription")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtConcernDescription_Mandatory", false);
				ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssId = (int) ViewStateAttributes.GetFromViewState("wtEditRecordCauseForConcern_record_ssENCauseOfConcern_ssId", 0);
				ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssReasonId = (int) ViewStateAttributes.GetFromViewState("wtEditRecordCauseForConcern_record_ssENCauseOfConcern_ssReasonId", 0);
				ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ssDescription = (string) ViewStateAttributes.GetFromViewState("wtEditRecordCauseForConcern_record_ssENCauseOfConcern_ssDescription", "");
				ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecordCauseForConcern_record_ssENCauseOfConcern_ChangedAttributes", null));
				ssEditRecordCauseForConcernRecord.ssENCauseOfConcern.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecordCauseForConcern_record_ssENCauseOfConcern_OptimizedAttributes", null));
				recListGetCauseForConcern_List_Restore();
				recListGetCauseForConcernLog_List2_Restore();
				recListGetCauseForConcernLog_List_Restore();
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}


		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			ValidationUtils.ValidateComboBox(this, "wtComboBoxReason", parentEditRecord, validate);
			ValidationUtils.ValidateInput(this, "wtConcernDescription", parentEditRecord, ValidationUtils.validateTrue, validate);
			ValidationUtils.ValidateComboBox(FindControl("wtGetCauseForConcern_List"), "wt_ComboBox195", parentEditRecord, validate);
			ValidationUtils.ValidateInput(FindControl("wtGetCauseForConcern_List"), "wtEditCauseForConcernDescription", parentEditRecord, ValidationUtils.validateTrue, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}


		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}

		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			Page_Load(null, null); this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}


		public override void DataBind() {
			base.DataBind();
			StoreViewState();
			OutSystems.HubEdition.WebWidgets.Utils.addValidationScriptsToPage(this);
		}



	}




}
