/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.IO;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Runtime.Serialization;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Web.Caching;
using System.Text;
using System.Resources;

namespace ssCaseConferencing.Flows.FlowLearners {

	public class ScrnPopup_Email: OSPageViewStateCompressed, IWebScreen, INegotiateTabIndexes, IBookmarkableURL {


		public ScrnPopup_Email(): base(CaseConferencing_Properties.QuirksMode) {
		}


		/// <summary>
		/// Screen Input Parameter inParamStudentId. Description:
		/// </summary>
		public string inParamStudentId = "";
		/// <summary>
		/// Screen Input Parameter inParamCommunicationId. Description:
		/// </summary>
		public int inParamCommunicationId = 0;
		/// <summary>
		/// Variable <code>varLcEmailFrom</code> that represents the Service Studio local variable
		///  <code>EmailFrom</code> <p>Description: </p>
		/// </summary>
		RCEmailFromRecord varLcEmailFrom = new RCEmailFromRecord(null);

		/// <summary>
		/// Variable <code>varLcEmailFromList</code> that represents the Service Studio local variable
		///  <code>EmailFromList</code> <p>Description: </p>
		/// </summary>
		RLEmailFromRecordList varLcEmailFromList = new RLEmailFromRecordList();

		/// <summary>
		/// Variable <code>varLcCounter</code> that represents the Service Studio local variable
		///  <code>Counter</code> <p>Description: </p>
		/// </summary>
		int varLcCounter = 0;

		/// <summary>
		/// Variable wt_WebBlockInstance58
		/// </summary>
		protected ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout wt_WebBlockInstance58;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container61;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container39;
		/// <summary>
		/// Variable (wt_Link36) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link36;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container5;
		/// <summary>
		/// Variable (wt_Link54) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link54;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container55;
		/// <summary>
		/// Variable (wt_Link52) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link52;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container107;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container11;
		/// <summary>
		/// Variable "True" if the Widget wt_If112
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If112T;

		/// <summary>
		/// Variable "True" if the Widget wt_If112
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If112F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container120;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container83;
		/// <summary>
		/// Variable (wt_Link89) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link89;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container93;
		/// <summary>
		/// Variable (wt_Link109) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link109;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container2;
		/// <summary>
		/// Variable (wt_Link105) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link105;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container86;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container25;
		/// <summary>
		/// Variable "True" if the Widget wt_If30
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If30T;

		/// <summary>
		/// Variable "True" if the Widget wt_If30
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If30F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container16;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container14;
		/// <summary>
		/// Variable (wt_Link28) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link28;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container123;
		/// <summary>
		/// Variable (wt_Link35) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link35;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container80;
		/// <summary>
		/// Variable (wt_Link53) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link53;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container15;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_ComboBox121ValidatorRequired;
		protected SelectRtWidget Rt_wt_ComboBox121 = new SelectRtWidget();
		RLEmailFromRecordList Rt_wt_ComboBox121_reclist = null;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtEmail_ToValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtEmail_ToValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container50;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtEmail_CCValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtEmail_CCValidatorType;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtEmail_BCCValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtEmail_BCCValidatorType;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtEmail_SubjectValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtEmail_SubjectValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container40;
		/// <summary>
		/// Input File name widget (wtUpload1)
		/// </summary>
		protected HtmlInputFile wtUpload1;
		/// <summary>
		/// Input File name Runtime Properties (wtUpload1)
		/// </summary>
		private InputFilenameRtWidget _Rt_wtUpload1;
		protected InputFilenameRtWidget Rt_wtUpload1 {
			get {
				if (_Rt_wtUpload1 == null) {
					_Rt_wtUpload1 = new InputFilenameRtWidget(wtUpload1); 
				}
				return _Rt_wtUpload1; 
			}
		}
		/// <summary>
		/// Variable (wt_Button75) with Button component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.Button wt_Button75;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container96;
		private RLDocumentsRecordList _ssListRecordsAttatcList = new RLDocumentsRecordList();
		public RLDocumentsRecordList ssListRecordsAttatcList {
			get {
				return _ssListRecordsAttatcList; 
			}
			set {
				_ssListRecordsAttatcList = value;
				wtListRecordsAttatc.DataSource = value;
				ssListRecordsAttatcListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtListRecordsAttatc;
		public ArrayList wtListRecordsAttatc_storage = new ArrayList();
		protected bool ssListRecordsAttatcList_notUsedYet = true;
		protected bool ssListRecordsAttatcListDoDataBind;
		protected bool ssListRecordsAttatcListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container23;
		/// <summary>
		/// Variable (wt_Link102) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link102;
		/// <summary>
		/// Variable (wt_Link70) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link70;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container111;
		/// <summary>
		/// Variable (wtAddTargets) with Button component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.Button wtAddTargets;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtEmail_BodyValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtEmail_BodyValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container43;
		/// <summary>
		/// Auxiliar Edit Record record variable
		/// </summary>
		RCDocument_ListCommunicationRecord ssEditRecord1Record = new RCDocument_ListCommunicationRecord(null);

		/// <summary>
		/// Edit Record Valid Runtime Property
		/// </summary>
		public bool wtEditRecord1_Valid() {
			bool res = true &&
			ValidationUtils.IsValid(this, "wtEmail_To") &&
			ValidationUtils.IsValid(this, "wtEmail_CC") &&
			ValidationUtils.IsValid(this, "wtEmail_BCC") &&
			ValidationUtils.IsValid(this, "wtEmail_Subject") &&
			ValidationUtils.IsValid(this, "wtEmail_Body");
			return res;
		}

		protected OutSystems.HubEdition.WebWidgets.Container wt_Container9;
		/// <summary>
		/// Variable (wt_Link4) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link4;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container117;
		/// <summary>
		/// Variable (wt_Link8) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link8;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container110;


		protected override void GetBlocksCss(TextWriter writer, bool inline, HashSet<string> visited) {
			ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor.GetCss(writer, inline, visited);
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink.GetCss(writer, inline, visited);

		}

		protected override void GetWidgetsCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}







		protected override string GetInlineStyleSheetInclude() {
			throw new InvalidOperationException();
		}





		protected override bool PageAllowsCallbacks() {
			return true;
		}


		protected string GetRequestInfoJavaScript() {
			return GetRequestInfoJavaScript("ydOFlzWrl0SxTrqYsX+aGQ", "Popup_Email");
		}

		protected string GetVisitCode() {
			SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
			if (session["osIsNewVisit"] != null && ((bool) session["osIsNewVisit"])
			// && !NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)
			&& RuntimePlatformUtils.IsValidRequestForVisit()) {
				return "<script type=\"text/javascript\">outsystems.internal.$.get(\"/CaseConferencing/_status.aspx\")</script>";
			}
			return "";
		}

		public string GetCallbackDebug() {
			if (Request.HttpMethod == "GET" && Request.QueryString["__CALLBACK_DEBUG"] != null && Request.QueryString["__CALLBACK_DEBUG"] != "") {
				if (Request.QueryString["__CALLBACK_DEBUG"] == OutSystems.HubEdition.RuntimePlatform.AppInfo.GetParameter(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Callback_Debug_Information_Key)) {
					return OutSystems.HubEdition.RuntimePlatform.AppInfo.GetAppInfo().GetCallbackDebugInformation();
				}
			}
			return "";
		}

		protected string GetHeadTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadTop, "ydOFlzWrl0SxTrqYsX+aGQ", "Popup_Email");
		}

		protected string GetHeadBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadBottom, "ydOFlzWrl0SxTrqYsX+aGQ", "Popup_Email");
		}

		protected string GetBodyTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyTop, "ydOFlzWrl0SxTrqYsX+aGQ", "Popup_Email");
		}

		protected string GetBodyBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyBottom, "ydOFlzWrl0SxTrqYsX+aGQ", "Popup_Email");
		}

		HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();



		static ScrnPopup_Email() {
		}


		Actions.lcoStudent_GetResponsible resStudent_GetResponsible = new Actions.lcoStudent_GetResponsible(); RLCommunicationRecordList queryResGetCommunicationById_outParamList = new RLCommunicationRecordList();
		int queryResGetCommunicationById_outParamCount = 0;
		RLStudentRecordList queryResGetStudentByStudentReference_outParamList = new RLStudentRecordList();
		int queryResGetStudentByStudentReference_outParamCount = 0;
		int resUserCheck_outParamPermissionType = 0;
		RLUserRecordList queryResGetUserById_outParamList = new RLUserRecordList();
		int queryResGetUserById_outParamCount = 0;
		RLCommunicationDocumentsDocumentsRecordList queryResGetDocuments_outParamList = new RLCommunicationDocumentsDocumentsRecordList();
		int queryResGetDocuments_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// UserCheck
			Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("0G0njdVIn0ucjJ6N1LzYDw")).ssId, out resUserCheck_outParamPermissionType);
			// Query datasetGetStudentByStudentReference
			int datasetGetStudentByStudentReference_maxRecords = 0;
			queryResGetStudentByStudentReference_outParamList = FuncssPreparation.datasetGetStudentByStudentReference(heContext, datasetGetStudentByStudentReference_maxRecords, IterationMultiplicity.Never, out queryResGetStudentByStudentReference_outParamCount, inParamStudentId
			);
			if ((inParamCommunicationId!=BuiltInFunction.NullIdentifier())) {
				// Query datasetGetCommunicationById
				int datasetGetCommunicationById_maxRecords = 0;
				queryResGetCommunicationById_outParamList = FuncssPreparation.datasetGetCommunicationById(heContext, datasetGetCommunicationById_maxRecords, IterationMultiplicity.Never, out queryResGetCommunicationById_outParamCount, inParamCommunicationId
				);
				ssEditRecord1Record.ssENCommunication = queryResGetCommunicationById_outParamList.CurrentRec.ssENCommunication; // EditRecord1.Record.Communication = GetCommunicationById.List.Current.Communication
				// Query datasetGetDocuments
				int datasetGetDocuments_maxRecords = 0;
				queryResGetDocuments_outParamList = FuncssPreparation.datasetGetDocuments(heContext, datasetGetDocuments_maxRecords, IterationMultiplicity.Single, out queryResGetDocuments_outParamCount, inParamCommunicationId
				);
				// Foreach GetDocuments.List
				queryResGetDocuments_outParamList.StartIteration();
				try {
					while (!queryResGetDocuments_outParamList.Eof) {
						// ListAppend2
						ExtendedActions.ListAppend(heContext, ssEditRecord1Record.ssSTDocument_List.ssDocuments, ((RCDocumentsRecord) queryResGetDocuments_outParamList.CurrentRec.ssENDocuments));
						queryResGetDocuments_outParamList.Advance();
					}
				} finally {
					queryResGetDocuments_outParamList.EndIteration();
				}

			}
			// Student_GetResponsible
			Actions.ActionStudent_GetResponsible(heContext, inParamStudentId, out resStudent_GetResponsible.outParamResponsibleName, out resStudent_GetResponsible.outParamResponsibleEmail);
			if ((resUserCheck_outParamPermissionType==BuiltInFunction.NullIdentifier())) {
				// Popup_Editor_Close2
				Actions.ActionPopup_Editor_Close(heContext);

			} else {
				// Query datasetGetUserById
				int datasetGetUserById_maxRecords = 0;
				queryResGetUserById_outParamList = FuncssPreparation.datasetGetUserById(heContext, datasetGetUserById_maxRecords, IterationMultiplicity.Never, out queryResGetUserById_outParamCount, ((int) Global.App.OsContext.Session["UserID"])
				);
				if (!((queryResGetUserById_outParamList.CurrentRec.ssENUser.ssEmail== ""))) {
					varLcEmailFrom.ssSTEmailFrom.ssname = (("Me (" +queryResGetUserById_outParamList.CurrentRec.ssENUser.ssEmail) + ")"); // EmailFrom.EmailFrom.name = "Me (" + GetUserById.List.Current.User.Email + ")"
					varLcEmailFrom.ssSTEmailFrom.ssEmailAddress = queryResGetUserById_outParamList.CurrentRec.ssENUser.ssEmail; // EmailFrom.EmailFrom.EmailAddress = GetUserById.List.Current.User.Email
					// ListAppend3
					ExtendedActions.ListAppend(heContext, varLcEmailFromList, varLcEmailFrom);

				}
				varLcEmailFrom.ssSTEmailFrom.ssname = "Cornwall College (caseconf@cornwall.ac.uk)"; // EmailFrom.EmailFrom.name = "Cornwall College (caseconf@cornwall.ac.uk)"
				varLcEmailFrom.ssSTEmailFrom.ssEmailAddress = "caseconf@cornwall.ac.uk"; // EmailFrom.EmailFrom.EmailAddress = "caseconf@cornwall.ac.uk"
				// ListAppend4
				ExtendedActions.ListAppend(heContext, varLcEmailFromList, varLcEmailFrom);

			}
		}


		protected override BaseAppUtils GetAppUtils() {
			return AppUtils.Instance;
		}

		protected override string OwnCssUrl {
			get {
				return "Popup_Email.css"; 
			}
		}

		protected override string OwnCssFile {
			get {
				return "Popup_Email.css"; 
			}
		}

		protected override string BasicCssUrl {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string BasicCssFile {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssUrl {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssFile {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssUrl {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssFile {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssUrl {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssFile {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssUrl {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssFile {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string ThemeCssUrl {
			get {
				return RsseSpaceThemeProvider.Themes.ThemeThemeProvider.ThemeCssUrl; 
			}
		}

		protected override string ThemeCssFile {
			get {
				return "ReferenceTheme.ThemeProvider.css"; 
			}
		}

		protected override string ThemeExtraCssUrl {
			get {
				return RsseSpaceRichWidgets.Themes.ThemeLondonFixed.ThemeExtraCssUrl; 
			}
		}

		protected override string ThemeExtraCssFile {
			get {
				return "ReferenceTheme.LondonFixed.extra.css"; 
			}
		}

		public override bool IsUsingMobileTheme {
			get {
				return false; 
			}
		}

		protected override string OwnJavascriptInclude {
			get {
				return ""; 
			}
		}

		public override string XUACompatibleOverride {
			get {
				return null; 
			}
		}

		protected void InitializeUrls() {
			Uri uri = new Uri((RuntimePlatformUtils.RequestIsSecure(Request) ? "https": "http") + Request.Url.ToString().Substring(Request.Url.Scheme.Length));
			string applicationUrl = AppUtils.Instance.getImagePath(/*internalAccess*/false,/*includeSessionIdIfNeeded*/ false);
			actionUrl = "";
			bookmarkableUrl = uri.GetLeftPart(UriPartial.Authority) + applicationUrl;
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			if ((inParamStudentId!= "")) {
				parameters.Add(new Pair<string, string>("StudentId", HttpUtility.UrlEncode(inParamStudentId, Request.ContentEncoding)));
			}
			if ((inParamCommunicationId!=0)) {
				parameters.Add(new Pair<string, string>("CommunicationId", HttpUtility.UrlEncode(Convert.ToString(inParamCommunicationId), Request.ContentEncoding)));
			}
			if (Request.AppRelativeCurrentExecutionFilePath.IndexOf('/', 2) == -1) {
				AppInfo appInfo = AppInfo.GetAppInfo();
				if (appInfo != null) {
					string pageHeader = appInfo.OsContext.OsISAPIFilter.GetPage(Request);
					if (appInfo.OsContext.IsCookielessSession || (pageHeader != null && pageHeader.IndexOf('/', 1) != -1)) {
						actionUrl = applicationUrl;
					}
				}
				actionUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_Email", parameters,/*useParamsOnlyIfNeededForRule*/ true);
			}
			bookmarkableUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_Email", parameters,/*useParamsOnlyIfNeededForRule*/ false);

		}

		protected override void OnInit(EventArgs e) {
			HeContext heContext = AppInfo.GetAppInfo().OsContext;
			heContext.CurrentScreen = this;
			try {
				heContext.CurrentExecutionFileName = Path.GetFileName(Request.CurrentExecutionFilePath);
			} catch {}
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wt_WebBlockInstance58 = (ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout) FindControl("wt_WebBlockInstance58");
			wt_Container61 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container61");
			wt_Container39 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container39");
			wt_Link36 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link36");
			if (this.wt_Link36 != null) {
				this.wt_Link36.Click += new System.EventHandler(this.wt_Link36_Click);
			}
			wt_Container5 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container5");
			wt_Link54 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link54");
			if (this.wt_Link54 != null) {
				this.wt_Link54.Click += new System.EventHandler(this.wt_Link54_Click);
			}
			wt_Container55 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container55");
			wt_Link52 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link52");
			if (this.wt_Link52 != null) {
				this.wt_Link52.Click += new System.EventHandler(this.wt_Link52_Click);
			}
			wt_Container107 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container107");
			wt_Container11 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container11");
			wt_Container120 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container120");
			wt_Container83 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container83");
			wt_Link89 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link89");
			if (this.wt_Link89 != null) {
				this.wt_Link89.Click += new System.EventHandler(this.wt_Link89_Click);
			}
			wt_Container93 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container93");
			wt_Link109 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link109");
			if (this.wt_Link109 != null) {
				this.wt_Link109.Click += new System.EventHandler(this.wt_Link109_Click);
			}
			wt_Container2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container2");
			wt_Link105 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link105");
			if (this.wt_Link105 != null) {
				this.wt_Link105.Click += new System.EventHandler(this.wt_Link105_Click);
			}
			wt_Container86 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container86");
			wt_Container25 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container25");
			wt_Container16 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container16");
			wt_Container14 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container14");
			wt_Link28 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link28");
			if (this.wt_Link28 != null) {
				this.wt_Link28.Click += new System.EventHandler(this.wt_Link28_Click);
			}
			wt_Container123 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container123");
			wt_Link35 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link35");
			if (this.wt_Link35 != null) {
				this.wt_Link35.Click += new System.EventHandler(this.wt_Link35_Click);
			}
			wt_Container80 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container80");
			wt_Link53 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link53");
			if (this.wt_Link53 != null) {
				this.wt_Link53.Click += new System.EventHandler(this.wt_Link53_Click);
			}
			wt_Container15 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container15");
			wt_Container50 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container50");
			wt_Container40 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container40");
			wtUpload1 = (OutSystems.HubEdition.WebWidgets.InputFile) FindControl("wtUpload1");
			wt_Button75 = (OutSystems.HubEdition.WebWidgets.Button) FindControl("wt_Button75");
			if (this.wt_Button75 != null) {
				this.wt_Button75.Click += new System.EventHandler(this.wt_Button75_Click);
			}
			wt_Container96 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container96");
			wtListRecordsAttatc = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtListRecordsAttatc");
			wtListRecordsAttatc.StartIndexExpression = () => 0;
			wtListRecordsAttatc.LineCountExpression = () => 50;
			if (this.wt_Link102 != null) {
				this.wt_Link102.Click += new System.EventHandler(this.wt_Link102_Click);
			}
			if (this.wt_Link70 != null) {
				this.wt_Link70.Click += new System.EventHandler(this.wt_Link70_Click);
			}
			wtAddTargets = (OutSystems.HubEdition.WebWidgets.Button) FindControl("wtAddTargets");
			wt_Container43 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container43");
			wt_Container9 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container9");
			wt_Link4 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link4");
			if (this.wt_Link4 != null) {
				this.wt_Link4.Click += new System.EventHandler(this.wt_Link4_Click);
			}
			wt_Container117 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container117");
			wt_Link8 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link8");
			if (this.wt_Link8 != null) {
				this.wt_Link8.Click += new System.EventHandler(this.wt_Link8_Click);
			}
			wt_Container110 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container110");
			Page.Error += new EventHandler(Page_Error);
			this.Load += new System.EventHandler(this.Page_Load);
			this.PreRender += new System.EventHandler(this.Page_PreRender);
		}

		public override Control FindControl(string id) {
			if (id == "wt_Text113") {
				return wt_WebBlockInstance58.wtTitle.FindControl("wt_Text113");
			}
			if (id == "wt_InlineExpression78") {
				return wt_WebBlockInstance58.wtTitle.FindControl("wt_InlineExpression78");
			}
			if (id == "wtWrapper") {
				return wt_WebBlockInstance58.wtContent.FindControl("wtWrapper");
			}
			if (id == "wtWrapperAjaxRfrsh") {
				return wt_WebBlockInstance58.wtContent.FindControl("wtWrapperAjaxRfrsh");
			}
			if (id == "wt_TableRow69") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableRow69");
			}
			if (id == "wt_TableCell65") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell65");
			}
			if (id == "wt_Text22") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text22");
			}
			if (id == "wt_TableCell12") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell12");
			}
			if (id == "wt_Container61") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container61");
			}
			if (id == "wt_Text76") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text76");
			}
			if (id == "wt_InlineExpression92") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_InlineExpression92");
			}
			if (id == "wt_Container39") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container39");
			}
			if (id == "wt_Link36") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Link36");
			}
			if (id == "wt_Container5") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container5");
			}
			if (id == "wt_Text106") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text106");
			}
			if (id == "wt_Link54") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Link54");
			}
			if (id == "wt_Container55") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container55");
			}
			if (id == "wt_Text21") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text21");
			}
			if (id == "wt_Link52") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Link52");
			}
			if (id == "wt_Container107") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container107");
			}
			if (id == "wt_Text98") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text98");
			}
			if (id == "wt_Container11") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container11");
			}
			if (id == "wt_If112") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_If112");
			}
			if (id == "wt_If112T") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_If112T");
			}
			if (id == "wt_Container120") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container120");
			}
			if (id == "RichWidgets_wt_WebBlockInstance63") {
				return wt_WebBlockInstance58.wtContent.FindControl("RichWidgets_wt_WebBlockInstance63");
			}
			if (id == "wt_InlineExpression6") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_InlineExpression6");
			}
			if (id == "wt_Container83") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container83");
			}
			if (id == "wt_Link89") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Link89");
			}
			if (id == "wt_Container93") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container93");
			}
			if (id == "wt_Text51") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text51");
			}
			if (id == "wt_Link109") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Link109");
			}
			if (id == "wt_Container2") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container2");
			}
			if (id == "wt_Text88") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text88");
			}
			if (id == "wt_Link105") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Link105");
			}
			if (id == "wt_Container86") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container86");
			}
			if (id == "wt_Text1") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text1");
			}
			if (id == "wt_If112F") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_If112F");
			}
			if (id == "wt_Container25") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container25");
			}
			if (id == "wt_If30") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_If30");
			}
			if (id == "wt_If30T") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_If30T");
			}
			if (id == "wt_Container16") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container16");
			}
			if (id == "RichWidgets_wt_WebBlockInstance45") {
				return wt_WebBlockInstance58.wtContent.FindControl("RichWidgets_wt_WebBlockInstance45");
			}
			if (id == "wt_InlineExpression34") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_InlineExpression34");
			}
			if (id == "wt_Container14") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container14");
			}
			if (id == "wt_Link28") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Link28");
			}
			if (id == "wt_Container123") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container123");
			}
			if (id == "wt_Text95") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text95");
			}
			if (id == "wt_Link35") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Link35");
			}
			if (id == "wt_Container80") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container80");
			}
			if (id == "wt_Text37") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text37");
			}
			if (id == "wt_Link53") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Link53");
			}
			if (id == "wt_Container15") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container15");
			}
			if (id == "wt_Text94") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text94");
			}
			if (id == "wt_If30F") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_If30F");
			}
			if (id == "wt_TableRow74") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableRow74");
			}
			if (id == "wt_TableCell31") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell31");
			}
			if (id == "wt_Text81") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text81");
			}
			if (id == "wt_TableCell66") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell66");
			}
			if (id == "wt_ComboBox121") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_ComboBox121");
			}
			if (id == "wt_TableRow68") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableRow68");
			}
			if (id == "wt_TableCell97") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell97");
			}
			if (id == "wt_Text42") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text42");
			}
			if (id == "wt_TableCell62") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell62");
			}
			if (id == "wtEmail_To") {
				return wt_WebBlockInstance58.wtContent.FindControl("wtEmail_To");
			}
			if (id == "wt_Container50") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container50");
			}
			if (id == "RichWidgets_wt_WebBlockInstance59") {
				return wt_WebBlockInstance58.wtContent.FindControl("RichWidgets_wt_WebBlockInstance59");
			}
			if (id == "wt_InlineExpression3") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_InlineExpression3");
			}
			if (id == "wt_TableRow91") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableRow91");
			}
			if (id == "wt_TableCell101") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell101");
			}
			if (id == "wt_Text125") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text125");
			}
			if (id == "wt_TableCell72") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell72");
			}
			if (id == "wtEmail_CC") {
				return wt_WebBlockInstance58.wtContent.FindControl("wtEmail_CC");
			}
			if (id == "wt_TableRow17") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableRow17");
			}
			if (id == "wt_TableCell20") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell20");
			}
			if (id == "wt_Text60") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text60");
			}
			if (id == "wt_TableCell13") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell13");
			}
			if (id == "wtEmail_BCC") {
				return wt_WebBlockInstance58.wtContent.FindControl("wtEmail_BCC");
			}
			if (id == "wt_TableRow27") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableRow27");
			}
			if (id == "wt_TableCell64") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell64");
			}
			if (id == "wt_Text44") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text44");
			}
			if (id == "wt_TableCell67") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell67");
			}
			if (id == "wtEmail_Subject") {
				return wt_WebBlockInstance58.wtContent.FindControl("wtEmail_Subject");
			}
			if (id == "wt_TableRow41") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableRow41");
			}
			if (id == "wt_TableCell104") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell104");
			}
			if (id == "wt_Text46") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text46");
			}
			if (id == "wt_TableCell100") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell100");
			}
			if (id == "wt_Container40") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container40");
			}
			if (id == "wtUpload1") {
				return wt_WebBlockInstance58.wtContent.FindControl("wtUpload1");
			}
			if (id == "wt_Button75") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Button75");
			}
			if (id == "wt_Container96") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container96");
			}
			if (id == "wtListRecordsAttatc") {
				return wt_WebBlockInstance58.wtContent.FindControl("wtListRecordsAttatc");
			}
			if (id == "wt_TableRow108") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableRow108");
			}
			if (id == "wt_TableCell56") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell56");
			}
			if (id == "wt_Text10") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text10");
			}
			if (id == "wt_TableCell122") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell122");
			}
			if (id == "wtAddTargets") {
				return wt_WebBlockInstance58.wtContent.FindControl("wtAddTargets");
			}
			if (id == "RichWidgets_wt_WebBlockInstance116") {
				return wt_WebBlockInstance58.wtContent.FindControl("RichWidgets_wt_WebBlockInstance116");
			}
			if (id == "wt_TableRow38") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableRow38");
			}
			if (id == "wt_TableCell19") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell19");
			}
			if (id == "wt_Text24") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text24");
			}
			if (id == "wt_TableCell47") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell47");
			}
			if (id == "wtEmail_Body") {
				return wt_WebBlockInstance58.wtContent.FindControl("wtEmail_Body");
			}
			if (id == "wtEmail_BodyAjaxRfrsh") {
				return wt_WebBlockInstance58.wtContent.FindControl("wtEmail_BodyAjaxRfrsh");
			}
			if (id == "wt_TableRow48") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableRow48");
			}
			if (id == "wt_TableCell118") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell118");
			}
			if (id == "wt_TableCell124") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_TableCell124");
			}
			if (id == "wt_Container43") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container43");
			}
			if (id == "wtEditRecord1") {
				return wt_WebBlockInstance58.wtContent.FindControl("wtEditRecord1");
			}
			if (id == "wt_Container9") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container9");
			}
			if (id == "Hunspell_wt_WebBlockInstance26") {
				return wt_WebBlockInstance58.wtContent.FindControl("Hunspell_wt_WebBlockInstance26");
			}
			if (id == "wt_Link4") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Link4");
			}
			if (id == "wt_Container117") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container117");
			}
			if (id == "RichWidgets_wt_WebBlockInstance87") {
				return wt_WebBlockInstance58.wtContent.FindControl("RichWidgets_wt_WebBlockInstance87");
			}
			if (id == "wt_Text103") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text103");
			}
			if (id == "wt_Link8") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Link8");
			}
			if (id == "wt_Container110") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Container110");
			}
			if (id == "wt_Text90") {
				return wt_WebBlockInstance58.wtContent.FindControl("wt_Text90");
			}

			return base.FindControl(id);
		}


		private void Page_Load(object sender, System.EventArgs e) {
			// init vars
			AppInfo appInfo = Global.App;
			if (appInfo != null) {
				heContext = appInfo.OsContext;
			}
			Response.ContentType = "text/html; charset=" + Response.ContentEncoding.WebName;
			OutSystems.HubEdition.RuntimePlatform.Web.JavaScriptManager.CheckRelativeJavaScriptPrefix(AppUtils.Instance.getImagePath());
			appInfo.IsLoadingScreen = !IsPostBack;
			((OSPageViewState) Page).EnableResetViewState();
			if (!IsPostBack) {
				ArrayList screenParameters = (ArrayList) Global.App.OsContext.Session["CaseConferencing._ScreenParameters_Popup_Email"];
				bool screenParametersInSession = false;
				object screenParametersKey = heContext.Session["_ScreenParametersKey"];
				if ((screenParametersKey == null || this.Key.Equals(ObjectKey.Parse(Convert.ToString(screenParametersKey)))) && screenParameters != null) {
					try {
						if (screenParameters.Count > 0) {
							object paramValue = screenParameters[0];
							if (paramValue != null) {
								inParamStudentId = (string) paramValue;
							}
						}
						if (screenParameters.Count > 1) {
							object paramValue = screenParameters[1];
							if (paramValue != null) {
								inParamCommunicationId = (int) paramValue;
							}
						}
						screenParametersInSession = true;
					} catch (Exception parametersException) {
						ErrorLog.LogApplicationError("Failed to load Screen Input Parameters from session.", "ScreenParametersKey = " + screenParametersKey + ", Count = " + screenParameters.Count + "\r\n" + parametersException.StackTrace, heContext, "Global");
					} finally {
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_Popup_Email"] = null;
						heContext.Session["_ScreenParametersKey"] = null;
					}
				}
				else if (Request.HttpMethod == "GET") {
					if (Request.QueryString["StudentId"] != null) {
						inParamStudentId = Request.QueryString["StudentId"];
					}
					if (Request.QueryString["CommunicationId"] != null) {
						inParamCommunicationId = Convert.ToInt32(Request.QueryString["CommunicationId"]);
					}
				}
				else if (Request.HttpMethod == "POST") {
					if (Request.Form["StudentId"] != null) {
						inParamStudentId = Request.Form["StudentId"];
					}
					if (Request.Form["CommunicationId"] != null) {
						inParamCommunicationId = Convert.ToInt32(Request.Form["CommunicationId"]);
					}
				}
			}
			if (!appInfo.IsApplicationEnabled) {
				ErrorLog.LogApplicationError(new Exception("eSpace " + appInfo.eSpaceName + " is disabled"), heContext, "Global");
				String contact = BuiltInFunction.EncodeUrl(RuntimePlatformUtils.GetAdministrationEmail());
				try {
					Server.Transfer("/customHandlers/app_offline.aspx?contact=" + contact + "&errorCode=APPLICATION_OFFLINE");
				}
				catch (System.Threading.ThreadAbortException) {}
				catch {
					Response.Redirect("/customHandlers/internalerror.aspx");
				}
			}
			InitializeUrls();
			Actions.ActionOnBeginWebRequest(heContext);
			if (!IsPostBack) {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				Preparation(heContext);
				bool bindEditRecords = !IsPostBack;
				if (bindEditRecords) {
					wtEditRecord1_onDataBindingDataSource(this.FindControl("wtEditRecord1"), null);
				}
				ssListRecordsAttatcListDoDataBind = true;
				Title = "Popup Email"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Popup_Email", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} else {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				FetchViewState();
			}

		}

		private bool _negociateTabIndexesExecuted = false;

		private void Page_PreRender(object sender, System.EventArgs e) {
			ClientScript.RegisterArrayDeclaration("OsPage_Validators", "{}");
			if (!_negociateTabIndexesExecuted) {
				NegotiateTabIndexes();
				_negociateTabIndexesExecuted = true;
			}
			foreach(Control child in this.Controls) {
				DisableViewState(child);
			}
		}

		private void NegotiateTabIndexes() {
			short tabindex=1;
			tabindex = NegotiateTabIndexes(tabindex, true);
		}

		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {
			try {
				wt_Button75 = wt_Button75 ??(OutSystems.HubEdition.WebWidgets.Button) rootCtrl.FindControl("wt_Button75");
			} catch {}
			string jsString = (wt_Button75 != null) ? "return OsEnterKey('" +wt_Button75.ClientID + "', arguments[0] || window.event)": "";

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {
						string onkeydown = ctrl.Attributes["onkeydown"];
						if (onkeydown == null)
						onkeydown = "";
						ctrl.Attributes.Add("onkeydown", onkeydown + jsString);

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}



		private void Page_Error(object sender, System.EventArgs e) {
			if (! new ssCaseConferencing.Flows.FlowLearners.ExceptionHandler(this, false).HandleException()) {
				DatabaseAccess.FreeupResources(false);
				Server.Transfer("_WebErrorPage.aspx");
			}
		}

		public override void ClearErrorHandler() {
			Error -= Page_Error;
		}

		public void CheckPermissions(HeContext heContext) {
			{
				bool check;
				ExtendedActions.CheckPLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckRegisteredRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSuperUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingBackofficeRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportPractitionerRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSafeGuardingLeadRole(heContext, 0, out check);
				if (check) return;
			}
			throw new ExcptNotPLA("PLA role required");
		}


		public ObjectKey Key {
			get {
				return ObjectKey.Parse("ydOFlzWrl0SxTrqYsX+aGQ"); 
			}
		}

		public bool isSecure {
			get {
				return true; 
			}
		}


		public class lcvSend: VarsBag {
			/// <summary>
			/// Variable <code>varLcCommunicationDocument</code> that represents the Service Studio local variable
			///  <code>CommunicationDocument</code> <p>Description: </p>
			/// </summary>
			public RCCommunicationDocumentsRecord varLcCommunicationDocument = new RCCommunicationDocumentsRecord(null);

			/// <summary>
			/// Variable <code>varLcAttatchmentRecord</code> that represents the Service Studio local variable
			///  <code>AttatchmentRecord</code> <p>Description: </p>
			/// </summary>
			public RCDocumentsRecord varLcAttatchmentRecord = new RCDocumentsRecord(null);

			public int resCreateOrUpdateCommunicationDocuments_outParamId = 0;

			public int resStudent_Email_outParamEmailId = 0;
			public int resCreateDocuments_outParamId = 0;

			public int resCreateOrUpdateCommunication_outParamId = 0;

			public int resStudentLog_Create_outParamStudentLogId = 0;

			public lcvSend() {
			}
		}
		/// <summary>
		/// Action <code>CommandSend</code> that represents the Service Studio screen action <code>Send</code>
		///  <p> Description: </p>
		/// </summary>
		private bool CommandSend(HeContext heContext) {
			CheckPermissions(heContext);
			lcvSend localVars = new lcvSend();
			try {
				ssEditRecord1Record.ssENCommunication.ssCreatedOn = BuiltInFunction.CurrDateTime(); // EditRecord1.Record.Communication.CreatedOn = CurrDateTime
				ssEditRecord1Record.ssENCommunication.ssCreatedBy = ((int) Global.App.OsContext.Session["UserID"]); // EditRecord1.Record.Communication.CreatedBy = UserID
				ssEditRecord1Record.ssENCommunication.ssStudentId = inParamStudentId; // EditRecord1.Record.Communication.StudentId = StudentId
				ssEditRecord1Record.ssENCommunication.ssTypeId = ENCommunicationTypeEntity.GetRecordByKey(ObjectKey.Parse("eHdAHuyHvU66U6DpUSBKFQ")).ssId; // EditRecord1.Record.Communication.TypeId = EMAIL
				// CreateOrUpdateCommunication
				ExtendedActions.CreateOrUpdateCommunication(heContext, ssEditRecord1Record.ssENCommunication.ChangedAttributes, ((RCCommunicationRecord) ssEditRecord1Record.ssENCommunication), out localVars.resCreateOrUpdateCommunication_outParamId);
				// (1 attach not uploaded)
				if ((ssEditRecord1Record.ssSTDocument_List.ssDocuments.Empty&&(Rt_wtUpload1.Filename!= ""))) {
					localVars.varLcAttatchmentRecord.ssENDocuments.ssDocumentName = Rt_wtUpload1.Filename; // AttatchmentRecord.Documents.DocumentName = Upload1.Filename
					localVars.varLcAttatchmentRecord.ssENDocuments.ssDocumentData = Rt_wtUpload1.Content; // AttatchmentRecord.Documents.DocumentData = Upload1.Content
					localVars.varLcAttatchmentRecord.ssENDocuments.ssDocumentType = ENDocumentTypeEntity.GetRecordByKey(ObjectKey.Parse("BCjdAILcjU2AfZmngarlFA")).ssId; // AttatchmentRecord.Documents.DocumentType = EmailAttatch
					localVars.varLcAttatchmentRecord.ssENDocuments.ssType = Rt_wtUpload1.Type; // AttatchmentRecord.Documents.Type = Upload1.Type
					// ListAppend
					ExtendedActions.ListAppend(heContext, ssEditRecord1Record.ssSTDocument_List.ssDocuments, localVars.varLcAttatchmentRecord);

				}
				// Foreach EditRecord1.Record.Document_List.Documents
				ssEditRecord1Record.ssSTDocument_List.ssDocuments.StartIteration();
				try {
					while (! ssEditRecord1Record.ssSTDocument_List.ssDocuments.Eof) {
						// CreateDocuments
						ExtendedActions.CreateDocuments(heContext, ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec, out localVars.resCreateDocuments_outParamId);
						localVars.varLcCommunicationDocument.ssENCommunicationDocuments.ssCommunicationId = localVars.resCreateOrUpdateCommunication_outParamId; // CommunicationDocument.CommunicationDocuments.CommunicationId = CreateOrUpdateCommunication.Id
						localVars.varLcCommunicationDocument.ssENCommunicationDocuments.ssDocumentId = localVars.resCreateDocuments_outParamId; // CommunicationDocument.CommunicationDocuments.DocumentId = CreateDocuments.Id
						// CreateOrUpdateCommunicationDocuments
						ExtendedActions.CreateOrUpdateCommunicationDocuments(heContext, localVars.varLcCommunicationDocument.ChangedAttributes, localVars.varLcCommunicationDocument, out localVars.resCreateOrUpdateCommunicationDocuments_outParamId);
						ssEditRecord1Record.ssSTDocument_List.ssDocuments.Advance();
					}
				} finally {
					ssEditRecord1Record.ssSTDocument_List.ssDocuments.EndIteration();
				}
				// Send Email
				localVars.resStudent_Email_outParamEmailId = EmailProcessor.SendEmailRequest("http://" + Settings.Get(Settings.Configs.InternalAddress) + AppUtils.Instance.getImagePath(/*internalAccess*/true) + "Student_Email.aspx?" + "CommunicationId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(localVars.resCreateOrUpdateCommunication_outParamId)), "", ssEditRecord1Record.ssENCommunication.ssTo, ssEditRecord1Record.ssENCommunication.ssCC, ssEditRecord1Record.ssENCommunication.ssBCC, 0, heContext.Session.TenantId, false, EmailProcessor.EmailType.Normal);
				// StudentLog_Create
				Actions.ActionStudentLog_Create(heContext, inParamStudentId, ((int) Global.App.OsContext.Session["UserID"]), ssEditRecord1Record.ssENCommunication.ssSubject, ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("Pg85AtQxr0yCEjiVoW0wLA")).ssLogType, ssEditRecord1Record.ssENCommunication.ssSubject, BuiltInFunction.NullTextIdentifier(), false, 0, "Email", "", 0, localVars.resCreateOrUpdateCommunication_outParamId, "", 0, out localVars.resStudentLog_Create_outParamStudentLogId);
				// Popup_Editor_Notify
				Actions.ActionPopup_Editor_Notify(heContext, "EMAIL");
				// Popup_Editor_Close
				Actions.ActionPopup_Editor_Close(heContext);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvSelect: VarsBag {
			public string inParamType;
			public int inParamEmailType;
			public lcvSelect(string inParamType, int inParamEmailType) {
				this.inParamType = inParamType;
				this.inParamEmailType = inParamEmailType;
			}
		}
		/// <summary>
		/// Action <code>CommandSelect</code> that represents the Service Studio screen action
		///  <code>Select</code> <p> Description: </p>
		/// </summary>
		private bool CommandSelect(HeContext heContext, string inParamType, int inParamEmailType) {
			CheckPermissions(heContext);
			lcvSelect localVars = new lcvSelect(inParamType, inParamEmailType);
			try {
				if ((localVars.inParamEmailType==1)) {
					if ((localVars.inParamType== "TO")) {
						// To
						ssEditRecord1Record.ssENCommunication.ssTo = (((ssEditRecord1Record.ssENCommunication.ssTo== "")) ?(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress):(((ssEditRecord1Record.ssENCommunication.ssTo+ ",") +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress))); // EditRecord1.Record.Communication.To = internalIf

					} else {
						if ((localVars.inParamType== "CC")) {
							// CC
							ssEditRecord1Record.ssENCommunication.ssCC = (((ssEditRecord1Record.ssENCommunication.ssCC== "")) ?(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress):(((ssEditRecord1Record.ssENCommunication.ssCC+ ",") +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress))); // EditRecord1.Record.Communication.CC = internalIf

						} else {
							if ((localVars.inParamType== "BCC")) {
								// BCC
								ssEditRecord1Record.ssENCommunication.ssBCC = (((ssEditRecord1Record.ssENCommunication.ssBCC== "")) ?(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress):(((ssEditRecord1Record.ssENCommunication.ssBCC+ ",") +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress))); // EditRecord1.Record.Communication.BCC = internalIf

							}

						}

					}

				} else {
					if ((localVars.inParamEmailType==2)) {
						if ((localVars.inParamType== "TO")) {
							// To
							ssEditRecord1Record.ssENCommunication.ssTo = (((ssEditRecord1Record.ssENCommunication.ssTo== "")) ?(resStudent_GetResponsible.outParamResponsibleEmail):(((ssEditRecord1Record.ssENCommunication.ssTo+ ",") +resStudent_GetResponsible.outParamResponsibleEmail))); // EditRecord1.Record.Communication.To = internalIf

						} else {
							if ((localVars.inParamType== "CC")) {
								// CC
								ssEditRecord1Record.ssENCommunication.ssCC = (((ssEditRecord1Record.ssENCommunication.ssCC== "")) ?(resStudent_GetResponsible.outParamResponsibleEmail):(((ssEditRecord1Record.ssENCommunication.ssCC+ ",") +resStudent_GetResponsible.outParamResponsibleEmail))); // EditRecord1.Record.Communication.CC = internalIf

							} else {
								if ((localVars.inParamType== "BCC")) {
									// BCC
									ssEditRecord1Record.ssENCommunication.ssBCC = (((ssEditRecord1Record.ssENCommunication.ssBCC== "")) ?(resStudent_GetResponsible.outParamResponsibleEmail):(((ssEditRecord1Record.ssENCommunication.ssBCC+ ",") +resStudent_GetResponsible.outParamResponsibleEmail))); // EditRecord1.Record.Communication.BCC = internalIf

								}

							}

						}

					} else {
						if ((localVars.inParamEmailType==3)) {
							if ((localVars.inParamType== "TO")) {
								// To
								ssEditRecord1Record.ssENCommunication.ssTo = (((ssEditRecord1Record.ssENCommunication.ssTo== "")) ?(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinEmail):(((ssEditRecord1Record.ssENCommunication.ssTo+ ",") +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinEmail))); // EditRecord1.Record.Communication.To = internalIf

							} else {
								if ((localVars.inParamType== "CC")) {
									// CC
									ssEditRecord1Record.ssENCommunication.ssCC = (((ssEditRecord1Record.ssENCommunication.ssCC== "")) ?(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinEmail):(((ssEditRecord1Record.ssENCommunication.ssCC+ ",") +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinEmail))); // EditRecord1.Record.Communication.CC = internalIf

								} else {
									if ((localVars.inParamType== "BCC")) {
										// BCC
										ssEditRecord1Record.ssENCommunication.ssBCC = (((ssEditRecord1Record.ssENCommunication.ssBCC== "")) ?(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinEmail):(((ssEditRecord1Record.ssENCommunication.ssBCC+ ",") +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinEmail))); // EditRecord1.Record.Communication.BCC = internalIf

									}

								}

							}

						} else {
							if ((localVars.inParamType== "TO")) {
								// To
								ssEditRecord1Record.ssENCommunication.ssTo = (((ssEditRecord1Record.ssENCommunication.ssTo== "")) ?(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress):(((ssEditRecord1Record.ssENCommunication.ssTo+ ",") +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress))); // EditRecord1.Record.Communication.To = internalIf

							} else {
								if ((localVars.inParamType== "CC")) {
									// CC
									ssEditRecord1Record.ssENCommunication.ssCC = (((ssEditRecord1Record.ssENCommunication.ssCC== "")) ?(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress):(((ssEditRecord1Record.ssENCommunication.ssCC+ ",") +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress))); // EditRecord1.Record.Communication.CC = internalIf

								} else {
									if ((localVars.inParamType== "BCC")) {
										// BCC
										ssEditRecord1Record.ssENCommunication.ssBCC = (((ssEditRecord1Record.ssENCommunication.ssBCC== "")) ?(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress):(((ssEditRecord1Record.ssENCommunication.ssBCC+ ",") +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress))); // EditRecord1.Record.Communication.BCC = internalIf

									}

								}

							}

						}

					}

				}
				// Refresh Widget (wtWrapper)
				ssListRecordsAttatcListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtWrapperAjaxRfrsh"), "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandDelete</code> that represents the Service Studio screen action
		///  <code>Delete</code> <p> Description: </p>
		/// </summary>
		private bool CommandDelete(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// ListRemove
				ExtendedActions.ListRemove(heContext, ssEditRecord1Record.ssSTDocument_List.ssDocuments, getWtListRecordsAttatcList().CurrentRowNumber);
				// Refresh Widget (wtListRecordsAttatc)
				ssListRecordsAttatcListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtListRecordsAttatc, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOnAddedTargetsNotify: VarsBag {
			public string resNotifyWidgetGetMessage_outParamMessage = "";

			public RLTextRecordList resString_Split_outParamList = new RLTextRecordList();

			public lcvOnAddedTargetsNotify() {
			}
		}
		/// <summary>
		/// Action <code>CommandOnAddedTargetsNotify</code> that represents the Service Studio screen action
		///  <code>OnAddedTargetsNotify</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnAddedTargetsNotify(HeContext heContext) {
			CheckPermissions(heContext);
			lcvOnAddedTargetsNotify localVars = new lcvOnAddedTargetsNotify();
			try {
				varLcCounter = 1; // Counter = 1
				// NotifyWidgetGetMessage
				ExtendedActions.NotifyWidgetGetMessage(heContext, out localVars.resNotifyWidgetGetMessage_outParamMessage);
				// String_Split
				Actions.ActionString_Split(heContext, localVars.resNotifyWidgetGetMessage_outParamMessage, "|", out localVars.resString_Split_outParamList);
				// Foreach String_Split.List
				localVars.resString_Split_outParamList.StartIteration();
				try {
					while (! localVars.resString_Split_outParamList.Eof) {
						ssEditRecord1Record.ssENCommunication.ssBody = ((((ssEditRecord1Record.ssENCommunication.ssBody+ "\r\n") +Convert.ToString(varLcCounter)) + ") ") +localVars.resString_Split_outParamList.CurrentRec.ssSTText.ssValue); // EditRecord1.Record.Communication.Body = EditRecord1.Record.Communication.Body + NewLine + Counter + ") " +
						// String_Split.List.Current.Text.Value
						varLcCounter = (varLcCounter+1); // Counter = Counter + 1
						localVars.resString_Split_outParamList.Advance();
					}
				} finally {
					localVars.resString_Split_outParamList.EndIteration();
				}
				// Refresh Widget (wtEmail_Body)
				((OSPageViewState) Page).AjaxRefresh(this.FindControl("wtEmail_BodyAjaxRfrsh"), "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvUpload: VarsBag {
			/// <summary>
			/// Variable <code>varLcAttatchmentRecord</code> that represents the Service Studio local variable
			///  <code>AttatchmentRecord</code> <p>Description: </p>
			/// </summary>
			public RCDocumentsRecord varLcAttatchmentRecord = new RCDocumentsRecord(null);

			public lcvUpload() {
			}
		}
		/// <summary>
		/// Action <code>CommandUpload</code> that represents the Service Studio screen action
		///  <code>Upload</code> <p> Description: </p>
		/// </summary>
		private bool CommandUpload(HeContext heContext) {
			CheckPermissions(heContext);
			lcvUpload localVars = new lcvUpload();
			try {
				if ((Rt_wtUpload1.Filename!= "")) {
					localVars.varLcAttatchmentRecord.ssENDocuments.ssDocumentName = Rt_wtUpload1.Filename; // AttatchmentRecord.Documents.DocumentName = Upload1.Filename
					localVars.varLcAttatchmentRecord.ssENDocuments.ssDocumentData = Rt_wtUpload1.Content; // AttatchmentRecord.Documents.DocumentData = Upload1.Content
					localVars.varLcAttatchmentRecord.ssENDocuments.ssDocumentType = ENDocumentTypeEntity.GetRecordByKey(ObjectKey.Parse("BCjdAILcjU2AfZmngarlFA")).ssId; // AttatchmentRecord.Documents.DocumentType = EmailAttatch
					localVars.varLcAttatchmentRecord.ssENDocuments.ssType = Rt_wtUpload1.Type; // AttatchmentRecord.Documents.Type = Upload1.Type
					// ListAppend
					ExtendedActions.ListAppend(heContext, ssEditRecord1Record.ssSTDocument_List.ssDocuments, localVars.varLcAttatchmentRecord);
					// Refresh Widget (wtListRecordsAttatc)
					ssListRecordsAttatcListDoDataBind = true;
					((OSPageViewState) Page).AjaxRefresh(wtListRecordsAttatc, "None", StoreViewState);
					// Update Screen
					return true;

				} else {
					// Update Screen
					return true;

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandDownload</code> that represents the Service Studio screen action
		///  <code>Download</code> <p> Description: </p>
		/// </summary>
		private bool CommandDownload(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Download Download2
				Response.ClearContent();
				string md5Hash_Download2;
				md5Hash_Download2 = OutSystems.RuntimeCommon.Cryptography.Insecure.MD5HashHelper.Hash(getWtListRecordsAttatcList().CurrentRec.ssENDocuments.ssDocumentData);
				Response.ContentType = getWtListRecordsAttatcList().CurrentRec.ssENDocuments.ssType;
				Response.AppendHeader("ETag", "\"" + md5Hash_Download2 + "\"");
				Response.AppendHeader("Content-MD5", md5Hash_Download2);
				Response.AppendHeader("Accept-Ranges", "none");
				string filenameDownload2 = RuntimePlatformUtils.EscapeFilenameForDownload(getWtListRecordsAttatcList().CurrentRec.ssENDocuments.ssDocumentName);
				// Only Internet Explorer needs to escape the text of filename, except blank spaces.
				if (Request.Browser.Browser == "IE") {
					filenameDownload2 = RuntimePlatformUtils.EncodeFilenameForDownload(filenameDownload2);
				}
				Response.AppendHeader("Content-Disposition", "attachment; filename=\"" +filenameDownload2+ "\"");
				byte[] downloadDownload2FileContent = getWtListRecordsAttatcList().CurrentRec.ssENDocuments.ssDocumentData;

				if (downloadDownload2FileContent.Length > 0) {
					if ((Request.UserAgent?? "").ToLower().Contains("android")) {
						string guid = Guid.NewGuid().ToString();
						System.Web.UI.Triplet file_info = new System.Web.UI.Triplet();
						file_info.First = getWtListRecordsAttatcList().CurrentRec.ssENDocuments.ssType;
						file_info.Second = getWtListRecordsAttatcList().CurrentRec.ssENDocuments.ssDocumentData;
						file_info.Third = DateTime.Now;
						if (Session["AndroidDownloads"] == null)
						Session["AndroidDownloads"] = new Hashtable();
						((Hashtable) Session["AndroidDownloads"])[guid] = file_info;
						string protocolAndHost = (RuntimePlatformUtils.RequestIsSecure(Request) ? "https://": "http://") + Request.Url.Host;
						RuntimePlatformUtils.RedirectAndroidDownloadToExternalPage(protocolAndHost + (RuntimePlatformUtils.RequestIsSecure(Request) ? "": "") + AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false) + "_download.aspx/" + guid + "/" + RuntimePlatformUtils.EscapeFilenameForDownload(getWtListRecordsAttatcList().CurrentRec.ssENDocuments.ssDocumentName));
					} else {
						Response.AppendHeader("Content-Length", downloadDownload2FileContent.Length.ToString());
						Response.BinaryWrite(downloadDownload2FileContent);
					}
				} else {
					Response.AppendHeader("Content-Length", "0");
				}

				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Popup_Email", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
				Response.End();
				return false;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandClose</code> that represents the Service Studio screen action
		///  <code>Close</code> <p> Description: </p>
		/// </summary>
		private bool CommandClose(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Popup_Editor_Close
				Actions.ActionPopup_Editor_Close(heContext);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// wt_WebBlockInstance58 Functions
		/// </summary>
		public void webBlck_WebBlockInstance58_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout widget = (ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout) sender;
			widget.inParamWidth = 568;
		}
		/// <summary>
		/// wt_InlineExpression78 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = eNglm+L5Xke_6n3n8U+dmg) Expression:
		///  GetStudentByStudentReference.List.Current.Student.Forenames + " "
		/// + GetStudentByStudentReference.List.Current.Student.Surname
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression78() {
			return ((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssForenames+ " ") +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssSurname);
		}
		/// <summary>
		/// wt_TableRow69 Functions
		/// </summary>
		public void wt_TableRow69_onDataBinding(object sender, System.EventArgs e) {
			wt_TableRow69_setInlineAttributes(sender, e);
		}
		public string wt_TableRow69_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = (((inParamCommunicationId!=BuiltInFunction.NullIdentifier())) ?("display:none"):(""));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container61 Functions
		/// </summary>
		public void cnt_Container61_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container61_setInlineAttributes(sender, e);
		}
		public string cnt_Container61_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container61_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container61)
		/// </summary>
		/// <returns>The Visible State of wt_Container61</returns>
		public bool cnt_Container61_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression92 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 8ukFxLmhlkqhDoBDoh0IBg) Expression:
		///  GetStudentByStudentReference.List.Current.Student.EmailAddress
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression92() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress;
		}
		/// <summary>
		/// wt_Container39 Functions
		/// </summary>
		public void cnt_Container39_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container39_setInlineAttributes(sender, e);
		}
		public string cnt_Container39_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container39_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container39)
		/// </summary>
		/// <returns>The Visible State of wt_Container39</returns>
		public bool cnt_Container39_isVisible() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier());
		}

		/// <summary>
		/// wt_Link36 Functions
		/// </summary>
		public void lnk_Link36_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link36_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandSelect(heContext, "TO", 1)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link36)
		/// </summary>
		/// <returns>title of the Link (wt_Link36)</returns>
		public string
		lnk_Link36_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link36)
		/// </summary>
		/// <returns>The Visible State of wt_Link36</returns>
		public bool lnk_Link36_isVisible() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier());
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link36)
		/// </summary>
		/// <returns>The Enabled State of wt_Link36</returns>
		public bool lnk_Link36_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container5 Functions
		/// </summary>
		public void cnt_Container5_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container5_setInlineAttributes(sender, e);
		}
		public string cnt_Container5_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container5_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container5)
		/// </summary>
		/// <returns>The Visible State of wt_Container5</returns>
		public bool cnt_Container5_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link54 Functions
		/// </summary>
		public void lnk_Link54_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link54_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandSelect(heContext, "CC", 1)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link54)
		/// </summary>
		/// <returns>title of the Link (wt_Link54)</returns>
		public string
		lnk_Link54_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link54)
		/// </summary>
		/// <returns>The Visible State of wt_Link54</returns>
		public bool lnk_Link54_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link54)
		/// </summary>
		/// <returns>The Enabled State of wt_Link54</returns>
		public bool lnk_Link54_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container55 Functions
		/// </summary>
		public void cnt_Container55_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container55_setInlineAttributes(sender, e);
		}
		public string cnt_Container55_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container55_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container55)
		/// </summary>
		/// <returns>The Visible State of wt_Container55</returns>
		public bool cnt_Container55_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link52 Functions
		/// </summary>
		public void lnk_Link52_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link52_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandSelect(heContext, "BCC", 1)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link52)
		/// </summary>
		/// <returns>title of the Link (wt_Link52)</returns>
		public string
		lnk_Link52_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link52)
		/// </summary>
		/// <returns>The Visible State of wt_Link52</returns>
		public bool lnk_Link52_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link52)
		/// </summary>
		/// <returns>The Enabled State of wt_Link52</returns>
		public bool lnk_Link52_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container107 Functions
		/// </summary>
		public void cnt_Container107_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container107_setInlineAttributes(sender, e);
		}
		public string cnt_Container107_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container107_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container107)
		/// </summary>
		/// <returns>The Visible State of wt_Container107</returns>
		public bool cnt_Container107_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container11 Functions
		/// </summary>
		public void cnt_Container11_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container11_setInlineAttributes(sender, e);
		}
		public string cnt_Container11_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Personal Tutor email" .ToString());
			if (!cnt_Container11_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container11)
		/// </summary>
		/// <returns>The Visible State of wt_Container11</returns>
		public bool cnt_Container11_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If112 Functions
		/// </summary>
		bool if_wt_If112_hasRun=false;
		bool if_wt_If112_evalResult;
		public bool if_wt_If112() {
			if (if_wt_If112_hasRun) {
				if_wt_If112_hasRun = false;
				return if_wt_If112_evalResult;
			}
			if_wt_If112_hasRun = true;
			if_wt_If112_evalResult = (resStudent_GetResponsible.outParamResponsibleName!= "");
			return if_wt_If112_evalResult;
		}

		/// <summary>
		/// wt_Container120 Functions
		/// </summary>
		public void cnt_Container120_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container120_setInlineAttributes(sender, e);
		}
		public string cnt_Container120_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container120_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container120)
		/// </summary>
		/// <returns>The Visible State of wt_Container120</returns>
		public bool cnt_Container120_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance63 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance63_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("K9DJBwKg_UiFdMvJh2FEqw")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression6 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = LL_6C6Sq002mbjcZLE628g) Expression: "Personal Tutor : " +
		///  Student_GetResponsible.ResponsibleEmail
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression6() {
			return ("Personal Tutor : " +resStudent_GetResponsible.outParamResponsibleEmail);
		}
		/// <summary>
		/// wt_Container83 Functions
		/// </summary>
		public void cnt_Container83_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container83_setInlineAttributes(sender, e);
		}
		public string cnt_Container83_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container83_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container83)
		/// </summary>
		/// <returns>The Visible State of wt_Container83</returns>
		public bool cnt_Container83_isVisible() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier());
		}

		/// <summary>
		/// wt_Link89 Functions
		/// </summary>
		public void lnk_Link89_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link89_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandSelect(heContext, "TO", 2)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link89)
		/// </summary>
		/// <returns>title of the Link (wt_Link89)</returns>
		public string
		lnk_Link89_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link89)
		/// </summary>
		/// <returns>The Visible State of wt_Link89</returns>
		public bool lnk_Link89_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link89)
		/// </summary>
		/// <returns>The Enabled State of wt_Link89</returns>
		public bool lnk_Link89_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container93 Functions
		/// </summary>
		public void cnt_Container93_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container93_setInlineAttributes(sender, e);
		}
		public string cnt_Container93_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container93_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container93)
		/// </summary>
		/// <returns>The Visible State of wt_Container93</returns>
		public bool cnt_Container93_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link109 Functions
		/// </summary>
		public void lnk_Link109_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link109_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandSelect(heContext, "CC", 2)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link109)
		/// </summary>
		/// <returns>title of the Link (wt_Link109)</returns>
		public string
		lnk_Link109_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link109)
		/// </summary>
		/// <returns>The Visible State of wt_Link109</returns>
		public bool lnk_Link109_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link109)
		/// </summary>
		/// <returns>The Enabled State of wt_Link109</returns>
		public bool lnk_Link109_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container2 Functions
		/// </summary>
		public void cnt_Container2_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container2_setInlineAttributes(sender, e);
		}
		public string cnt_Container2_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container2)
		/// </summary>
		/// <returns>The Visible State of wt_Container2</returns>
		public bool cnt_Container2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link105 Functions
		/// </summary>
		public void lnk_Link105_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link105_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandSelect(heContext, "BCC", 2)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link105)
		/// </summary>
		/// <returns>title of the Link (wt_Link105)</returns>
		public string
		lnk_Link105_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link105)
		/// </summary>
		/// <returns>The Visible State of wt_Link105</returns>
		public bool lnk_Link105_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link105)
		/// </summary>
		/// <returns>The Enabled State of wt_Link105</returns>
		public bool lnk_Link105_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container86 Functions
		/// </summary>
		public void cnt_Container86_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container86_setInlineAttributes(sender, e);
		}
		public string cnt_Container86_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container86_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container86)
		/// </summary>
		/// <returns>The Visible State of wt_Container86</returns>
		public bool cnt_Container86_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container25 Functions
		/// </summary>
		public void cnt_Container25_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container25_setInlineAttributes(sender, e);
		}
		public string cnt_Container25_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Personal Tutor email" .ToString());
			if (!cnt_Container25_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container25)
		/// </summary>
		/// <returns>The Visible State of wt_Container25</returns>
		public bool cnt_Container25_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If30 Functions
		/// </summary>
		bool if_wt_If30_hasRun=false;
		bool if_wt_If30_evalResult;
		public bool if_wt_If30() {
			if (if_wt_If30_hasRun) {
				if_wt_If30_hasRun = false;
				return if_wt_If30_evalResult;
			}
			if_wt_If30_hasRun = true;
			if_wt_If30_evalResult = (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinEmail!= "");
			return if_wt_If30_evalResult;
		}

		/// <summary>
		/// wt_Container16 Functions
		/// </summary>
		public void cnt_Container16_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container16_setInlineAttributes(sender, e);
		}
		public string cnt_Container16_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container16_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container16)
		/// </summary>
		/// <returns>The Visible State of wt_Container16</returns>
		public bool cnt_Container16_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance45 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance45_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("F0OdMTnS+E63CzTzGXJvyg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression34 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = fE2vROpBC0WaIfOd4AxoCw) Expression: "NOK : " +
		///  GetStudentByStudentReference.List.Current.Student.NextOfKinEmail
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression34() {
			return ("NOK : " +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinEmail);
		}
		/// <summary>
		/// wt_Container14 Functions
		/// </summary>
		public void cnt_Container14_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container14_setInlineAttributes(sender, e);
		}
		public string cnt_Container14_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container14_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container14)
		/// </summary>
		/// <returns>The Visible State of wt_Container14</returns>
		public bool cnt_Container14_isVisible() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier());
		}

		/// <summary>
		/// wt_Link28 Functions
		/// </summary>
		public void lnk_Link28_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link28_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandSelect(heContext, "TO", 3)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link28)
		/// </summary>
		/// <returns>title of the Link (wt_Link28)</returns>
		public string
		lnk_Link28_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link28)
		/// </summary>
		/// <returns>The Visible State of wt_Link28</returns>
		public bool lnk_Link28_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link28)
		/// </summary>
		/// <returns>The Enabled State of wt_Link28</returns>
		public bool lnk_Link28_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container123 Functions
		/// </summary>
		public void cnt_Container123_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container123_setInlineAttributes(sender, e);
		}
		public string cnt_Container123_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container123_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container123)
		/// </summary>
		/// <returns>The Visible State of wt_Container123</returns>
		public bool cnt_Container123_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link35 Functions
		/// </summary>
		public void lnk_Link35_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link35_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandSelect(heContext, "CC", 3)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link35)
		/// </summary>
		/// <returns>title of the Link (wt_Link35)</returns>
		public string
		lnk_Link35_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link35)
		/// </summary>
		/// <returns>The Visible State of wt_Link35</returns>
		public bool lnk_Link35_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link35)
		/// </summary>
		/// <returns>The Enabled State of wt_Link35</returns>
		public bool lnk_Link35_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container80 Functions
		/// </summary>
		public void cnt_Container80_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container80_setInlineAttributes(sender, e);
		}
		public string cnt_Container80_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container80_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container80)
		/// </summary>
		/// <returns>The Visible State of wt_Container80</returns>
		public bool cnt_Container80_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link53 Functions
		/// </summary>
		public void lnk_Link53_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link53_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandSelect(heContext, "BCC", 3)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link53)
		/// </summary>
		/// <returns>title of the Link (wt_Link53)</returns>
		public string
		lnk_Link53_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link53)
		/// </summary>
		/// <returns>The Visible State of wt_Link53</returns>
		public bool lnk_Link53_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link53)
		/// </summary>
		/// <returns>The Enabled State of wt_Link53</returns>
		public bool lnk_Link53_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container15 Functions
		/// </summary>
		public void cnt_Container15_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container15_setInlineAttributes(sender, e);
		}
		public string cnt_Container15_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container15_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container15)
		/// </summary>
		/// <returns>The Visible State of wt_Container15</returns>
		public bool cnt_Container15_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_ComboBox121 Functions
		/// </summary>
		public void sel_ComboBox121_onDataBinding(object sender, System.EventArgs e) {
			if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

			RLEmailFromRecordList Rt_wt_ComboBox121_reclist = varLcEmailFromList;
			Rt_wt_ComboBox121_reclist.StartIteration();
			try {
				while (!Rt_wt_ComboBox121_reclist.Eof) {
					((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wt_ComboBox121_reclist.CurrentRec.ssSTEmailFrom.ssname, Rt_wt_ComboBox121_reclist.CurrentRec.ssSTEmailFrom.ssEmailAddress));
					if (ssEditRecord1Record.ssENCommunication.ssFrom == Convert.ToString(Rt_wt_ComboBox121_reclist.CurrentRec.ssSTEmailFrom.ssEmailAddress)) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
					}
					Rt_wt_ComboBox121_reclist.Advance();
				}
			} finally {
				Rt_wt_ComboBox121_reclist.EndIteration();
			}
		}
		public void sel_ComboBox121_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wt_ComboBox121.SpecialListVal = dropDown.SelectedValue.Substring(8);
				ssEditRecord1Record.ssENCommunication.ssFrom = "";
			}
			else {
				Rt_wt_ComboBox121.SpecialListVal = "";
				try {
					ssEditRecord1Record.ssENCommunication.ssFrom = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_ComboBox121)
		/// </summary>
		/// <returns>The Visible State of wt_ComboBox121</returns>
		public bool sel_ComboBox121_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_ComboBox121)
		/// </summary>
		/// <returns>The Enabled State of wt_ComboBox121</returns>
		public bool sel_ComboBox121_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (sel_ComboBox121)
		/// </summary>
		/// <returns>The Mandatory Value of sel_ComboBox121</returns>
		public bool sel_ComboBox121_isMandatory() {
			return false;
		}

		/// <summary>
		/// wtEmail_To Functions
		/// </summary>
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtEmail_To_input_value() {
			if (("" !=ssEditRecord1Record.ssENCommunication.ssTo)) {
				return ssEditRecord1Record.ssENCommunication.ssTo;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtEmail_To");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return ssEditRecord1Record.ssENCommunication.ssTo;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtEmail_To_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					ssEditRecord1Record.ssENCommunication.ssTo = ""; 
				} else {
					ssEditRecord1Record.ssENCommunication.ssTo = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				ssEditRecord1Record.ssENCommunication.ssTo = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtEmail_To)
		/// </summary>
		/// <returns>The Visible State of wtEmail_To</returns>
		public bool inputwtEmail_To_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtEmail_To)
		/// </summary>
		/// <returns>The Enabled State of wtEmail_To</returns>
		public bool inputwtEmail_To_isEnabled() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier()); 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtEmail_To)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtEmail_To</returns>
		public bool inputwtEmail_To_isMandatory() {
			return false;
		}

		/// <summary>
		/// Gets the prompt of the input (wtEmail_To)
		/// </summary>
		/// <returns>Prompt of the Input (wtEmail_To)</returns>
		public string inputwtEmail_To_getPrompt() {
			return "To";
		}
		/// <summary>
		/// wt_Container50 Functions
		/// </summary>
		public void cnt_Container50_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container50_setInlineAttributes(sender, e);
		}
		public string cnt_Container50_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-top:-10px;font-size:9px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container50_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container50)
		/// </summary>
		/// <returns>The Visible State of wt_Container50</returns>
		public bool cnt_Container50_isVisible() {
			return (inParamCommunicationId!=BuiltInFunction.NullIdentifier());
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance59 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance59_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("udf3KzMThUu3S4Cv7YMEqA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression3 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = lGxuB0fnsESczjdLs9QEjw) Expression: "(emails separator ',' )"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression3() {
			return "(emails separator \',\' )";
		}
		/// <summary>
		/// wtEmail_CC Functions
		/// </summary>
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtEmail_CC_input_value() {
			if (("" !=ssEditRecord1Record.ssENCommunication.ssCC)) {
				return ssEditRecord1Record.ssENCommunication.ssCC;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtEmail_CC");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return ssEditRecord1Record.ssENCommunication.ssCC;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtEmail_CC_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					ssEditRecord1Record.ssENCommunication.ssCC = ""; 
				} else {
					ssEditRecord1Record.ssENCommunication.ssCC = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				ssEditRecord1Record.ssENCommunication.ssCC = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtEmail_CC)
		/// </summary>
		/// <returns>The Visible State of wtEmail_CC</returns>
		public bool inputwtEmail_CC_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtEmail_CC)
		/// </summary>
		/// <returns>The Enabled State of wtEmail_CC</returns>
		public bool inputwtEmail_CC_isEnabled() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier()); 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtEmail_CC)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtEmail_CC</returns>
		public bool inputwtEmail_CC_isMandatory() {
			return false;
		}

		/// <summary>
		/// Gets the prompt of the input (wtEmail_CC)
		/// </summary>
		/// <returns>Prompt of the Input (wtEmail_CC)</returns>
		public string inputwtEmail_CC_getPrompt() {
			return "CC";
		}
		/// <summary>
		/// wtEmail_BCC Functions
		/// </summary>
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtEmail_BCC_input_value() {
			if (("" !=ssEditRecord1Record.ssENCommunication.ssBCC)) {
				return ssEditRecord1Record.ssENCommunication.ssBCC;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtEmail_BCC");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return ssEditRecord1Record.ssENCommunication.ssBCC;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtEmail_BCC_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					ssEditRecord1Record.ssENCommunication.ssBCC = ""; 
				} else {
					ssEditRecord1Record.ssENCommunication.ssBCC = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				ssEditRecord1Record.ssENCommunication.ssBCC = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtEmail_BCC)
		/// </summary>
		/// <returns>The Visible State of wtEmail_BCC</returns>
		public bool inputwtEmail_BCC_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtEmail_BCC)
		/// </summary>
		/// <returns>The Enabled State of wtEmail_BCC</returns>
		public bool inputwtEmail_BCC_isEnabled() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier()); 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtEmail_BCC)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtEmail_BCC</returns>
		public bool inputwtEmail_BCC_isMandatory() {
			return false;
		}

		/// <summary>
		/// Gets the prompt of the input (wtEmail_BCC)
		/// </summary>
		/// <returns>Prompt of the Input (wtEmail_BCC)</returns>
		public string inputwtEmail_BCC_getPrompt() {
			return "Bcc";
		}
		/// <summary>
		/// wtEmail_Subject Functions
		/// </summary>
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtEmail_Subject_input_value() {
			if (("" !=ssEditRecord1Record.ssENCommunication.ssSubject)) {
				return ssEditRecord1Record.ssENCommunication.ssSubject;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtEmail_Subject");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return ssEditRecord1Record.ssENCommunication.ssSubject;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtEmail_Subject_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					ssEditRecord1Record.ssENCommunication.ssSubject = ""; 
				} else {
					ssEditRecord1Record.ssENCommunication.ssSubject = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				ssEditRecord1Record.ssENCommunication.ssSubject = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtEmail_Subject)
		/// </summary>
		/// <returns>The Visible State of wtEmail_Subject</returns>
		public bool inputwtEmail_Subject_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtEmail_Subject)
		/// </summary>
		/// <returns>The Enabled State of wtEmail_Subject</returns>
		public bool inputwtEmail_Subject_isEnabled() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier()); 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtEmail_Subject)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtEmail_Subject</returns>
		public bool inputwtEmail_Subject_isMandatory() {
			return true;
		}

		/// <summary>
		/// Gets the prompt of the input (wtEmail_Subject)
		/// </summary>
		/// <returns>Prompt of the Input (wtEmail_Subject)</returns>
		public string inputwtEmail_Subject_getPrompt() {
			return "Subject";
		}
		/// <summary>
		/// wt_Container40 Functions
		/// </summary>
		public void cnt_Container40_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container40_setInlineAttributes(sender, e);
		}
		public string cnt_Container40_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container40_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container40)
		/// </summary>
		/// <returns>The Visible State of wt_Container40</returns>
		public bool cnt_Container40_isVisible() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier());
		}

		/// <summary>
		/// wtUpload1 Functions
		/// </summary>
		/// <summary>
		/// Gets the visible state of component (wtUpload1)
		/// </summary>
		/// <returns>The Visible State of wtUpload1</returns>
		public bool inputFileUpload1_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtUpload1)
		/// </summary>
		/// <returns>The Enabled State of wtUpload1</returns>
		public bool inputFileUpload1_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Button75 Functions
		/// </summary>
		/// <summary>
		/// Action to be taken at a Button submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Button75_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), true);
			if (CommandUpload(heContext)) {
				doRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the label of the button (wt_Button75)
		/// </summary>
		/// <returns>Label of the Button (wt_Button75)</returns>
		public string
		btn_Button75_getLabel() {
			return "Upload";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Button75)
		/// </summary>
		/// <returns>The Visible State of wt_Button75</returns>
		public bool btn_Button75_isVisible() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier());
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Button75)
		/// </summary>
		/// <returns>The Enabled State of wt_Button75</returns>
		public bool btn_Button75_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container96 Functions
		/// </summary>
		public void cnt_Container96_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container96_setInlineAttributes(sender, e);
		}
		public string cnt_Container96_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container96_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container96)
		/// </summary>
		/// <returns>The Visible State of wt_Container96</returns>
		public bool cnt_Container96_isVisible() {
			return true;
		}

		/// <summary>
		/// wtListRecordsAttatc Functions
		/// </summary>
		public void recListListRecordsAttatc_onDataBinding(object sender, System.EventArgs e) {
			// widget wtListRecordsAttatc
			ssListRecordsAttatcList = ssEditRecord1Record.ssSTDocument_List.ssDocuments;
			ssListRecordsAttatcListDoDataBind = false;
			ssListRecordsAttatcListDataBound = true;
		}
		public void recListListRecordsAttatc_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssListRecordsAttatcList.Length > 0) {
					ssListRecordsAttatcList.CurrentRec = ssListRecordsAttatcList[ssListRecordsAttatcList.CurrentRowNumber];
				}
				if (ssListRecordsAttatcList.Length > e.SelectedIndex) {
					ssListRecordsAttatcList.CurrentRec = ssListRecordsAttatcList[e.SelectedIndex];
					ssListRecordsAttatcList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListListRecordsAttatc_Store(object dataItem, int index) {
			RCDocumentsRecord tmprec = (RCDocumentsRecord) dataItem;
			ArrayList tmpFields = new ArrayList();
			tmpFields.Add(tmprec.ssENDocuments.ssType == "" ?(object) null: tmprec.ssENDocuments.ssType);
			tmpFields.Add(tmprec.ssENDocuments.ssDocumentName == "" ?(object) null: tmprec.ssENDocuments.ssDocumentName);
			tmpFields.Add(tmprec.ssENDocuments.ssDocumentData);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENDocuments.ChangedAttributes, new BitArray(new bool[] {
				false, true, true, true, false, false, false
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENDocuments.OptimizedAttributes, new BitArray(new bool[] {
				true, false, false, false, true, true, true
			}
			))));
			if (index < wtListRecordsAttatc_storage.Count) {
				wtListRecordsAttatc_storage[index] = tmpFields;
			} else {
				wtListRecordsAttatc_storage.Add(tmpFields);
			}
			return "";
		}
		public void recListListRecordsAttatc_Restore() {

			#region fetch ssListRecordsAttatcList.

			// Read the needed fields of ssListRecordsAttatcList from storewtListRecordsAttatc_list
			ssListRecordsAttatcList = new RLDocumentsRecordList();
			ArrayList storewtListRecordsAttatc_list;
			storewtListRecordsAttatc_list = (ArrayList) ViewStateAttributes.GetFromViewState("wtListRecordsAttatc_list", null);
			if (storewtListRecordsAttatc_list == null) {
				return;
			} else {

				foreach(ArrayList tmpFieldswtListRecordsAttatc_list in storewtListRecordsAttatc_list) {
					if (tmpFieldswtListRecordsAttatc_list != null) {
						// Aux current record variable
						RCDocumentsRecord tmpAuxCurrentRecordwtListRecordsAttatc_list = new RCDocumentsRecord(null);
						tmpAuxCurrentRecordwtListRecordsAttatc_list.ssENDocuments.ssType = (string) (tmpFieldswtListRecordsAttatc_list[0] == null ? "": tmpFieldswtListRecordsAttatc_list[0]);

						tmpAuxCurrentRecordwtListRecordsAttatc_list.ssENDocuments.ssDocumentName = (string) (tmpFieldswtListRecordsAttatc_list[1] == null ? "": tmpFieldswtListRecordsAttatc_list[1]);

						tmpAuxCurrentRecordwtListRecordsAttatc_list.ssENDocuments.ssDocumentData = (byte[]) tmpFieldswtListRecordsAttatc_list[2];

						tmpAuxCurrentRecordwtListRecordsAttatc_list.ssENDocuments.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtListRecordsAttatc_list[3]);

						tmpAuxCurrentRecordwtListRecordsAttatc_list.ssENDocuments.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtListRecordsAttatc_list[4]);

						ssListRecordsAttatcList.Append(tmpAuxCurrentRecordwtListRecordsAttatc_list);
					}
				}
			}
			ssListRecordsAttatcList.CurrentRowNumber = -1;
			#endregion


			#region fetch ssListRecordsAttatcList runtime properties state.


			if (storewtListRecordsAttatc_list.Count > 0) {
				ssListRecordsAttatcList.RestoreRecordListState(storewtListRecordsAttatc_list.Count - 1, false);
			} else {
				ssListRecordsAttatcList.CurrentRowNumber = 0;
			}

			#endregion

			wtListRecordsAttatc_storage = storewtListRecordsAttatc_list;
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListListRecordsAttatc_Clear(object sender, EventArgs e) {
			wtListRecordsAttatc_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListListRecordsAttatc_Rebuild(int startIndex, int lineCount) {
			if (ssListRecordsAttatcList.Length != -1) {
				wtListRecordsAttatc_storage.Clear();
				for (int i=startIndex; i<ssListRecordsAttatcList.Data.Count && i<startIndex+lineCount; i++) {
					recListListRecordsAttatc_Store(ssListRecordsAttatcList.Data[i], wtListRecordsAttatc_storage.Count);
				}
			}
		}
		public void recListListRecordsAttatc_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtListRecordsAttatc widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLDocumentsRecordList getWtListRecordsAttatcList() {
			if (ssListRecordsAttatcListDoDataBind) {
				recListListRecordsAttatc_onDataBinding(this, null);
			}

			return ssListRecordsAttatcList;
		}
		/// <summary>
		/// wt_Container23 Functions
		/// </summary>
		public void cnt_Container23_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container23_setInlineAttributes(sender, e);
		}
		public string cnt_Container23_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container23_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container23)
		/// </summary>
		/// <returns>The Visible State of wt_Container23</returns>
		public bool cnt_Container23_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link102 Functions
		/// </summary>
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link102_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandDownload(heContext)) {
				doRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link102)
		/// </summary>
		/// <returns>title of the Link (wt_Link102)</returns>
		public string
		lnk_Link102_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link102)
		/// </summary>
		/// <returns>The Visible State of wt_Link102</returns>
		public bool lnk_Link102_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link102)
		/// </summary>
		/// <returns>The Enabled State of wt_Link102</returns>
		public bool lnk_Link102_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_InlineExpression85 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = FCv4s7N1N0GhdB2Ny7z91Q) Expression: "- " +
		///  EditRecord1.Record.Document_List.Documents.Current.Documents.DocumentName
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression85() {
			return ("- " +ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssDocumentName);
		}
		/// <summary>
		/// wt_Link70 Functions
		/// </summary>
		public void lnk_Link70_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link70_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandDelete(heContext)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link70)
		/// </summary>
		/// <returns>title of the Link (wt_Link70)</returns>
		public string
		lnk_Link70_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link70)
		/// </summary>
		/// <returns>The Visible State of wt_Link70</returns>
		public bool lnk_Link70_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link70)
		/// </summary>
		/// <returns>The Enabled State of wt_Link70</returns>
		public bool lnk_Link70_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container111 Functions
		/// </summary>
		public void cnt_Container111_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container111_setInlineAttributes(sender, e);
		}
		public string cnt_Container111_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container111_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container111)
		/// </summary>
		/// <returns>The Visible State of wt_Container111</returns>
		public bool cnt_Container111_isVisible() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier());
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance7 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance7_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("fKOPgP_OsE2Zi++YxmYxxA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wtAddTargets Functions
		/// </summary>
		/// <summary>
		/// Gets the Navigate URL for the link of variable (wtAddTargets)
		/// </summary>
		/// <returns>The Navigate URL of the link variable (wtAddTargets)</returns>
		public string btnAddTargets_NavigateUrl() {
			string navUrl = "";
			string urlParameter = AppInfo.GetAppInfo().GetURLParameter();

			if (heContext.AppInfo.eSpaceId != Global.eSpaceId) {
				navUrl = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath();
			} else {
				string pageHeader = heContext.OsISAPIFilter.GetPage(Request);
				if (pageHeader != null && pageHeader.IndexOf('/', 1) != -1) {
					navUrl = AppUtils.Instance.getImagePath(/*forInternalUse*/false,/*includeSessionIdIfNeeded*/ false);
				}
			}
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			parameters.Add(new Pair<string, string>("StudentReference", System.Web.HttpUtility.UrlEncode(inParamStudentId, Request.ContentEncoding)));
			parameters.Add(new Pair<string, string>(urlParameter, (string) null));
			navUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_Targets", parameters);

			return navUrl;
		}
		/// <summary>
		/// Gets the label of the button (wtAddTargets)
		/// </summary>
		/// <returns>Label of the Button (wtAddTargets)</returns>
		public string
		btnAddTargets_getLabel() {
			return "Add Targets";
		}
		/// <summary>
		/// Gets the visible state of component (wtAddTargets)
		/// </summary>
		/// <returns>The Visible State of wtAddTargets</returns>
		public bool btnAddTargets_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtAddTargets)
		/// </summary>
		/// <returns>The Enabled State of wtAddTargets</returns>
		public bool btnAddTargets_isEnabled() {
			return true; 
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance116 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance116_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkPopup_Editor) sender;
			widget.inParamLinkOrButtonWidgetId = wtAddTargets.ClientID;
			widget.inParamTitle = " ";
			widget.inParamWidthPx = -1;
			widget.inParamHeightPx = -1;
			widget.inParamAutoResize = true;
			widget.inParamRecenterOnResize = false;
			widget.inParamHideCloseButton = true;
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance116
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance116_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOnAddedTargetsNotify(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wtEmail_Body Functions
		/// </summary>
		public void inputwtEmail_Body_onDataBinding(object sender, System.EventArgs e) {
			inputwtEmail_Body_setInlineAttributes(sender, e);
		}
		public string inputwtEmail_Body_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-size: 12px;fline-height:13px";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtEmail_Body_input_value() {
			if (("" !=ssEditRecord1Record.ssENCommunication.ssBody)) {
				return ssEditRecord1Record.ssENCommunication.ssBody;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtEmail_Body");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return ssEditRecord1Record.ssENCommunication.ssBody;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtEmail_Body_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					ssEditRecord1Record.ssENCommunication.ssBody = ""; 
				} else {
					ssEditRecord1Record.ssENCommunication.ssBody = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				ssEditRecord1Record.ssENCommunication.ssBody = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtEmail_Body)
		/// </summary>
		/// <returns>The Visible State of wtEmail_Body</returns>
		public bool inputwtEmail_Body_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtEmail_Body)
		/// </summary>
		/// <returns>The Enabled State of wtEmail_Body</returns>
		public bool inputwtEmail_Body_isEnabled() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier()); 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtEmail_Body)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtEmail_Body</returns>
		public bool inputwtEmail_Body_isMandatory() {
			return true;
		}

		/// <summary>
		/// Gets the prompt of the input (wtEmail_Body)
		/// </summary>
		/// <returns>Prompt of the Input (wtEmail_Body)</returns>
		public string inputwtEmail_Body_getPrompt() {
			return "Message";
		}
		/// <summary>
		/// wt_Container43 Functions
		/// </summary>
		public void cnt_Container43_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container43_setInlineAttributes(sender, e);
		}
		public string cnt_Container43_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container43_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container43)
		/// </summary>
		/// <returns>The Visible State of wt_Container43</returns>
		public bool cnt_Container43_isVisible() {
			return true;
		}

		/// <summary>
		/// wtEditRecord1 Functions
		/// </summary>
		public void wtEditRecord1_onDataBindingDataSource(object sender, System.EventArgs e) {
		}
		/// <summary>
		/// wt_Container9 Functions
		/// </summary>
		public void cnt_Container9_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container9_setInlineAttributes(sender, e);
		}
		public string cnt_Container9_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container9_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container9)
		/// </summary>
		/// <returns>The Visible State of wt_Container9</returns>
		public bool cnt_Container9_isVisible() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier());
		}

		/// <summary>
		/// Hunspell_wt_WebBlockInstance26 Functions
		/// </summary>
		public void Hunspell_webBlck_WebBlockInstance26_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink widget = (proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink) sender;
			widget.inParamTextInputId = this.FindControl("wtEmail_Body").ClientID;
			widget.inParamExtraStyle = "";
			widget.inParamInPopupWindow = true;
		}
		/// <summary>
		/// wt_Link4 Functions
		/// </summary>
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link4_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), true);
			if (CommandSend(heContext)) {
				doRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link4)
		/// </summary>
		/// <returns>title of the Link (wt_Link4)</returns>
		public string
		lnk_Link4_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link4)
		/// </summary>
		/// <returns>The Visible State of wt_Link4</returns>
		public bool lnk_Link4_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link4)
		/// </summary>
		/// <returns>The Enabled State of wt_Link4</returns>
		public bool lnk_Link4_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container117 Functions
		/// </summary>
		public void cnt_Container117_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container117_setInlineAttributes(sender, e);
		}
		public string cnt_Container117_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container117_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container117)
		/// </summary>
		/// <returns>The Visible State of wt_Container117</returns>
		public bool cnt_Container117_isVisible() {
			return (inParamCommunicationId==BuiltInFunction.NullIdentifier());
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance87 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance87_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("Cpl3iVqzzUCZj6kMrYJG6g")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Link8 Functions
		/// </summary>
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link8_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandClose(heContext)) {
				doRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link8)
		/// </summary>
		/// <returns>title of the Link (wt_Link8)</returns>
		public string
		lnk_Link8_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link8)
		/// </summary>
		/// <returns>The Visible State of wt_Link8</returns>
		public bool lnk_Link8_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link8)
		/// </summary>
		/// <returns>The Enabled State of wt_Link8</returns>
		public bool lnk_Link8_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container110 Functions
		/// </summary>
		public void cnt_Container110_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container110_setInlineAttributes(sender, e);
		}
		public string cnt_Container110_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container110_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container110)
		/// </summary>
		/// <returns>The Visible State of wt_Container110</returns>
		public bool cnt_Container110_isVisible() {
			return true;
		}



		public static class FuncCommandSend {
		}
		public static class FuncCommandSelect {
		}
		public static class FuncCommandDelete {
		}
		public static class FuncCommandOnAddedTargetsNotify {
		}
		public static class FuncCommandUpload {
		}
		public static class FuncCommandDownload {
		}
		public static class FuncCommandClose {
		}
		public static class FuncssPreparation {

			/// <summary>
			/// Query Function "GetCommunicationById" of Action "Preparation"
			/// </summary>
			public static RLCommunicationRecordList datasetGetCommunicationById(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("ENCommunication.[ID] o1, NULL o2, NULL o3, ENCommunication.[FROM] o4, ENCommunication.[TO] o5, ENCommunication.[BCC] o6, ENCommunication.[CC] o7, ENCommunication.[SUBJECT] o8, ENCommunication.[BODY] o9, NULL o10, NULL o11, NULL o12, NULL o13");
				fromBuilder.Append(" FROM {Communication} ENCommunication");
				whereBuilder.Append(" WHERE ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENCommunication.[ID] = @qpinP) AND (ENCommunication.[ID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENCommunication.[ID] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLCommunicationRecordList outParamList = new RLCommunicationRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					false, true, true, false, false, false, false, false, false, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLCommunicationRecordList _tmp = new RLCommunicationRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learners.Popup_Email.Preparation.GetCommunicationById.List");
						outParamList = (RLCommunicationRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.Popup_Email.Preparation.GetCommunicationById.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLCommunicationRecordList _tmp = new RLCommunicationRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learners.Popup_Email.Preparation.GetCommunicationById.List");
							outParamList = (RLCommunicationRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.Popup_Email.Preparation.GetCommunicationById.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			/// <summary>
			/// Query Function "GetStudentByStudentReference" of Action "Preparation"
			/// </summary>
			public static RLStudentRecordList datasetGetStudentByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENStudent.[FORENAMES] o2, ENStudent.[SURNAME] o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, ENStudent.[EMAILADDRESS] o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, ENStudent.[NEXTOFKINEMAIL] o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27");
				fromBuilder.Append(" FROM {Student} ENStudent");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudent.[STUDENTREFERENCE] = @qpstP) AND (ENStudent.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudent.[STUDENTREFERENCE] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentRecordList outParamList = new RLStudentRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					true, false, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, false, true, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentRecordList _tmp = new RLStudentRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learners.Popup_Email.Preparation.GetStudentByStudentReference.List");
						outParamList = (RLStudentRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.Popup_Email.Preparation.GetStudentByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentRecordList _tmp = new RLStudentRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learners.Popup_Email.Preparation.GetStudentByStudentReference.List");
							outParamList = (RLStudentRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.Popup_Email.Preparation.GetStudentByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			/// <summary>
			/// Query Function "GetUserById" of Action "Preparation"
			/// </summary>
			public static RLUserRecordList datasetGetUserById(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, ENUser.[EMAIL] o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10");
				fromBuilder.Append(" FROM {User} ENUser");
				whereBuilder.Append(" WHERE (ENUser.[IS_ACTIVE] = 1) AND ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENUser.[ID] = @qpinP) AND (ENUser.[ID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENUser.[ID] IS NULL)");
				}
				orderByBuilder.Append(" ORDER BY ENUser.[NAME] ASC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLUserRecordList outParamList = new RLUserRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					false, true, true, true, true, false, true, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLUserRecordList _tmp = new RLUserRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learners.Popup_Email.Preparation.GetUserById.List");
						outParamList = (RLUserRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.Popup_Email.Preparation.GetUserById.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLUserRecordList _tmp = new RLUserRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learners.Popup_Email.Preparation.GetUserById.List");
							outParamList = (RLUserRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.Popup_Email.Preparation.GetUserById.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetDocumentsReadDB(ref RCCommunicationDocumentsDocumentsRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENCommunicationDocuments.Read(r, ref index);
				rec.ssENDocuments.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetDocuments" of Action "Preparation"
			/// </summary>
			public static RLCommunicationDocumentsDocumentsRecordList datasetGetDocuments(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP) {
				// Query Iterations: Single {-unbound-}
				// Uses binary data: True
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 3));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, ENDocuments.[ID] o4, ENDocuments.[TYPE] o5, ENDocuments.[DOCUMENTNAME] o6, ENDocuments.[DOCUMENTDATA] o7, ENDocuments.[DOCUMENTTYPE] o8, ENDocuments.[DOCVIEWINGRESTRICTEDBYUSER] o9, ENDocuments.[DOCVIEWINGRESTRICTEDBYROLE] o10");
				fromBuilder.Append(" FROM ({Documents} ENDocuments Inner JOIN {CommunicationDocuments} ENCommunicationDocuments ON (ENCommunicationDocuments.[DOCUMENTID] = ENDocuments.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENCommunicationDocuments.[COMMUNICATIONID] = @qpinP) AND (ENCommunicationDocuments.[COMMUNICATIONID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENCommunicationDocuments.[COMMUNICATIONID] IS NULL)");
				}
				orderByBuilder.Append(" ORDER BY ENDocuments.[DOCUMENTNAME] ASC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLCommunicationDocumentsDocumentsRecordList outParamList = new RLCommunicationDocumentsDocumentsRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetDocumentsReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[2];
				opt[0] = new BitArray(new bool[] {
					true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					false, false, false, false, false, false, false
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLCommunicationDocumentsDocumentsRecordList _tmp = new RLCommunicationDocumentsDocumentsRecordList();
					_tmp.AlternateReadDBMethod = datasetGetDocumentsReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learners.Popup_Email.Preparation.GetDocuments.List");
						outParamList = (RLCommunicationDocumentsDocumentsRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.Popup_Email.Preparation.GetDocuments.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 3) {
						RLCommunicationDocumentsDocumentsRecordList _tmp = new RLCommunicationDocumentsDocumentsRecordList();
						_tmp.AlternateReadDBMethod = datasetGetDocumentsReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Learners.Popup_Email.Preparation.GetDocuments.List");
							outParamList = (RLCommunicationDocumentsDocumentsRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Learners.Popup_Email.Preparation.GetDocuments.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}



		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}


		public LocalState PushStack() {
			return null;
		}

		public void doRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				Preparation(heContext);

				Title = "Popup Email"; ssListRecordsAttatcListDoDataBind = true;
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Popup_Email", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// Perform the partial databind
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Popup_Email", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Ajax", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}



		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();
			ViewStateAttributes.SetInViewState("resStudent_GetResponsible_outParamResponsibleName", resStudent_GetResponsible.outParamResponsibleName, "");
			ViewStateAttributes.SetInViewState("resStudent_GetResponsible_outParamResponsibleEmail", resStudent_GetResponsible.outParamResponsibleEmail, "");

			#region store queryResGetStudentByStudentReference_outParamList.

			int tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList = queryResGetStudentByStudentReference_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetStudentByStudentReference_outParamList = queryResGetStudentByStudentReference_outParamList.Eof;
			ArrayList storequeryResGetStudentByStudentReference_outParamList = new ArrayList();

			// Write the needed fields of queryResGetStudentByStudentReference_outParamList to the storequeryResGetStudentByStudentReference_outParamList
			if (!queryResGetStudentByStudentReference_outParamList.Empty) {
				try {
					queryResGetStudentByStudentReference_outParamList.StartIteration();

					while (!queryResGetStudentByStudentReference_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetStudentByStudentReference_outParamList = new ArrayList();
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssEmailAddress);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinEmail == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinEmail);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ChangedAttributes, new BitArray(new bool[] {
							false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, true, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.OptimizedAttributes, new BitArray(new bool[] {
							true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, false, true, true, true, true, true
						}
						))));
						storequeryResGetStudentByStudentReference_outParamList.Add(tmpFieldsqueryResGetStudentByStudentReference_outParamList);
						queryResGetStudentByStudentReference_outParamList.Advance();
					}
				} finally {
					queryResGetStudentByStudentReference_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetStudentByStudentReference_outParamList", storequeryResGetStudentByStudentReference_outParamList, null);

			#endregion


			#region store queryResGetStudentByStudentReference_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetStudentByStudentReference_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetStudentByStudentReference_outParamList_eof", tmpeofqueryResGetStudentByStudentReference_outParamList, false);
			queryResGetStudentByStudentReference_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList, tmpeofqueryResGetStudentByStudentReference_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("inParamStudentId", inParamStudentId, "");
			ViewStateAttributes.SetInViewState("inParamCommunicationId", inParamCommunicationId, 0);

			#region store varLcEmailFromList.

			int tmpcurrentrownumbervarLcEmailFromList = varLcEmailFromList.CurrentRowNumber;
			bool tmpeofvarLcEmailFromList = varLcEmailFromList.Eof;
			ArrayList storevarLcEmailFromList = new ArrayList();

			// Write the needed fields of varLcEmailFromList to the storevarLcEmailFromList
			if (!varLcEmailFromList.Empty) {
				try {
					varLcEmailFromList.StartIteration();

					while (!varLcEmailFromList.Eof) {
						ArrayList tmpFieldsvarLcEmailFromList = new ArrayList();
						tmpFieldsvarLcEmailFromList.Add(varLcEmailFromList.CurrentRec.ssSTEmailFrom.ssname == "" ?(object) null: varLcEmailFromList.CurrentRec.ssSTEmailFrom.ssname);
						tmpFieldsvarLcEmailFromList.Add(varLcEmailFromList.CurrentRec.ssSTEmailFrom.ssEmailAddress == "" ?(object) null: varLcEmailFromList.CurrentRec.ssSTEmailFrom.ssEmailAddress);
						storevarLcEmailFromList.Add(tmpFieldsvarLcEmailFromList);
						varLcEmailFromList.Advance();
					}
				} finally {
					varLcEmailFromList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("varLcEmailFromList", storevarLcEmailFromList, null);

			#endregion


			#region store varLcEmailFromList runtime properties state.

			ViewStateAttributes.SetInViewState("varLcEmailFromList_currentrownumber", tmpcurrentrownumbervarLcEmailFromList, 0);
			ViewStateAttributes.SetInViewState("varLcEmailFromList_eof", tmpeofvarLcEmailFromList, false);
			varLcEmailFromList.RestoreRecordListState(tmpcurrentrownumbervarLcEmailFromList, tmpeofvarLcEmailFromList);

			#endregion

			ViewStateAttributes.SetInViewState("wt_ComboBox121_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wt_ComboBox121")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtEmail_To_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtEmail_To")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtEmail_CC_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtEmail_CC")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtEmail_BCC_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtEmail_BCC")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtEmail_Subject_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtEmail_Subject")).Mandatory, false);
			if (IsAjaxRequest) {
				recListListRecordsAttatc_Rebuild((ssListRecordsAttatcListDataBound ? wtListRecordsAttatc.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtListRecordsAttatc.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtListRecordsAttatc_list", wtListRecordsAttatc_storage, null);
			ViewStateAttributes.SetInViewState("wtEmail_Body_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtEmail_Body")).Mandatory, false);

			#region store ssEditRecord1Record.ssSTDocument_List.ssDocuments.

			int tmpcurrentrownumberwtEditRecord1_record_ssSTDocument_List_ssDocuments = ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRowNumber;
			bool tmpeofwtEditRecord1_record_ssSTDocument_List_ssDocuments = ssEditRecord1Record.ssSTDocument_List.ssDocuments.Eof;
			ArrayList storewtEditRecord1_record_ssSTDocument_List_ssDocuments = new ArrayList();

			// Write the needed fields of ssEditRecord1Record.ssSTDocument_List.ssDocuments to the storewtEditRecord1_record_ssSTDocument_List_ssDocuments
			if (!ssEditRecord1Record.ssSTDocument_List.ssDocuments.Empty) {
				try {
					ssEditRecord1Record.ssSTDocument_List.ssDocuments.StartIteration();

					while (!ssEditRecord1Record.ssSTDocument_List.ssDocuments.Eof) {
						ArrayList tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments = new ArrayList();
						tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments.Add(ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssId == 0?(object) null: ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssId);
						tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments.Add(ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssType == "" ?(object) null: ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssType);
						tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments.Add(ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssDocumentName == "" ?(object) null: ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssDocumentName);
						tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments.Add(ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssDocumentData);
						tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments.Add(ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssDocumentType == 0?(object) null: ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssDocumentType);
						tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments.Add(ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssDocViewingRestrictedByUser == false?(object) null: ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssDocViewingRestrictedByUser);
						tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments.Add(ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssDocViewingRestrictedByRole == "" ?(object) null: ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ssDocViewingRestrictedByRole);
						tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.ChangedAttributes, new BitArray(new bool[] {
							true, true, true, true, true, true, true
						}
						))));
						tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRec.ssENDocuments.OptimizedAttributes, new BitArray(new bool[] {
							false, false, false, false, false, false, false
						}
						))));
						storewtEditRecord1_record_ssSTDocument_List_ssDocuments.Add(tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments);
						ssEditRecord1Record.ssSTDocument_List.ssDocuments.Advance();
					}
				} finally {
					ssEditRecord1Record.ssSTDocument_List.ssDocuments.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("wtEditRecord1_record_ssSTDocument_List_ssDocuments", storewtEditRecord1_record_ssSTDocument_List_ssDocuments, null);

			#endregion


			#region store ssEditRecord1Record.ssSTDocument_List.ssDocuments runtime properties state.

			ViewStateAttributes.SetInViewState("wtEditRecord1_record_ssSTDocument_List_ssDocuments_currentrownumber", tmpcurrentrownumberwtEditRecord1_record_ssSTDocument_List_ssDocuments, 0);
			ViewStateAttributes.SetInViewState("wtEditRecord1_record_ssSTDocument_List_ssDocuments_eof", tmpeofwtEditRecord1_record_ssSTDocument_List_ssDocuments, false);
			ssEditRecord1Record.ssSTDocument_List.ssDocuments.RestoreRecordListState(tmpcurrentrownumberwtEditRecord1_record_ssSTDocument_List_ssDocuments, tmpeofwtEditRecord1_record_ssSTDocument_List_ssDocuments);

			#endregion

			ViewStateAttributes.SetInViewState("wtEditRecord1_record_ssENCommunication_ssId", ssEditRecord1Record.ssENCommunication.ssId, 0);
			ViewStateAttributes.SetInViewState("wtEditRecord1_record_ssENCommunication_ssFrom", ssEditRecord1Record.ssENCommunication.ssFrom, "");
			ViewStateAttributes.SetInViewState("wtEditRecord1_record_ssENCommunication_ssTo", ssEditRecord1Record.ssENCommunication.ssTo, "");
			ViewStateAttributes.SetInViewState("wtEditRecord1_record_ssENCommunication_ssBCC", ssEditRecord1Record.ssENCommunication.ssBCC, "");
			ViewStateAttributes.SetInViewState("wtEditRecord1_record_ssENCommunication_ssCC", ssEditRecord1Record.ssENCommunication.ssCC, "");
			ViewStateAttributes.SetInViewState("wtEditRecord1_record_ssENCommunication_ssSubject", ssEditRecord1Record.ssENCommunication.ssSubject, "");
			ViewStateAttributes.SetInViewState("wtEditRecord1_record_ssENCommunication_ssBody", ssEditRecord1Record.ssENCommunication.ssBody, "");
			ViewStateAttributes.SetInViewState("wtEditRecord1_record_ssENCommunication_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(ssEditRecord1Record.ssENCommunication.ChangedAttributes, new BitArray(new bool[] {
				true, false, false, true, true, true, true, true, true, false, false, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("wtEditRecord1_record_ssENCommunication_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(ssEditRecord1Record.ssENCommunication.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true, false, false, false, false, false, false, true, true, true, true
			}
			)))), null);
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			try {
				resStudent_GetResponsible.outParamResponsibleName = (string) ViewStateAttributes.GetFromViewState("resStudent_GetResponsible_outParamResponsibleName", "");
				resStudent_GetResponsible.outParamResponsibleEmail = (string) ViewStateAttributes.GetFromViewState("resStudent_GetResponsible_outParamResponsibleEmail", "");

				#region fetch queryResGetStudentByStudentReference_outParamList.

				// Read the needed fields of queryResGetStudentByStudentReference_outParamList from storequeryResGetStudentByStudentReference_outParamList
				queryResGetStudentByStudentReference_outParamList = new RLStudentRecordList();
				ArrayList storequeryResGetStudentByStudentReference_outParamList;
				storequeryResGetStudentByStudentReference_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetStudentByStudentReference_outParamList", null);
				if (storequeryResGetStudentByStudentReference_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetStudentByStudentReference_outParamList in storequeryResGetStudentByStudentReference_outParamList) {
						if (tmpFieldsqueryResGetStudentByStudentReference_outParamList != null) {
							// Aux current record variable
							RCStudentRecord tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList = new RCStudentRecord(null);
							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssEmailAddress = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[0] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssNextOfKinEmail = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[1] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentByStudentReference_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentByStudentReference_outParamList[3]);

							queryResGetStudentByStudentReference_outParamList.Append(tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList);
						}
					}
				}
				queryResGetStudentByStudentReference_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetStudentByStudentReference_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList;
				tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetStudentByStudentReference_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetStudentByStudentReference_outParamList;
				tmpeofqueryResGetStudentByStudentReference_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetStudentByStudentReference_outParamList_eof", false);
				queryResGetStudentByStudentReference_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList, tmpeofqueryResGetStudentByStudentReference_outParamList);

				#endregion

				inParamStudentId = (string) ViewStateAttributes.GetFromViewState("inParamStudentId", "");
				inParamCommunicationId = (int) ViewStateAttributes.GetFromViewState("inParamCommunicationId", 0);

				#region fetch varLcEmailFromList.

				// Read the needed fields of varLcEmailFromList from storevarLcEmailFromList
				varLcEmailFromList = new RLEmailFromRecordList();
				ArrayList storevarLcEmailFromList;
				storevarLcEmailFromList = (ArrayList) ViewStateAttributes.GetFromViewState("varLcEmailFromList", null);
				if (storevarLcEmailFromList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsvarLcEmailFromList in storevarLcEmailFromList) {
						if (tmpFieldsvarLcEmailFromList != null) {
							// Aux current record variable
							RCEmailFromRecord tmpAuxCurrentRecordvarLcEmailFromList = new RCEmailFromRecord(null);
							tmpAuxCurrentRecordvarLcEmailFromList.ssSTEmailFrom.ssname = (string) (tmpFieldsvarLcEmailFromList[0] == null ? "": tmpFieldsvarLcEmailFromList[0]);

							tmpAuxCurrentRecordvarLcEmailFromList.ssSTEmailFrom.ssEmailAddress = (string) (tmpFieldsvarLcEmailFromList[1] == null ? "": tmpFieldsvarLcEmailFromList[1]);

							varLcEmailFromList.Append(tmpAuxCurrentRecordvarLcEmailFromList);
						}
					}
				}
				varLcEmailFromList.CurrentRowNumber = -1;
				#endregion


				#region fetch varLcEmailFromList runtime properties state.

				int tmpcurrentrownumbervarLcEmailFromList;
				tmpcurrentrownumbervarLcEmailFromList = (int) ViewStateAttributes.GetFromViewState("varLcEmailFromList_currentrownumber", 0);
				bool tmpeofvarLcEmailFromList;
				tmpeofvarLcEmailFromList = (bool) ViewStateAttributes.GetFromViewState("varLcEmailFromList_eof", false);
				varLcEmailFromList.RestoreRecordListState(tmpcurrentrownumbervarLcEmailFromList, tmpeofvarLcEmailFromList);

				#endregion

				((IWidgetRuntimeProperties) this.FindControl("wt_ComboBox121")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wt_ComboBox121_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtEmail_To")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtEmail_To_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtEmail_CC")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtEmail_CC_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtEmail_BCC")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtEmail_BCC_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtEmail_Subject")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtEmail_Subject_Mandatory", false);
				recListListRecordsAttatc_Restore();
				((IWidgetRuntimeProperties) this.FindControl("wtEmail_Body")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtEmail_Body_Mandatory", false);

				#region fetch ssEditRecord1Record.ssSTDocument_List.ssDocuments.

				// Read the needed fields of ssEditRecord1Record.ssSTDocument_List.ssDocuments from storewtEditRecord1_record_ssSTDocument_List_ssDocuments
				ssEditRecord1Record.ssSTDocument_List.ssDocuments = new RLDocumentsRecordList();
				ArrayList storewtEditRecord1_record_ssSTDocument_List_ssDocuments;
				storewtEditRecord1_record_ssSTDocument_List_ssDocuments = (ArrayList) ViewStateAttributes.GetFromViewState("wtEditRecord1_record_ssSTDocument_List_ssDocuments", null);
				if (storewtEditRecord1_record_ssSTDocument_List_ssDocuments == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments in storewtEditRecord1_record_ssSTDocument_List_ssDocuments) {
						if (tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments != null) {
							// Aux current record variable
							RCDocumentsRecord tmpAuxCurrentRecordwtEditRecord1_record_ssSTDocument_List_ssDocuments = new RCDocumentsRecord(null);
							tmpAuxCurrentRecordwtEditRecord1_record_ssSTDocument_List_ssDocuments.ssENDocuments.ssId = (int) (tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[0] == null ? 0: tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[0]);

							tmpAuxCurrentRecordwtEditRecord1_record_ssSTDocument_List_ssDocuments.ssENDocuments.ssType = (string) (tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[1] == null ? "": tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[1]);

							tmpAuxCurrentRecordwtEditRecord1_record_ssSTDocument_List_ssDocuments.ssENDocuments.ssDocumentName = (string) (tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[2] == null ? "": tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[2]);

							tmpAuxCurrentRecordwtEditRecord1_record_ssSTDocument_List_ssDocuments.ssENDocuments.ssDocumentData = (byte[]) tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[3];

							tmpAuxCurrentRecordwtEditRecord1_record_ssSTDocument_List_ssDocuments.ssENDocuments.ssDocumentType = (int) (tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[4] == null ? 0: tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[4]);

							tmpAuxCurrentRecordwtEditRecord1_record_ssSTDocument_List_ssDocuments.ssENDocuments.ssDocViewingRestrictedByUser = (bool) (tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[5] == null ? false: tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[5]);

							tmpAuxCurrentRecordwtEditRecord1_record_ssSTDocument_List_ssDocuments.ssENDocuments.ssDocViewingRestrictedByRole = (string) (tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[6] == null ? "": tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[6]);

							tmpAuxCurrentRecordwtEditRecord1_record_ssSTDocument_List_ssDocuments.ssENDocuments.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[7]);

							tmpAuxCurrentRecordwtEditRecord1_record_ssSTDocument_List_ssDocuments.ssENDocuments.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtEditRecord1_record_ssSTDocument_List_ssDocuments[8]);

							ssEditRecord1Record.ssSTDocument_List.ssDocuments.Append(tmpAuxCurrentRecordwtEditRecord1_record_ssSTDocument_List_ssDocuments);
						}
					}
				}
				ssEditRecord1Record.ssSTDocument_List.ssDocuments.CurrentRowNumber = -1;
				#endregion


				#region fetch ssEditRecord1Record.ssSTDocument_List.ssDocuments runtime properties state.

				int tmpcurrentrownumberwtEditRecord1_record_ssSTDocument_List_ssDocuments;
				tmpcurrentrownumberwtEditRecord1_record_ssSTDocument_List_ssDocuments = (int) ViewStateAttributes.GetFromViewState("wtEditRecord1_record_ssSTDocument_List_ssDocuments_currentrownumber", 0);
				bool tmpeofwtEditRecord1_record_ssSTDocument_List_ssDocuments;
				tmpeofwtEditRecord1_record_ssSTDocument_List_ssDocuments = (bool) ViewStateAttributes.GetFromViewState("wtEditRecord1_record_ssSTDocument_List_ssDocuments_eof", false);
				ssEditRecord1Record.ssSTDocument_List.ssDocuments.RestoreRecordListState(tmpcurrentrownumberwtEditRecord1_record_ssSTDocument_List_ssDocuments, tmpeofwtEditRecord1_record_ssSTDocument_List_ssDocuments);

				#endregion

				ssEditRecord1Record.ssENCommunication.ssId = (int) ViewStateAttributes.GetFromViewState("wtEditRecord1_record_ssENCommunication_ssId", 0);
				ssEditRecord1Record.ssENCommunication.ssFrom = (string) ViewStateAttributes.GetFromViewState("wtEditRecord1_record_ssENCommunication_ssFrom", "");
				ssEditRecord1Record.ssENCommunication.ssTo = (string) ViewStateAttributes.GetFromViewState("wtEditRecord1_record_ssENCommunication_ssTo", "");
				ssEditRecord1Record.ssENCommunication.ssBCC = (string) ViewStateAttributes.GetFromViewState("wtEditRecord1_record_ssENCommunication_ssBCC", "");
				ssEditRecord1Record.ssENCommunication.ssCC = (string) ViewStateAttributes.GetFromViewState("wtEditRecord1_record_ssENCommunication_ssCC", "");
				ssEditRecord1Record.ssENCommunication.ssSubject = (string) ViewStateAttributes.GetFromViewState("wtEditRecord1_record_ssENCommunication_ssSubject", "");
				ssEditRecord1Record.ssENCommunication.ssBody = (string) ViewStateAttributes.GetFromViewState("wtEditRecord1_record_ssENCommunication_ssBody", "");
				ssEditRecord1Record.ssENCommunication.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecord1_record_ssENCommunication_ChangedAttributes", null));
				ssEditRecord1Record.ssENCommunication.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecord1_record_ssENCommunication_OptimizedAttributes", null));
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}


		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			ValidationUtils.ValidateComboBox(this, "wt_ComboBox121", parentEditRecord, validate);
			ValidationUtils.ValidateInput(this, "wtEmail_To", parentEditRecord, ValidationUtils.validateTrue, validate);
			ValidationUtils.ValidateInput(this, "wtEmail_CC", parentEditRecord, ValidationUtils.validateTrue, validate);
			ValidationUtils.ValidateInput(this, "wtEmail_BCC", parentEditRecord, ValidationUtils.validateTrue, validate);
			ValidationUtils.ValidateInput(this, "wtEmail_Subject", parentEditRecord, ValidationUtils.validateTrue, validate);
			ValidationUtils.ValidateInput(this, "wtEmail_Body", parentEditRecord, ValidationUtils.validateTrue, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}


		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}

		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			Page_Load(null, null); this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}


		public override void DataBind() {
			base.DataBind();
			StoreViewState();
			OutSystems.HubEdition.WebWidgets.Utils.addValidationScriptsToPage(this);
		}



	}




}
