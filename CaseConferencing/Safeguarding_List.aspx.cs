/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.IO;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Runtime.Serialization;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Web.Caching;
using System.Text;
using System.Resources;

namespace ssCaseConferencing.Flows.FlowSafeguarding {

	public class ScrnSafeguarding_List: OSPageViewStateCompressed, IWebScreen, INegotiateTabIndexes, IBookmarkableURL {


		public ScrnSafeguarding_List(): base(CaseConferencing_Properties.QuirksMode) {
		}


		/// <summary>
		/// Screen Input Parameter inParamCourseCode. Description:
		/// </summary>
		public string inParamCourseCode = "";
		/// <summary>
		/// Variable <code>varLcLearnerKeywordSearch</code> that represents the Service Studio local variable
		///  <code>LearnerKeywordSearch</code> <p>Description: </p>
		/// </summary>
		string varLcLearnerKeywordSearch = "";

		/// <summary>
		/// Variable <code>varLcStudentBirthDate</code> that represents the Service Studio local variable
		///  <code>StudentBirthDate</code> <p>Description: </p>
		/// </summary>
		DateTime varLcStudentBirthDate = new DateTime(1900, 1, 1, 0, 0, 0);

		/// <summary>
		/// Variable <code>varLcSafeguardingFilter</code> that represents the Service Studio local variable
		///  <code>SafeguardingFilter</code> <p>Description: </p>
		/// </summary>
		string varLcSafeguardingFilter = "";

		/// <summary>
		/// Variable <code>varLcStaffid</code> that represents the Service Studio local variable
		///  <code>Staffid</code> <p>Description: </p>
		/// </summary>
		string varLcStaffid = "";

		/// <summary>
		/// Variable ThemeProvider_wt_WebBlockInstance21
		/// </summary>
		protected proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main ThemeProvider_wt_WebBlockInstance21;
		/// <summary>
		/// Variable (wt_Button59) with Button component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.Button wt_Button59;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container66;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_Input80ValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wt_Input80ValidatorType;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtTarget_TargetDateValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtTarget_TargetDateValidatorType;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtSafeguardingDDValidatorRequired;
		protected SelectRtWidget Rt_wtSafeguardingDD = new SelectRtWidget();
		RLSafeguardingIssueTypeRecordList Rt_wtSafeguardingDD_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtStaffDDValidatorRequired;
		protected SelectRtWidget Rt_wtStaffDD = new SelectRtWidget();
		RLListItemRecordList Rt_wtStaffDD_reclist = null;
		protected OutSystems.HubEdition.WebWidgets.Container wtLearnerListWrapper;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container5;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container24;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container56;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container44;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container54;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container93;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container22;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container29;
		private RLStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecordList _ssLearnerListList = new RLStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecordList();
		public RLStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecordList ssLearnerListList {
			get {
				return _ssLearnerListList; 
			}
			set {
				_ssLearnerListList = value;
				wtLearnerList.DataSource = value;
				ssLearnerListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtLearnerList;
		public ArrayList wtLearnerList_storage = new ArrayList();
		protected bool ssLearnerListList_notUsedYet = true;
		protected bool ssLearnerListListDoDataBind;
		protected bool ssLearnerListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container88;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container14;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container65;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container76;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container63;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container41;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container34;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container69;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container16;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container91;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container23;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container72;
		/// <summary>
		/// Variable "True" if the Widget wt_If58
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If58T;

		/// <summary>
		/// Variable "True" if the Widget wt_If58
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If58F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container78;
		/// <summary>
		/// Variable "True" if the Widget wt_If42
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If42T;

		/// <summary>
		/// Variable "True" if the Widget wt_If42
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If42F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container96;
		/// <summary>
		/// Variable "True" if the Widget wt_If57
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If57T;

		/// <summary>
		/// Variable "True" if the Widget wt_If57
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If57F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container52;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container32;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container7;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container4;


		protected override void GetBlocksCss(TextWriter writer, bool inline, HashSet<string> visited) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate.GetCss(writer, inline, visited);
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkInput_Calendar.GetCss(writer, inline, visited);
			proxy_CaseConferencing_Chosen.Flows.FlowChosenCommon.WBlkchosenWebBlock.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkList_Counter.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowSafeguarding.WBlkAgenciesInvolved.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowSafeguarding.WBlkPersonsInvolved.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkList_Navigation.GetCss(writer, inline, visited);

		}

		protected override void GetWidgetsCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}







		protected override string GetInlineStyleSheetInclude() {
			throw new InvalidOperationException();
		}





		protected override bool PageAllowsCallbacks() {
			return true;
		}


		protected string GetRequestInfoJavaScript() {
			return GetRequestInfoJavaScript("ZCLc66EKy0KAT2j9T4cT4g", "Safeguarding_List");
		}

		protected string GetVisitCode() {
			SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
			if (session["osIsNewVisit"] != null && ((bool) session["osIsNewVisit"])
			// && !NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)
			&& RuntimePlatformUtils.IsValidRequestForVisit()) {
				return "<script type=\"text/javascript\">outsystems.internal.$.get(\"/CaseConferencing/_status.aspx\")</script>";
			}
			return "";
		}

		public string GetCallbackDebug() {
			if (Request.HttpMethod == "GET" && Request.QueryString["__CALLBACK_DEBUG"] != null && Request.QueryString["__CALLBACK_DEBUG"] != "") {
				if (Request.QueryString["__CALLBACK_DEBUG"] == OutSystems.HubEdition.RuntimePlatform.AppInfo.GetParameter(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Callback_Debug_Information_Key)) {
					return OutSystems.HubEdition.RuntimePlatform.AppInfo.GetAppInfo().GetCallbackDebugInformation();
				}
			}
			return "";
		}

		protected string GetHeadTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadTop, "ZCLc66EKy0KAT2j9T4cT4g", "Safeguarding_List");
		}

		protected string GetHeadBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadBottom, "ZCLc66EKy0KAT2j9T4cT4g", "Safeguarding_List");
		}

		protected string GetBodyTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyTop, "ZCLc66EKy0KAT2j9T4cT4g", "Safeguarding_List");
		}

		protected string GetBodyBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyBottom, "ZCLc66EKy0KAT2j9T4cT4g", "Safeguarding_List");
		}

		HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();



		static ScrnSafeguarding_List() {
		}


		int resUserCheck_outParamPermissionType = 0;
		RLStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecordList queryResGetSafeGuardingStudents_outParamList = new RLStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecordList();
		int queryResGetSafeGuardingStudents_outParamCount = 0;
		RLListItemRecordList queryResGEtPersons_outParamList = new RLListItemRecordList();
		int queryResGEtPersons_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// UserCheck
			Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("Bq1CkqbZu0icHGqhuLS7gA")).ssId, out resUserCheck_outParamPermissionType);
			if ((resUserCheck_outParamPermissionType==BuiltInFunction.NullIdentifier())) {
				// Destination = ExternalURL

				if (OSPage.IsAjaxRequest) {
					// go to target page
					{

						((OSPage) Page).ClearErrorHandler();
						if (OSPage.IsAjaxRequest) {
							string sURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "InvalidPermissions", "ThemeProvider", "", "", "", "", "", "", "", "", "", "");
							sURL = sURL.Replace("&amp;", "&");
							sURL = RuntimePlatformUtils.GetURL(sURL, AppUtils.Instance, Global.App.eSpaceName);
							((OSPageViewState) Page).RedirectLocation = sURL;
						} else {
							string sURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "InvalidPermissions", "ThemeProvider", "", "", "", "", "", "", "", "", "", "");
							sURL = sURL.Replace("&amp;", "&");
							sURL = RuntimePlatformUtils.GetURL(sURL, AppUtils.Instance, Global.App.eSpaceName);
							Response.BufferOutput = true;
							Response.Redirect(sURL, true);
						}
						return;

					}
				} else {
					// go to target page
					{

						((OSPage) Page).ClearErrorHandler();
						if (OSPage.IsAjaxRequest) {
							string sURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "InvalidPermissions", "ThemeProvider", "", "", "", "", "", "", "", "", "", "");
							sURL = sURL.Replace("&amp;", "&");
							sURL = RuntimePlatformUtils.GetURL(sURL, AppUtils.Instance, Global.App.eSpaceName);
							((OSPageViewState) Page).RedirectLocation = sURL;
						} else {
							string sURL = Functions.rssextensionhttprequesthandler_ActionGetEntryURL(heContext, "InvalidPermissions", "ThemeProvider", "", "", "", "", "", "", "", "", "", "");
							sURL = sURL.Replace("&amp;", "&");
							sURL = RuntimePlatformUtils.GetURL(sURL, AppUtils.Instance, Global.App.eSpaceName);
							Response.BufferOutput = true;
							Response.Redirect(sURL, true);
						}
						return;

					}
				}

			} else {
				// Query QueryGEtPersons
				int QueryGEtPersons_maxRecords = 0;
				queryResGEtPersons_outParamList = FuncssPreparation.QueryGEtPersons(heContext, QueryGEtPersons_maxRecords, IterationMultiplicity.Single, out queryResGEtPersons_outParamCount);
				// Query QueryGetSafeGuardingStudents
				int QueryGetSafeGuardingStudents_maxRecords = ((Functions.rssespacerichwidgets_ActionList_Navigation_GetStartIndex(heContext, wtLearnerList.ClientID, false, -1) +wtLearnerList.RtWidget.LineCount) +1);
				if (QueryGetSafeGuardingStudents_maxRecords < 1) QueryGetSafeGuardingStudents_maxRecords = 1;
				queryResGetSafeGuardingStudents_outParamList = FuncssPreparation.QueryGetSafeGuardingStudents(heContext, QueryGetSafeGuardingStudents_maxRecords, IterationMultiplicity.Single, out queryResGetSafeGuardingStudents_outParamCount, varLcLearnerKeywordSearch
				, varLcStudentBirthDate
				, BuiltInFunction.NullDate()
				, varLcSafeguardingFilter
				, true
				, inParamCourseCode
				, BuiltInFunction.IntegerToEntityRefInteger(BuiltInFunction.TextToInteger(varLcStaffid))
				, Functions.rssespacerichwidgets_ActionList_SortColumn_GetOrderBy(heContext, wtLearnerList.ClientID, "{Student}.[Surname],{Student}.[Forenames]")
				);

			}
		}


		protected override BaseAppUtils GetAppUtils() {
			return AppUtils.Instance;
		}

		protected override string OwnCssUrl {
			get {
				return "Safeguarding_List.css"; 
			}
		}

		protected override string OwnCssFile {
			get {
				return "Safeguarding_List.css"; 
			}
		}

		protected override string BasicCssUrl {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string BasicCssFile {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssUrl {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssFile {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssUrl {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssFile {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssUrl {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssFile {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssUrl {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssFile {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string ThemeCssUrl {
			get {
				return RsseSpaceThemeProvider.Themes.ThemeThemeProvider.ThemeCssUrl; 
			}
		}

		protected override string ThemeCssFile {
			get {
				return "ReferenceTheme.ThemeProvider.css"; 
			}
		}

		protected override string ThemeExtraCssUrl {
			get {
				return RsseSpaceRichWidgets.Themes.ThemeLondonFixed.ThemeExtraCssUrl; 
			}
		}

		protected override string ThemeExtraCssFile {
			get {
				return "ReferenceTheme.LondonFixed.extra.css"; 
			}
		}

		public override bool IsUsingMobileTheme {
			get {
				return false; 
			}
		}

		protected override string OwnJavascriptInclude {
			get {
				return ""; 
			}
		}

		public override string XUACompatibleOverride {
			get {
				return null; 
			}
		}

		protected void InitializeUrls() {
			Uri uri = new Uri((RuntimePlatformUtils.RequestIsSecure(Request) ? "https": "http") + Request.Url.ToString().Substring(Request.Url.Scheme.Length));
			string applicationUrl = AppUtils.Instance.getImagePath(/*internalAccess*/false,/*includeSessionIdIfNeeded*/ false);
			actionUrl = "";
			bookmarkableUrl = uri.GetLeftPart(UriPartial.Authority) + applicationUrl;
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			if ((inParamCourseCode!= "")) {
				parameters.Add(new Pair<string, string>("CourseCode", HttpUtility.UrlEncode(inParamCourseCode, Request.ContentEncoding)));
			}
			if (Request.AppRelativeCurrentExecutionFilePath.IndexOf('/', 2) == -1) {
				AppInfo appInfo = AppInfo.GetAppInfo();
				if (appInfo != null) {
					string pageHeader = appInfo.OsContext.OsISAPIFilter.GetPage(Request);
					if (appInfo.OsContext.IsCookielessSession || (pageHeader != null && pageHeader.IndexOf('/', 1) != -1)) {
						actionUrl = applicationUrl;
					}
				}
				actionUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Safeguarding_List", parameters,/*useParamsOnlyIfNeededForRule*/ true);
			}
			bookmarkableUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Safeguarding_List", parameters,/*useParamsOnlyIfNeededForRule*/ false);

		}

		protected override void OnInit(EventArgs e) {
			HeContext heContext = AppInfo.GetAppInfo().OsContext;
			heContext.CurrentScreen = this;
			try {
				heContext.CurrentExecutionFileName = Path.GetFileName(Request.CurrentExecutionFilePath);
			} catch {}
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			ThemeProvider_wt_WebBlockInstance21 = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main) FindControl("ThemeProvider_wt_WebBlockInstance21");
			wt_Button59 = (OutSystems.HubEdition.WebWidgets.Button) FindControl("wt_Button59");
			if (this.wt_Button59 != null) {
				this.wt_Button59.Click += new System.EventHandler(this.wt_Button59_Click);
			}
			wt_Container66 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container66");
			wtLearnerListWrapper = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtLearnerListWrapper");
			wt_Container5 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container5");
			wt_Container24 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container24");
			wt_Container56 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container56");
			wt_Container44 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container44");
			wt_Container54 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container54");
			wt_Container93 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container93");
			wt_Container22 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container22");
			wt_Container29 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container29");
			wtLearnerList = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtLearnerList");
			wtLearnerList.StartIndexExpression = () => Functions.rssespacerichwidgets_ActionList_Navigation_GetStartIndex(heContext, wtLearnerList.ClientID, false, -1);
			wtLearnerList.LineCountExpression = () => 10;
			wtLearnerList.EmptyMessageExpression = () => "No items to show...";
			wt_Container4 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container4");
			Page.Error += new EventHandler(Page_Error);
			this.Load += new System.EventHandler(this.Page_Load);
			this.PreRender += new System.EventHandler(this.Page_PreRender);
		}

		public override Control FindControl(string id) {
			if (id == "wt_WebBlockInstance74") {
				return ThemeProvider_wt_WebBlockInstance21.wtHelpUpdate.FindControl("wt_WebBlockInstance74");
			}
			if (id == "ThemeProvider_wt_WebBlockInstance83") {
				return ThemeProvider_wt_WebBlockInstance21.wtHeaderActions.FindControl("ThemeProvider_wt_WebBlockInstance83");
			}
			if (id == "RichWidgets_wt_WebBlockInstance35") {
				return ThemeProvider_wt_WebBlockInstance21.wtTitle.FindControl("RichWidgets_wt_WebBlockInstance35");
			}
			if (id == "wt_Text43") {
				return ThemeProvider_wt_WebBlockInstance21.wtTitle.FindControl("wt_Text43");
			}
			if (id == "wt_Button59") {
				return ThemeProvider_wt_WebBlockInstance21.wtTitle.FindControl("wt_Button59");
			}
			if (id == "wt_Container66") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Container66");
			}
			if (id == "wt_Table94") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Table94");
			}
			if (id == "wt_TableRow64") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_TableRow64");
			}
			if (id == "wt_TableCell85") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_TableCell85");
			}
			if (id == "wt_Text15") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Text15");
			}
			if (id == "wt_TableCell75") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_TableCell75");
			}
			if (id == "wt_InlineExpression18") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_InlineExpression18");
			}
			if (id == "wt_TableCell68") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_TableCell68");
			}
			if (id == "wt_InlineExpression20") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_InlineExpression20");
			}
			if (id == "wt_Text77") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Text77");
			}
			if (id == "wt_TableCell13") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_TableCell13");
			}
			if (id == "wt_Text46") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Text46");
			}
			if (id == "wt_TableRow49") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_TableRow49");
			}
			if (id == "wt_TableCell39") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_TableCell39");
			}
			if (id == "wt_Input80") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Input80");
			}
			if (id == "wt_TableCell87") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_TableCell87");
			}
			if (id == "wtTarget_TargetDate") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wtTarget_TargetDate");
			}
			if (id == "RichWidgets_wt_WebBlockInstance82") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("RichWidgets_wt_WebBlockInstance82");
			}
			if (id == "wt_TableCell9") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_TableCell9");
			}
			if (id == "wtSafeguardingDD") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wtSafeguardingDD");
			}
			if (id == "wt_TableCell86") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_TableCell86");
			}
			if (id == "Chosen_wt_WebBlockInstance70") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("Chosen_wt_WebBlockInstance70");
			}
			if (id == "wtStaffDD") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wtStaffDD");
			}
			if (id == "wtLearnerListWrapper") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wtLearnerListWrapper");
			}
			if (id == "wt_Container5") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Container5");
			}
			if (id == "RichWidgets_wt_WebBlockInstance97") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("RichWidgets_wt_WebBlockInstance97");
			}
			if (id == "wt_Container24") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Container24");
			}
			if (id == "wt_Container56") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Container56");
			}
			if (id == "wt_Text60") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Text60");
			}
			if (id == "wt_Container44") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Container44");
			}
			if (id == "wt_Text30") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Text30");
			}
			if (id == "wt_Container54") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Container54");
			}
			if (id == "wt_Text10") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Text10");
			}
			if (id == "wt_Container93") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Container93");
			}
			if (id == "wt_Text50") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Text50");
			}
			if (id == "wt_Container22") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Container22");
			}
			if (id == "wt_InlineExpression31") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_InlineExpression31");
			}
			if (id == "wt_Text2") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Text2");
			}
			if (id == "wt_Container29") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Container29");
			}
			if (id == "wtLearnerList") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wtLearnerList");
			}
			if (id == "wt_Container4") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("wt_Container4");
			}
			if (id == "RichWidgets_wt_WebBlockInstance71") {
				return ThemeProvider_wt_WebBlockInstance21.wtMainContent.FindControl("RichWidgets_wt_WebBlockInstance71");
			}

			return base.FindControl(id);
		}


		private void Page_Load(object sender, System.EventArgs e) {
			// init vars
			AppInfo appInfo = Global.App;
			if (appInfo != null) {
				heContext = appInfo.OsContext;
			}
			Response.ContentType = "text/html; charset=" + Response.ContentEncoding.WebName;
			OutSystems.HubEdition.RuntimePlatform.Web.JavaScriptManager.CheckRelativeJavaScriptPrefix(AppUtils.Instance.getImagePath());
			appInfo.IsLoadingScreen = !IsPostBack;
			((OSPageViewState) Page).EnableResetViewState();
			if (!IsPostBack) {
				ArrayList screenParameters = (ArrayList) Global.App.OsContext.Session["CaseConferencing._ScreenParameters_Safeguarding_List"];
				bool screenParametersInSession = false;
				object screenParametersKey = heContext.Session["_ScreenParametersKey"];
				if ((screenParametersKey == null || this.Key.Equals(ObjectKey.Parse(Convert.ToString(screenParametersKey)))) && screenParameters != null) {
					try {
						if (screenParameters.Count > 0) {
							object paramValue = screenParameters[0];
							if (paramValue != null) {
								inParamCourseCode = (string) paramValue;
							}
						}
						screenParametersInSession = true;
					} catch (Exception parametersException) {
						ErrorLog.LogApplicationError("Failed to load Screen Input Parameters from session.", "ScreenParametersKey = " + screenParametersKey + ", Count = " + screenParameters.Count + "\r\n" + parametersException.StackTrace, heContext, "Global");
					} finally {
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_Safeguarding_List"] = null;
						heContext.Session["_ScreenParametersKey"] = null;
					}
				}
				else if (Request.HttpMethod == "GET") {
					if (Request.QueryString["CourseCode"] != null) {
						inParamCourseCode = Request.QueryString["CourseCode"];
					}
				}
				else if (Request.HttpMethod == "POST") {
					if (Request.Form["CourseCode"] != null) {
						inParamCourseCode = Request.Form["CourseCode"];
					}
				}
			}
			if (!appInfo.IsApplicationEnabled) {
				ErrorLog.LogApplicationError(new Exception("eSpace " + appInfo.eSpaceName + " is disabled"), heContext, "Global");
				String contact = BuiltInFunction.EncodeUrl(RuntimePlatformUtils.GetAdministrationEmail());
				try {
					Server.Transfer("/customHandlers/app_offline.aspx?contact=" + contact + "&errorCode=APPLICATION_OFFLINE");
				}
				catch (System.Threading.ThreadAbortException) {}
				catch {
					Response.Redirect("/customHandlers/internalerror.aspx");
				}
			}
			InitializeUrls();
			Actions.ActionOnBeginWebRequest(heContext);
			if (!IsPostBack) {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				Preparation(heContext);
				bool bindEditRecords = !IsPostBack;
				ssLearnerListListDoDataBind = true;
				Title = "Safeguarding List"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Safeguarding_List", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} else {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				FetchViewState();
			}

		}

		private bool _negociateTabIndexesExecuted = false;

		private void Page_PreRender(object sender, System.EventArgs e) {
			ClientScript.RegisterArrayDeclaration("OsPage_Validators", "{}");
			if (!_negociateTabIndexesExecuted) {
				NegotiateTabIndexes();
				_negociateTabIndexesExecuted = true;
			}
			foreach(Control child in this.Controls) {
				DisableViewState(child);
			}
		}

		private void NegotiateTabIndexes() {
			short tabindex=1;
			tabindex = NegotiateTabIndexes(tabindex, true);
		}

		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {
			try {
				wt_Button59 = wt_Button59 ??(OutSystems.HubEdition.WebWidgets.Button) rootCtrl.FindControl("wt_Button59");
			} catch {}
			string jsString = (wt_Button59 != null) ? "return OsEnterKey('" +wt_Button59.ClientID + "', arguments[0] || window.event)": "";

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {
						string onkeydown = ctrl.Attributes["onkeydown"];
						if (onkeydown == null)
						onkeydown = "";
						ctrl.Attributes.Add("onkeydown", onkeydown + jsString);

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}



		private void Page_Error(object sender, System.EventArgs e) {
			if (! new ssCaseConferencing.Flows.FlowSafeguarding.ExceptionHandler(this, false).HandleException()) {
				DatabaseAccess.FreeupResources(false);
				Server.Transfer("_WebErrorPage.aspx");
			}
		}

		public override void ClearErrorHandler() {
			Error -= Page_Error;
		}

		public void CheckPermissions(HeContext heContext) {
			{
				bool check;
				ExtendedActions.CheckRegisteredRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportPractitionerRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSuperUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingBackofficeRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckPLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSafeGuardingLeadRole(heContext, 0, out check);
				if (check) return;
			}
			throw new NotRegisteredException("Registered role required");
		}


		public ObjectKey Key {
			get {
				return ObjectKey.Parse("ZCLc66EKy0KAT2j9T4cT4g"); 
			}
		}

		public bool isSecure {
			get {
				return true; 
			}
		}


		public class lcvSearch: VarsBag {
			public bool inParamIsFavorite;
			public lcvSearch(bool inParamIsFavorite) {
				this.inParamIsFavorite = inParamIsFavorite;
			}
		}
		/// <summary>
		/// Action <code>CommandSearch</code> that represents the Service Studio screen action
		///  <code>Search</code> <p> Description: </p>
		/// </summary>
		private bool CommandSearch(HeContext heContext, bool inParamIsFavorite) {
			CheckPermissions(heContext);
			try {
				// Query QueryGetSafeGuardingStudents
				{
					int QueryGetSafeGuardingStudents_maxRecords = ((Functions.rssespacerichwidgets_ActionList_Navigation_GetStartIndex(heContext, wtLearnerList.ClientID, true, -1) +wtLearnerList.RtWidget.LineCount) +1);
					if (QueryGetSafeGuardingStudents_maxRecords < 1) QueryGetSafeGuardingStudents_maxRecords = 1;
					queryResGetSafeGuardingStudents_outParamList = FuncssPreparation.QueryGetSafeGuardingStudents(heContext, QueryGetSafeGuardingStudents_maxRecords, IterationMultiplicity.Single, out queryResGetSafeGuardingStudents_outParamCount, varLcLearnerKeywordSearch
					, varLcStudentBirthDate
					, BuiltInFunction.NullDate()
					, varLcSafeguardingFilter
					, true
					, inParamCourseCode
					, BuiltInFunction.IntegerToEntityRefInteger(BuiltInFunction.TextToInteger(varLcStaffid))
					, Functions.rssespacerichwidgets_ActionList_SortColumn_GetOrderBy(heContext, wtLearnerList.ClientID, "{Student}.[Surname],{Student}.[Forenames]")
					);
				}
				// Refresh Widget (wtLearnerListWrapper)
				ssLearnerListListDoDataBind = true;
				((OSPageViewState) Page).AjaxRefresh(wtLearnerListWrapper, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvSafeGuardClick: VarsBag {
			public int resUserCheck2_outParamPermissionType = 0;

			public lcvSafeGuardClick() {
			}
		}
		/// <summary>
		/// Action <code>CommandSafeGuardClick</code> that represents the Service Studio screen action
		///  <code>SafeGuardClick</code> <p> Description: </p>
		/// </summary>
		private bool CommandSafeGuardClick(HeContext heContext) {
			CheckPermissions(heContext);
			lcvSafeGuardClick localVars = new lcvSafeGuardClick();
			try {
				// UserCheck2
				Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("58QulFjuCkeyZloWLgduIw")).ssId, out localVars.resUserCheck2_outParamPermissionType);
				if ((localVars.resUserCheck2_outParamPermissionType!=BuiltInFunction.NullIdentifier())) {
					// Destination = LearnerDetailsTabs

					if (OSPage.IsAjaxRequest) {
						// go to target page
						{

							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "D63wS0IcrU6RmCO_pzVF0w";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference);
							screenParameters.Add(0);
							screenParameters.Add("");
							screenParameters.Add(true);
							screenParameters.Add(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsTabs"] = screenParameters;
							string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference) + "&" +
							 "FromLearnerList=" + System.Web.HttpUtility.UrlEncode("True") + "&" +
							 "ActiveTabId=" + System.Web.HttpUtility.UrlEncode(Convert.ToString(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId));
							sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
							string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsTabs.aspx" + sURLQuery;
							((OSPageViewState) Page).RedirectLocation = sURL;
							return false;

						}
					} else {
						// go to target page
						{

							((OSPage) Page).ClearErrorHandler();
							// get parameters
							heContext.Session["_ScreenParametersKey"] = "D63wS0IcrU6RmCO_pzVF0w";
							ArrayList screenParameters = new ArrayList();
							screenParameters.Add(getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference);
							screenParameters.Add(0);
							screenParameters.Add("");
							screenParameters.Add(true);
							screenParameters.Add(ENTabsEntity.GetRecordByKey(ObjectKey.Parse("HW7xHQFW7ke5H0OO5Oi_pQ")).ssId);
							Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsTabs"] = screenParameters;
							Server.Transfer("LearnerDetailsTabs.aspx");
							return false;

						}
					}

				} else {
					// Update Screen
					return true;

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance21 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance21_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkLayout_Main) sender;
		}
		/// <summary>
		/// wt_WebBlockInstance74 Functions
		/// </summary>
		public void webBlck_WebBlockInstance74_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate widget = (ssCaseConferencing.Flows.FlowCommon.WBlkHelpUpdate) sender;
		}
		/// <summary>
		/// ThemeProvider_wt_WebBlockInstance83 Functions
		/// </summary>
		public void ThemeProvider_webBlck_WebBlockInstance83_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main widget = (proxy_CaseConferencing_ThemeProvider.Flows.FlowMainLayouts.WBlkMenu_Main) sender;
			widget.inParamActiveMenuItem = ENMenuItem2Entity.GetRecordByKey(ObjectKey.Parse("TGxnhijyIUe14O2UboFCqg")).ssId;
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance35 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance35_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("TdLOWtVwZUaoIuVq+LcKbQ")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Button59 Functions
		/// </summary>
		public void btn_Button59_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Button submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Button59_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), true);
			if (CommandSearch(heContext, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the label of the button (wt_Button59)
		/// </summary>
		/// <returns>Label of the Button (wt_Button59)</returns>
		public string
		btn_Button59_getLabel() {
			return "Ok";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Button59)
		/// </summary>
		/// <returns>The Visible State of wt_Button59</returns>
		public bool btn_Button59_isVisible() {
			return false;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Button59)
		/// </summary>
		/// <returns>The Enabled State of wt_Button59</returns>
		public bool btn_Button59_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container66 Functions
		/// </summary>
		public void cnt_Container66_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container66_setInlineAttributes(sender, e);
		}
		public string cnt_Container66_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container66_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container66)
		/// </summary>
		/// <returns>The Visible State of wt_Container66</returns>
		public bool cnt_Container66_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression18 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 0h4TLrbYtUms3nlOOHR2wA) Expression: "Date of Birth"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression18() {
			return "Date of Birth";
		}
		/// <summary>
		/// wt_InlineExpression20 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = y0FzL80BP0eRjhQ4LOMgqQ) Expression: "Safeguarding"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression20() {
			return "Safeguarding";
		}
		/// <summary>
		/// wt_Input80 Functions
		/// </summary>
		public void inputwt_Input80_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
		}
		/// <summary>
		/// AjaxChange event handler for widget wt_Input80
		/// </summary>
		public void inputwt_Input80_AjaxChange(object sender, System.EventArgs e) {
			if (CommandSearch(heContext
			, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwt_Input80_input_value() {
			if (("" !=varLcLearnerKeywordSearch)) {
				return varLcLearnerKeywordSearch;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wt_Input80");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return varLcLearnerKeywordSearch;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwt_Input80_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					varLcLearnerKeywordSearch = ""; 
				} else {
					varLcLearnerKeywordSearch = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				varLcLearnerKeywordSearch = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wt_Input80)
		/// </summary>
		/// <returns>The Visible State of wt_Input80</returns>
		public bool inputwt_Input80_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Input80)
		/// </summary>
		/// <returns>The Enabled State of wt_Input80</returns>
		public bool inputwt_Input80_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwt_Input80)
		/// </summary>
		/// <returns>The Mandatory Value of inputwt_Input80</returns>
		public bool inputwt_Input80_isMandatory() {
			return false;
		}

		/// <summary>
		/// Gets the prompt of the input (wt_Input80)
		/// </summary>
		/// <returns>Prompt of the Input (wt_Input80)</returns>
		public string inputwt_Input80_getPrompt() {
			return "Enter name or learner ref...";
		}
		/// <summary>
		/// wtTarget_TargetDate Functions
		/// </summary>
		public void inputwtTarget_TargetDate_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
		}
		/// <summary>
		/// AjaxChange event handler for widget wtTarget_TargetDate
		/// </summary>
		public void inputwtTarget_TargetDate_AjaxChange(object sender, System.EventArgs e) {
			if (CommandSearch(heContext
			, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtTarget_TargetDate_input_value() {
			if (((new DateTime(1900, 1, 1, 0, 0, 0)) !=varLcStudentBirthDate)) {
				return varLcStudentBirthDate.ToString(FormatInfo.GetOutputDateFormatString(), FormatInfo.defaultHeCultureInfo);
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtTarget_TargetDate");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDateValidate, validate)) {

					if (((new DateTime(1900, 1, 1, 0, 0, 0)) ==varLcStudentBirthDate)) {
						return "";
					}
					return varLcStudentBirthDate.ToString(FormatInfo.GetOutputDateFormatString(), FormatInfo.defaultHeCultureInfo);
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtTarget_TargetDate_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					varLcStudentBirthDate = (new DateTime(1900, 1, 1, 0, 0, 0)); 
				} else {
					varLcStudentBirthDate = OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDate(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				varLcStudentBirthDate = (new DateTime(1900, 1, 1, 0, 0, 0)); 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtTarget_TargetDate)
		/// </summary>
		/// <returns>The Visible State of wtTarget_TargetDate</returns>
		public bool inputwtTarget_TargetDate_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtTarget_TargetDate)
		/// </summary>
		/// <returns>The Enabled State of wtTarget_TargetDate</returns>
		public bool inputwtTarget_TargetDate_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtTarget_TargetDate)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtTarget_TargetDate</returns>
		public bool inputwtTarget_TargetDate_isMandatory() {
			return false;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance82 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance82_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkInput_Calendar widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkInput_Calendar) sender;
			widget.inParamInputWidgetId = this.FindControl("wtTarget_TargetDate").ClientID;
			widget.inParamMinYear = -1;
			widget.inParamMaxYear = -1;
			widget.inParamAlign = "Bl";
			widget.inParamSingleClick = true;
			widget.inParamShowWeekNumbers = false;
			widget.inParamUpdateOnCloseOnly = false;
			widget.inParamShowOthers = false;
			widget.inParamFirstDay = 0;
			widget.inParamShowTime = false;
			widget.inParamShow24HourFormat = true;
			widget.inParamReuseCalendarObject = false;
			widget.inParamInitialDate = new DateTime(1900, 1, 1, 0, 0, 0);
			widget.inParamDateFormat = "";
			widget.inParamSpecialDays = "";
			widget.inParamOnUpdate = "";
			widget.inParamFlatStyle = false;
			widget.inParamButtonWidgetId = "";
			widget.inParamYearStep = 2;
		}
		/// <summary>
		/// wtSafeguardingDD Functions
		/// </summary>
		public void selSafeguardingDD_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
			if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

			if (Rt_wtSafeguardingDD_reclist == null) {
				using(Transaction wtSafeguardingDD_trans = DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction()) {
					string wtSafeguardingDD_sql = "SELECT [ID], [LABEL], NULL, NULL FROM " + ENSafeguardingIssueTypeEntity.LocalViewName(heContext.AppInfo.Tenant.Id, BuiltInFunction.GetCurrentLocale()) + " WHERE [IS_ACTIVE] <> 0 OR [ID] = @Selection  ORDER BY [ORDER], [LABEL]";
					Command Rt_wtSafeguardingDD_sqlCmd = wtSafeguardingDD_trans.CreateCommand(wtSafeguardingDD_sql);
					Rt_wtSafeguardingDD_sqlCmd.CreateParameter("@Selection", varLcSafeguardingFilter);
					Rt_wtSafeguardingDD_sqlCmd.TransformParametersSyntax();
					Rt_wtSafeguardingDD_reclist = new RLSafeguardingIssueTypeRecordList();
					Rt_wtSafeguardingDD_reclist.Transaction = wtSafeguardingDD_trans;
					Rt_wtSafeguardingDD_reclist.AllOptimizedAttributes = new BitArray[1] {
						new BitArray(4, false)
					}
					;
					DatabaseAccess.ForCurrentDatabase.ExecuteQuery(Rt_wtSafeguardingDD_sqlCmd, Rt_wtSafeguardingDD_reclist, "WebSelectWidget load operation");
					Rt_wtSafeguardingDD_reclist = (RLSafeguardingIssueTypeRecordList) Rt_wtSafeguardingDD_reclist.Duplicate();
				}
			}
			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("All", "__ossli_1"));
			if (Rt_wtSafeguardingDD.SpecialListVal == "1")
			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
			Rt_wtSafeguardingDD_reclist.StartIteration();
			try {
				while (!Rt_wtSafeguardingDD_reclist.Eof) {
					((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wtSafeguardingDD_reclist.CurrentRec.ssENSafeguardingIssueType.ssLabel, Rt_wtSafeguardingDD_reclist.CurrentRec.ssENSafeguardingIssueType.ssId));
					if (varLcSafeguardingFilter == Convert.ToString(Rt_wtSafeguardingDD_reclist.CurrentRec.ssENSafeguardingIssueType.ssId)) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
					}
					Rt_wtSafeguardingDD_reclist.Advance();
				}
			} finally {
				Rt_wtSafeguardingDD_reclist.EndIteration();
			}
		}
		/// <summary>
		/// AjaxChange event handler for widget wtSafeguardingDD
		/// </summary>
		public void selSafeguardingDD_AjaxChange(object sender, System.EventArgs e) {
			if (CommandSearch(heContext
			, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		public void selSafeguardingDD_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wtSafeguardingDD.SpecialListVal = dropDown.SelectedValue.Substring(8);
				varLcSafeguardingFilter = "";
			}
			else {
				Rt_wtSafeguardingDD.SpecialListVal = "";
				try {
					varLcSafeguardingFilter = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtSafeguardingDD)
		/// </summary>
		/// <returns>The Visible State of wtSafeguardingDD</returns>
		public bool selSafeguardingDD_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtSafeguardingDD)
		/// </summary>
		/// <returns>The Enabled State of wtSafeguardingDD</returns>
		public bool selSafeguardingDD_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (selSafeguardingDD)
		/// </summary>
		/// <returns>The Mandatory Value of selSafeguardingDD</returns>
		public bool selSafeguardingDD_isMandatory() {
			return false;
		}

		/// <summary>
		/// Chosen_wt_WebBlockInstance70 Functions
		/// </summary>
		public void Chosen_webBlck_WebBlockInstance70_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_Chosen.Flows.FlowChosenCommon.WBlkchosenWebBlock widget = (proxy_CaseConferencing_Chosen.Flows.FlowChosenCommon.WBlkchosenWebBlock) sender;
			widget.inParamElementId = this.FindControl("wtStaffDD").ClientID;
			widget.inParamClass = "";
			widget.inParamNoResultsText = "No results matched";
		}
		/// <summary>
		/// wtStaffDD Functions
		/// </summary>
		public void selStaffDD_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxChange, null);
			if (!((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Visible) return;

			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem("-", "__ossli_All"));
			if (Rt_wtStaffDD.SpecialListVal == "All")
			((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count - 1;
			RLListItemRecordList Rt_wtStaffDD_reclist = queryResGEtPersons_outParamList;
			Rt_wtStaffDD_reclist.StartIteration();
			try {
				while (!Rt_wtStaffDD_reclist.Eof) {
					((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Add(new ListItem(Rt_wtStaffDD_reclist.CurrentRec.ssSTListItem.ssDescription, Rt_wtStaffDD_reclist.CurrentRec.ssSTListItem.ssId));
					if (varLcStaffid == Convert.ToString(Rt_wtStaffDD_reclist.CurrentRec.ssSTListItem.ssId)) {
						((OutSystems.HubEdition.WebWidgets.DropDownList) sender).SelectedIndex = ((OutSystems.HubEdition.WebWidgets.DropDownList) sender).Items.Count-1;
					}
					Rt_wtStaffDD_reclist.Advance();
				}
			} finally {
				Rt_wtStaffDD_reclist.EndIteration();
			}
		}
		/// <summary>
		/// AjaxChange event handler for widget wtStaffDD
		/// </summary>
		public void selStaffDD_AjaxChange(object sender, System.EventArgs e) {
			if (CommandSearch(heContext
			, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		public void selStaffDD_dropDown_valueChanged(object sender, System.EventArgs e) {
			OutSystems.HubEdition.WebWidgets.DropDownList dropDown = (OutSystems.HubEdition.WebWidgets.DropDownList) sender;
			if (dropDown.SelectedValue.StartsWith("__ossli_")) {
				Rt_wtStaffDD.SpecialListVal = dropDown.SelectedValue.Substring(8);
				varLcStaffid = "";
			}
			else {
				Rt_wtStaffDD.SpecialListVal = "";
				try {
					varLcStaffid = Convert.ToString(dropDown.SelectedValue);
				} catch (Exception) {}
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtStaffDD)
		/// </summary>
		/// <returns>The Visible State of wtStaffDD</returns>
		public bool selStaffDD_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtStaffDD)
		/// </summary>
		/// <returns>The Enabled State of wtStaffDD</returns>
		public bool selStaffDD_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (selStaffDD)
		/// </summary>
		/// <returns>The Mandatory Value of selStaffDD</returns>
		public bool selStaffDD_isMandatory() {
			return false;
		}

		/// <summary>
		/// wtLearnerListWrapper Functions
		/// </summary>
		public void cntLearnerListWrapper_onDataBinding(object sender, System.EventArgs e) {
			cntLearnerListWrapper_setInlineAttributes(sender, e);
		}
		public string cntLearnerListWrapper_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntLearnerListWrapper_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtLearnerListWrapper)
		/// </summary>
		/// <returns>The Visible State of wtLearnerListWrapper</returns>
		public bool cntLearnerListWrapper_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container5 Functions
		/// </summary>
		public void cnt_Container5_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container5_setInlineAttributes(sender, e);
		}
		public string cnt_Container5_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container5_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container5)
		/// </summary>
		/// <returns>The Visible State of wt_Container5</returns>
		public bool cnt_Container5_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance97 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance97_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkList_Counter widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkList_Counter) sender;
			widget.inParamStartIndex = Functions.rssespacerichwidgets_ActionList_Navigation_GetStartIndex(heContext, wtLearnerList.ClientID, true, -1);
			widget.inParamTotalRowCount = queryResGetSafeGuardingStudents_outParamCount;
			widget.inParamLineCount = wtLearnerList.RtWidget.LineCount;
		}
		/// <summary>
		/// wt_Container24 Functions
		/// </summary>
		public void cnt_Container24_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container24_setInlineAttributes(sender, e);
		}
		public string cnt_Container24_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:relative;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container24_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container24)
		/// </summary>
		/// <returns>The Visible State of wt_Container24</returns>
		public bool cnt_Container24_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container56 Functions
		/// </summary>
		public void cnt_Container56_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container56_setInlineAttributes(sender, e);
		}
		public string cnt_Container56_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container56_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container56)
		/// </summary>
		/// <returns>The Visible State of wt_Container56</returns>
		public bool cnt_Container56_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container44 Functions
		/// </summary>
		public void cnt_Container44_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container44_setInlineAttributes(sender, e);
		}
		public string cnt_Container44_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container44_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container44)
		/// </summary>
		/// <returns>The Visible State of wt_Container44</returns>
		public bool cnt_Container44_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container54 Functions
		/// </summary>
		public void cnt_Container54_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container54_setInlineAttributes(sender, e);
		}
		public string cnt_Container54_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container54_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container54)
		/// </summary>
		/// <returns>The Visible State of wt_Container54</returns>
		public bool cnt_Container54_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container93 Functions
		/// </summary>
		public void cnt_Container93_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container93_setInlineAttributes(sender, e);
		}
		public string cnt_Container93_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container93_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container93)
		/// </summary>
		/// <returns>The Visible State of wt_Container93</returns>
		public bool cnt_Container93_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container22 Functions
		/// </summary>
		public void cnt_Container22_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container22_setInlineAttributes(sender, e);
		}
		public string cnt_Container22_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container22_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container22)
		/// </summary>
		/// <returns>The Visible State of wt_Container22</returns>
		public bool cnt_Container22_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression31 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = pJFVTWbvL06Nni0kdcfqvQ) Expression: "Persons"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression31() {
			return "Persons";
		}
		/// <summary>
		/// wt_Container29 Functions
		/// </summary>
		public void cnt_Container29_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container29_setInlineAttributes(sender, e);
		}
		public string cnt_Container29_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container29_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container29)
		/// </summary>
		/// <returns>The Visible State of wt_Container29</returns>
		public bool cnt_Container29_isVisible() {
			return true;
		}

		/// <summary>
		/// wtLearnerList Functions
		/// </summary>
		public void recListLearnerList_onDataBinding(object sender, System.EventArgs e) {
			// widget wtLearnerList
			ssLearnerListList = queryResGetSafeGuardingStudents_outParamList;
			ssLearnerListListDoDataBind = false;
			ssLearnerListListDataBound = true;
		}
		public void recListLearnerList_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssLearnerListList.Length > 0) {
					ssLearnerListList.CurrentRec = ssLearnerListList[ssLearnerListList.CurrentRowNumber];
				}
				if (ssLearnerListList.Length > e.SelectedIndex) {
					ssLearnerListList.CurrentRec = ssLearnerListList[e.SelectedIndex];
					ssLearnerListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListLearnerList_Store(object dataItem, int index) {
			RCStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecord tmprec = (RCStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecord) dataItem;
			ArrayList tmpFields = new ArrayList();
			tmpFields.Add(tmprec.ssENStudent.ssStudentReference == "" ?(object) null: tmprec.ssENStudent.ssStudentReference);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENStudent.ChangedAttributes, new BitArray(new bool[] {
				true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENStudent.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
			}
			))));
			if (index < wtLearnerList_storage.Count) {
				wtLearnerList_storage[index] = tmpFields;
			} else {
				wtLearnerList_storage.Add(tmpFields);
			}
			return "";
		}
		public void recListLearnerList_Restore() {

			#region fetch ssLearnerListList.

			// Read the needed fields of ssLearnerListList from storewtLearnerList_list
			ssLearnerListList = new RLStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecordList();
			ArrayList storewtLearnerList_list;
			storewtLearnerList_list = (ArrayList) ViewStateAttributes.GetFromViewState("wtLearnerList_list", null);
			if (storewtLearnerList_list == null) {
				return;
			} else {

				foreach(ArrayList tmpFieldswtLearnerList_list in storewtLearnerList_list) {
					if (tmpFieldswtLearnerList_list != null) {
						// Aux current record variable
						RCStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecord tmpAuxCurrentRecordwtLearnerList_list = new RCStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecord(null);
						tmpAuxCurrentRecordwtLearnerList_list.ssENStudent.ssStudentReference = (string) (tmpFieldswtLearnerList_list[0] == null ? "": tmpFieldswtLearnerList_list[0]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStudent.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtLearnerList_list[1]);

						tmpAuxCurrentRecordwtLearnerList_list.ssENStudent.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtLearnerList_list[2]);

						ssLearnerListList.Append(tmpAuxCurrentRecordwtLearnerList_list);
					}
				}
			}
			ssLearnerListList.CurrentRowNumber = -1;
			#endregion


			#region fetch ssLearnerListList runtime properties state.


			if (storewtLearnerList_list.Count > 0) {
				ssLearnerListList.RestoreRecordListState(storewtLearnerList_list.Count - 1, false);
			} else {
				ssLearnerListList.CurrentRowNumber = 0;
			}

			#endregion

			wtLearnerList_storage = storewtLearnerList_list;
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListLearnerList_Clear(object sender, EventArgs e) {
			wtLearnerList_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListLearnerList_Rebuild(int startIndex, int lineCount) {
			if (ssLearnerListList.Length != -1) {
				wtLearnerList_storage.Clear();
				for (int i=startIndex; i<ssLearnerListList.Data.Count && i<startIndex+lineCount; i++) {
					recListLearnerList_Store(ssLearnerListList.Data[i], wtLearnerList_storage.Count);
				}
			}
		}
		public void recListLearnerList_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtLearnerList widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecordList getWtLearnerListList() {
			if (ssLearnerListListDoDataBind) {
				recListLearnerList_onDataBinding(this, null);
			}

			return ssLearnerListList;
		}
		/// <summary>
		/// wt_Container88 Functions
		/// </summary>
		public void cnt_Container88_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container88_setInlineAttributes(sender, e);
		}
		public string cnt_Container88_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "border-left: solid 1px #DADADA;position:relative";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container88_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container88)
		/// </summary>
		/// <returns>The Visible State of wt_Container88</returns>
		public bool cnt_Container88_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container14 Functions
		/// </summary>
		public void cnt_Container14_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container14_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container14_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container14_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container14
		/// </summary>
		public void cnt_Container14_AjaxClick(object sender, System.EventArgs e) {
			if (CommandSafeGuardClick(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container14)
		/// </summary>
		/// <returns>The Visible State of wt_Container14</returns>
		public bool cnt_Container14_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container65 Functions
		/// </summary>
		public void cnt_Container65_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container65_setInlineAttributes(sender, e);
		}
		public string cnt_Container65_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container65_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container65)
		/// </summary>
		/// <returns>The Visible State of wt_Container65</returns>
		public bool cnt_Container65_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Image27 Functions
		/// </summary>
		public void img_Image27_onDataBinding(object sender, System.EventArgs e) {
			img_Image27_setInlineAttributes(sender, e);
		}
		public string img_Image27_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("onerror", "this.src=\'img/missingphoto.png\';" .ToString());
			return "";
		}

		/// <summary>
		/// Gets the URL of the image (wt_Image27)
		/// </summary>
		/// <returns>URL of the Image (wt_Image27)</returns>
		public string img_Image27_getURL() {
			string url = getWtLearnerListList().CurrentRec.ssENStudent.ssStudentPhotoURL;
			url = url.Replace("&amp;", "&");
			return url; 
		}
		/// <summary>
		/// wt_Container76 Functions
		/// </summary>
		public void cnt_Container76_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container76_setInlineAttributes(sender, e);
		}
		public string cnt_Container76_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container76_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container76)
		/// </summary>
		/// <returns>The Visible State of wt_Container76</returns>
		public bool cnt_Container76_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container63 Functions
		/// </summary>
		public void cnt_Container63_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container63_setInlineAttributes(sender, e);
		}
		public string cnt_Container63_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container63_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container63)
		/// </summary>
		/// <returns>The Visible State of wt_Container63</returns>
		public bool cnt_Container63_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression55 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = Ag9FkOQWDUu6BZlq44cafA) Expression: ToUpper + ", " +
		///  LearnerList.List.Current.Student.Forenames + "("
		/// + LearnerList.List.Current.Student.StudentReference + ")"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression55() {
			return (((((BuiltInFunction.ToUpper(getWtLearnerListList().CurrentRec.ssENStudent.ssSurname) + ", ") +getWtLearnerListList().CurrentRec.ssENStudent.ssForenames) + "(") +getWtLearnerListList().CurrentRec.ssENStudent.ssStudentReference) + ")");
		}
		/// <summary>
		/// wt_Container41 Functions
		/// </summary>
		public void cnt_Container41_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container41_setInlineAttributes(sender, e);
		}
		public string cnt_Container41_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container41_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container41)
		/// </summary>
		/// <returns>The Visible State of wt_Container41</returns>
		public bool cnt_Container41_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression79 Functions
		/// </summary>
		public void expression_InlineExpression79_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression79_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression79_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:block;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = 4NUG3KiK2UenaRg8nFPX1w) Expression:
		///  LearnerList.List.Current.Student.MainOfferingCode
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression79() {
			return getWtLearnerListList().CurrentRec.ssENStudent.ssMainOfferingCode;
		}
		/// <summary>
		/// wt_Container34 Functions
		/// </summary>
		public void cnt_Container34_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container34_setInlineAttributes(sender, e);
		}
		public string cnt_Container34_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container34_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container34)
		/// </summary>
		/// <returns>The Visible State of wt_Container34</returns>
		public bool cnt_Container34_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container69 Functions
		/// </summary>
		public void cnt_Container69_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container69_setInlineAttributes(sender, e);
		}
		public string cnt_Container69_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = (("color:" +getWtLearnerListList().CurrentRec.ssENRAGStatus.ssHexColor) + ";");
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container69_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container69)
		/// </summary>
		/// <returns>The Visible State of wt_Container69</returns>
		public bool cnt_Container69_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance84 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance84_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("TdLOWtVwZUaoIuVq+LcKbQ")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression36 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = FuG9WgbcZEel992WXVz8DQ) Expression:
		///  LearnerList.List.Current.SafeguardingIssue.SafeguardingIssueType
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression36() {
			return getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssSafeguardingIssueType;
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance53 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance53_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("czBBwmf9lEi7m5aRoX_bmA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression61 Functions
		/// </summary>
		public void expression_InlineExpression61_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression61_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression61_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left:4px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = LQClqrJ6TkazZnFVvUoOAA) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression61() {
			return (((getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssDateOfRefferal!=BuiltInFunction.NullDate())) ?(getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssDateOfRefferal.ToString(FormatInfo.GetOutputDateFormatString(), FormatInfo.defaultHeCultureInfo)):("-"));
		}
		/// <summary>
		/// wt_Container16 Functions
		/// </summary>
		public void cnt_Container16_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container16_setInlineAttributes(sender, e);
		}
		public string cnt_Container16_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Lead Professional assigned to case" .ToString());
			if (!cnt_Container16_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container16)
		/// </summary>
		/// <returns>The Visible State of wt_Container16</returns>
		public bool cnt_Container16_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance38 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance38_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("F0OdMTnS+E63CzTzGXJvyg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression12 Functions
		/// </summary>
		public void expression_InlineExpression12_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression12_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression12_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left:4px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = vD67HUVjV0Kl2ngxlN_BmQ) Expression:
		///  LearnerList.List.Current.Staff.Forenames + " " + LearnerList.List.Current.Staff.Surname
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression12() {
			return ((getWtLearnerListList().CurrentRec.ssENStaff.ssForenames+ " ") +getWtLearnerListList().CurrentRec.ssENStaff.ssSurname);
		}
		/// <summary>
		/// wt_Container91 Functions
		/// </summary>
		public void cnt_Container91_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container91_setInlineAttributes(sender, e);
		}
		public string cnt_Container91_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container91_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container91)
		/// </summary>
		/// <returns>The Visible State of wt_Container91</returns>
		public bool cnt_Container91_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container23 Functions
		/// </summary>
		public void cnt_Container23_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container23_setInlineAttributes(sender, e);
		}
		public string cnt_Container23_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", "Aditional Info" .ToString());
			if (!cnt_Container23_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container23)
		/// </summary>
		/// <returns>The Visible State of wt_Container23</returns>
		public bool cnt_Container23_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container72 Functions
		/// </summary>
		public void cnt_Container72_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container72_setInlineAttributes(sender, e);
		}
		public string cnt_Container72_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", ("Action Taken: " +getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssActionTaken).ToString());
			if (!cnt_Container72_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container72)
		/// </summary>
		/// <returns>The Visible State of wt_Container72</returns>
		public bool cnt_Container72_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If58 Functions
		/// </summary>
		bool if_wt_If58_hasRun=false;
		bool if_wt_If58_evalResult;
		public bool if_wt_If58() {
			if (if_wt_If58_hasRun) {
				if_wt_If58_hasRun = false;
				return if_wt_If58_evalResult;
			}
			if_wt_If58_hasRun = true;
			if_wt_If58_evalResult = (getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssActionTaken!= "");
			return if_wt_If58_evalResult;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance40 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance40_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("qNkLT4+je06EiemVL6FhPg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression8 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = wRsWGcHD0U6tvRg3Qnl_kA) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression8() {
			return (((BuiltInFunction.Length(getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssActionTaken) <30)) ?(getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssActionTaken):((BuiltInFunction.Substr(getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssActionTaken, 0, 30) + "...")));
		}
		/// <summary>
		/// wt_Container78 Functions
		/// </summary>
		public void cnt_Container78_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container78_setInlineAttributes(sender, e);
		}
		public string cnt_Container78_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", ("Adicionar Info: " +getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssAdditionalInformation).ToString());
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-size:12px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container78_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container78)
		/// </summary>
		/// <returns>The Visible State of wt_Container78</returns>
		public bool cnt_Container78_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If42 Functions
		/// </summary>
		bool if_wt_If42_hasRun=false;
		bool if_wt_If42_evalResult;
		public bool if_wt_If42() {
			if (if_wt_If42_hasRun) {
				if_wt_If42_hasRun = false;
				return if_wt_If42_evalResult;
			}
			if_wt_If42_hasRun = true;
			if_wt_If42_evalResult = (getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssAdditionalInformation!= "");
			return if_wt_If42_evalResult;
		}

		/// <summary>
		/// wt_Container96 Functions
		/// </summary>
		public void cnt_Container96_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container96_setInlineAttributes(sender, e);
		}
		public string cnt_Container96_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container96_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container96)
		/// </summary>
		/// <returns>The Visible State of wt_Container96</returns>
		public bool cnt_Container96_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance73 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance73_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("U1BH4_qg4UmmI25QgluAGg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression1 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = ogkkA9DfHEeH8RJadN0a9w) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression1() {
			return (((BuiltInFunction.Length(getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssAdditionalInformation) <30)) ?(getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssAdditionalInformation):((BuiltInFunction.Substr(getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssAdditionalInformation, 0, 30) + "...")));
		}
		/// <summary>
		/// wt_If57 Functions
		/// </summary>
		bool if_wt_If57_hasRun=false;
		bool if_wt_If57_evalResult;
		public bool if_wt_If57() {
			if (if_wt_If57_hasRun) {
				if_wt_If57_hasRun = false;
				return if_wt_If57_evalResult;
			}
			if_wt_If57_hasRun = true;
			if_wt_If57_evalResult = (getWtLearnerListList().CurrentRec.ssENSafeguardingOutcome.ssId!=BuiltInFunction.NullTextIdentifier());
			return if_wt_If57_evalResult;
		}

		/// <summary>
		/// wt_Container52 Functions
		/// </summary>
		public void cnt_Container52_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container52_setInlineAttributes(sender, e);
		}
		public string cnt_Container52_setInlineAttributes(object sender, System.EventArgs e) {
			((IAttributeAccessor) sender).SetAttribute("title", ("Outcome: " +getWtLearnerListList().CurrentRec.ssENSafeguardingOutcome.ssLabel).ToString());
			if (!cnt_Container52_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container52)
		/// </summary>
		/// <returns>The Visible State of wt_Container52</returns>
		public bool cnt_Container52_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance33 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance33_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("I19JY1SUkEC+0j_09LvKzQ")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression92 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = Hn4E8npMcUej1P_BauuNXA) Expression:
		///  LearnerList.List.Current.SafeguardingOutcome.Label
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression92() {
			return getWtLearnerListList().CurrentRec.ssENSafeguardingOutcome.ssLabel;
		}
		/// <summary>
		/// wt_Container32 Functions
		/// </summary>
		public void cnt_Container32_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container32_setInlineAttributes(sender, e);
		}
		public string cnt_Container32_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container32_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container32)
		/// </summary>
		/// <returns>The Visible State of wt_Container32</returns>
		public bool cnt_Container32_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance90 Functions
		/// </summary>
		public void webBlck_WebBlockInstance90_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowSafeguarding.WBlkAgenciesInvolved widget = (ssCaseConferencing.Flows.FlowSafeguarding.WBlkAgenciesInvolved) sender;
			widget.inParamSafeguardingIssueID = getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssId;
		}
		/// <summary>
		/// wt_Container7 Functions
		/// </summary>
		public void cnt_Container7_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container7_setInlineAttributes(sender, e);
		}
		public string cnt_Container7_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container7_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container7)
		/// </summary>
		/// <returns>The Visible State of wt_Container7</returns>
		public bool cnt_Container7_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance25 Functions
		/// </summary>
		public void webBlck_WebBlockInstance25_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowSafeguarding.WBlkPersonsInvolved widget = (ssCaseConferencing.Flows.FlowSafeguarding.WBlkPersonsInvolved) sender;
			widget.inParamSafeguardingIssueID = getWtLearnerListList().CurrentRec.ssENSafeguardingIssue.ssId;
		}
		/// <summary>
		/// wt_Container4 Functions
		/// </summary>
		public void cnt_Container4_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container4_setInlineAttributes(sender, e);
		}
		public string cnt_Container4_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container4)
		/// </summary>
		/// <returns>The Visible State of wt_Container4</returns>
		public bool cnt_Container4_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance71 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance71_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkList_Navigation widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkList_Navigation) sender;
			widget.inParamListWidgetId = wtLearnerList.ClientID;
			widget.inParamLineCount = wtLearnerList.RtWidget.LineCount;
			widget.inParamTotalRowCount = queryResGetSafeGuardingStudents_outParamCount;
			widget.inParamMaxPageNumbers = 5;
		}
		/// <summary>
		/// AjaxNotify event handler for widget RichWidgets_wt_WebBlockInstance71
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance71_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandSearch(heContext
			, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}


		public static class FuncCommandSearch {
		}
		public static class FuncCommandSafeGuardClick {
		}
		public static class FuncssPreparation {

			private static void QueryGetSafeGuardingStudentsReadDB(ref RCStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENStudent.Read(r, ref index);
				rec.ssENSafeguardingIssue.Read(r, ref index);
				rec.ssENRAGStatus.Read(r, ref index);
				rec.ssENStaff.Read(r, ref index);
				rec.ssENSafeguardingOutcome.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetSafeGuardingStudents" of Action "Preparation"
			/// </summary>
			public static RLStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecordList QueryGetSafeGuardingStudents(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstKeywordSearch, DateTime qpdaBirthDate, DateTime qpdaNullDate, string qpstSafeguardingTypeId, bool qpboIsAll, string qpstCourseCode, int qpinStaffId, string qpstOrderBy) {
				// Query Iterations: Single {LearnerList}
				// Refresh Query ewK6gUA+r0uQvKJs4I8Xcw Iterations: Single {LearnerList}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords == 1));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				Command sqlCountCmd = trans.CreateCommand();
				sqlCmd.CreateParameter("@qpstSafeguardingTypeId", DbType.String, qpstSafeguardingTypeId);
				sqlCountCmd.CreateParameter("@qpstSafeguardingTypeId", DbType.String, qpstSafeguardingTypeId);
				sqlCmd.CreateParameter("@qpstKeywordSearch", DbType.String, qpstKeywordSearch);
				sqlCountCmd.CreateParameter("@qpstKeywordSearch", DbType.String, qpstKeywordSearch);
				sqlCmd.CreateParameter("@qpdaBirthDate", DbType.DateTime, qpdaBirthDate);
				sqlCountCmd.CreateParameter("@qpdaBirthDate", DbType.DateTime, qpdaBirthDate);
				sqlCmd.CreateParameter("@qpdaNullDate", DbType.DateTime, qpdaNullDate);
				sqlCountCmd.CreateParameter("@qpdaNullDate", DbType.DateTime, qpdaNullDate);
				sqlCmd.CreateParameter("@qpboIsAll", DbType.Boolean, qpboIsAll);
				sqlCountCmd.CreateParameter("@qpboIsAll", DbType.Boolean, qpboIsAll);
				sqlCmd.CreateParameter("@qpstCourseCode", DbType.String, qpstCourseCode);
				sqlCountCmd.CreateParameter("@qpstCourseCode", DbType.String, qpstCourseCode);
				sqlCmd.CreateParameter("@qpinStaffId", DbType.Int32, qpinStaffId);
				sqlCountCmd.CreateParameter("@qpinStaffId", DbType.Int32, qpinStaffId);
				string advSql = "SELECT   " +
				 "  " +
				 " {Student}.[STUDENTREFERENCE], {Student}.[FORENAMES], {Student}.[SURNAME], {Student}.[DATEOFBIRTH], {Student}.[GENDER], {Student}.[MAINOFFERINGCODE], {Student}.[MAINOFFERINGNAME], {Student}.[STUDENTPHOTOURL], {Student}.[HOMEADDRESS], {Student}.[HOMEADDRESSPOSTCODE], {Student}.[CURRENTADDRESS], {Student}.[CURRENTADDRESSPOSTCODE], {Student}.[EMAILADDRESS], {Student}.[HOMETELEPHONE], {Student}.[MOBILEPHONE], {Student}.[NEXTOFKINNAME], {Student}.[NEXTOFKINRELATIONSHIP], {Student}.[NEXTOFKINADDRESS], {Student}.[NEXTOFKINPOSTCODE], {Student}.[NEXTOFKINPHONE], {Student}.[PERSONALTUTOR], {Student}.[NEXTOFKINEMAIL], {Student}.[HASCURRENTACTIVEENROLMENT], {Student}.[NETWORKLOGIN], {Student}.[NINUMBER], {Student}.[RESIDENTIALSTATUS], {Student}.[PREVIOUSSCHOOL],  " +
				 " {SafeguardingIssue}.[ID], {SafeguardingIssue}.[STUDENTREFERENCE], {SafeguardingIssue}.[SAFEGUARDINGISSUETYPE], {SafeguardingIssue}.[DATEOFREFFERAL], {SafeguardingIssue}.[ACTIONTAKEN], {SafeguardingIssue}.[RAGSTATUS], {SafeguardingIssue}.[ADDITIONALINFORMATION], {SafeguardingIssue}.[NUMBEROFCONCERNSRAISED], {SafeguardingIssue}.[FILERECEIVEDFROMSCHOOL], {SafeguardingIssue}.[LEADPROFESSIONAL], {SafeguardingIssue}.[SAFEGUARDINGOUTCOME], {SafeguardingIssue}.[SAFEGUARDINGOUTCOMEOTHERTEXT], {SafeguardingIssue}.[SAFEGUARDINGNATUREOFCONCERN], {SafeguardingIssue}.[DETAILSOFCONCERN], {SafeguardingIssue}.[LEARNERAGEATTIMEOFREFERRAL], {SafeguardingIssue}.[SAFEGUARDINGREFERRALMADETO], {SafeguardingIssue}.[UPDATEDON], {SafeguardingIssue}.[UPDATEDBY],      " +
				 " {RAGStatus}.[ID], {RAGStatus}.[LABEL], {RAGStatus}.[ORDER], {RAGStatus}.[IS_ACTIVE], {RAGStatus}.[HEXCOLOR],       " +
				 " {Staff}.[ID], {Staff}.[FORENAMES], {Staff}.[SURNAME], {Staff}.[ADNAME], {Staff}.[STAFFNUMBER], {Staff}.[EXTENSION], {Staff}.[EXTENSION2], {Staff}.[DDI], {Staff}.[DDI2], {Staff}.[JOBTITLE], {Staff}.[DEPARTMENT], {Staff}.[OFFICE], {Staff}.[SITEDESCRIPTION], {Staff}.[COSTCODE], {Staff}.[MIFAREID],       " +
				 " {SafeguardingOutcome}.[ID], {SafeguardingOutcome}.[LABEL], {SafeguardingOutcome}.[ORDER], {SafeguardingOutcome}.[IS_ACTIVE]  " +
				 "FROM  {Student}  " +
				 "INNER JOIN  {SafeguardingIssue} ON  {Student}.[STUDENTREFERENCE] =   {SafeguardingIssue}.[STUDENTREFERENCE] AND  ( @qpstSafeguardingTypeId = '' OR  {SafeguardingIssue}.[SAFEGUARDINGISSUETYPE] = @qpstSafeguardingTypeId )  " +
				 "LEFT JOIN  {RAGStatus} ON  {SafeguardingIssue}.[RAGSTATUS] =  {RAGStatus}.[ID]  " +
				 "LEFT JOIN  {Staff} ON  {SafeguardingIssue}.[LEADPROFESSIONAL] =  {Staff}.[ID]   " +
				 "LEFT JOIN  {SafeguardingOutcome} ON  {SafeguardingIssue}.[SAFEGUARDINGOUTCOME] =  {SafeguardingOutcome}.[ID]  " +
				 "WHERE  " +
				 "    ( {Student}.[STUDENTREFERENCE] like '%'+@qpstKeywordSearch +'%' OR   " +
				 "         {Student}.[FORENAMES] + ' ' +  {Student}.[SURNAME] like '%'+@qpstKeywordSearch +'%' OR   " +
				 "         {Student}.[SURNAME] + ' ' +  {Student}.[FORENAMES]  like '%'+@qpstKeywordSearch +'%'   " +
				 "     )  " +
				 "    AND (@qpdaBirthDate = @qpdaNullDate OR  {Student}.[DATEOFBIRTH] = @qpdaBirthDate )  " +
				 "    AND (@qpboIsAll = 0 OR EXISTS (SELECT  {SafeguardingIssue}.[ID] FROM  {SafeguardingIssue} WHERE  {SafeguardingIssue}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE]))  " +
				 "    AND (@qpstCourseCode ='' OR EXISTS (   " +
				 "                                        SELECT  {Student_Group}.[ID] FROM  {Student_Group}   " +
				 "                                                    INNER JOIN  {Group} ON  {Student_Group}.[GROUPID] =  {Group}.[ID] AND  {Student_Group}.[STUDENTREFERENCE] =  {Student}.[STUDENTREFERENCE] AND  {Student_Group}.[ENROLMENTSTATUS] = 'Active'  " +
				 "                                                    WHERE  {Group}.[GROUPNAME] = @qpstCourseCode   " +
				 "                                         )  " +
				 "    )  " +
				 "    AND (  @qpinStaffId = 0 OR  {Staff}.[ID] = @qpinStaffId )  " +
				 "ORDER BY " + BaseAppUtils.ReplaceEntityReferencesInParameter(DatabaseAccess.ForEspaceDatabase(10).DatabaseServices.DMLService.Identifiers, qpstOrderBy) + "";
				string sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				AppUtils.Instance.CheckReadOnlyEntityReferences(advSql);
				AppUtils.Instance.CheckForSelectStatement(sql);
				string sqlCount = "DECLARE @CountCursor CURSOR; SET @CountCursor = CURSOR STATIC READ_ONLY FOR ";
				sqlCount += sql;
				sqlCount += "; OPEN @CountCursor; SELECT @@CURSOR_ROWS; CLOSE @CountCursor; DEALLOCATE @CountCursor; ";
				sqlCmd.CommandText = sql;
				sqlCountCmd.CommandText = sqlCount;
				try {
					RLStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecordList outParamList = new RLStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecordList();
					if (multiplicity != IterationMultiplicity.Multiple) {
						outParamList.AlternateReadDBMethod = QueryGetSafeGuardingStudentsReadDB;
					}
					outParamList.Transaction = trans;
					BitArray[] opt = new BitArray[5];
					opt[0] = new BitArray(new bool[] {
						false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
					}
					);
					opt[1] = new BitArray(new bool[] {
						false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
					}
					);
					opt[2] = new BitArray(new bool[] {
						false, false, false, false, false
					}
					);
					opt[3] = new BitArray(new bool[] {
						false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
					}
					);
					opt[4] = new BitArray(new bool[] {
						false, false, false, false
					}
					);
					outParamList.AllOptimizedAttributes = opt;
					if (multiplicity == IterationMultiplicity.Multiple) {
						RLStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecordList _tmp = new RLStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecordList();
						_tmp.AlternateReadDBMethod = QueryGetSafeGuardingStudentsReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						_tmp.MaxRecords = maxRecords;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Safeguarding.Safeguarding_List.Preparation.GetSafeGuardingStudents.List");
							outParamList = (RLStaffStudentRAGStatusSafeguardingIssueSafeguardingOutcomeRecordList) _tmp.Duplicate();
							_tmp.CloseDataReader();
							if (maxRecords > 0 && outParamList.Length == maxRecords)
							outParamCount = Convert.ToInt32(sqlCountCmd.ExecuteScalarWithoutTransformParametersSyntax("Query Safeguarding.Safeguarding_List.Preparation.GetSafeGuardingStudents.Count", false));
							else
							outParamCount = outParamList.Length;
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else if (multiplicity == IterationMultiplicity.Never) {
						try {
							outParamCount = Convert.ToInt32(sqlCountCmd.ExecuteScalarWithoutTransformParametersSyntax("Query Safeguarding.Safeguarding_List.Preparation.GetSafeGuardingStudents.Count", false));
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Safeguarding.Safeguarding_List.Preparation.GetSafeGuardingStudents.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							outParamList.CloseDataReader();
						}
					} else {
						try {
							outParamCount = Convert.ToInt32(sqlCountCmd.ExecuteScalarWithoutTransformParametersSyntax("Query Safeguarding.Safeguarding_List.Preparation.GetSafeGuardingStudents.Count", false));
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Safeguarding.Safeguarding_List.Preparation.GetSafeGuardingStudents.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				} catch (System.InvalidOperationException aqExcep) {
					if (aqExcep.Message.StartsWith("Command parameter[")) {
						throw new DataBaseException("Problems accessing parameters in advanced query GetSafeGuardingStudents in Preparation in Safeguarding_List in Safeguarding in CaseConferencing (SELECT     {Student}.*,  {SafeguardingIssue}.*,      {RAGStatus}.*,       {Staff}.*,       {SafeguardingOutcome}.*  FROM {Student}  INNER JOIN {SafeguardingIssue} ON {Student}.[StudentReference] =  {SafeguardingIssue}.[StudentReference] AND  ( @SafeguardingTypeId = '' OR {SafeguardingIssue}.[SafeguardingIssueType] = @SafeguardingTypeId )  LEFT JOIN {RAGStatus} ON {SafeguardingIssue}.[RAGStatus] = {RAGStatus}.[Id]  LEFT JOIN {Staff} ON {SafeguardingIssue}.[LeadProfessional] = {Staff}.[Id]   LEFT JOIN {SafeguardingOutcome} ON {SafeguardingIssue}.[SafeguardingOutcome] = {SafeguardingOutcome}.[Id]  WHERE      ({Student}.[StudentReference] like '%'+@KeywordSearch +'%' OR           {Student}.[Forenames] + ' ' + {Student}.[Surname] like '%'+@KeywordSearch +'%' OR           {Student}.[Surname] + ' ' + {Student}.[Forenames]  like '%'+@KeywordSearch +'%'        )      AND (@BirthDate = @NullDate OR {Student}.[DateOfBirth] = @BirthDate )      AND (@IsAll = 0 OR EXISTS (SELECT {SafeguardingIssue}. ...): " + aqExcep.Message);
					}
					throw new DataBaseException("Error in advanced query GetSafeGuardingStudents in Preparation in Safeguarding_List in Safeguarding in CaseConferencing (SELECT     {Student}.*,  {SafeguardingIssue}.*,      {RAGStatus}.*,       {Staff}.*,       {SafeguardingOutcome}.*  FROM {Student}  INNER JOIN {SafeguardingIssue} ON {Student}.[StudentReference] =  {SafeguardingIssue}.[StudentReference] AND  ( @SafeguardingTypeId = '' OR {SafeguardingIssue}.[SafeguardingIssueType] = @SafeguardingTypeId )  LEFT JOIN {RAGStatus} ON {SafeguardingIssue}.[RAGStatus] = {RAGStatus}.[Id]  LEFT JOIN {Staff} ON {SafeguardingIssue}.[LeadProfessional] = {Staff}.[Id]   LEFT JOIN {SafeguardingOutcome} ON {SafeguardingIssue}.[SafeguardingOutcome] = {SafeguardingOutcome}.[Id]  WHERE      ({Student}.[StudentReference] like '%'+@KeywordSearch +'%' OR           {Student}.[Forenames] + ' ' + {Student}.[Surname] like '%'+@KeywordSearch +'%' OR           {Student}.[Surname] + ' ' + {Student}.[Forenames]  like '%'+@KeywordSearch +'%'        )      AND (@BirthDate = @NullDate OR {Student}.[DateOfBirth] = @BirthDate )      AND (@IsAll = 0 OR EXISTS (SELECT {SafeguardingIssue}. ...): " + aqExcep.Message);
				} catch (Exception aqExcep) {
					throw new DataBaseException("Error in advanced query GetSafeGuardingStudents in Preparation in Safeguarding_List in Safeguarding in CaseConferencing (SELECT     {Student}.*,  {SafeguardingIssue}.*,      {RAGStatus}.*,       {Staff}.*,       {SafeguardingOutcome}.*  FROM {Student}  INNER JOIN {SafeguardingIssue} ON {Student}.[StudentReference] =  {SafeguardingIssue}.[StudentReference] AND  ( @SafeguardingTypeId = '' OR {SafeguardingIssue}.[SafeguardingIssueType] = @SafeguardingTypeId )  LEFT JOIN {RAGStatus} ON {SafeguardingIssue}.[RAGStatus] = {RAGStatus}.[Id]  LEFT JOIN {Staff} ON {SafeguardingIssue}.[LeadProfessional] = {Staff}.[Id]   LEFT JOIN {SafeguardingOutcome} ON {SafeguardingIssue}.[SafeguardingOutcome] = {SafeguardingOutcome}.[Id]  WHERE      ({Student}.[StudentReference] like '%'+@KeywordSearch +'%' OR           {Student}.[Forenames] + ' ' + {Student}.[Surname] like '%'+@KeywordSearch +'%' OR           {Student}.[Surname] + ' ' + {Student}.[Forenames]  like '%'+@KeywordSearch +'%'        )      AND (@BirthDate = @NullDate OR {Student}.[DateOfBirth] = @BirthDate )      AND (@IsAll = 0 OR EXISTS (SELECT {SafeguardingIssue}. ...): " + aqExcep.Message);
				}
			}

			/// <summary>
			/// Query Function "GEtPersons" of Action "Preparation"
			/// </summary>
			public static RLListItemRecordList QueryGEtPersons(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount) {
				// Query Iterations: Single {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords == 1));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string advSql = "SELECT distinct  {Staff}.[ID],  {Staff}.[FORENAMES] +  {Staff}.[SURNAME]  FROM  {SafeguardingIssue}  " +
				 "INNER JOIN  {Staff} ON   {Staff}.[ID] =  {SafeguardingIssue}.[LEADPROFESSIONAL]  " +
				 " ORDER BY  {Staff}.[FORENAMES] +  {Staff}.[SURNAME]";
				string sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				AppUtils.Instance.CheckReadOnlyEntityReferences(advSql);
				sqlCmd.CommandText = sql;
				try {
					RLListItemRecordList outParamList = new RLListItemRecordList();
					outParamList.Transaction = trans;
					BitArray[] opt = new BitArray[1];
					opt[0] = new BitArray(new bool[] {
						false, false
					}
					);
					outParamList.AllOptimizedAttributes = opt;
					if (multiplicity == IterationMultiplicity.Multiple) {
						RLListItemRecordList _tmp = new RLListItemRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						_tmp.MaxRecords = maxRecords;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Safeguarding.Safeguarding_List.Preparation.GEtPersons.List");
							outParamList = (RLListItemRecordList) _tmp.Duplicate();
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else if (multiplicity == IterationMultiplicity.Never) {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Safeguarding.Safeguarding_List.Preparation.GEtPersons.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							outParamList.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Safeguarding.Safeguarding_List.Preparation.GEtPersons.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				} catch (System.InvalidOperationException aqExcep) {
					if (aqExcep.Message.StartsWith("Command parameter[")) {
						throw new DataBaseException("Problems accessing parameters in advanced query GEtPersons in Preparation in Safeguarding_List in Safeguarding in CaseConferencing (SELECT distinct {Staff}.[Id], {Staff}.[Forenames] + {Staff}.[Surname]  FROM {SafeguardingIssue}  INNER JOIN {Staff} ON  {Staff}.[Id] = {SafeguardingIssue}.[LeadProfessional]   ORDER BY {Staff}.[Forenames] + {Staff}.[Surname] ): " + aqExcep.Message);
					}
					throw new DataBaseException("Error in advanced query GEtPersons in Preparation in Safeguarding_List in Safeguarding in CaseConferencing (SELECT distinct {Staff}.[Id], {Staff}.[Forenames] + {Staff}.[Surname]  FROM {SafeguardingIssue}  INNER JOIN {Staff} ON  {Staff}.[Id] = {SafeguardingIssue}.[LeadProfessional]   ORDER BY {Staff}.[Forenames] + {Staff}.[Surname] ): " + aqExcep.Message);
				} catch (Exception aqExcep) {
					throw new DataBaseException("Error in advanced query GEtPersons in Preparation in Safeguarding_List in Safeguarding in CaseConferencing (SELECT distinct {Staff}.[Id], {Staff}.[Forenames] + {Staff}.[Surname]  FROM {SafeguardingIssue}  INNER JOIN {Staff} ON  {Staff}.[Id] = {SafeguardingIssue}.[LeadProfessional]   ORDER BY {Staff}.[Forenames] + {Staff}.[Surname] ): " + aqExcep.Message);
				}
			}
		}



		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}


		public LocalState PushStack() {
			return null;
		}

		public void doRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				Preparation(heContext);

				Title = "Safeguarding List"; ssLearnerListListDoDataBind = true;
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Safeguarding_List", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// Perform the partial databind
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Safeguarding_List", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Ajax", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}



		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();
			ViewStateAttributes.SetInViewState("inParamCourseCode", inParamCourseCode, "");
			ViewStateAttributes.SetInViewState("varLcLearnerKeywordSearch", varLcLearnerKeywordSearch, "");
			ViewStateAttributes.SetInViewState("varLcStudentBirthDate", varLcStudentBirthDate, new DateTime(1900, 1, 1, 0, 0, 0));
			ViewStateAttributes.SetInViewState("varLcSafeguardingFilter", varLcSafeguardingFilter, "");
			ViewStateAttributes.SetInViewState("varLcStaffid", varLcStaffid, "");
			ViewStateAttributes.SetInViewState("wt_Input80_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wt_Input80")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtTarget_TargetDate_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtTarget_TargetDate")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtSafeguardingDD_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtSafeguardingDD")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtStaffDD_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtStaffDD")).Mandatory, false);
			if (IsAjaxRequest) {
				recListLearnerList_Rebuild((ssLearnerListListDataBound ? wtLearnerList.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtLearnerList.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtLearnerList_list", wtLearnerList_storage, null);
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			try {
				inParamCourseCode = (string) ViewStateAttributes.GetFromViewState("inParamCourseCode", "");
				varLcLearnerKeywordSearch = (string) ViewStateAttributes.GetFromViewState("varLcLearnerKeywordSearch", "");
				varLcStudentBirthDate = (DateTime) ViewStateAttributes.GetFromViewState("varLcStudentBirthDate", new DateTime(1900, 1, 1, 0, 0, 0));
				varLcSafeguardingFilter = (string) ViewStateAttributes.GetFromViewState("varLcSafeguardingFilter", "");
				varLcStaffid = (string) ViewStateAttributes.GetFromViewState("varLcStaffid", "");
				((IWidgetRuntimeProperties) this.FindControl("wt_Input80")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wt_Input80_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtTarget_TargetDate")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtTarget_TargetDate_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtSafeguardingDD")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtSafeguardingDD_Mandatory", false);
				((IWidgetRuntimeProperties) this.FindControl("wtStaffDD")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtStaffDD_Mandatory", false);
				recListLearnerList_Restore();
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}


		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			ValidationUtils.ValidateInput(this, "wt_Input80", parentEditRecord, ValidationUtils.validateTrue, validate);
			ValidationUtils.ValidateInput(this, "wtTarget_TargetDate", parentEditRecord, OutSystems.HubEdition.RuntimePlatform.BuiltInFunction.TextToDateValidate, validate);
			ValidationUtils.ValidateComboBox(this, "wtSafeguardingDD", parentEditRecord, validate);
			ValidationUtils.ValidateComboBox(this, "wtStaffDD", parentEditRecord, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}


		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}

		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			Page_Load(null, null); this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}


		public override void DataBind() {
			base.DataBind();
			StoreViewState();
			OutSystems.HubEdition.WebWidgets.Utils.addValidationScriptsToPage(this);
		}



	}




}
