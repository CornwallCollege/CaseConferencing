/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.IO;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Runtime.Serialization;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Web.Caching;
using System.Text;
using System.Resources;

namespace ssCaseConferencing.Flows.FlowSafeguarding {

	public class ScrnPDFExport: OSPageViewStateCompressed, IWebScreen, INegotiateTabIndexes, IBookmarkableURL {


		public ScrnPDFExport(): base(CaseConferencing_Properties.QuirksMode) {
		}


		/// <summary>
		/// Screen Input Parameter inParamSafeguardingIssueID. Description:
		/// </summary>
		public int inParamSafeguardingIssueID = 0;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container8;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container50;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container61;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container64;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container46;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container39;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container51;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container44;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container3;
		/// <summary>
		/// Variable "True" if the Widget wt_If57
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If57T;

		/// <summary>
		/// Variable "True" if the Widget wt_If57
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If57F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container36;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container21;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container58;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container65;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container56;
		private RLStaffSafeguardingPersonsInvolvedRecordList _ssPersonsInvolvedListList = new RLStaffSafeguardingPersonsInvolvedRecordList();
		public RLStaffSafeguardingPersonsInvolvedRecordList ssPersonsInvolvedListList {
			get {
				return _ssPersonsInvolvedListList; 
			}
			set {
				_ssPersonsInvolvedListList = value;
				wtPersonsInvolvedList.DataSource = value;
				ssPersonsInvolvedListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtPersonsInvolvedList;
		public ArrayList wtPersonsInvolvedList_storage = new ArrayList();
		protected bool ssPersonsInvolvedListList_notUsedYet = true;
		protected bool ssPersonsInvolvedListListDoDataBind;
		protected bool ssPersonsInvolvedListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container23;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container54;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container41;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container60;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container31;
		private RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList _ssListRecords1List = new RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList();
		public RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList ssListRecords1List {
			get {
				return _ssListRecords1List; 
			}
			set {
				_ssListRecords1List = value;
				wtListRecords1.DataSource = value;
				ssListRecords1ListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtListRecords1;
		public ArrayList wtListRecords1_storage = new ArrayList();
		protected bool ssListRecords1List_notUsedYet = true;
		protected bool ssListRecords1ListDoDataBind;
		protected bool ssListRecords1ListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container20;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container52;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container11;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container37;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container17;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container42;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container55;


		protected override void GetBlocksCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}

		protected override void GetWidgetsCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}







		protected override string GetInlineStyleSheetInclude() {
			throw new InvalidOperationException();
		}





		protected override bool PageAllowsCallbacks() {
			return true;
		}


		protected string GetRequestInfoJavaScript() {
			return GetRequestInfoJavaScript("PwaqairNi0uMOEtXqGl_Sw", "PDFExport");
		}

		protected string GetVisitCode() {
			SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
			if (session["osIsNewVisit"] != null && ((bool) session["osIsNewVisit"])
			// && !NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)
			&& RuntimePlatformUtils.IsValidRequestForVisit()) {
				return "<script type=\"text/javascript\">outsystems.internal.$.get(\"/CaseConferencing/_status.aspx\")</script>";
			}
			return "";
		}

		public string GetCallbackDebug() {
			if (Request.HttpMethod == "GET" && Request.QueryString["__CALLBACK_DEBUG"] != null && Request.QueryString["__CALLBACK_DEBUG"] != "") {
				if (Request.QueryString["__CALLBACK_DEBUG"] == OutSystems.HubEdition.RuntimePlatform.AppInfo.GetParameter(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Callback_Debug_Information_Key)) {
					return OutSystems.HubEdition.RuntimePlatform.AppInfo.GetAppInfo().GetCallbackDebugInformation();
				}
			}
			return "";
		}

		protected string GetHeadTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadTop, "PwaqairNi0uMOEtXqGl_Sw", "PDFExport");
		}

		protected string GetHeadBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadBottom, "PwaqairNi0uMOEtXqGl_Sw", "PDFExport");
		}

		protected string GetBodyTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyTop, "PwaqairNi0uMOEtXqGl_Sw", "PDFExport");
		}

		protected string GetBodyBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyBottom, "PwaqairNi0uMOEtXqGl_Sw", "PDFExport");
		}

		HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();



		static ScrnPDFExport() {
		}


		RLStaffSafeguardingPersonsInvolvedRecordList queryResGetSafeguardingPersonsInvolvedsBySafeguardingIssue_outParamList = new RLStaffSafeguardingPersonsInvolvedRecordList();
		int queryResGetSafeguardingPersonsInvolvedsBySafeguardingIssue_outParamCount = 0;
		RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList queryResGetSafeguardingAgenciesInvolvedsBySafeguardingIssu_outParamList = new RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList();
		int queryResGetSafeguardingAgenciesInvolvedsBySafeguardingIssu_outParamCount = 0;
		RLStaffStudentRAGStatusSafeguardingIssueSafeguardingDocumentsSafeguardingIssueTypeSafeguardingReferralMadeToSafeguardiRecordList queryResGetSafeguardingIssue_outParamList = new RLStaffStudentRAGStatusSafeguardingIssueSafeguardingDocumentsSafeguardingIssueTypeSafeguardingReferralMadeToSafeguardiRecordList();
		int queryResGetSafeguardingIssue_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// Query datasetGetSafeguardingIssue
			int datasetGetSafeguardingIssue_maxRecords = 0;
			queryResGetSafeguardingIssue_outParamList = FuncssPreparation.datasetGetSafeguardingIssue(heContext, datasetGetSafeguardingIssue_maxRecords, IterationMultiplicity.Never, out queryResGetSafeguardingIssue_outParamCount, inParamSafeguardingIssueID
			);
			// Query datasetGetSafeguardingPersonsInvolvedsBySafeguardingIssue
			int datasetGetSafeguardingPersonsInvolvedsBySafeguardingIssue_maxRecords = Math.Max(wtPersonsInvolvedList.StartIndex + wtPersonsInvolvedList.LineCount + 1, 0);
			queryResGetSafeguardingPersonsInvolvedsBySafeguardingIssue_outParamList = FuncssPreparation.datasetGetSafeguardingPersonsInvolvedsBySafeguardingIssue(heContext, datasetGetSafeguardingPersonsInvolvedsBySafeguardingIssue_maxRecords, IterationMultiplicity.Single, out queryResGetSafeguardingPersonsInvolvedsBySafeguardingIssue_outParamCount, inParamSafeguardingIssueID
			);
			// Query datasetGetSafeguardingAgenciesInvolvedsBySafeguardingIssu
			int datasetGetSafeguardingAgenciesInvolvedsBySafeguardingIssu_maxRecords = Math.Max(wtListRecords1.StartIndex + wtListRecords1.LineCount + 1, 0);
			queryResGetSafeguardingAgenciesInvolvedsBySafeguardingIssu_outParamList = FuncssPreparation.datasetGetSafeguardingAgenciesInvolvedsBySafeguardingIssu(heContext, datasetGetSafeguardingAgenciesInvolvedsBySafeguardingIssu_maxRecords, IterationMultiplicity.Single, out queryResGetSafeguardingAgenciesInvolvedsBySafeguardingIssu_outParamCount, inParamSafeguardingIssueID
			);
		}


		protected override BaseAppUtils GetAppUtils() {
			return AppUtils.Instance;
		}

		protected override string OwnCssUrl {
			get {
				return "PDFExport.css"; 
			}
		}

		protected override string OwnCssFile {
			get {
				return "PDFExport.css"; 
			}
		}

		protected override string BasicCssUrl {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string BasicCssFile {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssUrl {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssFile {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssUrl {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssFile {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssUrl {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssFile {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssUrl {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssFile {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string ThemeCssUrl {
			get {
				return RsseSpaceThemeProvider.Themes.ThemeThemeProvider.ThemeCssUrl; 
			}
		}

		protected override string ThemeCssFile {
			get {
				return "ReferenceTheme.ThemeProvider.css"; 
			}
		}

		protected override string ThemeExtraCssUrl {
			get {
				return RsseSpaceRichWidgets.Themes.ThemeLondonFixed.ThemeExtraCssUrl; 
			}
		}

		protected override string ThemeExtraCssFile {
			get {
				return "ReferenceTheme.LondonFixed.extra.css"; 
			}
		}

		public override bool IsUsingMobileTheme {
			get {
				return false; 
			}
		}

		protected override string OwnJavascriptInclude {
			get {
				return ""; 
			}
		}

		public override string XUACompatibleOverride {
			get {
				return null; 
			}
		}

		protected void InitializeUrls() {
			Uri uri = new Uri((RuntimePlatformUtils.RequestIsSecure(Request) ? "https": "http") + Request.Url.ToString().Substring(Request.Url.Scheme.Length));
			string applicationUrl = AppUtils.Instance.getImagePath(/*internalAccess*/false,/*includeSessionIdIfNeeded*/ false);
			actionUrl = "";
			bookmarkableUrl = uri.GetLeftPart(UriPartial.Authority) + applicationUrl;
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			if ((inParamSafeguardingIssueID!=0)) {
				parameters.Add(new Pair<string, string>("SafeguardingIssueID", HttpUtility.UrlEncode(Convert.ToString(inParamSafeguardingIssueID), Request.ContentEncoding)));
			}
			if (Request.AppRelativeCurrentExecutionFilePath.IndexOf('/', 2) == -1) {
				AppInfo appInfo = AppInfo.GetAppInfo();
				if (appInfo != null) {
					string pageHeader = appInfo.OsContext.OsISAPIFilter.GetPage(Request);
					if (appInfo.OsContext.IsCookielessSession || (pageHeader != null && pageHeader.IndexOf('/', 1) != -1)) {
						actionUrl = applicationUrl;
					}
				}
				actionUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "PDFExport", parameters,/*useParamsOnlyIfNeededForRule*/ true);
			}
			bookmarkableUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "PDFExport", parameters,/*useParamsOnlyIfNeededForRule*/ false);

		}

		protected override void OnInit(EventArgs e) {
			HeContext heContext = AppInfo.GetAppInfo().OsContext;
			heContext.CurrentScreen = this;
			try {
				heContext.CurrentExecutionFileName = Path.GetFileName(Request.CurrentExecutionFilePath);
			} catch {}
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wtPersonsInvolvedList.StartIndexExpression = () => 0;
			wtPersonsInvolvedList.LineCountExpression = () => 50;
			wtPersonsInvolvedList.EmptyMessageExpression = () => "No Additional Persons Involved";
			wtListRecords1.StartIndexExpression = () => 0;
			wtListRecords1.LineCountExpression = () => 50;
			wtListRecords1.EmptyMessageExpression = () => "No Agencies Involved.";
			Page.Error += new EventHandler(Page_Error);
			this.Load += new System.EventHandler(this.Page_Load);
			this.PreRender += new System.EventHandler(this.Page_PreRender);
		}

		public override Control FindControl(string id) {

			return base.FindControl(id);
		}


		private void Page_Load(object sender, System.EventArgs e) {
			// init vars
			AppInfo appInfo = Global.App;
			if (appInfo != null) {
				heContext = appInfo.OsContext;
			}
			Response.ContentType = "text/html; charset=" + Response.ContentEncoding.WebName;
			OutSystems.HubEdition.RuntimePlatform.Web.JavaScriptManager.CheckRelativeJavaScriptPrefix(AppUtils.Instance.getImagePath());
			appInfo.IsLoadingScreen = !IsPostBack;
			if (!IsPostBack) {
				ArrayList screenParameters = (ArrayList) Global.App.OsContext.Session["CaseConferencing._ScreenParameters_PDFExport"];
				bool screenParametersInSession = false;
				object screenParametersKey = heContext.Session["_ScreenParametersKey"];
				if ((screenParametersKey == null || this.Key.Equals(ObjectKey.Parse(Convert.ToString(screenParametersKey)))) && screenParameters != null) {
					try {
						if (screenParameters.Count > 0) {
							object paramValue = screenParameters[0];
							if (paramValue != null) {
								inParamSafeguardingIssueID = (int) paramValue;
							}
						}
						screenParametersInSession = true;
					} catch (Exception parametersException) {
						ErrorLog.LogApplicationError("Failed to load Screen Input Parameters from session.", "ScreenParametersKey = " + screenParametersKey + ", Count = " + screenParameters.Count + "\r\n" + parametersException.StackTrace, heContext, "Global");
					} finally {
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_PDFExport"] = null;
						heContext.Session["_ScreenParametersKey"] = null;
					}
				}
				else if (Request.HttpMethod == "GET") {
					if (Request.QueryString["SafeguardingIssueID"] != null) {
						inParamSafeguardingIssueID = Convert.ToInt32(Request.QueryString["SafeguardingIssueID"]);
					}
				}
				else if (Request.HttpMethod == "POST") {
					if (Request.Form["SafeguardingIssueID"] != null) {
						inParamSafeguardingIssueID = Convert.ToInt32(Request.Form["SafeguardingIssueID"]);
					}
				}
			}
			if (!appInfo.IsApplicationEnabled) {
				ErrorLog.LogApplicationError(new Exception("eSpace " + appInfo.eSpaceName + " is disabled"), heContext, "Global");
				String contact = BuiltInFunction.EncodeUrl(RuntimePlatformUtils.GetAdministrationEmail());
				try {
					Server.Transfer("/customHandlers/app_offline.aspx?contact=" + contact + "&errorCode=APPLICATION_OFFLINE");
				}
				catch (System.Threading.ThreadAbortException) {}
				catch {
					Response.Redirect("/customHandlers/internalerror.aspx");
				}
			}
			InitializeUrls();
			Actions.ActionOnBeginWebRequest(heContext);
			if (!IsPostBack) {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				Preparation(heContext);
				bool bindEditRecords = !IsPostBack;
				ssPersonsInvolvedListListDoDataBind = true;
				ssListRecords1ListDoDataBind = true;
				Title = "PDFExport"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "PDFExport", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} else {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				FetchViewState();
			}

		}

		private bool _negociateTabIndexesExecuted = false;

		private void Page_PreRender(object sender, System.EventArgs e) {
			ClientScript.RegisterArrayDeclaration("OsPage_Validators", "{}");
			if (!_negociateTabIndexesExecuted) {
				NegotiateTabIndexes();
				_negociateTabIndexesExecuted = true;
			}
			foreach(Control child in this.Controls) {
				DisableViewState(child);
			}
		}

		private void NegotiateTabIndexes() {
			short tabindex=1;
			tabindex = NegotiateTabIndexes(tabindex, false);
		}

		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}



		private void Page_Error(object sender, System.EventArgs e) {
			if (! new ssCaseConferencing.Flows.FlowSafeguarding.ExceptionHandler(this, false).HandleException()) {
				DatabaseAccess.FreeupResources(false);
				Server.Transfer("_WebErrorPage.aspx");
			}
		}

		public override void ClearErrorHandler() {
			Error -= Page_Error;
		}

		public void CheckPermissions(HeContext heContext) {
			return;
		}


		public ObjectKey Key {
			get {
				return ObjectKey.Parse("PwaqairNi0uMOEtXqGl_Sw"); 
			}
		}

		public bool isSecure {
			get {
				return true; 
			}
		}


		/// <summary>
		/// wt_Container8 Functions
		/// </summary>
		public void cnt_Container8_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container8_setInlineAttributes(sender, e);
		}
		public string cnt_Container8_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container8_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container8)
		/// </summary>
		/// <returns>The Visible State of wt_Container8</returns>
		public bool cnt_Container8_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container50 Functions
		/// </summary>
		public void cnt_Container50_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container50_setInlineAttributes(sender, e);
		}
		public string cnt_Container50_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container50_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container50)
		/// </summary>
		/// <returns>The Visible State of wt_Container50</returns>
		public bool cnt_Container50_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression48 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = avr6wxa+rESbMsPlv9B+9A) Expression: "Safeguarding Issue File for
		///  " + GetSafeguardingIssue.List.Current.Student.Forenames + " "
		/// + GetSafeguardingIssue.List.Current.Student.Surname + " (" +
		///  GetSafeguardingIssue.List.Current.SafeguardingIssue.StudentReference + ")"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression48() {
			return (((((("Safeguarding Issue File for " +queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENStudent.ssForenames) + " ") +queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENStudent.ssSurname) + " (") +queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssStudentReference) + ")");
		}
		/// <summary>
		/// wt_Container61 Functions
		/// </summary>
		public void cnt_Container61_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container61_setInlineAttributes(sender, e);
		}
		public string cnt_Container61_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container61_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container61)
		/// </summary>
		/// <returns>The Visible State of wt_Container61</returns>
		public bool cnt_Container61_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression53 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = fFk03+2OrkKwUkvZISPTZg) Expression: "Date Printed : " + CurrDate
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression53() {
			return ("Date Printed : " +BuiltInFunction.CurrDate().ToString(FormatInfo.GetOutputDateFormatString(), FormatInfo.defaultHeCultureInfo));
		}
		/// <summary>
		/// wt_Container64 Functions
		/// </summary>
		public void cnt_Container64_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container64_setInlineAttributes(sender, e);
		}
		public string cnt_Container64_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container64_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container64)
		/// </summary>
		/// <returns>The Visible State of wt_Container64</returns>
		public bool cnt_Container64_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression16 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = LigiV_Dq9U2LTIxczaxD8g) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression16() {
			return (((queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssSafeguardingIssueType==BuiltInFunction.NullTextIdentifier())) ?("Issue Type not set."):(queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssueType.ssLabel));
		}
		/// <summary>
		/// wt_Container46 Functions
		/// </summary>
		public void cnt_Container46_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container46_setInlineAttributes(sender, e);
		}
		public string cnt_Container46_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container46_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container46)
		/// </summary>
		/// <returns>The Visible State of wt_Container46</returns>
		public bool cnt_Container46_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression5 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = b_VBC31dOUeRP8vi9IjhlQ) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression5() {
			return (((queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssDateOfRefferal==BuiltInFunction.NullDate())) ?("Date Of Referral not set."):((((queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssDateOfRefferal.ToString(FormatInfo.GetOutputDateFormatString(), FormatInfo.defaultHeCultureInfo) + " (Learner was ") +Convert.ToString(queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssLearnerAgeAtTimeOfReferral)) + " years old on this date)")));
		}
		/// <summary>
		/// wt_Container39 Functions
		/// </summary>
		public void cnt_Container39_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container39_setInlineAttributes(sender, e);
		}
		public string cnt_Container39_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container39_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container39)
		/// </summary>
		/// <returns>The Visible State of wt_Container39</returns>
		public bool cnt_Container39_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression30 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = sl_1ioWhHk6g7+Z3R4gViQ) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression30() {
			return (((queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssSafeguardingNatureOfConcern==BuiltInFunction.NullIdentifier())) ?("Nature of Concern not set."):(queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingNatureOfConcern.ssLabel));
		}
		/// <summary>
		/// wt_Container51 Functions
		/// </summary>
		public void cnt_Container51_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container51_setInlineAttributes(sender, e);
		}
		public string cnt_Container51_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container51_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container51)
		/// </summary>
		/// <returns>The Visible State of wt_Container51</returns>
		public bool cnt_Container51_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression13 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = ViPxTN+VBEi4Yd+3H8GkgQ) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression13() {
			return (((queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssDetailsOfConcern== "")) ?("No details entered."):(queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssDetailsOfConcern));
		}
		/// <summary>
		/// wt_Container44 Functions
		/// </summary>
		public void cnt_Container44_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container44_setInlineAttributes(sender, e);
		}
		public string cnt_Container44_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container44_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container44)
		/// </summary>
		/// <returns>The Visible State of wt_Container44</returns>
		public bool cnt_Container44_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression28 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = AgyMhfZOsE6H04+V6o9Sew) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression28() {
			return (((queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssRAGStatus==BuiltInFunction.NullTextIdentifier())) ?("RAG Status not set."):(queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENRAGStatus.ssLabel));
		}
		/// <summary>
		/// wt_Container3 Functions
		/// </summary>
		public void cnt_Container3_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container3_setInlineAttributes(sender, e);
		}
		public string cnt_Container3_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container3)
		/// </summary>
		/// <returns>The Visible State of wt_Container3</returns>
		public bool cnt_Container3_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If57 Functions
		/// </summary>
		bool if_wt_If57_hasRun=false;
		bool if_wt_If57_evalResult;
		public bool if_wt_If57() {
			if (if_wt_If57_hasRun) {
				if_wt_If57_hasRun = false;
				return if_wt_If57_evalResult;
			}
			if_wt_If57_hasRun = true;
			if_wt_If57_evalResult = queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssFileReceivedFromSchool;
			return if_wt_If57_evalResult;
		}

		/// <summary>
		/// wt_Container36 Functions
		/// </summary>
		public void cnt_Container36_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container36_setInlineAttributes(sender, e);
		}
		public string cnt_Container36_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container36_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container36)
		/// </summary>
		/// <returns>The Visible State of wt_Container36</returns>
		public bool cnt_Container36_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container21 Functions
		/// </summary>
		public void cnt_Container21_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container21_setInlineAttributes(sender, e);
		}
		public string cnt_Container21_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container21_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container21)
		/// </summary>
		/// <returns>The Visible State of wt_Container21</returns>
		public bool cnt_Container21_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression1 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = vRQtBNYVwkmZVWvc1AjGSg) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression1() {
			return ((((queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENStaff.ssForenames+queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENStaff.ssSurname) == "")) ?("No Safeguarding Lead set."):((queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENStaff.ssForenames+queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENStaff.ssSurname)));
		}
		/// <summary>
		/// wt_Container58 Functions
		/// </summary>
		public void cnt_Container58_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container58_setInlineAttributes(sender, e);
		}
		public string cnt_Container58_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container58_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container58)
		/// </summary>
		/// <returns>The Visible State of wt_Container58</returns>
		public bool cnt_Container58_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container65 Functions
		/// </summary>
		public void cnt_Container65_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container65_setInlineAttributes(sender, e);
		}
		public string cnt_Container65_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container65_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container65)
		/// </summary>
		/// <returns>The Visible State of wt_Container65</returns>
		public bool cnt_Container65_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container56 Functions
		/// </summary>
		public void cnt_Container56_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container56_setInlineAttributes(sender, e);
		}
		public string cnt_Container56_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:absolute;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container56_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container56)
		/// </summary>
		/// <returns>The Visible State of wt_Container56</returns>
		public bool cnt_Container56_isVisible() {
			return true;
		}

		/// <summary>
		/// wtPersonsInvolvedList Functions
		/// </summary>
		public void recListPersonsInvolvedList_onDataBinding(object sender, System.EventArgs e) {
			recListPersonsInvolvedList_setInlineAttributes(sender, e);
			// widget wtPersonsInvolvedList
			ssPersonsInvolvedListList = queryResGetSafeguardingPersonsInvolvedsBySafeguardingIssue_outParamList;
			ssPersonsInvolvedListListDoDataBind = false;
			ssPersonsInvolvedListListDataBound = true;
		}
		public string recListPersonsInvolvedList_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:absolute;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		public void recListPersonsInvolvedList_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssPersonsInvolvedListList.Length > 0) {
					ssPersonsInvolvedListList.CurrentRec = ssPersonsInvolvedListList[ssPersonsInvolvedListList.CurrentRowNumber];
				}
				if (ssPersonsInvolvedListList.Length > e.SelectedIndex) {
					ssPersonsInvolvedListList.CurrentRec = ssPersonsInvolvedListList[e.SelectedIndex];
					ssPersonsInvolvedListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListPersonsInvolvedList_Store(object dataItem, int index) {
			return "";
		}
		public void recListPersonsInvolvedList_Restore() {
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListPersonsInvolvedList_Clear(object sender, EventArgs e) {
			wtPersonsInvolvedList_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListPersonsInvolvedList_Rebuild(int startIndex, int lineCount) {
			if (ssPersonsInvolvedListList.Length != -1) {
				wtPersonsInvolvedList_storage.Clear();
				for (int i=startIndex; i<ssPersonsInvolvedListList.Data.Count && i<startIndex+lineCount; i++) {
					recListPersonsInvolvedList_Store(ssPersonsInvolvedListList.Data[i], wtPersonsInvolvedList_storage.Count);
				}
			}
		}
		public void recListPersonsInvolvedList_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtPersonsInvolvedList widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStaffSafeguardingPersonsInvolvedRecordList getWtPersonsInvolvedListList() {
			if (ssPersonsInvolvedListListDoDataBind) {
				recListPersonsInvolvedList_onDataBinding(this, null);
			}

			return ssPersonsInvolvedListList;
		}
		/// <summary>
		/// wt_Container23 Functions
		/// </summary>
		public void cnt_Container23_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container23_setInlineAttributes(sender, e);
		}
		public string cnt_Container23_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container23_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container23)
		/// </summary>
		/// <returns>The Visible State of wt_Container23</returns>
		public bool cnt_Container23_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression49 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = t82GxEtm40+TkkksLhFreQ) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression49() {
			return (((getWtPersonsInvolvedListList().CurrentRec.ssENSafeguardingPersonsInvolved.ssStaffId==BuiltInFunction.NullIdentifier())) ?((getWtPersonsInvolvedListList().CurrentRec.ssENSafeguardingPersonsInvolved.ssExternalPerson+ " (External to college)")):(((getWtPersonsInvolvedListList().CurrentRec.ssENStaff.ssForenames+getWtPersonsInvolvedListList().CurrentRec.ssENStaff.ssSurname) + " (Member of staff)")));
		}
		/// <summary>
		/// wt_Container54 Functions
		/// </summary>
		public void cnt_Container54_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container54_setInlineAttributes(sender, e);
		}
		public string cnt_Container54_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container54_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container54)
		/// </summary>
		/// <returns>The Visible State of wt_Container54</returns>
		public bool cnt_Container54_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container41 Functions
		/// </summary>
		public void cnt_Container41_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container41_setInlineAttributes(sender, e);
		}
		public string cnt_Container41_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container41_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container41)
		/// </summary>
		/// <returns>The Visible State of wt_Container41</returns>
		public bool cnt_Container41_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container60 Functions
		/// </summary>
		public void cnt_Container60_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container60_setInlineAttributes(sender, e);
		}
		public string cnt_Container60_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container60_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container60)
		/// </summary>
		/// <returns>The Visible State of wt_Container60</returns>
		public bool cnt_Container60_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container31 Functions
		/// </summary>
		public void cnt_Container31_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container31_setInlineAttributes(sender, e);
		}
		public string cnt_Container31_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:absolute;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container31_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container31)
		/// </summary>
		/// <returns>The Visible State of wt_Container31</returns>
		public bool cnt_Container31_isVisible() {
			return true;
		}

		/// <summary>
		/// wtListRecords1 Functions
		/// </summary>
		public void recListListRecords1_onDataBinding(object sender, System.EventArgs e) {
			recListListRecords1_setInlineAttributes(sender, e);
			// widget wtListRecords1
			ssListRecords1List = queryResGetSafeguardingAgenciesInvolvedsBySafeguardingIssu_outParamList;
			ssListRecords1ListDoDataBind = false;
			ssListRecords1ListDataBound = true;
		}
		public string recListListRecords1_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "position:absolute;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		public void recListListRecords1_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssListRecords1List.Length > 0) {
					ssListRecords1List.CurrentRec = ssListRecords1List[ssListRecords1List.CurrentRowNumber];
				}
				if (ssListRecords1List.Length > e.SelectedIndex) {
					ssListRecords1List.CurrentRec = ssListRecords1List[e.SelectedIndex];
					ssListRecords1List.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListListRecords1_Store(object dataItem, int index) {
			return "";
		}
		public void recListListRecords1_Restore() {
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListListRecords1_Clear(object sender, EventArgs e) {
			wtListRecords1_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListListRecords1_Rebuild(int startIndex, int lineCount) {
			if (ssListRecords1List.Length != -1) {
				wtListRecords1_storage.Clear();
				for (int i=startIndex; i<ssListRecords1List.Data.Count && i<startIndex+lineCount; i++) {
					recListListRecords1_Store(ssListRecords1List.Data[i], wtListRecords1_storage.Count);
				}
			}
		}
		public void recListListRecords1_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtListRecords1 widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList getWtListRecords1List() {
			if (ssListRecords1ListDoDataBind) {
				recListListRecords1_onDataBinding(this, null);
			}

			return ssListRecords1List;
		}
		/// <summary>
		/// wt_Container20 Functions
		/// </summary>
		public void cnt_Container20_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container20_setInlineAttributes(sender, e);
		}
		public string cnt_Container20_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container20_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container20)
		/// </summary>
		/// <returns>The Visible State of wt_Container20</returns>
		public bool cnt_Container20_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression4 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = KWq4CqJqKken8JPl2R6zxg) Expression: internalIf + " : " +
		///  ListRecords1.List.Current.SafeguardingAgenciesInvolved.ContactName + " - Contact Number : "
		/// + ListRecords1.List.Current.SafeguardingAgenciesInvolved.ContactNumber
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression4() {
			return (((((((getWtListRecords1List().CurrentRec.ssENSafeguardingAgenciesInvolved.ssSafeguardingAgency==BuiltInFunction.NullTextIdentifier())) ?(getWtListRecords1List().CurrentRec.ssENSafeguardingAgenciesInvolved.ssOtherAgency):(getWtListRecords1List().CurrentRec.ssENSafeguardingAgency.ssLabel)) + " : ") +getWtListRecords1List().CurrentRec.ssENSafeguardingAgenciesInvolved.ssContactName) + " - Contact Number : ") +getWtListRecords1List().CurrentRec.ssENSafeguardingAgenciesInvolved.ssContactNumber);
		}
		/// <summary>
		/// wt_Container52 Functions
		/// </summary>
		public void cnt_Container52_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container52_setInlineAttributes(sender, e);
		}
		public string cnt_Container52_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container52_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container52)
		/// </summary>
		/// <returns>The Visible State of wt_Container52</returns>
		public bool cnt_Container52_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container11 Functions
		/// </summary>
		public void cnt_Container11_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container11_setInlineAttributes(sender, e);
		}
		public string cnt_Container11_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container11_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container11)
		/// </summary>
		/// <returns>The Visible State of wt_Container11</returns>
		public bool cnt_Container11_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression10 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = zAefN9avwUuDU5iHa5IdSA) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression10() {
			return (((queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssSafeguardingReferralMadeTo==BuiltInFunction.NullIdentifier())) ?("Not set."):(queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingReferralMadeTo.ssLabel));
		}
		/// <summary>
		/// wt_Container37 Functions
		/// </summary>
		public void cnt_Container37_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container37_setInlineAttributes(sender, e);
		}
		public string cnt_Container37_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container37_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container37)
		/// </summary>
		/// <returns>The Visible State of wt_Container37</returns>
		public bool cnt_Container37_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression59 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = y4_P8fJrCUSJPAHLUhTQDw) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression59() {
			return (((queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssActionTaken== "")) ?("Not set."):(queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssActionTaken));
		}
		/// <summary>
		/// wt_Container17 Functions
		/// </summary>
		public void cnt_Container17_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container17_setInlineAttributes(sender, e);
		}
		public string cnt_Container17_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container17_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container17)
		/// </summary>
		/// <returns>The Visible State of wt_Container17</returns>
		public bool cnt_Container17_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression18 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = sYrJXy9M7kWCgt471ukpFQ) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression18() {
			return (((queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssSafeguardingOutcome==BuiltInFunction.NullTextIdentifier())) ?("Not set."):(queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingOutcome.ssLabel));
		}
		/// <summary>
		/// wt_Container42 Functions
		/// </summary>
		public void cnt_Container42_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container42_setInlineAttributes(sender, e);
		}
		public string cnt_Container42_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container42_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container42)
		/// </summary>
		/// <returns>The Visible State of wt_Container42</returns>
		public bool cnt_Container42_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression15 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 12AyVZXXsEWvEzEIvjvARw) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression15() {
			return (((queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssSafeguardingOutcomeOtherText== "")) ?("Not set."):(queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssSafeguardingOutcomeOtherText));
		}
		/// <summary>
		/// wt_Container55 Functions
		/// </summary>
		public void cnt_Container55_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container55_setInlineAttributes(sender, e);
		}
		public string cnt_Container55_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container55_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container55)
		/// </summary>
		/// <returns>The Visible State of wt_Container55</returns>
		public bool cnt_Container55_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression35 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = mkHam9KgekeXiWcNY3DRdg) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression35() {
			return (((queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssAdditionalInformation== "")) ?("Not set."):(queryResGetSafeguardingIssue_outParamList.CurrentRec.ssENSafeguardingIssue.ssAdditionalInformation));
		}


		public static class FuncssPreparation {

			private static void datasetGetSafeguardingPersonsInvolvedsBySafeguardingIssueReadDB(ref RCStaffSafeguardingPersonsInvolvedRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENSafeguardingPersonsInvolved.Read(r, ref index);
				rec.ssENStaff.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetSafeguardingPersonsInvolvedsBySafeguardingIssue" of Action "Preparation"
			/// </summary>
			public static RLStaffSafeguardingPersonsInvolvedRecordList datasetGetSafeguardingPersonsInvolvedsBySafeguardingIssue(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP) {
				// Query Iterations: Single {PersonsInvolvedList}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENSafeguardingPersonsInvolved.[STAFFID] o2, NULL o3, ENSafeguardingPersonsInvolved.[EXTERNALPERSON] o4, NULL o5, ENStaff.[FORENAMES] o6, ENStaff.[SURNAME] o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19");
				fromBuilder.Append(" FROM ({SafeguardingPersonsInvolved} ENSafeguardingPersonsInvolved Left JOIN {Staff} ENStaff ON (ENSafeguardingPersonsInvolved.[STAFFID] = ENStaff.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENSafeguardingPersonsInvolved.[SAFEGUARDINGISSUE] = @qpinP) AND (ENSafeguardingPersonsInvolved.[SAFEGUARDINGISSUE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENSafeguardingPersonsInvolved.[SAFEGUARDINGISSUE] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStaffSafeguardingPersonsInvolvedRecordList outParamList = new RLStaffSafeguardingPersonsInvolvedRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetSafeguardingPersonsInvolvedsBySafeguardingIssueReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[2];
				opt[0] = new BitArray(new bool[] {
					true, false, false, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, false, true, false
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStaffSafeguardingPersonsInvolvedRecordList _tmp = new RLStaffSafeguardingPersonsInvolvedRecordList();
					_tmp.AlternateReadDBMethod = datasetGetSafeguardingPersonsInvolvedsBySafeguardingIssueReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Safeguarding.PDFExport.Preparation.GetSafeguardingPersonsInvolvedsBySafeguardingIssue.List");
						outParamList = (RLStaffSafeguardingPersonsInvolvedRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Safeguarding.PDFExport.Preparation.GetSafeguardingPersonsInvolvedsBySafeguardingIssue.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStaffSafeguardingPersonsInvolvedRecordList _tmp = new RLStaffSafeguardingPersonsInvolvedRecordList();
						_tmp.AlternateReadDBMethod = datasetGetSafeguardingPersonsInvolvedsBySafeguardingIssueReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Safeguarding.PDFExport.Preparation.GetSafeguardingPersonsInvolvedsBySafeguardingIssue.List");
							outParamList = (RLStaffSafeguardingPersonsInvolvedRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Safeguarding.PDFExport.Preparation.GetSafeguardingPersonsInvolvedsBySafeguardingIssue.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetSafeguardingAgenciesInvolvedsBySafeguardingIssuReadDB(ref RCSafeguardingAgencySafeguardingAgenciesInvolvedRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENSafeguardingAgenciesInvolved.Read(r, ref index);
				rec.ssENSafeguardingAgency.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetSafeguardingAgenciesInvolvedsBySafeguardingIssu" of Action "Preparation"
			/// </summary>
			public static RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList datasetGetSafeguardingAgenciesInvolvedsBySafeguardingIssu(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP) {
				// Query Iterations: Single {ListRecords1}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, ENSafeguardingAgenciesInvolved.[SAFEGUARDINGAGENCY] o3, ENSafeguardingAgenciesInvolved.[OTHERAGENCY] o4, ENSafeguardingAgenciesInvolved.[CONTACTNAME] o5, ENSafeguardingAgenciesInvolved.[CONTACTNUMBER] o6, NULL o7, ENSafeguardingAgency.[LABEL] o8, NULL o9, NULL o10");
				fromBuilder.Append(" FROM ({SafeguardingAgenciesInvolved} ENSafeguardingAgenciesInvolved Left JOIN {SafeguardingAgency} ENSafeguardingAgency ON (ENSafeguardingAgenciesInvolved.[SAFEGUARDINGAGENCY] = ENSafeguardingAgency.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENSafeguardingAgenciesInvolved.[SAFEGUARDINGISSUE] = @qpinP) AND (ENSafeguardingAgenciesInvolved.[SAFEGUARDINGISSUE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENSafeguardingAgenciesInvolved.[SAFEGUARDINGISSUE] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList outParamList = new RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetSafeguardingAgenciesInvolvedsBySafeguardingIssuReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[2];
				opt[0] = new BitArray(new bool[] {
					true, false, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, true, false, false, false, false
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList _tmp = new RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList();
					_tmp.AlternateReadDBMethod = datasetGetSafeguardingAgenciesInvolvedsBySafeguardingIssuReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Safeguarding.PDFExport.Preparation.GetSafeguardingAgenciesInvolvedsBySafeguardingIssu.List");
						outParamList = (RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Safeguarding.PDFExport.Preparation.GetSafeguardingAgenciesInvolvedsBySafeguardingIssu.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList _tmp = new RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList();
						_tmp.AlternateReadDBMethod = datasetGetSafeguardingAgenciesInvolvedsBySafeguardingIssuReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Safeguarding.PDFExport.Preparation.GetSafeguardingAgenciesInvolvedsBySafeguardingIssu.List");
							outParamList = (RLSafeguardingAgencySafeguardingAgenciesInvolvedRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Safeguarding.PDFExport.Preparation.GetSafeguardingAgenciesInvolvedsBySafeguardingIssu.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetSafeguardingIssueReadDB(ref RCStaffStudentRAGStatusSafeguardingIssueSafeguardingDocumentsSafeguardingIssueTypeSafeguardingReferralMadeToSafeguardingOuRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENRAGStatus.Read(r, ref index);
				rec.ssENSafeguardingDocuments.Read(r, ref index);
				rec.ssENSafeguardingIssue.Read(r, ref index);
				rec.ssENSafeguardingIssueType.Read(r, ref index);
				rec.ssENSafeguardingNatureOfConcern.Read(r, ref index);
				rec.ssENSafeguardingOutcome.Read(r, ref index);
				rec.ssENSafeguardingReferralMadeTo.Read(r, ref index);
				rec.ssENStaff.Read(r, ref index);
				rec.ssENStudent.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetSafeguardingIssue" of Action "Preparation"
			/// </summary>
			public static RLStaffStudentRAGStatusSafeguardingIssueSafeguardingDocumentsSafeguardingIssueTypeSafeguardingReferralMadeToSafeguardiRecordList datasetGetSafeguardingIssue(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, int qpinP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENRAGStatus.[LABEL] o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, ENSafeguardingIssue.[STUDENTREFERENCE] o11, ENSafeguardingIssue.[SAFEGUARDINGISSUETYPE] o12, ENSafeguardingIssue.[DATEOFREFFERAL] o13, ENSafeguardingIssue.[ACTIONTAKEN] o14, ENSafeguardingIssue.[RAGSTATUS] o15, ENSafeguardingIssue.[ADDITIONALINFORMATION] o16, NULL o17, ENSafeguardingIssue.[FILERECEIVEDFROMSCHOOL] o18, NULL o19, ENSafeguardingIssue.[SAFEGUARDINGOUTCOME] o20, ENSafeguardingIssue.[SAFEGUARDINGOUTCOMEOTHERTEXT] o21, ENSafeguardingIssue.[SAFEGUARDINGNATUREOFCONCERN] o22, ENSafeguardingIssue.[DETAILSOFCONCERN] o23, ENSafeguardingIssue.[LEARNERAGEATTIMEOFREFERRAL] o24, ENSafeguardingIssue.[SAFEGUARDINGREFERRALMADETO] o25, NULL o26, NULL o27, NULL o28, ENSafeguardingIssueType.[LABEL] o29, NULL o30, NULL o31, NULL o32, ENSafeguardingNatureOfConcern.[LABEL] o33, NULL o34, NULL o35, NULL o36, ENSafeguardingOutcome.[LABEL] o37, NULL o38, NULL o39, NULL o40, ENSafeguardingReferralMadeTo.[LABEL] o41, NULL o42, NULL o43, NULL o44, ENStaff.[FORENAMES] o45, ENStaff.[SURNAME] o46, NULL o47, NULL o48, NULL o49, NULL o50, NULL o51, NULL o52, NULL o53, NULL o54, NULL o55, NULL o56, NULL o57, NULL o58, NULL o59, ENStudent.[FORENAMES] o60, ENStudent.[SURNAME] o61, NULL o62, NULL o63, NULL o64, NULL o65, NULL o66, NULL o67, NULL o68, NULL o69, NULL o70, NULL o71, NULL o72, NULL o73, NULL o74, NULL o75, NULL o76, NULL o77, NULL o78, NULL o79," +
				" NULL o80, NULL o81, NULL o82, NULL o83, NULL o84, NULL o85");
				fromBuilder.Append(" FROM (((((((({SafeguardingIssueType} ENSafeguardingIssueType Left JOIN {SafeguardingIssue} ENSafeguardingIssue ON (ENSafeguardingIssue.[SAFEGUARDINGISSUETYPE] = ENSafeguardingIssueType.[ID]))  Left JOIN {SafeguardingNatureOfConcern} ENSafeguardingNatureOfConcern ON (ENSafeguardingIssue.[SAFEGUARDINGNATUREOFCONCERN] = ENSafeguardingNatureOfConcern.[ID]))  Left JOIN {SafeguardingOutcome} ENSafeguardingOutcome ON (ENSafeguardingIssue.[SAFEGUARDINGOUTCOME] = ENSafeguardingOutcome.[ID]))  Left JOIN {SafeguardingReferralMadeTo} ENSafeguardingReferralMadeTo ON (ENSafeguardingIssue.[SAFEGUARDINGREFERRALMADETO] = ENSafeguardingReferralMadeTo.[ID]))  Left JOIN {SafeguardingDocuments} ENSafeguardingDocuments ON (ENSafeguardingDocuments.[SAFEGUARDINGISSUE] = ENSafeguardingIssue.[ID]))  Left JOIN {Staff} ENStaff ON (ENSafeguardingIssue.[LEADPROFESSIONAL] = ENStaff.[ID]))  Left JOIN {Student} ENStudent ON (ENSafeguardingIssue.[STUDENTREFERENCE] = ENStudent.[STUDENTREFERENCE]))  Left JOIN {RAGStatus} ENRAGStatus ON (ENSafeguardingIssue.[RAGSTATUS] = ENRAGStatus.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpinP != 0) {
					whereBuilder.Append("((ENSafeguardingIssue.[ID] = @qpinP) AND (ENSafeguardingIssue.[ID] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpinP", DbType.Int32, qpinP);
				} else {
					whereBuilder.Append("(ENSafeguardingIssue.[ID] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStaffStudentRAGStatusSafeguardingIssueSafeguardingDocumentsSafeguardingIssueTypeSafeguardingReferralMadeToSafeguardiRecordList outParamList = new RLStaffStudentRAGStatusSafeguardingIssueSafeguardingDocumentsSafeguardingIssueTypeSafeguardingReferralMadeToSafeguardiRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetSafeguardingIssueReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[9];
				opt[0] = new BitArray(new bool[] {
					true, false, false, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, false, true, true, true
				}
				);
				opt[3] = new BitArray(new bool[] {
					true, false, false, false, false, false, false, true, false, true, false, false, false, false, false, false, true, true
				}
				);
				opt[4] = new BitArray(new bool[] {
					true, true, true, true
				}
				);
				opt[5] = new BitArray(new bool[] {
					true, false, true, true
				}
				);
				opt[6] = new BitArray(new bool[] {
					true, false, true, true
				}
				);
				opt[7] = new BitArray(new bool[] {
					true, false, true, true
				}
				);
				opt[8] = new BitArray(new bool[] {
					true, false, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStaffStudentRAGStatusSafeguardingIssueSafeguardingDocumentsSafeguardingIssueTypeSafeguardingReferralMadeToSafeguardiRecordList _tmp = new RLStaffStudentRAGStatusSafeguardingIssueSafeguardingDocumentsSafeguardingIssueTypeSafeguardingReferralMadeToSafeguardiRecordList();
					_tmp.AlternateReadDBMethod = datasetGetSafeguardingIssueReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Safeguarding.PDFExport.Preparation.GetSafeguardingIssue.List");
						outParamList = (RLStaffStudentRAGStatusSafeguardingIssueSafeguardingDocumentsSafeguardingIssueTypeSafeguardingReferralMadeToSafeguardiRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Safeguarding.PDFExport.Preparation.GetSafeguardingIssue.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStaffStudentRAGStatusSafeguardingIssueSafeguardingDocumentsSafeguardingIssueTypeSafeguardingReferralMadeToSafeguardiRecordList _tmp = new RLStaffStudentRAGStatusSafeguardingIssueSafeguardingDocumentsSafeguardingIssueTypeSafeguardingReferralMadeToSafeguardiRecordList();
						_tmp.AlternateReadDBMethod = datasetGetSafeguardingIssueReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Safeguarding.PDFExport.Preparation.GetSafeguardingIssue.List");
							outParamList = (RLStaffStudentRAGStatusSafeguardingIssueSafeguardingDocumentsSafeguardingIssueTypeSafeguardingReferralMadeToSafeguardiRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Safeguarding.PDFExport.Preparation.GetSafeguardingIssue.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}



		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}


		public LocalState PushStack() {
			return null;
		}

		public void doRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				Preparation(heContext);

				Title = "PDFExport"; ssPersonsInvolvedListListDoDataBind = true;
				ssListRecords1ListDoDataBind = true;
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "PDFExport", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// Perform the partial databind
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "PDFExport", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Ajax", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}



		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();
			if (IsAjaxRequest) {
				recListPersonsInvolvedList_Rebuild((ssPersonsInvolvedListListDataBound ? wtPersonsInvolvedList.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtPersonsInvolvedList.LineCount);
			}
			if (IsAjaxRequest) {
				recListListRecords1_Rebuild((ssListRecords1ListDataBound ? wtListRecords1.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtListRecords1.LineCount);
			}
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			try {
				recListPersonsInvolvedList_Restore();
				recListListRecords1_Restore();
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}


		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}


		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}

		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			Page_Load(null, null); this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}


		public override void DataBind() {
			base.DataBind();
			StoreViewState();
			OutSystems.HubEdition.WebWidgets.Utils.addValidationScriptsToPage(this);
		}



	}




}
