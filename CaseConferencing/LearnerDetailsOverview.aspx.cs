/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.IO;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Runtime.Serialization;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Web.Caching;
using System.Text;
using System.Resources;

namespace ssCaseConferencing.Flows.FlowLearnerView {

	public class ScrnLearnerDetailsOverview: OSPageViewStateCompressed, IWebScreen, INegotiateTabIndexes, IBookmarkableURL {


		public ScrnLearnerDetailsOverview(): base(CaseConferencing_Properties.QuirksMode) {
		}


		/// <summary>
		/// Screen Input Parameter inParamStudentReference. Description:
		/// </summary>
		public string inParamStudentReference = "";
		/// <summary>
		/// Screen Input Parameter inParamSessionID. Description:
		/// </summary>
		public int inParamSessionID = 0;
		/// <summary>
		/// Screen Input Parameter inParamCourseCode. Description:
		/// </summary>
		public string inParamCourseCode = "";
		/// <summary>
		/// Screen Input Parameter inParamFromLearnerList. Description:
		/// </summary>
		public bool inParamFromLearnerList = false;
		/// <summary>
		/// Variable wt_WebBlockInstance5
		/// </summary>
		protected ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout wt_WebBlockInstance5;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container40;
		/// <summary>
		/// Variable "True" if the Widget wt_If50
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If50T;

		/// <summary>
		/// Variable "True" if the Widget wt_If50
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If50F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container4;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container17;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container35;
		/// <summary>
		/// Variable "True" if the Widget wt_If10
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If10T;

		/// <summary>
		/// Variable "True" if the Widget wt_If10
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If10F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container36;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container59;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container1;
		/// <summary>
		/// Variable "True" if the Widget wt_If48
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If48T;

		/// <summary>
		/// Variable "True" if the Widget wt_If48
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If48F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container56;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container33;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container57;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container21;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container15;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container47;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container12;


		protected override void GetBlocksCss(TextWriter writer, bool inline, HashSet<string> visited) {
			ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetails_RAG_Notes.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowLearnerView.WBlkStudent_Log.GetCss(writer, inline, visited);

		}

		protected override void GetWidgetsCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}







		protected override string GetInlineStyleSheetInclude() {
			throw new InvalidOperationException();
		}





		protected override bool PageAllowsCallbacks() {
			return true;
		}


		protected string GetRequestInfoJavaScript() {
			return GetRequestInfoJavaScript("Ll6e8OlyEUirEGk6MODdUA", "LearnerDetailsOverview");
		}

		protected string GetVisitCode() {
			SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
			if (session["osIsNewVisit"] != null && ((bool) session["osIsNewVisit"])
			// && !NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)
			&& RuntimePlatformUtils.IsValidRequestForVisit()) {
				return "<script type=\"text/javascript\">outsystems.internal.$.get(\"/CaseConferencing/_status.aspx\")</script>";
			}
			return "";
		}

		public string GetCallbackDebug() {
			if (Request.HttpMethod == "GET" && Request.QueryString["__CALLBACK_DEBUG"] != null && Request.QueryString["__CALLBACK_DEBUG"] != "") {
				if (Request.QueryString["__CALLBACK_DEBUG"] == OutSystems.HubEdition.RuntimePlatform.AppInfo.GetParameter(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Callback_Debug_Information_Key)) {
					return OutSystems.HubEdition.RuntimePlatform.AppInfo.GetAppInfo().GetCallbackDebugInformation();
				}
			}
			return "";
		}

		protected string GetHeadTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadTop, "Ll6e8OlyEUirEGk6MODdUA", "LearnerDetailsOverview");
		}

		protected string GetHeadBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadBottom, "Ll6e8OlyEUirEGk6MODdUA", "LearnerDetailsOverview");
		}

		protected string GetBodyTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyTop, "Ll6e8OlyEUirEGk6MODdUA", "LearnerDetailsOverview");
		}

		protected string GetBodyBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyBottom, "Ll6e8OlyEUirEGk6MODdUA", "LearnerDetailsOverview");
		}

		HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();



		static ScrnLearnerDetailsOverview() {
		}


		RLStudentRecordList queryResGetStudentByStudentReference_outParamList = new RLStudentRecordList();
		int queryResGetStudentByStudentReference_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// Query datasetGetStudentByStudentReference
			int datasetGetStudentByStudentReference_maxRecords = 0;
			queryResGetStudentByStudentReference_outParamList = FuncssPreparation.datasetGetStudentByStudentReference(heContext, datasetGetStudentByStudentReference_maxRecords, IterationMultiplicity.Never, out queryResGetStudentByStudentReference_outParamCount, inParamStudentReference
			);
		}


		protected override BaseAppUtils GetAppUtils() {
			return AppUtils.Instance;
		}

		protected override string OwnCssUrl {
			get {
				return "LearnerDetailsOverview.css"; 
			}
		}

		protected override string OwnCssFile {
			get {
				return "LearnerDetailsOverview.css"; 
			}
		}

		protected override string BasicCssUrl {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string BasicCssFile {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssUrl {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssFile {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssUrl {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssFile {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssUrl {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssFile {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssUrl {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssFile {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string ThemeCssUrl {
			get {
				return RsseSpaceThemeProvider.Themes.ThemeThemeProvider.ThemeCssUrl; 
			}
		}

		protected override string ThemeCssFile {
			get {
				return "ReferenceTheme.ThemeProvider.css"; 
			}
		}

		protected override string ThemeExtraCssUrl {
			get {
				return RsseSpaceRichWidgets.Themes.ThemeLondonFixed.ThemeExtraCssUrl; 
			}
		}

		protected override string ThemeExtraCssFile {
			get {
				return "ReferenceTheme.LondonFixed.extra.css"; 
			}
		}

		public override bool IsUsingMobileTheme {
			get {
				return false; 
			}
		}

		protected override string OwnJavascriptInclude {
			get {
				return ""; 
			}
		}

		public override string XUACompatibleOverride {
			get {
				return null; 
			}
		}

		protected void InitializeUrls() {
			Uri uri = new Uri((RuntimePlatformUtils.RequestIsSecure(Request) ? "https": "http") + Request.Url.ToString().Substring(Request.Url.Scheme.Length));
			string applicationUrl = AppUtils.Instance.getImagePath(/*internalAccess*/false,/*includeSessionIdIfNeeded*/ false);
			actionUrl = "";
			bookmarkableUrl = uri.GetLeftPart(UriPartial.Authority) + applicationUrl;
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			if ((inParamStudentReference!= "")) {
				parameters.Add(new Pair<string, string>("StudentReference", HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			}
			if ((inParamSessionID!=0)) {
				parameters.Add(new Pair<string, string>("SessionID", HttpUtility.UrlEncode(Convert.ToString(inParamSessionID), Request.ContentEncoding)));
			}
			if ((inParamCourseCode!= "")) {
				parameters.Add(new Pair<string, string>("CourseCode", HttpUtility.UrlEncode(inParamCourseCode, Request.ContentEncoding)));
			}
			if ((inParamFromLearnerList!=false)) {
				parameters.Add(new Pair<string, string>("FromLearnerList", HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList), Request.ContentEncoding)));
			}
			if (Request.AppRelativeCurrentExecutionFilePath.IndexOf('/', 2) == -1) {
				AppInfo appInfo = AppInfo.GetAppInfo();
				if (appInfo != null) {
					string pageHeader = appInfo.OsContext.OsISAPIFilter.GetPage(Request);
					if (appInfo.OsContext.IsCookielessSession || (pageHeader != null && pageHeader.IndexOf('/', 1) != -1)) {
						actionUrl = applicationUrl;
					}
				}
				actionUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsOverview", parameters,/*useParamsOnlyIfNeededForRule*/ true);
			}
			bookmarkableUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsOverview", parameters,/*useParamsOnlyIfNeededForRule*/ false);

		}

		protected override void OnInit(EventArgs e) {
			HeContext heContext = AppInfo.GetAppInfo().OsContext;
			heContext.CurrentScreen = this;
			try {
				heContext.CurrentExecutionFileName = Path.GetFileName(Request.CurrentExecutionFilePath);
			} catch {}
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wt_WebBlockInstance5 = (ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout) FindControl("wt_WebBlockInstance5");
			wt_Container40 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container40");
			wt_Container4 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container4");
			wt_Container17 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container17");
			wt_Container35 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container35");
			wt_Container36 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container36");
			wt_Container59 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container59");
			wt_Container1 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container1");
			wt_Container56 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container56");
			wt_Container2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container2");
			wt_Container33 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container33");
			wt_Container57 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container57");
			wt_Container21 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container21");
			wt_Container15 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container15");
			wt_Container47 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container47");
			wt_Container12 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container12");
			Page.Error += new EventHandler(Page_Error);
			this.Load += new System.EventHandler(this.Page_Load);
			this.PreRender += new System.EventHandler(this.Page_PreRender);
		}

		public override Control FindControl(string id) {
			if (id == "wt_WebBlockInstance14") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_WebBlockInstance14");
			}
			if (id == "wt_Container40") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container40");
			}
			if (id == "wt_If50") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_If50");
			}
			if (id == "wt_If50T") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_If50T");
			}
			if (id == "wt_Container4") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container4");
			}
			if (id == "wt_Container17") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container17");
			}
			if (id == "RichWidgets_wt_WebBlockInstance32") {
				return wt_WebBlockInstance5.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance32");
			}
			if (id == "wt_Text16") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Text16");
			}
			if (id == "wt_Text25") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Text25");
			}
			if (id == "RichWidgets_wt_WebBlockInstance23") {
				return wt_WebBlockInstance5.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance23");
			}
			if (id == "wt_Container35") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container35");
			}
			if (id == "wt_InlineExpression7") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_InlineExpression7");
			}
			if (id == "wt_Text61") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Text61");
			}
			if (id == "wt_Text29") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Text29");
			}
			if (id == "wt_InlineExpression53") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_InlineExpression53");
			}
			if (id == "wt_If50F") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_If50F");
			}
			if (id == "wt_If10") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_If10");
			}
			if (id == "wt_If10T") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_If10T");
			}
			if (id == "wt_Container36") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container36");
			}
			if (id == "wt_Container59") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container59");
			}
			if (id == "wt_Text8") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Text8");
			}
			if (id == "RichWidgets_wt_WebBlockInstance27") {
				return wt_WebBlockInstance5.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance27");
			}
			if (id == "wt_Container1") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container1");
			}
			if (id == "wt_InlineExpression39") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_InlineExpression39");
			}
			if (id == "wt_Text43") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Text43");
			}
			if (id == "wt_InlineExpression38") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_InlineExpression38");
			}
			if (id == "wt_If10F") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_If10F");
			}
			if (id == "wt_If48") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_If48");
			}
			if (id == "wt_If48T") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_If48T");
			}
			if (id == "wt_Container56") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container56");
			}
			if (id == "wt_Container2") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container2");
			}
			if (id == "wt_Text31") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Text31");
			}
			if (id == "wt_Container33") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container33");
			}
			if (id == "RichWidgets_wt_WebBlockInstance37") {
				return wt_WebBlockInstance5.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance37");
			}
			if (id == "wt_InlineExpression18") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_InlineExpression18");
			}
			if (id == "wt_Text49") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Text49");
			}
			if (id == "wt_InlineExpression55") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_InlineExpression55");
			}
			if (id == "wt_Text11") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Text11");
			}
			if (id == "RichWidgets_wt_WebBlockInstance24") {
				return wt_WebBlockInstance5.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance24");
			}
			if (id == "wt_Container57") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container57");
			}
			if (id == "wt_InlineExpression51") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_InlineExpression51");
			}
			if (id == "wt_Text42") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Text42");
			}
			if (id == "wt_InlineExpression19") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_InlineExpression19");
			}
			if (id == "wt_Text58") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Text58");
			}
			if (id == "RichWidgets_wt_WebBlockInstance26") {
				return wt_WebBlockInstance5.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance26");
			}
			if (id == "wt_InlineExpression60") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_InlineExpression60");
			}
			if (id == "wt_If48F") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_If48F");
			}
			if (id == "wt_Container21") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container21");
			}
			if (id == "RichWidgets_wt_WebBlockInstance6") {
				return wt_WebBlockInstance5.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance6");
			}
			if (id == "wt_Container15") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container15");
			}
			if (id == "wt_Text13") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Text13");
			}
			if (id == "wt_Container47") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container47");
			}
			if (id == "wt_InlineExpression30") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_InlineExpression30");
			}
			if (id == "wt_Container12") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_Container12");
			}
			if (id == "wt_WebBlockInstance34") {
				return wt_WebBlockInstance5.wtRAG.FindControl("wt_WebBlockInstance34");
			}

			return base.FindControl(id);
		}


		private void Page_Load(object sender, System.EventArgs e) {
			// init vars
			AppInfo appInfo = Global.App;
			if (appInfo != null) {
				heContext = appInfo.OsContext;
			}
			Response.ContentType = "text/html; charset=" + Response.ContentEncoding.WebName;
			OutSystems.HubEdition.RuntimePlatform.Web.JavaScriptManager.CheckRelativeJavaScriptPrefix(AppUtils.Instance.getImagePath());
			appInfo.IsLoadingScreen = !IsPostBack;
			if (!IsPostBack) {
				ArrayList screenParameters = (ArrayList) Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"];
				bool screenParametersInSession = false;
				object screenParametersKey = heContext.Session["_ScreenParametersKey"];
				if ((screenParametersKey == null || this.Key.Equals(ObjectKey.Parse(Convert.ToString(screenParametersKey)))) && screenParameters != null) {
					try {
						if (screenParameters.Count > 0) {
							object paramValue = screenParameters[0];
							if (paramValue != null) {
								inParamStudentReference = (string) paramValue;
							}
						}
						if (screenParameters.Count > 1) {
							object paramValue = screenParameters[1];
							if (paramValue != null) {
								inParamSessionID = (int) paramValue;
							}
						}
						if (screenParameters.Count > 2) {
							object paramValue = screenParameters[2];
							if (paramValue != null) {
								inParamCourseCode = (string) paramValue;
							}
						}
						if (screenParameters.Count > 3) {
							object paramValue = screenParameters[3];
							if (paramValue != null) {
								inParamFromLearnerList = (bool) paramValue;
							}
						}
						screenParametersInSession = true;
					} catch (Exception parametersException) {
						ErrorLog.LogApplicationError("Failed to load Screen Input Parameters from session.", "ScreenParametersKey = " + screenParametersKey + ", Count = " + screenParameters.Count + "\r\n" + parametersException.StackTrace, heContext, "Global");
					} finally {
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsOverview"] = null;
						heContext.Session["_ScreenParametersKey"] = null;
					}
				}
				else if (Request.HttpMethod == "GET") {
					if (Request.QueryString["StudentReference"] != null) {
						inParamStudentReference = Request.QueryString["StudentReference"];
					}
					if (Request.QueryString["SessionID"] != null) {
						inParamSessionID = Convert.ToInt32(Request.QueryString["SessionID"]);
					}
					if (Request.QueryString["CourseCode"] != null) {
						inParamCourseCode = Request.QueryString["CourseCode"];
					}
					if (Request.QueryString["FromLearnerList"] != null) {
						inParamFromLearnerList = (Request.QueryString["FromLearnerList"]).ToLowerInvariant() == "true";
					}
				}
				else if (Request.HttpMethod == "POST") {
					if (Request.Form["StudentReference"] != null) {
						inParamStudentReference = Request.Form["StudentReference"];
					}
					if (Request.Form["SessionID"] != null) {
						inParamSessionID = Convert.ToInt32(Request.Form["SessionID"]);
					}
					if (Request.Form["CourseCode"] != null) {
						inParamCourseCode = Request.Form["CourseCode"];
					}
					if (Request.Form["FromLearnerList"] != null) {
						inParamFromLearnerList = (Request.Form["FromLearnerList"]).ToLowerInvariant() == "true";
					}
				}
			}
			if (!appInfo.IsApplicationEnabled) {
				ErrorLog.LogApplicationError(new Exception("eSpace " + appInfo.eSpaceName + " is disabled"), heContext, "Global");
				String contact = BuiltInFunction.EncodeUrl(RuntimePlatformUtils.GetAdministrationEmail());
				try {
					Server.Transfer("/customHandlers/app_offline.aspx?contact=" + contact + "&errorCode=APPLICATION_OFFLINE");
				}
				catch (System.Threading.ThreadAbortException) {}
				catch {
					Response.Redirect("/customHandlers/internalerror.aspx");
				}
			}
			InitializeUrls();
			Actions.ActionOnBeginWebRequest(heContext);
			if (!IsPostBack) {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				Preparation(heContext);
				bool bindEditRecords = !IsPostBack;
				Title = "LearnerDetailsOverview"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerDetailsOverview", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} else {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				FetchViewState();
			}

		}

		private bool _negociateTabIndexesExecuted = false;

		private void Page_PreRender(object sender, System.EventArgs e) {
			ClientScript.RegisterArrayDeclaration("OsPage_Validators", "{}");
			if (!_negociateTabIndexesExecuted) {
				NegotiateTabIndexes();
				_negociateTabIndexesExecuted = true;
			}
			foreach(Control child in this.Controls) {
				DisableViewState(child);
			}
		}

		private void NegotiateTabIndexes() {
			short tabindex=1;
			tabindex = NegotiateTabIndexes(tabindex, true);
		}

		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}



		private void Page_Error(object sender, System.EventArgs e) {
			if (! new ssCaseConferencing.Flows.FlowLearnerView.ExceptionHandler(this, false).HandleException()) {
				DatabaseAccess.FreeupResources(false);
				Server.Transfer("_WebErrorPage.aspx");
			}
		}

		public override void ClearErrorHandler() {
			Error -= Page_Error;
		}

		public void CheckPermissions(HeContext heContext) {
			{
				bool check;
				ExtendedActions.CheckSLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportPractitionerRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckRegisteredRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingBackofficeRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSafeGuardingLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSuperUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckPLARole(heContext, 0, out check);
				if (check) return;
			}
			throw new ExcptNotSLA("SLA role required");
		}


		public ObjectKey Key {
			get {
				return ObjectKey.Parse("Ll6e8OlyEUirEGk6MODdUA"); 
			}
		}

		public bool isSecure {
			get {
				return true; 
			}
		}


		/// <summary>
		/// wt_WebBlockInstance5 Functions
		/// </summary>
		public void webBlck_WebBlockInstance5_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout widget = (ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout) sender;
			widget.inParamStudentReference = inParamStudentReference;
			widget.inParamCategoryId = BuiltInFunction.NullIdentifier();
			widget.inParamOfferingCode = "";
			widget.inParamShowUnit = false;
			widget.inParamShowTarget = false;
			widget.inParamActiveLearnerDetailMenu = ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("PDlAuJH5IU+CKfwA2BkWhg")).ssMenu;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamCourseCode = inParamCourseCode;
			widget.inParamFromLearnerList = inParamFromLearnerList;
			widget.inParamActiveTab = ENTabsEntity.GetRecordByKey(ObjectKey.Parse("avXIv1WG4UWcoRPTcOjaOw")).ssId;
		}
		/// <summary>
		/// wt_WebBlockInstance14 Functions
		/// </summary>
		public void webBlck_WebBlockInstance14_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetails_RAG_Notes widget = (ssCaseConferencing.Flows.FlowStaffView.WBlkLearnerDetails_RAG_Notes) sender;
			widget.inParamStudentReference = inParamStudentReference;
			widget.inParamCCSessionId = inParamSessionID;
			widget.inParamCourseCode = inParamCourseCode;
			widget.inParamHasCurrentActiveEnrolment = queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHasCurrentActiveEnrolment;
		}
		/// <summary>
		/// wt_Container40 Functions
		/// </summary>
		public void cnt_Container40_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container40_setInlineAttributes(sender, e);
		}
		public string cnt_Container40_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container40_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container40)
		/// </summary>
		/// <returns>The Visible State of wt_Container40</returns>
		public bool cnt_Container40_isVisible() {
			return ((((((((((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeAddress== "") && (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeAddressPostCode== "")) && (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssCurrentAddress== "")) && (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssCurrentAddressPostcode== "")) && (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinName== "")) && (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinRelationship== "")) && (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinAddress== "")) && (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinPhone== ""))) ?(false):(true));
		}

		/// <summary>
		/// wt_If50 Functions
		/// </summary>
		bool if_wt_If50_hasRun=false;
		bool if_wt_If50_evalResult;
		public bool if_wt_If50() {
			if (if_wt_If50_hasRun) {
				if_wt_If50_hasRun = false;
				return if_wt_If50_evalResult;
			}
			if_wt_If50_hasRun = true;
			if_wt_If50_evalResult = ((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssCurrentAddress!= "") && (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssCurrentAddress!=queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeAddress));
			return if_wt_If50_evalResult;
		}

		/// <summary>
		/// wt_Container4 Functions
		/// </summary>
		public void cnt_Container4_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container4_setInlineAttributes(sender, e);
		}
		public string cnt_Container4_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding: 20px 11px;margin-left: 10px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container4)
		/// </summary>
		/// <returns>The Visible State of wt_Container4</returns>
		public bool cnt_Container4_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container17 Functions
		/// </summary>
		public void cnt_Container17_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container17_setInlineAttributes(sender, e);
		}
		public string cnt_Container17_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-shadow: 0px 1px 2px #dadada;font-size: 15px;font-weight: 600;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container17_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container17)
		/// </summary>
		/// <returns>The Visible State of wt_Container17</returns>
		public bool cnt_Container17_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance32 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance32_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("eT33Jrz210OYNTByWeYbjw")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance23 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance23_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("v8O5VJfAtEuGAFl1unUekw")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container35 Functions
		/// </summary>
		public void cnt_Container35_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container35_setInlineAttributes(sender, e);
		}
		public string cnt_Container35_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container35_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container35)
		/// </summary>
		/// <returns>The Visible State of wt_Container35</returns>
		public bool cnt_Container35_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression7 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = noJtIh41D02w1geacLEgog) Expression:
		///  GetStudentByStudentReference.List.Current.Student.CurrentAddress
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression7() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssCurrentAddress;
		}
		/// <summary>
		/// wt_InlineExpression53 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = K3ry5XX21ki6Er6l9_T+1A) Expression:
		///  GetStudentByStudentReference.List.Current.Student.CurrentAddressPostcode
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression53() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssCurrentAddressPostcode;
		}
		/// <summary>
		/// wt_If10 Functions
		/// </summary>
		bool if_wt_If10_hasRun=false;
		bool if_wt_If10_evalResult;
		public bool if_wt_If10() {
			if (if_wt_If10_hasRun) {
				if_wt_If10_hasRun = false;
				return if_wt_If10_evalResult;
			}
			if_wt_If10_hasRun = true;
			if_wt_If10_evalResult = (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeAddress!= "");
			return if_wt_If10_evalResult;
		}

		/// <summary>
		/// wt_Container36 Functions
		/// </summary>
		public void cnt_Container36_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container36_setInlineAttributes(sender, e);
		}
		public string cnt_Container36_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left:10px;padding: 20px 11px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container36_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container36)
		/// </summary>
		/// <returns>The Visible State of wt_Container36</returns>
		public bool cnt_Container36_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container59 Functions
		/// </summary>
		public void cnt_Container59_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container59_setInlineAttributes(sender, e);
		}
		public string cnt_Container59_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-shadow: 0px 1px 2px #dadada;font-size: 15px;font-weight: 600;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container59_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container59)
		/// </summary>
		/// <returns>The Visible State of wt_Container59</returns>
		public bool cnt_Container59_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance27 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance27_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("v8O5VJfAtEuGAFl1unUekw")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container1 Functions
		/// </summary>
		public void cnt_Container1_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container1_setInlineAttributes(sender, e);
		}
		public string cnt_Container1_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container1_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container1)
		/// </summary>
		/// <returns>The Visible State of wt_Container1</returns>
		public bool cnt_Container1_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression39 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = wkHzs0WBD06+QIKycG1t+A) Expression:
		///  GetStudentByStudentReference.List.Current.Student.HomeAddress
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression39() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeAddress;
		}
		/// <summary>
		/// wt_InlineExpression38 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = yCW+ssc6PES6ByUFfIxyJw) Expression:
		///  GetStudentByStudentReference.List.Current.Student.HomeAddressPostCode
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression38() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeAddressPostCode;
		}
		/// <summary>
		/// wt_If48 Functions
		/// </summary>
		bool if_wt_If48_hasRun=false;
		bool if_wt_If48_evalResult;
		public bool if_wt_If48() {
			if (if_wt_If48_hasRun) {
				if_wt_If48_hasRun = false;
				return if_wt_If48_evalResult;
			}
			if_wt_If48_hasRun = true;
			if_wt_If48_evalResult = ((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinName!= "") || (queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinAddress!= ""));
			return if_wt_If48_evalResult;
		}

		/// <summary>
		/// wt_Container56 Functions
		/// </summary>
		public void cnt_Container56_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container56_setInlineAttributes(sender, e);
		}
		public string cnt_Container56_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-right:0px;margin-left:20px;padding: 20px 11px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container56_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container56)
		/// </summary>
		/// <returns>The Visible State of wt_Container56</returns>
		public bool cnt_Container56_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container2 Functions
		/// </summary>
		public void cnt_Container2_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container2_setInlineAttributes(sender, e);
		}
		public string cnt_Container2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "text-shadow: 0px 1px 2px #dadada;font-size: 15px;font-weight: 600;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container2)
		/// </summary>
		/// <returns>The Visible State of wt_Container2</returns>
		public bool cnt_Container2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container33 Functions
		/// </summary>
		public void cnt_Container33_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container33_setInlineAttributes(sender, e);
		}
		public string cnt_Container33_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container33_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container33)
		/// </summary>
		/// <returns>The Visible State of wt_Container33</returns>
		public bool cnt_Container33_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance37 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance37_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("F0OdMTnS+E63CzTzGXJvyg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression18 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = kRhwTHjZF0OyH02vt9POYQ) Expression:
		///  GetStudentByStudentReference.List.Current.Student.NextOfKinName
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression18() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinName;
		}
		/// <summary>
		/// wt_InlineExpression55 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = oKYO6ht8AUmTrzxnP+V+vQ) Expression:
		///  GetStudentByStudentReference.List.Current.Student.NextOfKinRelationship
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression55() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinRelationship;
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance24 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance24_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("v8O5VJfAtEuGAFl1unUekw")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container57 Functions
		/// </summary>
		public void cnt_Container57_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container57_setInlineAttributes(sender, e);
		}
		public string cnt_Container57_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container57_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container57)
		/// </summary>
		/// <returns>The Visible State of wt_Container57</returns>
		public bool cnt_Container57_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression51 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = Jwr_3DMYF0+Z_X7H6v2ffA) Expression:
		///  GetStudentByStudentReference.List.Current.Student.NextOfKinAddress
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression51() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinAddress;
		}
		/// <summary>
		/// wt_InlineExpression19 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = rKIaUWwtNUeoiCkV3SUgpA) Expression:
		///  GetStudentByStudentReference.List.Current.Student.NextOfKinPostcode
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression19() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinPostcode;
		}
		/// <summary>
		/// RichWidgets_wt_WebBlockInstance26 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance26_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("CzktVEoQIUavNdPuJna99w")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression60 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 62oX9mxZTkWTnhAbwvb9xw) Expression:
		///  GetStudentByStudentReference.List.Current.Student.NextOfKinPhone
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression60() {
			return queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinPhone;
		}
		/// <summary>
		/// wt_Container21 Functions
		/// </summary>
		public void cnt_Container21_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container21_setInlineAttributes(sender, e);
		}
		public string cnt_Container21_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding:10px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container21_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container21)
		/// </summary>
		/// <returns>The Visible State of wt_Container21</returns>
		public bool cnt_Container21_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance6 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance6_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("kv+ucWQw8UuPXtAaEoFXQg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container15 Functions
		/// </summary>
		public void cnt_Container15_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container15_setInlineAttributes(sender, e);
		}
		public string cnt_Container15_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container15_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container15)
		/// </summary>
		/// <returns>The Visible State of wt_Container15</returns>
		public bool cnt_Container15_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container47 Functions
		/// </summary>
		public void cnt_Container47_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container47_setInlineAttributes(sender, e);
		}
		public string cnt_Container47_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container47_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container47)
		/// </summary>
		/// <returns>The Visible State of wt_Container47</returns>
		public bool cnt_Container47_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression30 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = o1xIjlw5gECT3rPl8_NV2A) Expression: internalIf
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression30() {
			return (((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssPreviousSchool!= "")) ?(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssPreviousSchool):("Previous school not given"));
		}
		/// <summary>
		/// wt_Container12 Functions
		/// </summary>
		public void cnt_Container12_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container12_setInlineAttributes(sender, e);
		}
		public string cnt_Container12_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container12_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container12)
		/// </summary>
		/// <returns>The Visible State of wt_Container12</returns>
		public bool cnt_Container12_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance34 Functions
		/// </summary>
		public void webBlck_WebBlockInstance34_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowLearnerView.WBlkStudent_Log widget = (ssCaseConferencing.Flows.FlowLearnerView.WBlkStudent_Log) sender;
			widget.inParamStudentReference = inParamStudentReference;
		}


		public static class FuncssPreparation {

			/// <summary>
			/// Query Function "GetStudentByStudentReference" of Action "Preparation"
			/// </summary>
			public static RLStudentRecordList datasetGetStudentByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, NULL o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, ENStudent.[HOMEADDRESS] o9, ENStudent.[HOMEADDRESSPOSTCODE] o10, ENStudent.[CURRENTADDRESS] o11, ENStudent.[CURRENTADDRESSPOSTCODE] o12, NULL o13, NULL o14, NULL o15, ENStudent.[NEXTOFKINNAME] o16, ENStudent.[NEXTOFKINRELATIONSHIP] o17, ENStudent.[NEXTOFKINADDRESS] o18, ENStudent.[NEXTOFKINPOSTCODE] o19, ENStudent.[NEXTOFKINPHONE] o20, NULL o21, NULL o22, ENStudent.[HASCURRENTACTIVEENROLMENT] o23, NULL o24, NULL o25, NULL o26, ENStudent.[PREVIOUSSCHOOL] o27");
				fromBuilder.Append(" FROM {Student} ENStudent");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudent.[STUDENTREFERENCE] = @qpstP) AND (ENStudent.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudent.[STUDENTREFERENCE] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentRecordList outParamList = new RLStudentRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, false, false, false, false, true, true, true, false, false, false, false, false, true, true, false, true, true, true, false
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentRecordList _tmp = new RLStudentRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsOverview.Preparation.GetStudentByStudentReference.List");
						outParamList = (RLStudentRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsOverview.Preparation.GetStudentByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentRecordList _tmp = new RLStudentRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsOverview.Preparation.GetStudentByStudentReference.List");
							outParamList = (RLStudentRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsOverview.Preparation.GetStudentByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}



		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}


		public LocalState PushStack() {
			return null;
		}

		public void doRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				Preparation(heContext);

				Title = "LearnerDetailsOverview"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerDetailsOverview", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// Perform the partial databind
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerDetailsOverview", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Ajax", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}



		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();

			#region store queryResGetStudentByStudentReference_outParamList.

			int tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList = queryResGetStudentByStudentReference_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetStudentByStudentReference_outParamList = queryResGetStudentByStudentReference_outParamList.Eof;
			ArrayList storequeryResGetStudentByStudentReference_outParamList = new ArrayList();

			// Write the needed fields of queryResGetStudentByStudentReference_outParamList to the storequeryResGetStudentByStudentReference_outParamList
			if (!queryResGetStudentByStudentReference_outParamList.Empty) {
				try {
					queryResGetStudentByStudentReference_outParamList.StartIteration();

					while (!queryResGetStudentByStudentReference_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetStudentByStudentReference_outParamList = new ArrayList();
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeAddress == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeAddress);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeAddressPostCode == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeAddressPostCode);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssCurrentAddress == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssCurrentAddress);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssCurrentAddressPostcode == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssCurrentAddressPostcode);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinName == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinName);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinRelationship == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinRelationship);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinAddress == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinAddress);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinPostcode == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinPostcode);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinPhone == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinPhone);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHasCurrentActiveEnrolment == false?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHasCurrentActiveEnrolment);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssPreviousSchool == "" ?(object) null: queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssPreviousSchool);
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ChangedAttributes, new BitArray(new bool[] {
							false, false, false, false, false, false, false, false, true, true, true, true, false, false, false, true, true, true, true, true, false, false, true, false, false, false, true
						}
						))));
						tmpFieldsqueryResGetStudentByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.OptimizedAttributes, new BitArray(new bool[] {
							true, true, true, true, true, true, true, true, false, false, false, false, true, true, true, false, false, false, false, false, true, true, false, true, true, true, false
						}
						))));
						storequeryResGetStudentByStudentReference_outParamList.Add(tmpFieldsqueryResGetStudentByStudentReference_outParamList);
						queryResGetStudentByStudentReference_outParamList.Advance();
					}
				} finally {
					queryResGetStudentByStudentReference_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetStudentByStudentReference_outParamList", storequeryResGetStudentByStudentReference_outParamList, null);

			#endregion


			#region store queryResGetStudentByStudentReference_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetStudentByStudentReference_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetStudentByStudentReference_outParamList_eof", tmpeofqueryResGetStudentByStudentReference_outParamList, false);
			queryResGetStudentByStudentReference_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList, tmpeofqueryResGetStudentByStudentReference_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("inParamStudentReference", inParamStudentReference, "");
			ViewStateAttributes.SetInViewState("inParamSessionID", inParamSessionID, 0);
			ViewStateAttributes.SetInViewState("inParamCourseCode", inParamCourseCode, "");
			ViewStateAttributes.SetInViewState("inParamFromLearnerList", inParamFromLearnerList, false);
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			try {

				#region fetch queryResGetStudentByStudentReference_outParamList.

				// Read the needed fields of queryResGetStudentByStudentReference_outParamList from storequeryResGetStudentByStudentReference_outParamList
				queryResGetStudentByStudentReference_outParamList = new RLStudentRecordList();
				ArrayList storequeryResGetStudentByStudentReference_outParamList;
				storequeryResGetStudentByStudentReference_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetStudentByStudentReference_outParamList", null);
				if (storequeryResGetStudentByStudentReference_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetStudentByStudentReference_outParamList in storequeryResGetStudentByStudentReference_outParamList) {
						if (tmpFieldsqueryResGetStudentByStudentReference_outParamList != null) {
							// Aux current record variable
							RCStudentRecord tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList = new RCStudentRecord(null);
							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssHomeAddress = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[0] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssHomeAddressPostCode = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[1] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssCurrentAddress = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[2] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssCurrentAddressPostcode = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[3] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[3]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssNextOfKinName = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[4] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[4]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssNextOfKinRelationship = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[5] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[5]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssNextOfKinAddress = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[6] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[6]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssNextOfKinPostcode = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[7] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[7]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssNextOfKinPhone = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[8] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[8]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssHasCurrentActiveEnrolment = (bool) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[9] == null ? false: tmpFieldsqueryResGetStudentByStudentReference_outParamList[9]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ssPreviousSchool = (string) (tmpFieldsqueryResGetStudentByStudentReference_outParamList[10] == null ? "": tmpFieldsqueryResGetStudentByStudentReference_outParamList[10]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentByStudentReference_outParamList[11]);

							tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList.ssENStudent.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentByStudentReference_outParamList[12]);

							queryResGetStudentByStudentReference_outParamList.Append(tmpAuxCurrentRecordqueryResGetStudentByStudentReference_outParamList);
						}
					}
				}
				queryResGetStudentByStudentReference_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetStudentByStudentReference_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList;
				tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetStudentByStudentReference_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetStudentByStudentReference_outParamList;
				tmpeofqueryResGetStudentByStudentReference_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetStudentByStudentReference_outParamList_eof", false);
				queryResGetStudentByStudentReference_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentByStudentReference_outParamList, tmpeofqueryResGetStudentByStudentReference_outParamList);

				#endregion

				inParamStudentReference = (string) ViewStateAttributes.GetFromViewState("inParamStudentReference", "");
				inParamSessionID = (int) ViewStateAttributes.GetFromViewState("inParamSessionID", 0);
				inParamCourseCode = (string) ViewStateAttributes.GetFromViewState("inParamCourseCode", "");
				inParamFromLearnerList = (bool) ViewStateAttributes.GetFromViewState("inParamFromLearnerList", false);
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}


		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}


		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}

		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			Page_Load(null, null); this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}


		public override void DataBind() {
			base.DataBind();
			StoreViewState();
			OutSystems.HubEdition.WebWidgets.Utils.addValidationScriptsToPage(this);
		}



	}




}
