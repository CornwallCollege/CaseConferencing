/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Runtime.Serialization;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Resources;

namespace ssCaseConferencing {

	public partial class Actions {
		public class lcvCreateEmptyRowObject: VarsBag {
			/// <summary>
			/// Variable <code>varLcLoopCounter</code> that represents the Service Studio local variable
			///  <code>LoopCounter</code> <p>Description: </p>
			/// </summary>
			public int varLcLoopCounter = 0;

			/// <summary>
			/// Variable <code>varLcTDTag</code> that represents the Service Studio local variable
			///  <code>TDTag</code> <p>Description: </p>
			/// </summary>
			public RCTDTagRecord varLcTDTag = new RCTDTagRecord(null);

			public lcvCreateEmptyRowObject() {
			}
		}
		public class lcoCreateEmptyRowObject: VarsBag {
			public RLTDTagRecordList outParamEmptyRowObject = new RLTDTagRecordList();

			public lcoCreateEmptyRowObject() {
			}
		}
		/// <summary>
		/// Action <code>ActionCreateEmptyRowObject</code> that represents the Service Studio user action
		///  <code>CreateEmptyRowObject</code> <p> Description: </p>
		/// </summary>
		public static void ActionCreateEmptyRowObject(HeContext heContext, out RLTDTagRecordList outParamEmptyRowObject) {
			lcoCreateEmptyRowObject result = new lcoCreateEmptyRowObject();
			lcvCreateEmptyRowObject localVars = new lcvCreateEmptyRowObject();
			try {
				while ((localVars.varLcLoopCounter<=35)) {
					localVars.varLcTDTag.ssSTTDTag.ssName = ""; // TDTag.TDTag.Name = ""
					localVars.varLcLoopCounter = (localVars.varLcLoopCounter+1); // LoopCounter = LoopCounter + 1
					// ListAppend
					ExtendedActions.ListAppend(heContext, result.outParamEmptyRowObject, localVars.varLcTDTag);
				}
			} // try

			finally {
				outParamEmptyRowObject = result.outParamEmptyRowObject;
			}
		}

		public static class FuncActionCreateEmptyRowObject {


		}


	}


}