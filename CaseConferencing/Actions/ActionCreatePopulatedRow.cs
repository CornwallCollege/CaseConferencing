/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Runtime.Serialization;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Resources;

namespace ssCaseConferencing {

	public partial class Actions {
		public class lcvCreatePopulatedRow: VarsBag {
			public RLTDTagRecordList inParamTDTags;
			public bool inParamAltRow;
			/// <summary>
			/// Variable <code>varLcdefaultClass</code> that represents the Service Studio local variable
			///  <code>defaultClass</code> <p>Description: </p>
			/// </summary>
			public string varLcdefaultClass = "";

			/// <summary>
			/// Variable <code>varLcTagsToIgnore</code> that represents the Service Studio local variable
			///  <code>TagsToIgnore</code> <p>Description: </p>
			/// </summary>
			public int varLcTagsToIgnore = (-1);

			public lcvCreatePopulatedRow(RLTDTagRecordList inParamTDTags, bool inParamAltRow) {
				this.inParamTDTags = inParamTDTags;
				this.inParamAltRow = inParamAltRow;
			}
		}
		public class lcoCreatePopulatedRow: VarsBag {
			public string outParamRowHTML = "";

			public lcoCreatePopulatedRow() {
			}
		}
		/// <summary>
		/// Action <code>ActionCreatePopulatedRow</code> that represents the Service Studio user action
		///  <code>CreatePopulatedRow</code> <p> Description: </p>
		/// </summary>
		public static void ActionCreatePopulatedRow(HeContext heContext, RLTDTagRecordList inParamTDTags, bool inParamAltRow, out string outParamRowHTML) {
			lcoCreatePopulatedRow result = new lcoCreatePopulatedRow();
			lcvCreatePopulatedRow localVars = new lcvCreatePopulatedRow(inParamTDTags, inParamAltRow);
			try {
				if (localVars.inParamAltRow) {
					result.outParamRowHTML = "<tr class=\'alt\'>"; // RowHTML = "<tr class='alt'>"
					localVars.varLcdefaultClass = "AttendanceTable Cell alt"; // defaultClass = "AttendanceTable Cell alt"

				} else {
					result.outParamRowHTML = "<tr>"; // RowHTML = "<tr>"
					localVars.varLcdefaultClass = "AttendanceTable Cell"; // defaultClass = "AttendanceTable Cell"

				}
				// Foreach TDTags
				localVars.inParamTDTags.StartIteration();
				try {
					while (! localVars.inParamTDTags.Eof) {
						if ((localVars.varLcTagsToIgnore>(-1))) {
							localVars.varLcTagsToIgnore = (localVars.varLcTagsToIgnore-1); // TagsToIgnore = TagsToIgnore - 1

						} else {
							result.outParamRowHTML = (result.outParamRowHTML+ "<td"); // RowHTML = RowHTML + "<td"
							if ((localVars.inParamTDTags.CurrentRec.ssSTTDTag.ssClass!= "")) {
								result.outParamRowHTML = (((result.outParamRowHTML+ " class=\'") +localVars.inParamTDTags.CurrentRec.ssSTTDTag.ssClass) + "\'"); // RowHTML = RowHTML + " class='" + TDTags.Current.TDTag.Class + "'"

							} else {
								result.outParamRowHTML = (((result.outParamRowHTML+ " class=\'") +localVars.varLcdefaultClass) + "\' "); // RowHTML = RowHTML + " class='" + defaultClass + "' "

							}
							if ((localVars.inParamTDTags.CurrentRec.ssSTTDTag.ssTitle!= "")) {
								result.outParamRowHTML = (((result.outParamRowHTML+ " title=\'") +localVars.inParamTDTags.CurrentRec.ssSTTDTag.ssTitle) + "\'"); // RowHTML = RowHTML + " title='" + TDTags.Current.TDTag.Title + "'"

							}
							if ((localVars.inParamTDTags.CurrentRec.ssSTTDTag.ssColspan>0)) {
								result.outParamRowHTML = ((result.outParamRowHTML+ " colspan=") +Convert.ToString(localVars.inParamTDTags.CurrentRec.ssSTTDTag.ssColspan)); // RowHTML = RowHTML + " colspan=" + TDTags.Current.TDTag.Colspan

							}
							result.outParamRowHTML = (((result.outParamRowHTML+ ">") +localVars.inParamTDTags.CurrentRec.ssSTTDTag.ssValue) + "</td>"); // RowHTML = RowHTML + ">" + TDTags.Current.TDTag.Value + "</td>"
							localVars.varLcTagsToIgnore = (localVars.inParamTDTags.CurrentRec.ssSTTDTag.ssColspan-2); // TagsToIgnore = TDTags.Current.TDTag.Colspan - 2

						}
						localVars.inParamTDTags.Advance();
					}
				} finally {
					localVars.inParamTDTags.EndIteration();
				}
				result.outParamRowHTML = (result.outParamRowHTML+ "</tr>"); // RowHTML = RowHTML + "</tr>"
			} // try

			finally {
				outParamRowHTML = result.outParamRowHTML;
			}
		}

		public static class FuncActionCreatePopulatedRow {


		}


	}


}