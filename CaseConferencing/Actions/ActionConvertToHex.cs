/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Runtime.Serialization;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Resources;

namespace ssCaseConferencing {

	public partial class Actions {
		public class lcvConvertToHex: VarsBag {
			public int inParamNumber;
			/// <summary>
			/// Variable <code>varLcx</code> that represents the Service Studio local variable <code>x</code>
			///  <p>Description: </p>
			/// </summary>
			public string varLcx = "";

			/// <summary>
			/// Variable <code>varLcy</code> that represents the Service Studio local variable <code>y</code>
			///  <p>Description: </p>
			/// </summary>
			public string varLcy = "";

			public lcvConvertToHex(int inParamNumber) {
				this.inParamNumber = inParamNumber;
			}
		}
		public class lcoConvertToHex: VarsBag {
			public string outParamHex = "";

			public lcoConvertToHex() {
			}
		}
		/// <summary>
		/// Action <code>ActionConvertToHex</code> that represents the Service Studio user action
		///  <code>ConvertToHex</code> <p> Description: </p>
		/// </summary>
		public static void ActionConvertToHex(HeContext heContext, int inParamNumber, out string outParamHex) {
			lcoConvertToHex result = new lcoConvertToHex();
			lcvConvertToHex localVars = new lcvConvertToHex(inParamNumber);
			try {
				localVars.varLcx = OutSystems.HubEdition.RuntimePlatform.RuntimePlatformUtils.RemoveTrailingZeros(Convert.ToString(BuiltInFunction.Trunc(((decimal) localVars.inParamNumber/
				(decimal) 16M)), FormatInfo.Number), FormatInfo.Number); // x = Trunc
				localVars.varLcy = OutSystems.HubEdition.RuntimePlatform.RuntimePlatformUtils.RemoveTrailingZeros(Convert.ToString(BuiltInFunction.Trunc(BuiltInFunction.Mod(localVars.inParamNumber, 16M)), FormatInfo.Number), FormatInfo.Number); // y = Trunc
				if ((BuiltInFunction.TextToInteger(localVars.varLcx) >9)) {
					if ((localVars.varLcx== "10")) {
						localVars.varLcx = "A"; // x = "A"

					} else {
						if ((localVars.varLcx== "11")) {
							localVars.varLcx = "B"; // x = "B"

						} else {
							if ((localVars.varLcx== "12")) {
								localVars.varLcx = "C"; // x = "C"

							} else {
								if ((localVars.varLcx== "13")) {
									localVars.varLcx = "D"; // x = "D"

								} else {
									if ((localVars.varLcx== "14")) {
										localVars.varLcx = "E"; // x = "E"

									} else {
										if ((localVars.varLcx== "15")) {
											localVars.varLcx = "F"; // x = "F"

										}

									}

								}

							}

						}

					}

				}
				// y>9
				if ((BuiltInFunction.TextToInteger(localVars.varLcy) >9)) {
					if ((localVars.varLcy== "10")) {
						localVars.varLcy = "A"; // y = "A"

					} else {
						if ((localVars.varLcy== "11")) {
							localVars.varLcy = "B"; // y = "B"

						} else {
							if ((localVars.varLcy== "12")) {
								localVars.varLcy = "C"; // y = "C"

							} else {
								if ((localVars.varLcy== "13")) {
									localVars.varLcy = "D"; // y = "D"

								} else {
									if ((localVars.varLcy== "14")) {
										localVars.varLcy = "E"; // y = "E"

									} else {
										if ((localVars.varLcy== "15")) {
											localVars.varLcy = "F"; // y = "F"

										}

									}

								}

							}

						}

					}

				}
				result.outParamHex = (localVars.varLcx+localVars.varLcy); // Hex = x + y
			} // try

			finally {
				outParamHex = result.outParamHex;
			}
		}

		public static class FuncActionConvertToHex {


		}


	}


}