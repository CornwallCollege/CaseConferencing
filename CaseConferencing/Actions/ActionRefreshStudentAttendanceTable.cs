/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Runtime.Serialization;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Resources;

namespace ssCaseConferencing {

	public partial class Actions {
		public class lcvRefreshStudentAttendanceTable: VarsBag {
			public string inParamStudentReference;
			public string inParamOfferingCode;
			public string inParamDateRange;
			public int inParamLayout;
			public lcoCreateStudentAttendanceTableOverviewLayout resCreateStudentAttendanceTableOverviewLayout = new lcoCreateStudentAttendanceTableOverviewLayout();
			public lcoCreateStudentAttendanceTable resCreateStudentAttendanceTable = new lcoCreateStudentAttendanceTable();
			public lcvRefreshStudentAttendanceTable(string inParamStudentReference, string inParamOfferingCode, string inParamDateRange, int inParamLayout) {
				this.inParamStudentReference = inParamStudentReference;
				this.inParamOfferingCode = inParamOfferingCode;
				this.inParamDateRange = inParamDateRange;
				this.inParamLayout = inParamLayout;
			}
		}
		public class lcoRefreshStudentAttendanceTable: VarsBag {
			public string outParamTableHTML = "";

			public lcoRefreshStudentAttendanceTable() {
			}
		}
		/// <summary>
		/// Action <code>ActionRefreshStudentAttendanceTable</code> that represents the Service Studio user
		///  action <code>RefreshStudentAttendanceTable</code> <p> Description: </p>
		/// </summary>
		public static void ActionRefreshStudentAttendanceTable(HeContext heContext, string inParamStudentReference, string inParamOfferingCode, string inParamDateRange, int inParamLayout, out string outParamTableHTML) {
			lcoRefreshStudentAttendanceTable result = new lcoRefreshStudentAttendanceTable();
			lcvRefreshStudentAttendanceTable localVars = new lcvRefreshStudentAttendanceTable(inParamStudentReference, inParamOfferingCode, inParamDateRange, inParamLayout);
			try {
				if ((localVars.inParamLayout==ENAttendanceViewTypeEntity.GetRecordByKey(ObjectKey.Parse("jUkOyF8wkkS3dK3NAltNtw")).ssId)) {
					// CreateStudentAttendanceTable
					Actions.ActionCreateStudentAttendanceTable(heContext, BuiltInFunction.TextToEntityRefText(localVars.inParamStudentReference), localVars.inParamDateRange, localVars.inParamOfferingCode, out localVars.resCreateStudentAttendanceTable.outParamTableHTML);
					result.outParamTableHTML = localVars.resCreateStudentAttendanceTable.outParamTableHTML; // TableHTML = CreateStudentAttendanceTable.TableHTML

				} else {
					// CreateStudentAttendanceTableOverviewLayout
					Actions.ActionCreateStudentAttendanceTableOverviewLayout(heContext, BuiltInFunction.TextToEntityRefText(localVars.inParamStudentReference), localVars.inParamDateRange, localVars.inParamOfferingCode, out localVars.resCreateStudentAttendanceTableOverviewLayout.outParamTableHTML);
					result.outParamTableHTML = localVars.resCreateStudentAttendanceTableOverviewLayout.outParamTableHTML; // TableHTML = CreateStudentAttendanceTableOverviewLayout.TableHTML

				}
			} // try

			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				return;
			} // Catch
			finally {
				outParamTableHTML = result.outParamTableHTML;
			}
		}

		public static class FuncActionRefreshStudentAttendanceTable {


		}


	}


}