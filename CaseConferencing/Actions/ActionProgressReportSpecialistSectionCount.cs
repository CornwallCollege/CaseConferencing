/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Runtime.Serialization;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Resources;

namespace ssCaseConferencing {

	public partial class Actions {
		public class lcvProgressReportSpecialistSectionCount: VarsBag {
			public RCProgressReportSectionRecord inParamProgressReportSection;
			public lcvProgressReportSpecialistSectionCount(RCProgressReportSectionRecord inParamProgressReportSection) {
				this.inParamProgressReportSection = inParamProgressReportSection;
			}
		}
		public class lcoProgressReportSpecialistSectionCount: VarsBag {
			public int outParamTotalNumberOfVisibleSections = 0;

			public int outParamTotalNumberOfCompletedSections = 0;

			public lcoProgressReportSpecialistSectionCount() {
			}
		}
		/// <summary>
		/// Action <code>ActionProgressReportSpecialistSectionCount</code> that represents the Service Studio
		///  user action <code>ProgressReportSpecialistSectionCount</code> <p> Description: </p>
		/// </summary>
		public static void ActionProgressReportSpecialistSectionCount(HeContext heContext, RCProgressReportSectionRecord inParamProgressReportSection, out int outParamTotalNumberOfVisibleSections, out int outParamTotalNumberOfCompletedSections) {
			lcoProgressReportSpecialistSectionCount result = new lcoProgressReportSpecialistSectionCount();
			lcvProgressReportSpecialistSectionCount localVars = new lcvProgressReportSpecialistSectionCount(inParamProgressReportSection);
			try {
				// CourseOutlineVisible
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssCourseOutlineVisible) {
					result.outParamTotalNumberOfVisibleSections = (result.outParamTotalNumberOfVisibleSections+1); // TotalNumberOfVisibleSections = TotalNumberOfVisibleSections + 1

				}
				// CourseCoordinatorVisible
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssKeyStrengthsVisible) {
					result.outParamTotalNumberOfVisibleSections = (result.outParamTotalNumberOfVisibleSections+1); // TotalNumberOfVisibleSections = TotalNumberOfVisibleSections + 1

				}
				// KeyStrengthsVisible
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssKeyStrengthsVisible) {
					result.outParamTotalNumberOfVisibleSections = (result.outParamTotalNumberOfVisibleSections+1); // TotalNumberOfVisibleSections = TotalNumberOfVisibleSections + 1

				}
				// AreasForDevelopmentVisible
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssAreasForDevelopmentVisible) {
					result.outParamTotalNumberOfVisibleSections = (result.outParamTotalNumberOfVisibleSections+1); // TotalNumberOfVisibleSections = TotalNumberOfVisibleSections + 1

				}
				// PredictedOutcomeVisible
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssPredictedOutcomeVisible) {
					result.outParamTotalNumberOfVisibleSections = (result.outParamTotalNumberOfVisibleSections+1); // TotalNumberOfVisibleSections = TotalNumberOfVisibleSections + 1

				}
				// Attendance Visible
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssAttendanceVisible) {
					result.outParamTotalNumberOfVisibleSections = (result.outParamTotalNumberOfVisibleSections+1); // TotalNumberOfVisibleSections = TotalNumberOfVisibleSections + 1

				}
				// CourseOutlineCompleted
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssCourseOutlineCompleted) {
					result.outParamTotalNumberOfCompletedSections = (result.outParamTotalNumberOfCompletedSections+1); // TotalNumberOfCompletedSections = TotalNumberOfCompletedSections + 1

				}
				// CourseCoordinatorCompleted
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssCourseCoordinatorCompleted) {
					result.outParamTotalNumberOfCompletedSections = (result.outParamTotalNumberOfCompletedSections+1); // TotalNumberOfCompletedSections = TotalNumberOfCompletedSections + 1

				}
				// KeyStrengthsCompleted
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssKeyStrengthsCompleted) {
					result.outParamTotalNumberOfCompletedSections = (result.outParamTotalNumberOfCompletedSections+1); // TotalNumberOfCompletedSections = TotalNumberOfCompletedSections + 1

				}
				// AreasForDevelopmentCompleted
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssAreasForDevelopmentCompleted) {
					result.outParamTotalNumberOfCompletedSections = (result.outParamTotalNumberOfCompletedSections+1); // TotalNumberOfCompletedSections = TotalNumberOfCompletedSections + 1

				}
				// PredictedOutcomeCompleted
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssPredictedOutcomeCompleted) {
					result.outParamTotalNumberOfCompletedSections = (result.outParamTotalNumberOfCompletedSections+1); // TotalNumberOfCompletedSections = TotalNumberOfCompletedSections + 1

				}
				// AttendanceCompleted
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssAttendanceCompleted) {
					result.outParamTotalNumberOfCompletedSections = (result.outParamTotalNumberOfCompletedSections+1); // TotalNumberOfCompletedSections = TotalNumberOfCompletedSections + 1

				}
			} // try

			finally {
				outParamTotalNumberOfVisibleSections = result.outParamTotalNumberOfVisibleSections;
				outParamTotalNumberOfCompletedSections = result.outParamTotalNumberOfCompletedSections;
			}
		}

		public static class FuncActionProgressReportSpecialistSectionCount {


		}


	}


}