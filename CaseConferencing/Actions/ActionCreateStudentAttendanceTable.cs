/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Runtime.Serialization;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Resources;

namespace ssCaseConferencing {

	public partial class Actions {
		public class lcvCreateStudentAttendanceTable: VarsBag {
			public string inParamStudentReference;
			public string inParamDateRange;
			public string inParamOfferingCode;
			/// <summary>
			/// Variable <code>varLcCurrentDateToBuild</code> that represents the Service Studio local variable
			///  <code>CurrentDateToBuild</code> <p>Description: </p>
			/// </summary>
			public DateTime varLcCurrentDateToBuild = new DateTime(1900, 1, 1, 0, 0, 0);

			/// <summary>
			/// Variable <code>varLcStartPos</code> that represents the Service Studio local variable
			///  <code>StartPos</code> <p>Description: </p>
			/// </summary>
			public int varLcStartPos = 0;

			/// <summary>
			/// Variable <code>varLcEndPos</code> that represents the Service Studio local variable
			///  <code>EndPos</code> <p>Description: </p>
			/// </summary>
			public int varLcEndPos = 0;

			/// <summary>
			/// Variable <code>varLcRow</code> that represents the Service Studio local variable <code>Row</code>
			///  <p>Description: </p>
			/// </summary>
			public RLTDTagRecordList varLcRow = new RLTDTagRecordList();

			/// <summary>
			/// Variable <code>varLcCurrentPos</code> that represents the Service Studio local variable
			///  <code>CurrentPos</code> <p>Description: </p>
			/// </summary>
			public int varLcCurrentPos = 0;

			/// <summary>
			/// Variable <code>varLcAltRow</code> that represents the Service Studio local variable
			///  <code>AltRow</code> <p>Description: </p>
			/// </summary>
			public bool varLcAltRow = false;

			/// <summary>
			/// Variable <code>varLcStartDate</code> that represents the Service Studio local variable
			///  <code>StartDate</code> <p>Description: </p>
			/// </summary>
			public DateTime varLcStartDate = new DateTime(1900, 1, 1, 0, 0, 0);

			/// <summary>
			/// Variable <code>varLcEndDate</code> that represents the Service Studio local variable
			///  <code>EndDate</code> <p>Description: </p>
			/// </summary>
			public DateTime varLcEndDate = new DateTime(1900, 1, 1, 0, 0, 0);

			public lcoCreateEmptyRowObject resCreateEmptyRowObject = new lcoCreateEmptyRowObject();
			public RLStudentAttendanceForCourseRecordList resGetStudentAttendanceByCourseDetail_outParamStudentAttendance = new RLStudentAttendanceForCourseRecordList();

			public lcoCreatePopulatedRow resCreatePopulatedRow2 = new lcoCreatePopulatedRow();
			public string resStringBuilder_ToString_outParamString = "";

			public lcoCreateHeaderRow resCreateHeaderRow = new lcoCreateHeaderRow();
			public lcoCreatePopulatedRow resCreatePopulatedRow = new lcoCreatePopulatedRow();
			public object resStringBuilder_Create_outParamStringBuilder = null;

			public lcoPopulateTDTags resPopulateTDTags = new lcoPopulateTDTags();
			public lcvCreateStudentAttendanceTable(string inParamStudentReference, string inParamDateRange, string inParamOfferingCode) {
				this.inParamStudentReference = inParamStudentReference;
				this.inParamDateRange = inParamDateRange;
				this.inParamOfferingCode = inParamOfferingCode;
			}
		}
		public class lcoCreateStudentAttendanceTable: VarsBag {
			public string outParamTableHTML = "";

			public lcoCreateStudentAttendanceTable() {
			}
		}
		/// <summary>
		/// Action <code>ActionCreateStudentAttendanceTable</code> that represents the Service Studio user
		///  action <code>CreateStudentAttendanceTable</code> <p> Description: </p>
		/// </summary>
		public static void ActionCreateStudentAttendanceTable(HeContext heContext, string inParamStudentReference, string inParamDateRange, string inParamOfferingCode, out string outParamTableHTML) {
			lcoCreateStudentAttendanceTable result = new lcoCreateStudentAttendanceTable();
			lcvCreateStudentAttendanceTable localVars = new lcvCreateStudentAttendanceTable(inParamStudentReference, inParamDateRange, inParamOfferingCode);
			try {
				localVars.varLcStartDate = BuiltInFunction.TextToDate(BuiltInFunction.Substr(localVars.inParamDateRange, 0, BuiltInFunction.Index(localVars.inParamDateRange, "|", 0, false, false))); // StartDate = TextToDate
				localVars.varLcEndDate = BuiltInFunction.TextToDate(BuiltInFunction.Substr(localVars.inParamDateRange, (BuiltInFunction.Index(localVars.inParamDateRange, "|", 0, false, false) +1), BuiltInFunction.Length(localVars.inParamDateRange))); // EndDate = TextToDate
				// StringBuilder_Create
				Actions.ActionStringBuilder_Create(heContext, 10000, out localVars.resStringBuilder_Create_outParamStringBuilder);
				// CreateTableTag
				Actions.ActionStringBuilder_Append(heContext, localVars.resStringBuilder_Create_outParamStringBuilder, "<table class=\'AttendanceTable\'>");
				// CreateHeaderRow
				Actions.ActionCreateHeaderRow(heContext, out localVars.resCreateHeaderRow.outParamHeaderRow);
				// AppendHeaderRow
				Actions.ActionStringBuilder_Append(heContext, localVars.resStringBuilder_Create_outParamStringBuilder, localVars.resCreateHeaderRow.outParamHeaderRow);
				// GetStudentAttendanceByCourseDetail
				Actions.ActionGetStudentAttendanceByCourseDetail(heContext, localVars.inParamStudentReference, localVars.inParamOfferingCode, localVars.varLcStartDate, localVars.varLcEndDate, "Detail", out localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance);
				if (localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.Empty) {
					result.outParamTableHTML = "<table><tr><td>No attendance data found for the current selection.</td></tr></table>"; // TableHTML = "<table><tr><td>No attendance data found for the current selection.</td></tr></table>"

				} else {
					// Foreach GetStudentAttendanceByCourseDetail.StudentAttendance
					localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.StartIteration();
					try {
						while (!localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.Eof) {
							if (!((localVars.varLcCurrentDateToBuild==localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssEventDate))) {
								if (!((localVars.varLcCurrentDateToBuild==BuiltInFunction.NullDate()))) {
									// CreatePopulatedRow
									Actions.ActionCreatePopulatedRow(heContext, localVars.varLcRow, localVars.varLcAltRow, out localVars.resCreatePopulatedRow.outParamRowHTML);
									localVars.varLcAltRow = (!localVars.varLcAltRow); // AltRow = notAltRow
									// StringBuilder_Append
									Actions.ActionStringBuilder_Append(heContext, localVars.resStringBuilder_Create_outParamStringBuilder, localVars.resCreatePopulatedRow.outParamRowHTML);

								}
								// CreateEmptyRowObject
								Actions.ActionCreateEmptyRowObject(heContext, out localVars.resCreateEmptyRowObject.outParamEmptyRowObject);
								localVars.varLcRow = localVars.resCreateEmptyRowObject.outParamEmptyRowObject; // Row = CreateEmptyRowObject.EmptyRowObject
								localVars.varLcRow.CurrentRec.ssSTTDTag.ssValue = Functions.rssextensiontext_ActionFormat_DateTime(heContext, localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssEventDate, "ddd-dd-MMM-yyyy"); // Row.Current.TDTag.Value =
								// Format_DateTime(GetStudentAttendanceByCourseDetail.StudentAttendance.Current.StudentAttendanceForCourse.EventDate,
								// "ddd-dd-MMM-yyyy")
								localVars.varLcRow.CurrentRec.ssSTTDTag.ssClass = "AttendanceTable DateHeader"; // Row.Current.TDTag.Class = "AttendanceTable DateHeader"

							}
							localVars.varLcStartPos = (Functions.ActionConvertTimeToNumber(heContext, BuiltInFunction.TextToTime(localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssStart)) +1); // StartPos = ConvertTimeToNumber(TextToTime) + 1
							localVars.varLcEndPos = (Functions.ActionConvertTimeToNumber(heContext, BuiltInFunction.TextToTime(localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssFinish)) +1); // EndPos = ConvertTimeToNumber(TextToTime) + 1
							localVars.varLcCurrentPos = localVars.varLcStartPos; // CurrentPos = StartPos
							// PopulateTDTags
							Actions.ActionPopulateTDTags(heContext, localVars.varLcRow, localVars.varLcStartPos, localVars.varLcEndPos, localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssStatus, ((((((((((("Time : " +localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssStart) + " - ") +localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssFinish) + "\r\n") +localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssTitle) + "\r\n") +localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssStaff) + "\r\n") +localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssRooms) + "\r\n") +localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssOfferings), ((((((((((("Time : " +localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssStart) + " - ") +localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssFinish) + "<BR/>")
							+localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssTitle) + "<BR/>") +localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssStaff) + "<BR/>") + (((BuiltInFunction.Length(localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssRooms) >15)) ?((BuiltInFunction.Substr(localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssRooms, 0, 15) + "...")):(localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssRooms))) + "<BR/>") + (((BuiltInFunction.Length(localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssOfferings) >15)) ?((BuiltInFunction.Substr(localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssOfferings, 0, 15) + "...")):(localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssOfferings))), out localVars.resPopulateTDTags.outParamTDTags2);
							localVars.varLcCurrentDateToBuild = localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.CurrentRec.ssSTStudentAttendanceForCourse.ssEventDate; // CurrentDateToBuild =
							// GetStudentAttendanceByCourseDetail.StudentAttendance.Current.StudentAttendanceForCourse.EventDate
							localVars.varLcRow = localVars.resPopulateTDTags.outParamTDTags2; // Row = PopulateTDTags.TDTags2
							localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.Advance();
						}
					} finally {
						localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.EndIteration();
					}
					if ((localVars.resGetStudentAttendanceByCourseDetail_outParamStudentAttendance.Length==1)) {
						// CreatePopulatedRow2
						Actions.ActionCreatePopulatedRow(heContext, localVars.varLcRow, localVars.varLcAltRow, out localVars.resCreatePopulatedRow2.outParamRowHTML);
						// StringBuilder_Append3
						Actions.ActionStringBuilder_Append(heContext, localVars.resStringBuilder_Create_outParamStringBuilder, localVars.resCreatePopulatedRow2.outParamRowHTML);

					}
					// StringBuilder_Append2
					Actions.ActionStringBuilder_Append(heContext, localVars.resStringBuilder_Create_outParamStringBuilder, "</table>");
					// StringBuilder_ToString
					Actions.ActionStringBuilder_ToString(heContext, localVars.resStringBuilder_Create_outParamStringBuilder, out localVars.resStringBuilder_ToString_outParamString);
					result.outParamTableHTML = localVars.resStringBuilder_ToString_outParamString; // TableHTML = StringBuilder_ToString.String

				}
			} // try

			finally {
				outParamTableHTML = result.outParamTableHTML;
			}
		}

		public static class FuncActionCreateStudentAttendanceTable {


		}


	}


}