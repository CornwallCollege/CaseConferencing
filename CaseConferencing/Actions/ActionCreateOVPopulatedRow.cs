/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Runtime.Serialization;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Resources;

namespace ssCaseConferencing {

	public partial class Actions {
		public class lcvCreateOVPopulatedRow: VarsBag {
			public RLStudentAttendanceForCourseRecordList inParamAttendanceData;
			public RCAttendanceOVLayoutRowsRecord inParamCurrentRow;
			public RLAttendanceOVLayoutColumnsRecordList inParamColumnList;
			/// <summary>
			/// Variable <code>varLcValueToInsert</code> that represents the Service Studio local variable
			///  <code>ValueToInsert</code> <p>Description: </p>
			/// </summary>
			public string varLcValueToInsert = "";

			public lcvCreateOVPopulatedRow(RLStudentAttendanceForCourseRecordList inParamAttendanceData, RCAttendanceOVLayoutRowsRecord inParamCurrentRow, RLAttendanceOVLayoutColumnsRecordList inParamColumnList) {
				this.inParamAttendanceData = inParamAttendanceData;
				this.inParamCurrentRow = inParamCurrentRow;
				this.inParamColumnList = inParamColumnList;
			}
		}
		public class lcoCreateOVPopulatedRow: VarsBag {
			public string outParamRowHTML = "";

			public lcoCreateOVPopulatedRow() {
			}
		}
		/// <summary>
		/// Action <code>ActionCreateOVPopulatedRow</code> that represents the Service Studio user action
		///  <code>CreateOVPopulatedRow</code> <p> Description: </p>
		/// </summary>
		public static void ActionCreateOVPopulatedRow(HeContext heContext, RLStudentAttendanceForCourseRecordList inParamAttendanceData, RCAttendanceOVLayoutRowsRecord inParamCurrentRow, RLAttendanceOVLayoutColumnsRecordList inParamColumnList, out string outParamRowHTML) {
			lcoCreateOVPopulatedRow result = new lcoCreateOVPopulatedRow();
			lcvCreateOVPopulatedRow localVars = new lcvCreateOVPopulatedRow(inParamAttendanceData, inParamCurrentRow, inParamColumnList);
			try {
				result.outParamRowHTML = (((("<TR><TD class=\'AttendanceOverviewTable RowHeader\' title=\'" +localVars.inParamCurrentRow.ssSTAttendanceOVLayoutRows.ssRowHeaderTooltip) + "\'>") +localVars.inParamCurrentRow.ssSTAttendanceOVLayoutRows.ssRowHeader) + "</TD>"); // RowHTML = "<TR><TD class='AttendanceOverviewTable RowHeader' title='" +
				// CurrentRow.AttendanceOVLayoutRows.RowHeaderTooltip + "'>" + CurrentRow.AttendanceOVLayoutRows.RowHeader + "</TD>"
				// Foreach ColumnList
				localVars.inParamColumnList.StartIteration();
				try {
					while (! localVars.inParamColumnList.Eof) {
						if (!((localVars.inParamColumnList.CurrentRowNumber==0))) {
							localVars.varLcValueToInsert = ""; // ValueToInsert = ""
							// Foreach AttendanceData
							localVars.inParamAttendanceData.StartIteration();
							try {
								while (!localVars.inParamAttendanceData.Eof) {
									if ((localVars.inParamAttendanceData.CurrentRec.ssSTStudentAttendanceForCourse.ssTitle==localVars.inParamCurrentRow.ssSTAttendanceOVLayoutRows.ssRowHeader)) {
										if ((localVars.inParamAttendanceData.CurrentRec.ssSTStudentAttendanceForCourse.ssEventDate==localVars.inParamColumnList.CurrentRec.ssSTAttendanceOVLayoutColumns.ssColumnDate)) {
											localVars.varLcValueToInsert = Functions.ActionConvertStatusToMark(heContext, localVars.inParamAttendanceData.CurrentRec.ssSTStudentAttendanceForCourse.ssStatus); // ValueToInsert = ConvertStatusToMark(AttendanceData.Current.StudentAttendanceForCourse.Status)

										}

									}
									localVars.inParamAttendanceData.Advance();
								}
							} finally {
								localVars.inParamAttendanceData.EndIteration();
							}
							result.outParamRowHTML = (((result.outParamRowHTML+ "<TD class=\'AttendanceOverviewTable Cell\'>") +localVars.varLcValueToInsert) + "</TD>"); // RowHTML = RowHTML + "<TD class='AttendanceOverviewTable Cell'>" + ValueToInsert + "</TD>"

						}
						localVars.inParamColumnList.Advance();
					}
				} finally {
					localVars.inParamColumnList.EndIteration();
				}
				result.outParamRowHTML = (result.outParamRowHTML+ "</TR>"); // RowHTML = RowHTML + "</TR>"
			} // try

			finally {
				outParamRowHTML = result.outParamRowHTML;
			}
		}

		public static class FuncActionCreateOVPopulatedRow {


		}


	}


}