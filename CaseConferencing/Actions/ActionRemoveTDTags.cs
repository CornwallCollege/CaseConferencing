/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Runtime.Serialization;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Resources;

namespace ssCaseConferencing {

	public partial class Actions {
		public class lcvRemoveTDTags: VarsBag {
			public RLTDTagRecordList inParamTDTags;
			public int inParamStartPos;
			public int inParamNumberToRemove;
			/// <summary>
			/// Variable <code>varLcCurrentPos</code> that represents the Service Studio local variable
			///  <code>CurrentPos</code> <p>Description: </p>
			/// </summary>
			public int varLcCurrentPos = 0;

			public lcvRemoveTDTags(RLTDTagRecordList inParamTDTags, int inParamStartPos, int inParamNumberToRemove) {
				this.inParamTDTags = inParamTDTags;
				this.inParamStartPos = inParamStartPos;
				this.inParamNumberToRemove = inParamNumberToRemove;
			}
		}
		public class lcoRemoveTDTags: VarsBag {
			public RLTDTagRecordList outParamTDTags2 = new RLTDTagRecordList();

			public lcoRemoveTDTags() {
			}
		}
		/// <summary>
		/// Action <code>ActionRemoveTDTags</code> that represents the Service Studio user action
		///  <code>RemoveTDTags</code> <p> Description: </p>
		/// </summary>
		public static void ActionRemoveTDTags(HeContext heContext, RLTDTagRecordList inParamTDTags, int inParamStartPos, int inParamNumberToRemove, out RLTDTagRecordList outParamTDTags2) {
			lcoRemoveTDTags result = new lcoRemoveTDTags();
			lcvRemoveTDTags localVars = new lcvRemoveTDTags(inParamTDTags, inParamStartPos, inParamNumberToRemove);
			try {
				localVars.varLcCurrentPos = localVars.inParamStartPos; // CurrentPos = StartPos
				while ((localVars.varLcCurrentPos!=(localVars.inParamStartPos+localVars.inParamNumberToRemove))) {
					// ListRemove
					ExtendedActions.ListRemove(heContext, localVars.inParamTDTags, localVars.varLcCurrentPos);
					localVars.varLcCurrentPos = (localVars.varLcCurrentPos+1); // CurrentPos = CurrentPos + 1
				}
				result.outParamTDTags2 = localVars.inParamTDTags; // TDTags2 = TDTags
			} // try

			finally {
				outParamTDTags2 = result.outParamTDTags2;
			}
		}

		public static class FuncActionRemoveTDTags {


		}


	}


}