/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Runtime.Serialization;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using OutSystems.HubEdition.RuntimePlatform;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Resources;

namespace ssCaseConferencing {

	public partial class Actions {
		public class lcvProgressReportPersonalSectionCount: VarsBag {
			public RCProgressReportSectionRecord inParamProgressReportSection;
			public lcvProgressReportPersonalSectionCount(RCProgressReportSectionRecord inParamProgressReportSection) {
				this.inParamProgressReportSection = inParamProgressReportSection;
			}
		}
		public class lcoProgressReportPersonalSectionCount: VarsBag {
			public int outParamTotalNumberOfVisibleSections = 0;

			public int outParamTotalNumberOfCompletedSections = 0;

			public lcoProgressReportPersonalSectionCount() {
			}
		}
		/// <summary>
		/// Action <code>ActionProgressReportPersonalSectionCount</code> that represents the Service Studio
		///  user action <code>ProgressReportPersonalSectionCount</code> <p> Description: </p>
		/// </summary>
		public static void ActionProgressReportPersonalSectionCount(HeContext heContext, RCProgressReportSectionRecord inParamProgressReportSection, out int outParamTotalNumberOfVisibleSections, out int outParamTotalNumberOfCompletedSections) {
			lcoProgressReportPersonalSectionCount result = new lcoProgressReportPersonalSectionCount();
			lcvProgressReportPersonalSectionCount localVars = new lcvProgressReportPersonalSectionCount(inParamProgressReportSection);
			try {
				// AttendanceVisible
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssAttendanceVisible) {
					result.outParamTotalNumberOfVisibleSections = (result.outParamTotalNumberOfVisibleSections+1); // TotalNumberOfVisibleSections = TotalNumberOfVisibleSections + 1

				}
				// StudyProgrammeVisible
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssStudyProgrammeOverviewVisibl) {
					result.outParamTotalNumberOfVisibleSections = (result.outParamTotalNumberOfVisibleSections+1); // TotalNumberOfVisibleSections = TotalNumberOfVisibleSections + 1

				}
				// EmployabilityVisible
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssEmployabilityVisible) {
					result.outParamTotalNumberOfVisibleSections = (result.outParamTotalNumberOfVisibleSections+1); // TotalNumberOfVisibleSections = TotalNumberOfVisibleSections + 1

				}
				// WorkExperienceVisible
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssWorkExperienceVisible) {
					result.outParamTotalNumberOfVisibleSections = (result.outParamTotalNumberOfVisibleSections+1); // TotalNumberOfVisibleSections = TotalNumberOfVisibleSections + 1

				}
				// AttendanceCompleted
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssAttendanceCompleted) {
					result.outParamTotalNumberOfCompletedSections = (result.outParamTotalNumberOfCompletedSections+1); // TotalNumberOfCompletedSections = TotalNumberOfCompletedSections + 1

				}
				// StudyProgrammeCompleted
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssStudyProgrammeCompleted) {
					result.outParamTotalNumberOfCompletedSections = (result.outParamTotalNumberOfCompletedSections+1); // TotalNumberOfCompletedSections = TotalNumberOfCompletedSections + 1

				}
				// EmployabilityCompleted
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssEmployabilityCompleted) {
					result.outParamTotalNumberOfCompletedSections = (result.outParamTotalNumberOfCompletedSections+1); // TotalNumberOfCompletedSections = TotalNumberOfCompletedSections + 1

				}
				// WorkExperienceCompleted
				if (localVars.inParamProgressReportSection.ssENProgressReportSection.ssWorkExperienceCompleted) {
					result.outParamTotalNumberOfCompletedSections = (result.outParamTotalNumberOfCompletedSections+1); // TotalNumberOfCompletedSections = TotalNumberOfCompletedSections + 1

				}
			} // try

			finally {
				outParamTotalNumberOfVisibleSections = result.outParamTotalNumberOfVisibleSections;
				outParamTotalNumberOfCompletedSections = result.outParamTotalNumberOfCompletedSections;
			}
		}

		public static class FuncActionProgressReportPersonalSectionCount {


		}


	}


}