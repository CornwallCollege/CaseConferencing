/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.IO;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Runtime.Serialization;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Web.Caching;
using System.Text;
using System.Resources;

namespace ssCaseConferencing.Flows.FlowCourses {

	public class ScrnPopup_SMSSelection: OSPageViewStateCompressed, IWebScreen, INegotiateTabIndexes, IBookmarkableURL {


		public ScrnPopup_SMSSelection(): base(CaseConferencing_Properties.QuirksMode) {
		}


		/// <summary>
		/// Screen Input Parameter inParamStudentId. Description:
		/// </summary>
		public string inParamStudentId = "";
		/// <summary>
		/// Screen Input Parameter inParamPhoneSelection. Description:
		/// </summary>
		public string inParamPhoneSelection = "";
		/// <summary>
		/// Variable <code>varLcToNumber</code> that represents the Service Studio local variable
		///  <code>ToNumber</code> <p>Description: </p>
		/// </summary>
		string varLcToNumber = "";

		/// <summary>
		/// Variable <code>varLcTo</code> that represents the Service Studio local variable <code>To</code>
		///  <p>Description: </p>
		/// </summary>
		string varLcTo = "Other";

		/// <summary>
		/// Variable wt_WebBlockInstance28
		/// </summary>
		protected ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout wt_WebBlockInstance28;
		/// <summary>
		/// Auxiliar Edit Record record variable
		/// </summary>
		RCStudentRecord ssStudentCareerAimEditRecord = new RCStudentRecord(null);

		/// <summary>
		/// Edit Record Valid Runtime Property
		/// </summary>
		public bool wtStudentCareerAimEdit_Valid() {
			bool res = true &&
			ValidationUtils.IsValid(this, "wt_Input10");
			return res;
		}

		protected OutSystems.HubEdition.WebWidgets.Container wt_Container7;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container3;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container18;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container20;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container33;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container41;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container23;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wt_Input10ValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wt_Input10ValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container15;
		/// <summary>
		/// Variable (wt_Link19) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link19;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container30;
		/// <summary>
		/// Variable (wt_Link16) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link16;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container32;


		protected override void GetBlocksCss(TextWriter writer, bool inline, HashSet<string> visited) {
			ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);

		}

		protected override void GetWidgetsCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}







		protected override string GetInlineStyleSheetInclude() {
			throw new InvalidOperationException();
		}





		protected override bool PageAllowsCallbacks() {
			return true;
		}


		protected string GetRequestInfoJavaScript() {
			return GetRequestInfoJavaScript("zZ3X5iA_vUi4famH1Xpqww", "Popup_SMSSelection");
		}

		protected string GetVisitCode() {
			SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
			if (session["osIsNewVisit"] != null && ((bool) session["osIsNewVisit"])
			// && !NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)
			&& RuntimePlatformUtils.IsValidRequestForVisit()) {
				return "<script type=\"text/javascript\">outsystems.internal.$.get(\"/CaseConferencing/_status.aspx\")</script>";
			}
			return "";
		}

		public string GetCallbackDebug() {
			if (Request.HttpMethod == "GET" && Request.QueryString["__CALLBACK_DEBUG"] != null && Request.QueryString["__CALLBACK_DEBUG"] != "") {
				if (Request.QueryString["__CALLBACK_DEBUG"] == OutSystems.HubEdition.RuntimePlatform.AppInfo.GetParameter(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Callback_Debug_Information_Key)) {
					return OutSystems.HubEdition.RuntimePlatform.AppInfo.GetAppInfo().GetCallbackDebugInformation();
				}
			}
			return "";
		}

		protected string GetHeadTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadTop, "zZ3X5iA_vUi4famH1Xpqww", "Popup_SMSSelection");
		}

		protected string GetHeadBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadBottom, "zZ3X5iA_vUi4famH1Xpqww", "Popup_SMSSelection");
		}

		protected string GetBodyTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyTop, "zZ3X5iA_vUi4famH1Xpqww", "Popup_SMSSelection");
		}

		protected string GetBodyBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyBottom, "zZ3X5iA_vUi4famH1Xpqww", "Popup_SMSSelection");
		}

		HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();



		static ScrnPopup_SMSSelection() {
			htTabIndexGroups["wt_Text25"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container7"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_RadioButton36"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container3"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["RichWidgets_wt_WebBlockInstance27"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_InlineExpression11"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container18"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_RadioButton37"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container20"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["RichWidgets_wt_WebBlockInstance4"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_InlineExpression40"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container2"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_RadioButton31"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container33"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["RichWidgets_wt_WebBlockInstance9"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_InlineExpression8"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container41"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_RadioButton21"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container23"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["RichWidgets_wt_WebBlockInstance22"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Input10"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container15"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Link19"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container30"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["RichWidgets_wt_WebBlockInstance29"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Text17"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Link16"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Container32"] = "wtStudentCareerAimEdit-1";
			htTabIndexGroups["wt_Text38"] = "wtStudentCareerAimEdit-1";
		}


		RLStudentRecordList queryResGetStudentByStudentReference_outParamList = new RLStudentRecordList();
		int queryResGetStudentByStudentReference_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// Query datasetGetStudentByStudentReference
			int datasetGetStudentByStudentReference_maxRecords = 0;
			queryResGetStudentByStudentReference_outParamList = FuncssPreparation.datasetGetStudentByStudentReference(heContext, datasetGetStudentByStudentReference_maxRecords, IterationMultiplicity.Never, out queryResGetStudentByStudentReference_outParamCount, inParamStudentId
			);
			varLcTo = (((inParamPhoneSelection== "")) ?("Other"):((((inParamPhoneSelection==queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssHomeTelephone)) ?("Home"):((((inParamPhoneSelection==queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssMobilePhone)) ?("Mobile"):((((inParamPhoneSelection==queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssNextOfKinPhone)) ?("Kin"):("")))))))); // To = internalIf
		}


		protected override BaseAppUtils GetAppUtils() {
			return AppUtils.Instance;
		}

		protected override string OwnCssUrl {
			get {
				return ""; 
			}
		}

		protected override string OwnCssFile {
			get {
				return ""; 
			}
		}

		protected override string BasicCssUrl {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string BasicCssFile {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssUrl {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssFile {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssUrl {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssFile {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssUrl {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssFile {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssUrl {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssFile {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string ThemeCssUrl {
			get {
				return RsseSpaceThemeProvider.Themes.ThemeThemeProvider.ThemeCssUrl; 
			}
		}

		protected override string ThemeCssFile {
			get {
				return "ReferenceTheme.ThemeProvider.css"; 
			}
		}

		protected override string ThemeExtraCssUrl {
			get {
				return RsseSpaceRichWidgets.Themes.ThemeLondonFixed.ThemeExtraCssUrl; 
			}
		}

		protected override string ThemeExtraCssFile {
			get {
				return "ReferenceTheme.LondonFixed.extra.css"; 
			}
		}

		public override bool IsUsingMobileTheme {
			get {
				return false; 
			}
		}

		protected override string OwnJavascriptInclude {
			get {
				return ""; 
			}
		}

		public override string XUACompatibleOverride {
			get {
				return null; 
			}
		}

		protected void InitializeUrls() {
			Uri uri = new Uri((RuntimePlatformUtils.RequestIsSecure(Request) ? "https": "http") + Request.Url.ToString().Substring(Request.Url.Scheme.Length));
			string applicationUrl = AppUtils.Instance.getImagePath(/*internalAccess*/false,/*includeSessionIdIfNeeded*/ false);
			actionUrl = "";
			bookmarkableUrl = uri.GetLeftPart(UriPartial.Authority) + applicationUrl;
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			if ((inParamStudentId!= "")) {
				parameters.Add(new Pair<string, string>("StudentId", HttpUtility.UrlEncode(inParamStudentId, Request.ContentEncoding)));
			}
			if ((inParamPhoneSelection!= "")) {
				parameters.Add(new Pair<string, string>("PhoneSelection", HttpUtility.UrlEncode(inParamPhoneSelection, Request.ContentEncoding)));
			}
			if (Request.AppRelativeCurrentExecutionFilePath.IndexOf('/', 2) == -1) {
				AppInfo appInfo = AppInfo.GetAppInfo();
				if (appInfo != null) {
					string pageHeader = appInfo.OsContext.OsISAPIFilter.GetPage(Request);
					if (appInfo.OsContext.IsCookielessSession || (pageHeader != null && pageHeader.IndexOf('/', 1) != -1)) {
						actionUrl = applicationUrl;
					}
				}
				actionUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_SMSSelection", parameters,/*useParamsOnlyIfNeededForRule*/ true);
			}
			bookmarkableUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "Popup_SMSSelection", parameters,/*useParamsOnlyIfNeededForRule*/ false);

		}

		protected override void OnInit(EventArgs e) {
			HeContext heContext = AppInfo.GetAppInfo().OsContext;
			heContext.CurrentScreen = this;
			try {
				heContext.CurrentExecutionFileName = Path.GetFileName(Request.CurrentExecutionFilePath);
			} catch {}
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wt_WebBlockInstance28 = (ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout) FindControl("wt_WebBlockInstance28");
			wt_Container7 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container7");
			wt_Container3 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container3");
			wt_Container18 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container18");
			wt_Container20 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container20");
			wt_Container2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container2");
			wt_Container33 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container33");
			wt_Container41 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container41");
			wt_Container23 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container23");
			wt_Container15 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container15");
			wt_Link19 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link19");
			if (this.wt_Link19 != null) {
				this.wt_Link19.Click += new System.EventHandler(this.wt_Link19_Click);
			}
			wt_Container30 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container30");
			wt_Link16 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link16");
			if (this.wt_Link16 != null) {
				this.wt_Link16.Click += new System.EventHandler(this.wt_Link16_Click);
			}
			wt_Container32 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container32");
			Page.Error += new EventHandler(Page_Error);
			this.Load += new System.EventHandler(this.Page_Load);
			this.PreRender += new System.EventHandler(this.Page_PreRender);
		}

		public override Control FindControl(string id) {
			if (id == "wt_Text5") {
				return wt_WebBlockInstance28.wtTitle.FindControl("wt_Text5");
			}
			if (id == "wt_InlineExpression12") {
				return wt_WebBlockInstance28.wtTitle.FindControl("wt_InlineExpression12");
			}
			if (id == "wtStudentCareerAimEdit") {
				return wt_WebBlockInstance28.wtContent.FindControl("wtStudentCareerAimEdit");
			}
			if (id == "wt_EditRecordRow1") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_EditRecordRow1");
			}
			if (id == "wt_EditRecordCell14") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_EditRecordCell14");
			}
			if (id == "wt_Text25") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Text25");
			}
			if (id == "wt_EditRecordCell24") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_EditRecordCell24");
			}
			if (id == "wt_Container7") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Container7");
			}
			if (id == "wt_RadioButton36") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_RadioButton36");
			}
			if (id == "wt_Container3") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Container3");
			}
			if (id == "RichWidgets_wt_WebBlockInstance27") {
				return wt_WebBlockInstance28.wtContent.FindControl("RichWidgets_wt_WebBlockInstance27");
			}
			if (id == "wt_InlineExpression11") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_InlineExpression11");
			}
			if (id == "wt_Container18") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Container18");
			}
			if (id == "wt_RadioButton37") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_RadioButton37");
			}
			if (id == "wt_Container20") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Container20");
			}
			if (id == "RichWidgets_wt_WebBlockInstance4") {
				return wt_WebBlockInstance28.wtContent.FindControl("RichWidgets_wt_WebBlockInstance4");
			}
			if (id == "wt_InlineExpression40") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_InlineExpression40");
			}
			if (id == "wt_Container2") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Container2");
			}
			if (id == "wt_RadioButton31") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_RadioButton31");
			}
			if (id == "wt_Container33") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Container33");
			}
			if (id == "RichWidgets_wt_WebBlockInstance9") {
				return wt_WebBlockInstance28.wtContent.FindControl("RichWidgets_wt_WebBlockInstance9");
			}
			if (id == "wt_InlineExpression8") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_InlineExpression8");
			}
			if (id == "wt_Container41") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Container41");
			}
			if (id == "wt_RadioButton21") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_RadioButton21");
			}
			if (id == "wt_Container23") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Container23");
			}
			if (id == "RichWidgets_wt_WebBlockInstance22") {
				return wt_WebBlockInstance28.wtContent.FindControl("RichWidgets_wt_WebBlockInstance22");
			}
			if (id == "wt_Input10") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Input10");
			}
			if (id == "wt_EditRecordRow39") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_EditRecordRow39");
			}
			if (id == "wt_EditRecordCell13") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_EditRecordCell13");
			}
			if (id == "wt_EditRecordCell26") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_EditRecordCell26");
			}
			if (id == "wt_Container15") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Container15");
			}
			if (id == "wt_Link19") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Link19");
			}
			if (id == "wt_Container30") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Container30");
			}
			if (id == "RichWidgets_wt_WebBlockInstance29") {
				return wt_WebBlockInstance28.wtContent.FindControl("RichWidgets_wt_WebBlockInstance29");
			}
			if (id == "wt_Text17") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Text17");
			}
			if (id == "wt_Link16") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Link16");
			}
			if (id == "wt_Container32") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Container32");
			}
			if (id == "wt_Text38") {
				return wt_WebBlockInstance28.wtContent.FindControl("wt_Text38");
			}

			return base.FindControl(id);
		}


		private void Page_Load(object sender, System.EventArgs e) {
			// init vars
			AppInfo appInfo = Global.App;
			if (appInfo != null) {
				heContext = appInfo.OsContext;
			}
			Response.ContentType = "text/html; charset=" + Response.ContentEncoding.WebName;
			OutSystems.HubEdition.RuntimePlatform.Web.JavaScriptManager.CheckRelativeJavaScriptPrefix(AppUtils.Instance.getImagePath());
			appInfo.IsLoadingScreen = !IsPostBack;
			if (!IsPostBack) {
				ArrayList screenParameters = (ArrayList) Global.App.OsContext.Session["CaseConferencing._ScreenParameters_Popup_SMSSelection"];
				bool screenParametersInSession = false;
				object screenParametersKey = heContext.Session["_ScreenParametersKey"];
				if ((screenParametersKey == null || this.Key.Equals(ObjectKey.Parse(Convert.ToString(screenParametersKey)))) && screenParameters != null) {
					try {
						if (screenParameters.Count > 0) {
							object paramValue = screenParameters[0];
							if (paramValue != null) {
								inParamStudentId = (string) paramValue;
							}
						}
						if (screenParameters.Count > 1) {
							object paramValue = screenParameters[1];
							if (paramValue != null) {
								inParamPhoneSelection = (string) paramValue;
							}
						}
						screenParametersInSession = true;
					} catch (Exception parametersException) {
						ErrorLog.LogApplicationError("Failed to load Screen Input Parameters from session.", "ScreenParametersKey = " + screenParametersKey + ", Count = " + screenParameters.Count + "\r\n" + parametersException.StackTrace, heContext, "Global");
					} finally {
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_Popup_SMSSelection"] = null;
						heContext.Session["_ScreenParametersKey"] = null;
					}
				}
				else if (Request.HttpMethod == "GET") {
					if (Request.QueryString["StudentId"] != null) {
						inParamStudentId = Request.QueryString["StudentId"];
					}
					if (Request.QueryString["PhoneSelection"] != null) {
						inParamPhoneSelection = Request.QueryString["PhoneSelection"];
					}
				}
				else if (Request.HttpMethod == "POST") {
					if (Request.Form["StudentId"] != null) {
						inParamStudentId = Request.Form["StudentId"];
					}
					if (Request.Form["PhoneSelection"] != null) {
						inParamPhoneSelection = Request.Form["PhoneSelection"];
					}
				}
			}
			if (!appInfo.IsApplicationEnabled) {
				ErrorLog.LogApplicationError(new Exception("eSpace " + appInfo.eSpaceName + " is disabled"), heContext, "Global");
				String contact = BuiltInFunction.EncodeUrl(RuntimePlatformUtils.GetAdministrationEmail());
				try {
					Server.Transfer("/customHandlers/app_offline.aspx?contact=" + contact + "&errorCode=APPLICATION_OFFLINE");
				}
				catch (System.Threading.ThreadAbortException) {}
				catch {
					Response.Redirect("/customHandlers/internalerror.aspx");
				}
			}
			InitializeUrls();
			Actions.ActionOnBeginWebRequest(heContext);
			if (!IsPostBack) {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				Preparation(heContext);
				bool bindEditRecords = !IsPostBack;
				if (bindEditRecords) {
					wtStudentCareerAimEdit_onDataBindingDataSource(this.FindControl("wtStudentCareerAimEdit"), null);
				}
				Title = "Popup SMSSelection"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Popup_SMSSelection", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} else {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				FetchViewState();
			}

		}

		private bool _negociateTabIndexesExecuted = false;

		private void Page_PreRender(object sender, System.EventArgs e) {
			ClientScript.RegisterArrayDeclaration("OsPage_Validators", "{}");
			if (!_negociateTabIndexesExecuted) {
				NegotiateTabIndexes();
				_negociateTabIndexesExecuted = true;
			}
			foreach(Control child in this.Controls) {
				DisableViewState(child);
			}
		}

		private void NegotiateTabIndexes() {
			short tabindex=1;
			tabindex = NegotiateTabIndexes(tabindex, true);
		}

		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}



		private void Page_Error(object sender, System.EventArgs e) {
			if (! new ssCaseConferencing.Flows.FlowCourses.ExceptionHandler(this, false).HandleException()) {
				DatabaseAccess.FreeupResources(false);
				Server.Transfer("_WebErrorPage.aspx");
			}
		}

		public override void ClearErrorHandler() {
			Error -= Page_Error;
		}

		public void CheckPermissions(HeContext heContext) {
			{
				bool check;
				ExtendedActions.CheckCaseConferencingBackofficeRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckPLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckRegisteredRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSuperUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportPractitionerRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSafeGuardingLeadRole(heContext, 0, out check);
				if (check) return;
			}
			throw new ExcptNotCaseConferencingBackoffice("CaseConferencingBackoffice role required");
		}


		public ObjectKey Key {
			get {
				return ObjectKey.Parse("zZ3X5iA_vUi4famH1Xpqww"); 
			}
		}

		public bool isSecure {
			get {
				return true; 
			}
		}


		/// <summary>
		/// Action <code>CommandSend</code> that represents the Service Studio screen action <code>Send</code>
		///  <p> Description: </p>
		/// </summary>
		private bool CommandSend(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				if ((varLcTo== "Mobile")) {
					varLcToNumber = ssStudentCareerAimEditRecord.ssENStudent.ssMobilePhone; // ToNumber = StudentCareerAimEdit.Record.Student.MobilePhone

				} else {
					if ((varLcTo== "Home")) {
						varLcToNumber = ssStudentCareerAimEditRecord.ssENStudent.ssHomeTelephone; // ToNumber = StudentCareerAimEdit.Record.Student.HomeTelephone

					} else {
						if ((varLcTo== "Kin")) {
							varLcToNumber = ssStudentCareerAimEditRecord.ssENStudent.ssNextOfKinPhone; // ToNumber = StudentCareerAimEdit.Record.Student.NextOfKinPhone

						}

					}

				}
				// Popup_Editor_Notify
				Actions.ActionPopup_Editor_Notify(heContext, varLcToNumber);
				// Popup_Editor_Close
				Actions.ActionPopup_Editor_Close(heContext);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandClose</code> that represents the Service Studio screen action
		///  <code>Close</code> <p> Description: </p>
		/// </summary>
		private bool CommandClose(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Popup_Editor_Close
				Actions.ActionPopup_Editor_Close(heContext);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// wt_WebBlockInstance28 Functions
		/// </summary>
		public void webBlck_WebBlockInstance28_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout widget = (ssCaseConferencing.Flows.FlowCommon.WBlkPopup_Editor_Layout) sender;
			widget.inParamWidth = 550;
		}
		/// <summary>
		/// wt_InlineExpression12 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = VCY2R_gxOUK3aQyf8Gzc4Q) Expression:
		///  GetStudentByStudentReference.List.Current.Student.Forenames + " "
		/// + GetStudentByStudentReference.List.Current.Student.Surname
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression12() {
			return ((queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssForenames+ " ") +queryResGetStudentByStudentReference_outParamList.CurrentRec.ssENStudent.ssSurname);
		}
		/// <summary>
		/// wtStudentCareerAimEdit Functions
		/// </summary>
		public void wtStudentCareerAimEdit_onDataBindingDataSource(object sender, System.EventArgs e) {
			if (!IsPostBack) {
				ssStudentCareerAimEditRecord = queryResGetStudentByStudentReference_outParamList.CurrentRec;
			}
		}
		/// <summary>
		/// wt_Container7 Functions
		/// </summary>
		public void cnt_Container7_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container7_setInlineAttributes(sender, e);
		}
		public string cnt_Container7_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container7_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container7)
		/// </summary>
		/// <returns>The Visible State of wt_Container7</returns>
		public bool cnt_Container7_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_RadioButton36 Functions
		/// </summary>
		/// <summary>
		/// Gets the Value for the Radio buton
		/// </summary>
		/// <returns>The Radio Button Value</returns>
		public string rad_RadioButton36_getValue() {
			return "Mobile";
		}
		public string rad_RadioButton36_getGroupName(object sender) {
			((OutSystems.HubEdition.WebWidgets.RadioButton) sender).InsideIteration = false; return "1496915107";
		}
		public void rad_RadioButton36_radiobutton_onCheckedChanged(object sender, EventArgs e) {
			try {
				if (((OutSystems.HubEdition.WebWidgets.RadioButton) sender).Checked) {
					varLcTo = Convert.ToString(((OutSystems.HubEdition.WebWidgets.RadioButton) sender).GetValue());
				}

			} catch (Exception) {
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_RadioButton36)
		/// </summary>
		/// <returns>The Visible State of wt_RadioButton36</returns>
		public bool rad_RadioButton36_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_RadioButton36)
		/// </summary>
		/// <returns>The Enabled State of wt_RadioButton36</returns>
		public bool rad_RadioButton36_isEnabled() {
			return (ssStudentCareerAimEditRecord.ssENStudent.ssHomeTelephone!= ""); 
		}
		public bool rad_RadioButton36_isChecked(object sender) {
			return (String.Compare(varLcTo, ((OutSystems.HubEdition.WebWidgets.RadioButton) sender).GetValue()) == 0);
		}
		/// <summary>
		/// wt_Container3 Functions
		/// </summary>
		public void cnt_Container3_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container3_setInlineAttributes(sender, e);
		}
		public string cnt_Container3_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left: 20px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((IAttributeAccessor) sender).SetAttribute("title", "Home" .ToString());
			if (!cnt_Container3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container3)
		/// </summary>
		/// <returns>The Visible State of wt_Container3</returns>
		public bool cnt_Container3_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance27 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance27_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("CzktVEoQIUavNdPuJna99w")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression11 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = fj5EQeZUD0i7Fy2kF4GX6w) Expression:
		///  StudentCareerAimEdit.Record.Student.HomeTelephone
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression11() {
			return ssStudentCareerAimEditRecord.ssENStudent.ssHomeTelephone;
		}
		/// <summary>
		/// wt_Container18 Functions
		/// </summary>
		public void cnt_Container18_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container18_setInlineAttributes(sender, e);
		}
		public string cnt_Container18_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container18_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container18)
		/// </summary>
		/// <returns>The Visible State of wt_Container18</returns>
		public bool cnt_Container18_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_RadioButton37 Functions
		/// </summary>
		/// <summary>
		/// Gets the Value for the Radio buton
		/// </summary>
		/// <returns>The Radio Button Value</returns>
		public string rad_RadioButton37_getValue() {
			return "Home";
		}
		public string rad_RadioButton37_getGroupName(object sender) {
			((OutSystems.HubEdition.WebWidgets.RadioButton) sender).InsideIteration = false; return "1496915107";
		}
		public void rad_RadioButton37_radiobutton_onCheckedChanged(object sender, EventArgs e) {
			try {
				if (((OutSystems.HubEdition.WebWidgets.RadioButton) sender).Checked) {
					varLcTo = Convert.ToString(((OutSystems.HubEdition.WebWidgets.RadioButton) sender).GetValue());
				}

			} catch (Exception) {
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_RadioButton37)
		/// </summary>
		/// <returns>The Visible State of wt_RadioButton37</returns>
		public bool rad_RadioButton37_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_RadioButton37)
		/// </summary>
		/// <returns>The Enabled State of wt_RadioButton37</returns>
		public bool rad_RadioButton37_isEnabled() {
			return (ssStudentCareerAimEditRecord.ssENStudent.ssMobilePhone!= ""); 
		}
		public bool rad_RadioButton37_isChecked(object sender) {
			return (String.Compare(varLcTo, ((OutSystems.HubEdition.WebWidgets.RadioButton) sender).GetValue()) == 0);
		}
		/// <summary>
		/// wt_Container20 Functions
		/// </summary>
		public void cnt_Container20_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container20_setInlineAttributes(sender, e);
		}
		public string cnt_Container20_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left: 20px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((IAttributeAccessor) sender).SetAttribute("title", "Mobile" .ToString());
			if (!cnt_Container20_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container20)
		/// </summary>
		/// <returns>The Visible State of wt_Container20</returns>
		public bool cnt_Container20_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance4 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance4_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("cAxZk7J+AEu6LHunYrmadQ")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression40 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = peUS93BX0UuMArIZD3e6OQ) Expression:
		///  StudentCareerAimEdit.Record.Student.MobilePhone
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression40() {
			return ssStudentCareerAimEditRecord.ssENStudent.ssMobilePhone;
		}
		/// <summary>
		/// wt_Container2 Functions
		/// </summary>
		public void cnt_Container2_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container2_setInlineAttributes(sender, e);
		}
		public string cnt_Container2_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container2)
		/// </summary>
		/// <returns>The Visible State of wt_Container2</returns>
		public bool cnt_Container2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_RadioButton31 Functions
		/// </summary>
		/// <summary>
		/// Gets the Value for the Radio buton
		/// </summary>
		/// <returns>The Radio Button Value</returns>
		public string rad_RadioButton31_getValue() {
			return "Kin";
		}
		public string rad_RadioButton31_getGroupName(object sender) {
			((OutSystems.HubEdition.WebWidgets.RadioButton) sender).InsideIteration = false; return "1496915107";
		}
		public void rad_RadioButton31_radiobutton_onCheckedChanged(object sender, EventArgs e) {
			try {
				if (((OutSystems.HubEdition.WebWidgets.RadioButton) sender).Checked) {
					varLcTo = Convert.ToString(((OutSystems.HubEdition.WebWidgets.RadioButton) sender).GetValue());
				}

			} catch (Exception) {
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_RadioButton31)
		/// </summary>
		/// <returns>The Visible State of wt_RadioButton31</returns>
		public bool rad_RadioButton31_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_RadioButton31)
		/// </summary>
		/// <returns>The Enabled State of wt_RadioButton31</returns>
		public bool rad_RadioButton31_isEnabled() {
			return (ssStudentCareerAimEditRecord.ssENStudent.ssNextOfKinPhone!= ""); 
		}
		public bool rad_RadioButton31_isChecked(object sender) {
			return (String.Compare(varLcTo, ((OutSystems.HubEdition.WebWidgets.RadioButton) sender).GetValue()) == 0);
		}
		/// <summary>
		/// wt_Container33 Functions
		/// </summary>
		public void cnt_Container33_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container33_setInlineAttributes(sender, e);
		}
		public string cnt_Container33_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-left: 20px";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container33_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container33)
		/// </summary>
		/// <returns>The Visible State of wt_Container33</returns>
		public bool cnt_Container33_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance9 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance9_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("F0OdMTnS+E63CzTzGXJvyg")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression8 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = MVeNN7s+jEO3w+7nUfVIJQ) Expression:
		///  StudentCareerAimEdit.Record.Student.NextOfKinPhone
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression8() {
			return ssStudentCareerAimEditRecord.ssENStudent.ssNextOfKinPhone;
		}
		/// <summary>
		/// wt_Container41 Functions
		/// </summary>
		public void cnt_Container41_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container41_setInlineAttributes(sender, e);
		}
		public string cnt_Container41_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container41_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container41)
		/// </summary>
		/// <returns>The Visible State of wt_Container41</returns>
		public bool cnt_Container41_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_RadioButton21 Functions
		/// </summary>
		/// <summary>
		/// Gets the Value for the Radio buton
		/// </summary>
		/// <returns>The Radio Button Value</returns>
		public string rad_RadioButton21_getValue() {
			return "Other";
		}
		public string rad_RadioButton21_getGroupName(object sender) {
			((OutSystems.HubEdition.WebWidgets.RadioButton) sender).InsideIteration = false; return "1496915107";
		}
		public void rad_RadioButton21_radiobutton_onCheckedChanged(object sender, EventArgs e) {
			try {
				if (((OutSystems.HubEdition.WebWidgets.RadioButton) sender).Checked) {
					varLcTo = Convert.ToString(((OutSystems.HubEdition.WebWidgets.RadioButton) sender).GetValue());
				}

			} catch (Exception) {
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_RadioButton21)
		/// </summary>
		/// <returns>The Visible State of wt_RadioButton21</returns>
		public bool rad_RadioButton21_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_RadioButton21)
		/// </summary>
		/// <returns>The Enabled State of wt_RadioButton21</returns>
		public bool rad_RadioButton21_isEnabled() {
			return true; 
		}
		public bool rad_RadioButton21_isChecked(object sender) {
			return (String.Compare(varLcTo, ((OutSystems.HubEdition.WebWidgets.RadioButton) sender).GetValue()) == 0);
		}
		/// <summary>
		/// wt_Container23 Functions
		/// </summary>
		public void cnt_Container23_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container23_setInlineAttributes(sender, e);
		}
		public string cnt_Container23_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container23_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container23)
		/// </summary>
		/// <returns>The Visible State of wt_Container23</returns>
		public bool cnt_Container23_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance22 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance22_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("b9v0DfN+QU6EplZq0ulC1g")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Input10 Functions
		/// </summary>
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwt_Input10_input_value() {
			if (("" !=varLcToNumber)) {
				return varLcToNumber;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wt_Input10");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return varLcToNumber;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwt_Input10_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					varLcToNumber = ""; 
				} else {
					varLcToNumber = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				varLcToNumber = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wt_Input10)
		/// </summary>
		/// <returns>The Visible State of wt_Input10</returns>
		public bool inputwt_Input10_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Input10)
		/// </summary>
		/// <returns>The Enabled State of wt_Input10</returns>
		public bool inputwt_Input10_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwt_Input10)
		/// </summary>
		/// <returns>The Mandatory Value of inputwt_Input10</returns>
		public bool inputwt_Input10_isMandatory() {
			return false;
		}

		/// <summary>
		/// Gets the prompt of the input (wt_Input10)
		/// </summary>
		/// <returns>Prompt of the Input (wt_Input10)</returns>
		public string inputwt_Input10_getPrompt() {
			return "Phone number";
		}
		/// <summary>
		/// wt_Container15 Functions
		/// </summary>
		public void cnt_Container15_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container15_setInlineAttributes(sender, e);
		}
		public string cnt_Container15_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container15_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container15)
		/// </summary>
		/// <returns>The Visible State of wt_Container15</returns>
		public bool cnt_Container15_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link19 Functions
		/// </summary>
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link19_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), true);
			if (CommandSend(heContext)) {
				doRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link19)
		/// </summary>
		/// <returns>title of the Link (wt_Link19)</returns>
		public string
		lnk_Link19_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link19)
		/// </summary>
		/// <returns>The Visible State of wt_Link19</returns>
		public bool lnk_Link19_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link19)
		/// </summary>
		/// <returns>The Enabled State of wt_Link19</returns>
		public bool lnk_Link19_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container30 Functions
		/// </summary>
		public void cnt_Container30_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container30_setInlineAttributes(sender, e);
		}
		public string cnt_Container30_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container30_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container30)
		/// </summary>
		/// <returns>The Visible State of wt_Container30</returns>
		public bool cnt_Container30_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance29 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance29_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("Cpl3iVqzzUCZj6kMrYJG6g")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Link16 Functions
		/// </summary>
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link16_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandClose(heContext)) {
				doRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link16)
		/// </summary>
		/// <returns>title of the Link (wt_Link16)</returns>
		public string
		lnk_Link16_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link16)
		/// </summary>
		/// <returns>The Visible State of wt_Link16</returns>
		public bool lnk_Link16_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link16)
		/// </summary>
		/// <returns>The Enabled State of wt_Link16</returns>
		public bool lnk_Link16_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wt_Container32 Functions
		/// </summary>
		public void cnt_Container32_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container32_setInlineAttributes(sender, e);
		}
		public string cnt_Container32_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container32_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container32)
		/// </summary>
		/// <returns>The Visible State of wt_Container32</returns>
		public bool cnt_Container32_isVisible() {
			return true;
		}



		public static class FuncCommandSend {
		}
		public static class FuncCommandClose {
		}
		public static class FuncssPreparation {

			/// <summary>
			/// Query Function "GetStudentByStudentReference" of Action "Preparation"
			/// </summary>
			public static RLStudentRecordList datasetGetStudentByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Never {-unbound-}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENStudent.[FORENAMES] o2, ENStudent.[SURNAME] o3, NULL o4, NULL o5, NULL o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, ENStudent.[HOMETELEPHONE] o14, ENStudent.[MOBILEPHONE] o15, NULL o16, NULL o17, NULL o18, NULL o19, ENStudent.[NEXTOFKINPHONE] o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27");
				fromBuilder.Append(" FROM {Student} ENStudent");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudent.[STUDENTREFERENCE] = @qpstP) AND (ENStudent.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudent.[STUDENTREFERENCE] IS NULL)");
				}

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentRecordList outParamList = new RLStudentRecordList();
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[1];
				opt[0] = new BitArray(new bool[] {
					true, false, false, true, true, true, true, true, true, true, true, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentRecordList _tmp = new RLStudentRecordList();
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Courses.Popup_SMSSelection.Preparation.GetStudentByStudentReference.List");
						outParamList = (RLStudentRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Courses.Popup_SMSSelection.Preparation.GetStudentByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentRecordList _tmp = new RLStudentRecordList();
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query Courses.Popup_SMSSelection.Preparation.GetStudentByStudentReference.List");
							outParamList = (RLStudentRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query Courses.Popup_SMSSelection.Preparation.GetStudentByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}



		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}


		public LocalState PushStack() {
			return null;
		}

		public void doRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				Preparation(heContext);

				Title = "Popup SMSSelection"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Popup_SMSSelection", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// Perform the partial databind
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "Popup_SMSSelection", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Ajax", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}



		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();
			ViewStateAttributes.SetInViewState("inParamStudentId", inParamStudentId, "");
			ViewStateAttributes.SetInViewState("inParamPhoneSelection", inParamPhoneSelection, "");
			ViewStateAttributes.SetInViewState("varLcToNumber", varLcToNumber, "");
			ViewStateAttributes.SetInViewState("varLcTo", varLcTo, "");
			ViewStateAttributes.SetInViewState("wtStudentCareerAimEdit_record_ssENStudent_ssHomeTelephone", ssStudentCareerAimEditRecord.ssENStudent.ssHomeTelephone, "");
			ViewStateAttributes.SetInViewState("wtStudentCareerAimEdit_record_ssENStudent_ssMobilePhone", ssStudentCareerAimEditRecord.ssENStudent.ssMobilePhone, "");
			ViewStateAttributes.SetInViewState("wtStudentCareerAimEdit_record_ssENStudent_ssNextOfKinPhone", ssStudentCareerAimEditRecord.ssENStudent.ssNextOfKinPhone, "");
			ViewStateAttributes.SetInViewState("wtStudentCareerAimEdit_record_ssENStudent_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(ssStudentCareerAimEditRecord.ssENStudent.ChangedAttributes, new BitArray(new bool[] {
				false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, true, false, false, false, false, false, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("wtStudentCareerAimEdit_record_ssENStudent_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(ssStudentCareerAimEditRecord.ssENStudent.OptimizedAttributes, new BitArray(new bool[] {
				true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, true
			}
			)))), null);
			ViewStateAttributes.SetInViewState("wt_Input10_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wt_Input10")).Mandatory, false);
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			try {
				inParamStudentId = (string) ViewStateAttributes.GetFromViewState("inParamStudentId", "");
				inParamPhoneSelection = (string) ViewStateAttributes.GetFromViewState("inParamPhoneSelection", "");
				varLcToNumber = (string) ViewStateAttributes.GetFromViewState("varLcToNumber", "");
				varLcTo = (string) ViewStateAttributes.GetFromViewState("varLcTo", "");
				ssStudentCareerAimEditRecord.ssENStudent.ssHomeTelephone = (string) ViewStateAttributes.GetFromViewState("wtStudentCareerAimEdit_record_ssENStudent_ssHomeTelephone", "");
				ssStudentCareerAimEditRecord.ssENStudent.ssMobilePhone = (string) ViewStateAttributes.GetFromViewState("wtStudentCareerAimEdit_record_ssENStudent_ssMobilePhone", "");
				ssStudentCareerAimEditRecord.ssENStudent.ssNextOfKinPhone = (string) ViewStateAttributes.GetFromViewState("wtStudentCareerAimEdit_record_ssENStudent_ssNextOfKinPhone", "");
				ssStudentCareerAimEditRecord.ssENStudent.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtStudentCareerAimEdit_record_ssENStudent_ChangedAttributes", null));
				ssStudentCareerAimEditRecord.ssENStudent.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtStudentCareerAimEdit_record_ssENStudent_OptimizedAttributes", null));
				((IWidgetRuntimeProperties) this.FindControl("wt_Input10")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wt_Input10_Mandatory", false);
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}


		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			ValidationUtils.ValidateInput(this, "wt_Input10", parentEditRecord, ValidationUtils.validateTrue, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}


		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}

		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			Page_Load(null, null); this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}


		public override void DataBind() {
			base.DataBind();
			StoreViewState();
			OutSystems.HubEdition.WebWidgets.Utils.addValidationScriptsToPage(this);
		}



	}




}
