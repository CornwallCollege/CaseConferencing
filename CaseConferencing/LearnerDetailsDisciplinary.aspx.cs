/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.IO;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Runtime.Serialization;
using OutSystems.HubEdition.RuntimePlatform;
using System.Collections.Generic;
using OutSystems.HubEdition.RuntimePlatform.Sms;
using OutSystems.HubEdition.RuntimePlatform.Db;
using OutSystems.Internal.Db;
using OutSystems.HubEdition.RuntimePlatform.Log;
using OutSystems.HubEdition.RuntimePlatform.Web;
using OutSystems.HubEdition.RuntimePlatform.Email;
using OutSystems.HubEdition.WebWidgets;
using OutSystems.HubEdition.WebWidgets.Behaviors;
using OutSystems.RuntimeCommon;
using OutSystems.ObjectKeys;
using System.Text.RegularExpressions;
using System.Configuration;
using System.Web.Caching;
using System.Text;
using System.Resources;

namespace ssCaseConferencing.Flows.FlowLearnerView {

	public class ScrnLearnerDetailsDisciplinary: OSPageViewStateCompressed, IWebScreen, INegotiateTabIndexes, IBookmarkableURL {


		public ScrnLearnerDetailsDisciplinary(): base(CaseConferencing_Properties.QuirksMode) {
		}


		/// <summary>
		/// Screen Input Parameter inParamStudentReference. Description:
		/// </summary>
		public string inParamStudentReference = "";
		/// <summary>
		/// Screen Input Parameter inParamSessionID. Description:
		/// </summary>
		public int inParamSessionID = 0;
		/// <summary>
		/// Screen Input Parameter inParamCourseCode. Description:
		/// </summary>
		public string inParamCourseCode = "";
		/// <summary>
		/// Screen Input Parameter inParamFromLearnerList. Description:
		/// </summary>
		public bool inParamFromLearnerList = false;
		/// <summary>
		/// Variable <code>varLcCurrentSelectDisciplinary</code> that represents the Service Studio local
		///  variable <code>CurrentSelectDisciplinary</code> <p>Description: </p>
		/// </summary>
		string varLcCurrentSelectDisciplinary = ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("oeAwcE7ZG02l3othZaYk6Q")).ssId;

		/// <summary>
		/// Variable <code>varLcVisible</code> that represents the Service Studio local variable
		///  <code>Visible</code> <p>Description: </p>
		/// </summary>
		bool varLcVisible = false;

		/// <summary>
		/// Variable <code>varLcDescriptionDisciplinary</code> that represents the Service Studio local
		///  variable <code>DescriptionDisciplinary</code> <p>Description: </p>
		/// </summary>
		string varLcDescriptionDisciplinary = "";

		/// <summary>
		/// Variable <code>varLcNewDisciplinaryStatus</code> that represents the Service Studio local variable
		///  <code>NewDisciplinaryStatus</code> <p>Description: </p>
		/// </summary>
		string varLcNewDisciplinaryStatus = ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("oeAwcE7ZG02l3othZaYk6Q")).ssId;

		/// <summary>
		/// Variable <code>varLcOldDisciplinaryStatus</code> that represents the Service Studio local variable
		///  <code>OldDisciplinaryStatus</code> <p>Description: </p>
		/// </summary>
		string varLcOldDisciplinaryStatus = "";

		/// <summary>
		/// Variable <code>varLcDocumentsIDList</code> that represents the Service Studio local variable
		///  <code>DocumentsIDList</code> <p>Description: </p>
		/// </summary>
		RLIntRecordList varLcDocumentsIDList = new RLIntRecordList();

		/// <summary>
		/// Variable <code>varLcRaisedDisciplinary</code> that represents the Service Studio local variable
		///  <code>RaisedDisciplinary</code> <p>Description: </p>
		/// </summary>
		RCDisciplinaryRecord varLcRaisedDisciplinary = new RCDisciplinaryRecord(null);

		/// <summary>
		/// Variable <code>varLcDisciplinaryDocument</code> that represents the Service Studio local variable
		///  <code>DisciplinaryDocument</code> <p>Description: </p>
		/// </summary>
		RCDisciplinaryDocumentsRecord varLcDisciplinaryDocument = new RCDisciplinaryDocumentsRecord(null);

		/// <summary>
		/// Variable wt_WebBlockInstance110
		/// </summary>
		protected ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout wt_WebBlockInstance110;
		protected OutSystems.HubEdition.WebWidgets.Container wtDisciplinaryRaise;
		protected OutSystems.HubEdition.WebWidgets.Container wtDisciplinary;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container89;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container62;
		/// <summary>
		/// Variable "True" if the Widget wt_If136
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If136T;

		/// <summary>
		/// Variable "True" if the Widget wt_If136
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If136F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container63;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container172;
		protected OutSystems.HubEdition.WebWidgets.Container wtRaiseDisciplinary;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container140;
		protected OutSystems.HubEdition.WebWidgets.Container wtReason;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container157;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container117;
		protected OutSystems.HubEdition.WebWidgets.Container wtResponsible2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container150;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtDisciplinaryInputValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtDisciplinaryInputValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wtWarapperSelectRAG;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container1;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container141;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container166;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container53;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container80;
		/// <summary>
		/// Variable "True" if the Widget wt_If86
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If86T;

		/// <summary>
		/// Variable "True" if the Widget wt_If86
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If86F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container6;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container139;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container115;
		protected OutSystems.HubEdition.WebWidgets.Container wtAttachedDocuments;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container93;
		protected OutSystems.HubEdition.WebWidgets.Container wtButton_CauseForConcern;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container180;
		/// <summary>
		/// Variable (wt_Link99) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link99;
		/// <summary>
		/// Auxiliar Edit Record record variable
		/// </summary>
		RCDisciplinaryRecord ssEditRecordDisciplinaryRecord = new RCDisciplinaryRecord(null);

		/// <summary>
		/// Edit Record Valid Runtime Property
		/// </summary>
		public bool wtEditRecordDisciplinary_Valid() {
			bool res = true;
			return res;
		}

		protected OutSystems.HubEdition.WebWidgets.Container wtDisciplinaryList;
		private RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList _ssDisciplinary_ListList = new RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList();
		public RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList ssDisciplinary_ListList {
			get {
				return _ssDisciplinary_ListList; 
			}
			set {
				_ssDisciplinary_ListList = value;
				wtDisciplinary_List.DataSource = value;
				ssDisciplinary_ListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtDisciplinary_List;
		public ArrayList wtDisciplinary_List_storage = new ArrayList();
		protected bool ssDisciplinary_ListList_notUsedYet = true;
		protected bool ssDisciplinary_ListListDoDataBind;
		protected bool ssDisciplinary_ListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wtDisciplinaryCurrent;
		/// <summary>
		/// Variable "True" if the Widget wt_If129
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If129T;

		/// <summary>
		/// Variable "True" if the Widget wt_If129
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If129F;
		protected OutSystems.HubEdition.WebWidgets.Container wtViewDisciplinary;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container128;
		/// <summary>
		/// Variable "True" if the Widget wt_If121
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If121T;

		/// <summary>
		/// Variable "True" if the Widget wt_If121
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If121F;
		/// <summary>
		/// Variable "True" if the Widget wt_If69
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If69T;

		/// <summary>
		/// Variable "True" if the Widget wt_If69
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If69F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container54;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container94;
		protected OutSystems.HubEdition.WebWidgets.Container wtResponsible4;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container107;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container79;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container49;
		/// <summary>
		/// Variable "True" if the Widget wt_If176
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If176T;

		/// <summary>
		/// Variable "True" if the Widget wt_If176
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If176F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container9;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container48;
		protected OutSystems.HubEdition.WebWidgets.Container wtEditCauseForConcern;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container113;
		protected OutSystems.HubEdition.WebWidgets.Container wtReason2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container83;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container112;
		protected OutSystems.HubEdition.WebWidgets.Container wtResponsible3;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container158;

		protected OutSystems.HubEdition.WebWidgets.RequiredFieldTextValidator wtDisciplinaryEditInputValidatorRequired;
		protected OutSystems.HubEdition.WebWidgets.TextValidator wtDisciplinaryEditInputValidatorType;
		protected OutSystems.HubEdition.WebWidgets.Container wtWarapperSelectRAG2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container101;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container98;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container175;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container144;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container12;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container152;
		/// <summary>
		/// Variable "True" if the Widget wt_If131
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If131T;

		/// <summary>
		/// Variable "True" if the Widget wt_If131
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.If wt_If131F;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container61;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container162;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container51;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container124;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container147;
		/// <summary>
		/// Variable (wt_Link105) with Link component
		/// </summary>
		protected OutSystems.HubEdition.WebWidgets.LinkButton wt_Link105;
		protected OutSystems.HubEdition.WebWidgets.Container wtDisciplinaryLog;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container60;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container27;
		private RLUserStudentLogStudentLogTypeRecordList _ssGetDisciplinaryLog_ListList = new RLUserStudentLogStudentLogTypeRecordList();
		public RLUserStudentLogStudentLogTypeRecordList ssGetDisciplinaryLog_ListList {
			get {
				return _ssGetDisciplinaryLog_ListList; 
			}
			set {
				_ssGetDisciplinaryLog_ListList = value;
				wtGetDisciplinaryLog_List.DataSource = value;
				ssGetDisciplinaryLog_ListListDataBound = false;
			}
		}
		protected OutSystems.HubEdition.WebWidgets.Iterator wtGetDisciplinaryLog_List;
		public ArrayList wtGetDisciplinaryLog_List_storage = new ArrayList();
		protected bool ssGetDisciplinaryLog_ListList_notUsedYet = true;
		protected bool ssGetDisciplinaryLog_ListListDoDataBind;
		protected bool ssGetDisciplinaryLog_ListListDataBound;
		protected OutSystems.HubEdition.WebWidgets.Container wtWrapperList2;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container59;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container33;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container65;
		protected OutSystems.HubEdition.WebWidgets.Container wt_Container68;


		protected override void GetBlocksCss(TextWriter writer, bool inline, HashSet<string> visited) {
			ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout.GetCss(writer, inline, visited);
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon.GetCss(writer, inline, visited);
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsDisciplinaryAttachedDocs.GetCss(writer, inline, visited);
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted.GetCss(writer, inline, visited);

		}

		protected override void GetWidgetsCss(TextWriter writer, bool inline, HashSet<string> visited) {

		}







		protected override string GetInlineStyleSheetInclude() {
			throw new InvalidOperationException();
		}





		protected override bool PageAllowsCallbacks() {
			return true;
		}


		protected string GetRequestInfoJavaScript() {
			return GetRequestInfoJavaScript("u6TQFg6rnkqXFgZMrI5IaA", "LearnerDetailsDisciplinary");
		}

		protected string GetVisitCode() {
			SessionInfo session = AppInfo.GetAppInfo().OsContext.Session;
			if (session["osIsNewVisit"] != null && ((bool) session["osIsNewVisit"])
			// && !NetworkInterfaceUtils.IsLoopbackAddress(Request.UserHostAddress)
			&& RuntimePlatformUtils.IsValidRequestForVisit()) {
				return "<script type=\"text/javascript\">outsystems.internal.$.get(\"/CaseConferencing/_status.aspx\")</script>";
			}
			return "";
		}

		public string GetCallbackDebug() {
			if (Request.HttpMethod == "GET" && Request.QueryString["__CALLBACK_DEBUG"] != null && Request.QueryString["__CALLBACK_DEBUG"] != "") {
				if (Request.QueryString["__CALLBACK_DEBUG"] == OutSystems.HubEdition.RuntimePlatform.AppInfo.GetParameter(OutSystems.HubEdition.RuntimePlatform.Settings.Configs.Callback_Debug_Information_Key)) {
					return OutSystems.HubEdition.RuntimePlatform.AppInfo.GetAppInfo().GetCallbackDebugInformation();
				}
			}
			return "";
		}

		protected string GetHeadTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadTop, "u6TQFg6rnkqXFgZMrI5IaA", "LearnerDetailsDisciplinary");
		}

		protected string GetHeadBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.HeadBottom, "u6TQFg6rnkqXFgZMrI5IaA", "LearnerDetailsDisciplinary");
		}

		protected string GetBodyTopJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyTop, "u6TQFg6rnkqXFgZMrI5IaA", "LearnerDetailsDisciplinary");
		}

		protected string GetBodyBottomJavaScript() {
			return GetInjectedCode(CodeInjectionFactory.Locations.BodyBottom, "u6TQFg6rnkqXFgZMrI5IaA", "LearnerDetailsDisciplinary");
		}

		HeContext heContext;
		private static Hashtable htTabIndexGroups = new Hashtable();
		private Hashtable htTabIndexGroupsTI = new Hashtable();



		static ScrnLearnerDetailsDisciplinary() {
		}


		int resUserCheck_outParamPermissionType = 0;
		RLUserStudentLogStudentLogTypeRecordList queryResGetStudentLogsByStudentReference_outParamList = new RLUserStudentLogStudentLogTypeRecordList();
		int queryResGetStudentLogsByStudentReference_outParamCount = 0;
		RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList queryResGetDisciplinaries_outParamList = new RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList();
		int queryResGetDisciplinaries_outParamCount = 0;
		/// <summary>
		/// Action <code>Preparation</code> that represents the Service Studio preparation
		///  <code>Preparation</code> <p> Description: </p>
		/// </summary>
		public void Preparation(HeContext heContext) {
			CheckPermissions(heContext);
			// UserCheck
			Actions.ActionUserCheck(heContext, ((int) Global.App.OsContext.Session["UserID"]), ENApplicationPermissionEntity.GetRecordByKey(ObjectKey.Parse("1CRGE_WanUSlXH4BlXcudA")).ssId, out resUserCheck_outParamPermissionType);
			// Query datasetGetDisciplinaries
			int datasetGetDisciplinaries_maxRecords = Math.Max(wtDisciplinary_List.StartIndex + wtDisciplinary_List.LineCount + 1, 0);
			queryResGetDisciplinaries_outParamList = FuncssPreparation.datasetGetDisciplinaries(heContext, datasetGetDisciplinaries_maxRecords, IterationMultiplicity.Multiple, out queryResGetDisciplinaries_outParamCount, inParamStudentReference
			);
			// Query datasetGetStudentLogsByStudentReference
			int datasetGetStudentLogsByStudentReference_maxRecords = Math.Max(wtGetDisciplinaryLog_List.StartIndex + wtGetDisciplinaryLog_List.LineCount + 1, 0);
			queryResGetStudentLogsByStudentReference_outParamList = FuncssPreparation.datasetGetStudentLogsByStudentReference(heContext, datasetGetStudentLogsByStudentReference_maxRecords, IterationMultiplicity.Multiple, out queryResGetStudentLogsByStudentReference_outParamCount, inParamStudentReference
			);
			varLcOldDisciplinaryStatus = queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssDisciplinaryType; // OldDisciplinaryStatus = GetStudentLogsByStudentReference.List.Current.StudentLog.DisciplinaryType
		}


		protected override BaseAppUtils GetAppUtils() {
			return AppUtils.Instance;
		}

		protected override string OwnCssUrl {
			get {
				return "LearnerDetailsDisciplinary.css"; 
			}
		}

		protected override string OwnCssFile {
			get {
				return "LearnerDetailsDisciplinary.css"; 
			}
		}

		protected override string BasicCssUrl {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string BasicCssFile {
			get {
				return "_Basic.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssUrl {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string ServiceCenterBrandingCssFile {
			get {
				return "_ServiceCenterBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssUrl {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimeCoreBrandingCssFile {
			get {
				return "_LifeTimeCoreBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssUrl {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimePerformanceMonitorBrandingCssFile {
			get {
				return "_LifeTimePerformanceMonitorBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssUrl {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string LifeTimeStyleBrandingCssFile {
			get {
				return "_LifeTimeStyleBrandingCss.css"; 
			}
		}

		protected override string ThemeCssUrl {
			get {
				return RsseSpaceThemeProvider.Themes.ThemeThemeProvider.ThemeCssUrl; 
			}
		}

		protected override string ThemeCssFile {
			get {
				return "ReferenceTheme.ThemeProvider.css"; 
			}
		}

		protected override string ThemeExtraCssUrl {
			get {
				return RsseSpaceRichWidgets.Themes.ThemeLondonFixed.ThemeExtraCssUrl; 
			}
		}

		protected override string ThemeExtraCssFile {
			get {
				return "ReferenceTheme.LondonFixed.extra.css"; 
			}
		}

		public override bool IsUsingMobileTheme {
			get {
				return false; 
			}
		}

		protected override string OwnJavascriptInclude {
			get {
				return ""; 
			}
		}

		public override string XUACompatibleOverride {
			get {
				return null; 
			}
		}

		protected void InitializeUrls() {
			Uri uri = new Uri((RuntimePlatformUtils.RequestIsSecure(Request) ? "https": "http") + Request.Url.ToString().Substring(Request.Url.Scheme.Length));
			string applicationUrl = AppUtils.Instance.getImagePath(/*internalAccess*/false,/*includeSessionIdIfNeeded*/ false);
			actionUrl = "";
			bookmarkableUrl = uri.GetLeftPart(UriPartial.Authority) + applicationUrl;
			List<Pair<string, string>> parameters = new List<Pair<string, string>>();
			if ((inParamStudentReference!= "")) {
				parameters.Add(new Pair<string, string>("StudentReference", HttpUtility.UrlEncode(inParamStudentReference, Request.ContentEncoding)));
			}
			if ((inParamSessionID!=0)) {
				parameters.Add(new Pair<string, string>("SessionID", HttpUtility.UrlEncode(Convert.ToString(inParamSessionID), Request.ContentEncoding)));
			}
			if ((inParamCourseCode!= "")) {
				parameters.Add(new Pair<string, string>("CourseCode", HttpUtility.UrlEncode(inParamCourseCode, Request.ContentEncoding)));
			}
			if ((inParamFromLearnerList!=false)) {
				parameters.Add(new Pair<string, string>("FromLearnerList", HttpUtility.UrlEncode(Convert.ToString(inParamFromLearnerList), Request.ContentEncoding)));
			}
			if (Request.AppRelativeCurrentExecutionFilePath.IndexOf('/', 2) == -1) {
				AppInfo appInfo = AppInfo.GetAppInfo();
				if (appInfo != null) {
					string pageHeader = appInfo.OsContext.OsISAPIFilter.GetPage(Request);
					if (appInfo.OsContext.IsCookielessSession || (pageHeader != null && pageHeader.IndexOf('/', 1) != -1)) {
						actionUrl = applicationUrl;
					}
				}
				actionUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsDisciplinary", parameters,/*useParamsOnlyIfNeededForRule*/ true);
			}
			bookmarkableUrl += AppUtils.GetPageName(heContext, Global.eSpaceId, "LearnerDetailsDisciplinary", parameters,/*useParamsOnlyIfNeededForRule*/ false);

		}

		protected override void OnInit(EventArgs e) {
			HeContext heContext = AppInfo.GetAppInfo().OsContext;
			heContext.CurrentScreen = this;
			try {
				heContext.CurrentExecutionFileName = Path.GetFileName(Request.CurrentExecutionFilePath);
			} catch {}
			InitializeComponent();
			base.OnInit(e);
		}
		private void InitializeComponent() {
			wt_WebBlockInstance110 = (ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout) FindControl("wt_WebBlockInstance110");
			wtDisciplinaryRaise = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtDisciplinaryRaise");
			wtDisciplinary = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtDisciplinary");
			wt_Container89 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container89");
			wt_Container62 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container62");
			wt_Container63 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container63");
			wt_Container172 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container172");
			wtRaiseDisciplinary = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtRaiseDisciplinary");
			wt_Container140 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container140");
			wtReason = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtReason");
			wt_Container157 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container157");
			wt_Container117 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container117");
			wtResponsible2 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtResponsible2");
			wt_Container150 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container150");
			wtWarapperSelectRAG = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtWarapperSelectRAG");
			wt_Container1 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container1");
			wt_Container141 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container141");
			wt_Container166 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container166");
			wt_Container53 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container53");
			wt_Container80 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container80");
			wt_Container6 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container6");
			wt_Container139 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container139");
			wt_Container115 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container115");
			wtAttachedDocuments = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtAttachedDocuments");
			wt_Container93 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container93");
			wtButton_CauseForConcern = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtButton_CauseForConcern");
			wt_Container180 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container180");
			wt_Link99 = (OutSystems.HubEdition.WebWidgets.LinkButton) FindControl("wt_Link99");
			if (this.wt_Link99 != null) {
				this.wt_Link99.Click += new System.EventHandler(this.wt_Link99_Click);
			}
			wtDisciplinaryList = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtDisciplinaryList");
			wtDisciplinary_List = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtDisciplinary_List");
			wtDisciplinary_List.StartIndexExpression = () => 0;
			wtDisciplinary_List.LineCountExpression = () => 50;
			if (this.wt_Link105 != null) {
				this.wt_Link105.Click += new System.EventHandler(this.wt_Link105_Click);
			}
			wtDisciplinaryLog = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wtDisciplinaryLog");
			wt_Container60 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container60");
			wt_Container27 = (OutSystems.HubEdition.WebWidgets.Container) FindControl("wt_Container27");
			wtGetDisciplinaryLog_List = (OutSystems.HubEdition.WebWidgets.Iterator) FindControl("wtGetDisciplinaryLog_List");
			wtGetDisciplinaryLog_List.StartIndexExpression = () => 0;
			wtGetDisciplinaryLog_List.LineCountExpression = () => 999;
			Page.Error += new EventHandler(Page_Error);
			this.Load += new System.EventHandler(this.Page_Load);
			this.PreRender += new System.EventHandler(this.Page_PreRender);
		}

		public override Control FindControl(string id) {
			if (id == "wtDisciplinaryRaise") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtDisciplinaryRaise");
			}
			if (id == "wtDisciplinary") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtDisciplinary");
			}
			if (id == "wt_Container89") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container89");
			}
			if (id == "wt_Container62") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container62");
			}
			if (id == "wt_Text26") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Text26");
			}
			if (id == "wt_If136") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_If136");
			}
			if (id == "wt_If136T") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_If136T");
			}
			if (id == "wt_Container63") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container63");
			}
			if (id == "wt_Container172") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container172");
			}
			if (id == "RichWidgets_wt_WebBlockInstance114") {
				return wt_WebBlockInstance110.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance114");
			}
			if (id == "wt_Text29") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Text29");
			}
			if (id == "wt_If136F") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_If136F");
			}
			if (id == "wtRaiseDisciplinary") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtRaiseDisciplinary");
			}
			if (id == "wt_Container140") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container140");
			}
			if (id == "wtReason") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtReason");
			}
			if (id == "wt_Text111") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Text111");
			}
			if (id == "wt_Container157") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container157");
			}
			if (id == "wt_Container117") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container117");
			}
			if (id == "wtResponsible2") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtResponsible2");
			}
			if (id == "wt_Container150") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container150");
			}
			if (id == "wtDisciplinaryInput") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtDisciplinaryInput");
			}
			if (id == "wtWarapperSelectRAG") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtWarapperSelectRAG");
			}
			if (id == "wt_Table77") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Table77");
			}
			if (id == "wt_TableRow18") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_TableRow18");
			}
			if (id == "wt_TableCell46") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_TableCell46");
			}
			if (id == "wt_Container1") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container1");
			}
			if (id == "RichWidgets_wt_WebBlockInstance75") {
				return wt_WebBlockInstance110.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance75");
			}
			if (id == "wt_InlineExpression159") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_InlineExpression159");
			}
			if (id == "wt_TableRow135") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_TableRow135");
			}
			if (id == "wt_TableCell58") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_TableCell58");
			}
			if (id == "wt_Container141") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container141");
			}
			if (id == "RichWidgets_wt_WebBlockInstance102") {
				return wt_WebBlockInstance110.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance102");
			}
			if (id == "wt_InlineExpression156") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_InlineExpression156");
			}
			if (id == "wt_TableRow168") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_TableRow168");
			}
			if (id == "wt_TableCell2") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_TableCell2");
			}
			if (id == "wt_Container166") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container166");
			}
			if (id == "RichWidgets_wt_WebBlockInstance84") {
				return wt_WebBlockInstance110.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance84");
			}
			if (id == "wt_InlineExpression56") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_InlineExpression56");
			}
			if (id == "wt_TableRow95") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_TableRow95");
			}
			if (id == "wt_TableCell134") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_TableCell134");
			}
			if (id == "wt_Container53") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container53");
			}
			if (id == "RichWidgets_wt_WebBlockInstance106") {
				return wt_WebBlockInstance110.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance106");
			}
			if (id == "wt_Text14") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Text14");
			}
			if (id == "wt_TableRow17") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_TableRow17");
			}
			if (id == "wt_TableCell24") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_TableCell24");
			}
			if (id == "wt_Container80") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container80");
			}
			if (id == "RichWidgets_wt_WebBlockInstance10") {
				return wt_WebBlockInstance110.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance10");
			}
			if (id == "wt_Text100") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Text100");
			}
			if (id == "wt_If86") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_If86");
			}
			if (id == "wt_If86T") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_If86T");
			}
			if (id == "wt_Container6") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container6");
			}
			if (id == "wt_Container139") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container139");
			}
			if (id == "Hunspell_wt_WebBlockInstance25") {
				return wt_WebBlockInstance110.wtRAG.FindControl("Hunspell_wt_WebBlockInstance25");
			}
			if (id == "wt_Container115") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container115");
			}
			if (id == "wt_WebBlockInstance182") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_WebBlockInstance182");
			}
			if (id == "wtAttachedDocuments") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtAttachedDocuments");
			}
			if (id == "wt_WebBlockInstance41") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_WebBlockInstance41");
			}
			if (id == "wt_Container93") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container93");
			}
			if (id == "wtButton_CauseForConcern") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtButton_CauseForConcern");
			}
			if (id == "RichWidgets_wt_WebBlockInstance96") {
				return wt_WebBlockInstance110.wtRAG.FindControl("RichWidgets_wt_WebBlockInstance96");
			}
			if (id == "wt_Text125") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Text125");
			}
			if (id == "wt_Container180") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container180");
			}
			if (id == "wt_Text4") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Text4");
			}
			if (id == "wt_Link99") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Link99");
			}
			if (id == "wt_Text145") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Text145");
			}
			if (id == "wt_If86F") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_If86F");
			}
			if (id == "wtEditRecordDisciplinary") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtEditRecordDisciplinary");
			}
			if (id == "wtDisciplinaryList") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtDisciplinaryList");
			}
			if (id == "wtDisciplinary_List") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtDisciplinary_List");
			}
			if (id == "wtDisciplinaryLog") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtDisciplinaryLog");
			}
			if (id == "wt_Container60") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container60");
			}
			if (id == "wt_Container27") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Container27");
			}
			if (id == "wt_Text116") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wt_Text116");
			}
			if (id == "wtGetDisciplinaryLog_List") {
				return wt_WebBlockInstance110.wtRAG.FindControl("wtGetDisciplinaryLog_List");
			}

			return base.FindControl(id);
		}


		private void Page_Load(object sender, System.EventArgs e) {
			// init vars
			AppInfo appInfo = Global.App;
			if (appInfo != null) {
				heContext = appInfo.OsContext;
			}
			Response.ContentType = "text/html; charset=" + Response.ContentEncoding.WebName;
			OutSystems.HubEdition.RuntimePlatform.Web.JavaScriptManager.CheckRelativeJavaScriptPrefix(AppUtils.Instance.getImagePath());
			appInfo.IsLoadingScreen = !IsPostBack;
			((OSPageViewState) Page).EnableResetViewState();
			if (!IsPostBack) {
				ArrayList screenParameters = (ArrayList) Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsDisciplinary"];
				bool screenParametersInSession = false;
				object screenParametersKey = heContext.Session["_ScreenParametersKey"];
				if ((screenParametersKey == null || this.Key.Equals(ObjectKey.Parse(Convert.ToString(screenParametersKey)))) && screenParameters != null) {
					try {
						if (screenParameters.Count > 0) {
							object paramValue = screenParameters[0];
							if (paramValue != null) {
								inParamStudentReference = (string) paramValue;
							}
						}
						if (screenParameters.Count > 1) {
							object paramValue = screenParameters[1];
							if (paramValue != null) {
								inParamSessionID = (int) paramValue;
							}
						}
						if (screenParameters.Count > 2) {
							object paramValue = screenParameters[2];
							if (paramValue != null) {
								inParamCourseCode = (string) paramValue;
							}
						}
						if (screenParameters.Count > 3) {
							object paramValue = screenParameters[3];
							if (paramValue != null) {
								inParamFromLearnerList = (bool) paramValue;
							}
						}
						screenParametersInSession = true;
					} catch (Exception parametersException) {
						ErrorLog.LogApplicationError("Failed to load Screen Input Parameters from session.", "ScreenParametersKey = " + screenParametersKey + ", Count = " + screenParameters.Count + "\r\n" + parametersException.StackTrace, heContext, "Global");
					} finally {
						Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsDisciplinary"] = null;
						heContext.Session["_ScreenParametersKey"] = null;
					}
				}
				else if (Request.HttpMethod == "GET") {
					if (Request.QueryString["StudentReference"] != null) {
						inParamStudentReference = Request.QueryString["StudentReference"];
					}
					if (Request.QueryString["SessionID"] != null) {
						inParamSessionID = Convert.ToInt32(Request.QueryString["SessionID"]);
					}
					if (Request.QueryString["CourseCode"] != null) {
						inParamCourseCode = Request.QueryString["CourseCode"];
					}
					if (Request.QueryString["FromLearnerList"] != null) {
						inParamFromLearnerList = (Request.QueryString["FromLearnerList"]).ToLowerInvariant() == "true";
					}
				}
				else if (Request.HttpMethod == "POST") {
					if (Request.Form["StudentReference"] != null) {
						inParamStudentReference = Request.Form["StudentReference"];
					}
					if (Request.Form["SessionID"] != null) {
						inParamSessionID = Convert.ToInt32(Request.Form["SessionID"]);
					}
					if (Request.Form["CourseCode"] != null) {
						inParamCourseCode = Request.Form["CourseCode"];
					}
					if (Request.Form["FromLearnerList"] != null) {
						inParamFromLearnerList = (Request.Form["FromLearnerList"]).ToLowerInvariant() == "true";
					}
				}
			}
			if (!appInfo.IsApplicationEnabled) {
				ErrorLog.LogApplicationError(new Exception("eSpace " + appInfo.eSpaceName + " is disabled"), heContext, "Global");
				String contact = BuiltInFunction.EncodeUrl(RuntimePlatformUtils.GetAdministrationEmail());
				try {
					Server.Transfer("/customHandlers/app_offline.aspx?contact=" + contact + "&errorCode=APPLICATION_OFFLINE");
				}
				catch (System.Threading.ThreadAbortException) {}
				catch {
					Response.Redirect("/customHandlers/internalerror.aspx");
				}
			}
			InitializeUrls();
			Actions.ActionOnBeginWebRequest(heContext);
			if (!IsPostBack) {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				Preparation(heContext);
				bool bindEditRecords = !IsPostBack;
				if (bindEditRecords) {
					wtEditRecordDisciplinary_onDataBindingDataSource(this.FindControl("wtEditRecordDisciplinary"), null);
				}
				ssDisciplinary_ListListDoDataBind = true;
				ssGetDisciplinaryLog_ListListDoDataBind = true;
				Title = "LearnerDetailsDisciplinary"; Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerDetailsDisciplinary", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} else {
				if (!Request.IsSecureConnection) throw new Exception("HTTPS connection required for this screen");
				FetchViewState();
			}

		}

		private bool _negociateTabIndexesExecuted = false;

		private void Page_PreRender(object sender, System.EventArgs e) {
			ClientScript.RegisterArrayDeclaration("OsPage_Validators", "{}");
			if (!_negociateTabIndexesExecuted) {
				NegotiateTabIndexes();
				_negociateTabIndexesExecuted = true;
			}
			foreach(Control child in this.Controls) {
				DisableViewState(child);
			}
		}

		private void NegotiateTabIndexes() {
			short tabindex=1;
			tabindex = NegotiateTabIndexes(tabindex, true);
		}

		public short NegotiateTabIndexes(short tabindex, bool setTabIndex) {
			Control rootCtrl = this;
			if ((this.Controls.Count == 1) && (typeof(HtmlForm).IsInstanceOfType(this.Controls[0]))) {
				rootCtrl = this.Controls[0];
			} else {
				rootCtrl = this;
			}
			tabindex = NegotiateTabIndexesRecursively(tabindex, rootCtrl, setTabIndex);
			return tabindex;
		}

		public short NegotiateTabIndexesRecursively(short tabindex, Control rootCtrl, bool setTabIndex) {

			bool bAssignTabIndex = false;
			WebControl ctrl = null;
			HtmlControl htmlCtrl = null;
			foreach(Control child in rootCtrl.Controls) {
				if (child is INegotiateTabIndexes) {
					tabindex = ((INegotiateTabIndexes) child).NegotiateTabIndexes(tabindex, setTabIndex);
					continue;
				}
				if (typeof(WebControl).IsInstanceOfType(child)) {
					ctrl = (WebControl) child;
					bAssignTabIndex = false;
					if (ctrl is OutSystems.HubEdition.WebWidgets.TextBox | ctrl is OutSystems.HubEdition.WebWidgets.CheckBox | ctrl is OutSystems.HubEdition.WebWidgets.RadioButton | ctrl is OutSystems.HubEdition.WebWidgets.DropDownList) {

						bAssignTabIndex = true;
					} else if (ctrl is System.Web.UI.WebControls.LinkButton | ctrl is System.Web.UI.WebControls.Button | ctrl is System.Web.UI.WebControls.HyperLink | ctrl is System.Web.UI.WebControls.ListBox) {
						bAssignTabIndex = true;
					}
					else if (ctrl is PlaceholderContainer)
					{
						INegotiateTabIndexes placeholderOwner = (INegotiateTabIndexes) Utils.GetOwnerOfControl(ctrl);
						tabindex = placeholderOwner.NegotiateTabIndexesRecursively(tabindex, ctrl, setTabIndex);
						continue;
					}

					short prevTabIndex = ViewStateAttributes.GetTabIndex(ctrl);
					if (bAssignTabIndex && setTabIndex) {
						object b = htTabIndexGroups[ctrl.ID];
						if (b != null) {
							string groupid = b.ToString();
							if (htTabIndexGroupsTI[groupid] == null) {
								htTabIndexGroupsTI[groupid] = tabindex++;
							}
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? Convert.ToInt16(htTabIndexGroupsTI[groupid]): prevTabIndex++);
						} else {
							ViewStateAttributes.SetTabIndex(ctrl, prevTabIndex <= 0 ? tabindex++: prevTabIndex++);
						}
					}
					tabindex = Math.Max(tabindex, prevTabIndex);
				} else if (child is HtmlControl && setTabIndex) {
					htmlCtrl = (HtmlControl) child;
					if (htmlCtrl is System.Web.UI.HtmlControls.HtmlInputFile) {
						htmlCtrl.Attributes.Add("tabIndex", Convert.ToString(tabindex++));
					}
				}
				if (child.Controls.Count > 0) {
					tabindex = NegotiateTabIndexesRecursively(tabindex, child, setTabIndex);
				}
			}
			return tabindex;
		}



		private void Page_Error(object sender, System.EventArgs e) {
			if (! new ssCaseConferencing.Flows.FlowLearnerView.ExceptionHandler(this, false).HandleException()) {
				DatabaseAccess.FreeupResources(false);
				Server.Transfer("_WebErrorPage.aspx");
			}
		}

		public override void ClearErrorHandler() {
			Error -= Page_Error;
		}

		public void CheckPermissions(HeContext heContext) {
			{
				bool check;
				ExtendedActions.CheckSafeGuardingLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingBackofficeRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportLeadRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckLearningSupportPractitionerRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckSuperUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckPLARole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckCaseConferencingUserRole(heContext, 0, out check);
				if (check) return;
			}
			{
				bool check;
				ExtendedActions.CheckRegisteredRole(heContext, 0, out check);
				if (check) return;
			}
			throw new ExcptNotSafeGuardingLead("SafeGuardingLead role required");
		}


		public ObjectKey Key {
			get {
				return ObjectKey.Parse("u6TQFg6rnkqXFgZMrI5IaA"); 
			}
		}

		public bool isSecure {
			get {
				return true; 
			}
		}


		/// <summary>
		/// Action <code>CommandOnEditChangeNotify</code> that represents the Service Studio screen action
		///  <code>OnEditChangeNotify</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnEditChangeNotify(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				// Refresh Widget (wtAttachedDocuments2)
				((OSPageViewState) Page).AjaxRefresh(Utils.getSelectedControlInRecordWidget(wtDisciplinary_List, "wtAttachedDocuments2"), "None", StoreViewState);
				// Refresh Widget (wtAttachedDocuments3)
				((OSPageViewState) Page).AjaxRefresh(Utils.getSelectedControlInRecordWidget(wtDisciplinary_List, "wtAttachedDocuments3"), "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandOpenEditDisciplinary</code> that represents the Service Studio screen action
		///  <code>OpenEditDisciplinary</code> <p> Description: </p>
		/// </summary>
		private bool CommandOpenEditDisciplinary(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				varLcRaisedDisciplinary.ssENDisciplinary.ssId = BuiltInFunction.NullIdentifier(); // RaisedDisciplinary.Disciplinary.Id = NullIdentifier
				varLcVisible = (!varLcVisible); // Visible = notVisible
				// Refresh Widget (wtRaiseDisciplinary)
				((OSPageViewState) Page).AjaxRefresh(wtRaiseDisciplinary, "VerticalSlide", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvOnRaisedDisciplinaryNotify: VarsBag {
			public string resNotifyWidgetGetMessage_outParamMessage = "";

			public lcvOnRaisedDisciplinaryNotify() {
			}
		}
		/// <summary>
		/// Action <code>CommandOnRaisedDisciplinaryNotify</code> that represents the Service Studio screen
		///  action <code>OnRaisedDisciplinaryNotify</code> <p> Description: </p>
		/// </summary>
		private bool CommandOnRaisedDisciplinaryNotify(HeContext heContext) {
			CheckPermissions(heContext);
			lcvOnRaisedDisciplinaryNotify localVars = new lcvOnRaisedDisciplinaryNotify();
			try {
				// NotifyWidgetGetMessage
				ExtendedActions.NotifyWidgetGetMessage(heContext, out localVars.resNotifyWidgetGetMessage_outParamMessage);
				varLcRaisedDisciplinary.ssENDisciplinary.ssId = BuiltInFunction.IntegerToEntityRefInteger(BuiltInFunction.TextToInteger(localVars.resNotifyWidgetGetMessage_outParamMessage)); // RaisedDisciplinary.Disciplinary.Id = IntegerToEntityRefInteger
				// Refresh Widget (wtAttachedDocuments)
				((OSPageViewState) Page).AjaxRefresh(wtAttachedDocuments, "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvChangeDisciplinary: VarsBag {
			public int resCreateDisciplinaryDocuments_outParamId = 0;

			public Actions.lcoStudent_GetResponsible resStudent_GetResponsible = new Actions.lcoStudent_GetResponsible();
			public int resCreateOrUpdateDisciplinary_outParamId = 0;

			public int resStudentLog_Create_outParamStudentLogId = 0;

			public lcvChangeDisciplinary() {
			}
		}
		/// <summary>
		/// Action <code>CommandChangeDisciplinary</code> that represents the Service Studio screen action
		///  <code>ChangeDisciplinary</code> <p> Description: </p>
		/// </summary>
		private bool CommandChangeDisciplinary(HeContext heContext) {
			CheckPermissions(heContext);
			lcvChangeDisciplinary localVars = new lcvChangeDisciplinary();
			try {
				if ((resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId)) {
					if ((getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDescription== "")) {
						// Feedback_Message2
						Actions.ActionFeedback_Message(heContext, "Reason Field and Reason type Required!", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
						// Update Screen
						return true;

					} else {
						ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssStudentReference = inParamStudentReference; // EditRecordDisciplinary.Record.Disciplinary.StudentReference = StudentReference
						ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssCreatedBy = ((int) Global.App.OsContext.Session["UserID"]); // EditRecordDisciplinary.Record.Disciplinary.CreatedBy = UserID
						ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssCreatedAt = BuiltInFunction.CurrDateTime(); // EditRecordDisciplinary.Record.Disciplinary.CreatedAt = CurrDateTime
						ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssDisciplinaryType = varLcCurrentSelectDisciplinary; // EditRecordDisciplinary.Record.Disciplinary.DisciplinaryType = CurrentSelectDisciplinary
						ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssDescription = getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDescription; // EditRecordDisciplinary.Record.Disciplinary.Description = Disciplinary_List.List.Current.Disciplinary.Description
						// CreateOrUpdateDisciplinary
						ExtendedActions.CreateOrUpdateDisciplinary(heContext, ssEditRecordDisciplinaryRecord.ssENDisciplinary.ChangedAttributes, ((RCDisciplinaryRecord) ssEditRecordDisciplinaryRecord.ssENDisciplinary), out localVars.resCreateOrUpdateDisciplinary_outParamId);
						// Foreach DocumentsIDList
						varLcDocumentsIDList.StartIteration();
						try {
							while (!varLcDocumentsIDList.Eof) {
								varLcDisciplinaryDocument.ssENDisciplinaryDocuments.ssDisciplinaryID = localVars.resCreateOrUpdateDisciplinary_outParamId; // DisciplinaryDocument.DisciplinaryDocuments.DisciplinaryID = CreateOrUpdateDisciplinary.Id
								varLcDisciplinaryDocument.ssENDisciplinaryDocuments.ssDocumentID = BuiltInFunction.IntegerToEntityRefInteger(varLcDocumentsIDList.CurrentRec.ssSTInt.ssValue); // DisciplinaryDocument.DisciplinaryDocuments.DocumentID = IntegerToEntityRefInteger
								// CreateDisciplinaryDocuments
								ExtendedActions.CreateDisciplinaryDocuments(heContext, varLcDisciplinaryDocument, out localVars.resCreateDisciplinaryDocuments_outParamId);
								varLcDocumentsIDList.Advance();
							}
						} finally {
							varLcDocumentsIDList.EndIteration();
						}
						// StudentLog_Create
						Actions.ActionStudentLog_Create(heContext, inParamStudentReference, ((int) Global.App.OsContext.Session["UserID"]), (((varLcCurrentSelectDisciplinary==ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("bkL3peHjGky94lrDLRVvqA")).ssId)) ?("Resolved"):((((getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDisciplinaryType!=varLcCurrentSelectDisciplinary)) ?(((("Changed from " +getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDisciplinaryType) + " to ") +varLcCurrentSelectDisciplinary)):("Changed Disciplinary")))), ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("aGSfFjqLSUS2nhXSX5OjdA")).ssLogType, ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssDescription, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId, false, 0, "Disciplinary", ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssDisciplinaryType, 0, 0, "", 0, out localVars.resStudentLog_Create_outParamStudentLogId);
						// Query datasetGetStudentLogsByStudentReference
						{
							int datasetGetStudentLogsByStudentReference_maxRecords = Math.Max(wtGetDisciplinaryLog_List.StartIndex + wtGetDisciplinaryLog_List.LineCount + 1, 0);
							queryResGetStudentLogsByStudentReference_outParamList = FuncssPreparation.datasetGetStudentLogsByStudentReference(heContext, datasetGetStudentLogsByStudentReference_maxRecords, IterationMultiplicity.Multiple, out queryResGetStudentLogsByStudentReference_outParamCount, inParamStudentReference
							);
						}
						// Student_GetResponsible
						Actions.ActionStudent_GetResponsible(heContext, inParamStudentReference, out localVars.resStudent_GetResponsible.outParamResponsibleName, out localVars.resStudent_GetResponsible.outParamResponsibleEmail);
						// ChangeRAG
						if ((queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssDisciplinaryType!=varLcOldDisciplinaryStatus)) {
							// Destination = LearnerDetailsDisciplinary

							if (OSPage.IsAjaxRequest) {
								// go to target page
								{

									((OSPage) Page).ClearErrorHandler();
									// get parameters
									heContext.Session["_ScreenParametersKey"] = "u6TQFg6rnkqXFgZMrI5IaA";
									ArrayList screenParameters = new ArrayList();
									screenParameters.Add(inParamStudentReference);
									screenParameters.Add(0);
									screenParameters.Add("");
									screenParameters.Add(false);
									Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsDisciplinary"] = screenParameters;
									string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference);
									sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
									string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsDisciplinary.aspx" + sURLQuery;
									((OSPageViewState) Page).RedirectLocation = sURL;
									return false;

								}
							} else {
								// go to target page
								{

									((OSPage) Page).ClearErrorHandler();
									// get parameters
									heContext.Session["_ScreenParametersKey"] = "u6TQFg6rnkqXFgZMrI5IaA";
									ArrayList screenParameters = new ArrayList();
									screenParameters.Add(inParamStudentReference);
									screenParameters.Add(0);
									screenParameters.Add("");
									screenParameters.Add(false);
									Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsDisciplinary"] = screenParameters;
									Server.Transfer("LearnerDetailsDisciplinary.aspx");
									return false;

								}
							}

						} else {
							// Query datasetGetDisciplinaries
							{
								int datasetGetDisciplinaries_maxRecords = Math.Max(wtDisciplinary_List.StartIndex + wtDisciplinary_List.LineCount + 1, 0);
								queryResGetDisciplinaries_outParamList = FuncssPreparation.datasetGetDisciplinaries(heContext, datasetGetDisciplinaries_maxRecords, IterationMultiplicity.Multiple, out queryResGetDisciplinaries_outParamCount, inParamStudentReference
								);
							}
							getWtDisciplinary_ListList().CurrentRec.ssSTBoolean.ssValue = false; // Disciplinary_List.List.Current.Boolean.Value = False
							if ((varLcCurrentSelectDisciplinary==ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("bkL3peHjGky94lrDLRVvqA")).ssId)) {
								// Refresh Widget (wtDisciplinaryList)
								ssDisciplinary_ListListDoDataBind = true;
								((OSPageViewState) Page).AjaxRefresh(wtDisciplinaryList, "None", StoreViewState);

							} else {
								// Refresh Widget (wtDisciplinary_List)
								((OSPageViewState) Page).AjaxRefresh(wtDisciplinary_List, getWtDisciplinary_ListList().CurrentRowNumber, "None", "Refresh", false, null, StoreViewState);

							}
							// Refresh Widget (wtDisciplinaryLog)
							ssGetDisciplinaryLog_ListListDoDataBind = true;
							((OSPageViewState) Page).AjaxRefresh(wtDisciplinaryLog, "None", StoreViewState);
							// Update Screen
							return true;

						}

					}

				} else {
					// Update Screen
					return true;

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// Action <code>CommandEdit</code> that represents the Service Studio screen action <code>Edit</code>
		///  <p> Description: </p>
		/// </summary>
		private bool CommandEdit(HeContext heContext) {
			CheckPermissions(heContext);
			try {
				getWtDisciplinary_ListList().CurrentRec.ssSTBoolean.ssValue = true; // Disciplinary_List.List.Current.Boolean.Value = True
				ssEditRecordDisciplinaryRecord = ((RCDisciplinaryRecord) getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary); // EditRecordDisciplinary.Record = Disciplinary_List.List.Current.Disciplinary
				varLcCurrentSelectDisciplinary = ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssDisciplinaryType; // CurrentSelectDisciplinary = EditRecordDisciplinary.Record.Disciplinary.DisciplinaryType
				// Refresh Widget (wtDisciplinaryCurrent)
				((OSPageViewState) Page).AjaxRefresh(Utils.getSelectedControlInRecordWidget(wtDisciplinary_List, "wtDisciplinaryCurrent"), "None", StoreViewState);
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvCancel: VarsBag {
			public bool inParamRaise;
			public lcvCancel(bool inParamRaise) {
				this.inParamRaise = inParamRaise;
			}
		}
		/// <summary>
		/// Action <code>CommandCancel</code> that represents the Service Studio screen action
		///  <code>Cancel</code> <p> Description: </p>
		/// </summary>
		private bool CommandCancel(HeContext heContext, bool inParamRaise) {
			CheckPermissions(heContext);
			lcvCancel localVars = new lcvCancel(inParamRaise);
			try {
				if ((localVars.inParamRaise==true)) {
					varLcVisible = false; // Visible = False
					// Refresh Widget (wtDisciplinaryRaise)
					ssDisciplinary_ListListDoDataBind = true;
					((OSPageViewState) Page).AjaxRefresh(wtDisciplinaryRaise, "None", StoreViewState);

				} else {
					getWtDisciplinary_ListList().CurrentRec.ssSTBoolean.ssValue = false; // Disciplinary_List.List.Current.Boolean.Value = False
					// Refresh Widget (wtDisciplinaryCurrent)
					((OSPageViewState) Page).AjaxRefresh(Utils.getSelectedControlInRecordWidget(wtDisciplinary_List, "wtDisciplinaryCurrent"), "None", StoreViewState);

				}
				// Update Screen
				return true;
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvChangeSelectedDisciplinary: VarsBag {
			public string inParamNewDisciplinaryStatusId;
			public bool inParamNew;
			public lcvChangeSelectedDisciplinary(string inParamNewDisciplinaryStatusId, bool inParamNew) {
				this.inParamNewDisciplinaryStatusId = inParamNewDisciplinaryStatusId;
				this.inParamNew = inParamNew;
			}
		}
		/// <summary>
		/// Action <code>CommandChangeSelectedDisciplinary</code> that represents the Service Studio screen
		///  action <code>ChangeSelectedDisciplinary</code> <p> Description: </p>
		/// </summary>
		private bool CommandChangeSelectedDisciplinary(HeContext heContext, string inParamNewDisciplinaryStatusId, bool inParamNew) {
			CheckPermissions(heContext);
			lcvChangeSelectedDisciplinary localVars = new lcvChangeSelectedDisciplinary(inParamNewDisciplinaryStatusId, inParamNew);
			try {
				if ((resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId)) {
					if ((localVars.inParamNew==true)) {
						varLcNewDisciplinaryStatus = localVars.inParamNewDisciplinaryStatusId; // NewDisciplinaryStatus = NewDisciplinaryStatusId
						// Refresh Widget (wtWarapperSelectRAG)
						((OSPageViewState) Page).AjaxRefresh(wtWarapperSelectRAG, "None", StoreViewState);

					} else {
						varLcCurrentSelectDisciplinary = localVars.inParamNewDisciplinaryStatusId; // CurrentSelectDisciplinary = NewDisciplinaryStatusId
						// Refresh Widget (wtWarapperSelectRAG2)
						((OSPageViewState) Page).AjaxRefresh(Utils.getSelectedControlInRecordWidget(wtDisciplinary_List, "wtWarapperSelectRAG2"), "None", StoreViewState);

					}
					// Update Screen
					return true;

				} else {
					// Update Screen
					return true;

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		public class lcvRaiseDisciplinary: VarsBag {
			public int resStudentLog_Create_outParamStudentLogId = 0;

			public Actions.lcoStudent_GetResponsible resStudent_GetResponsible = new Actions.lcoStudent_GetResponsible();
			public int resCreateOrUpdateDisciplinary_outParamId = 0;

			public lcvRaiseDisciplinary() {
			}
		}
		/// <summary>
		/// Action <code>CommandRaiseDisciplinary</code> that represents the Service Studio screen action
		///  <code>RaiseDisciplinary</code> <p> Description: </p>
		/// </summary>
		private bool CommandRaiseDisciplinary(HeContext heContext) {
			CheckPermissions(heContext);
			lcvRaiseDisciplinary localVars = new lcvRaiseDisciplinary();
			try {
				if ((varLcDescriptionDisciplinary== "")) {
					// Feedback_Message
					Actions.ActionFeedback_Message(heContext, "Description field required!", ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
					// Update Screen
					return true;

				} else {
					varLcVisible = false; // Visible = False
					ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssStudentReference = inParamStudentReference; // EditRecordDisciplinary.Record.Disciplinary.StudentReference = StudentReference
					ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssDisciplinaryType = varLcNewDisciplinaryStatus; // EditRecordDisciplinary.Record.Disciplinary.DisciplinaryType = NewDisciplinaryStatus
					ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssDescription = varLcDescriptionDisciplinary; // EditRecordDisciplinary.Record.Disciplinary.Description = DescriptionDisciplinary
					ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssCreatedBy = ((int) Global.App.OsContext.Session["UserID"]); // EditRecordDisciplinary.Record.Disciplinary.CreatedBy = UserID
					ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssCreatedAt = BuiltInFunction.CurrDate(); // EditRecordDisciplinary.Record.Disciplinary.CreatedAt = CurrDate
					ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssId = varLcRaisedDisciplinary.ssENDisciplinary.ssId; // EditRecordDisciplinary.Record.Disciplinary.Id = RaisedDisciplinary.Disciplinary.Id
					// CreateOrUpdateDisciplinary
					ExtendedActions.CreateOrUpdateDisciplinary(heContext, ssEditRecordDisciplinaryRecord.ChangedAttributes, ssEditRecordDisciplinaryRecord, out localVars.resCreateOrUpdateDisciplinary_outParamId);
					// StudentLog_Create
					Actions.ActionStudentLog_Create(heContext, inParamStudentReference, ((int) Global.App.OsContext.Session["UserID"]), "Raised Disciplinary", ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("aGSfFjqLSUS2nhXSX5OjdA")).ssLogType, varLcDescriptionDisciplinary, ENRAGStatusEntity.GetRecordByKey(ObjectKey.Parse("5clir8mu0Ui+PJVsmU0ikA")).ssId, false, 0, "Disciplinary", ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssDisciplinaryType, 0, 0, "", 0, out localVars.resStudentLog_Create_outParamStudentLogId);
					// Query datasetGetStudentLogsByStudentReference
					{
						int datasetGetStudentLogsByStudentReference_maxRecords = Math.Max(wtGetDisciplinaryLog_List.StartIndex + wtGetDisciplinaryLog_List.LineCount + 1, 0);
						queryResGetStudentLogsByStudentReference_outParamList = FuncssPreparation.datasetGetStudentLogsByStudentReference(heContext, datasetGetStudentLogsByStudentReference_maxRecords, IterationMultiplicity.Multiple, out queryResGetStudentLogsByStudentReference_outParamCount, inParamStudentReference
						);
					}
					// Student_GetResponsible
					Actions.ActionStudent_GetResponsible(heContext, inParamStudentReference, out localVars.resStudent_GetResponsible.outParamResponsibleName, out localVars.resStudent_GetResponsible.outParamResponsibleEmail);
					// ChangeRAG
					if ((queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssDisciplinaryType!=varLcOldDisciplinaryStatus)) {
						// Destination = LearnerDetailsDisciplinary

						if (OSPage.IsAjaxRequest) {
							// go to target page
							{

								((OSPage) Page).ClearErrorHandler();
								// get parameters
								heContext.Session["_ScreenParametersKey"] = "u6TQFg6rnkqXFgZMrI5IaA";
								ArrayList screenParameters = new ArrayList();
								screenParameters.Add(inParamStudentReference);
								screenParameters.Add(0);
								screenParameters.Add("");
								screenParameters.Add(false);
								Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsDisciplinary"] = screenParameters;
								string sURLQuery = "StudentReference=" + System.Web.HttpUtility.UrlEncode(inParamStudentReference);
								sURLQuery = (sURLQuery == null ? "": "?" + sURLQuery);
								string sURL = GetRedirectionProtocol(true) + (EmailScreenUtils.SafeGetEmailHost(Page as IEmailScreen) ?? Request.Url.Host) + "" + AppUtils.Instance.getImagePath() + "LearnerDetailsDisciplinary.aspx" + sURLQuery;
								((OSPageViewState) Page).RedirectLocation = sURL;
								return false;

							}
						} else {
							// go to target page
							{

								((OSPage) Page).ClearErrorHandler();
								// get parameters
								heContext.Session["_ScreenParametersKey"] = "u6TQFg6rnkqXFgZMrI5IaA";
								ArrayList screenParameters = new ArrayList();
								screenParameters.Add(inParamStudentReference);
								screenParameters.Add(0);
								screenParameters.Add("");
								screenParameters.Add(false);
								Global.App.OsContext.Session["CaseConferencing._ScreenParameters_LearnerDetailsDisciplinary"] = screenParameters;
								Server.Transfer("LearnerDetailsDisciplinary.aspx");
								return false;

							}
						}

					} else {
						// Query datasetGetDisciplinaries
						{
							int datasetGetDisciplinaries_maxRecords = Math.Max(wtDisciplinary_List.StartIndex + wtDisciplinary_List.LineCount + 1, 0);
							queryResGetDisciplinaries_outParamList = FuncssPreparation.datasetGetDisciplinaries(heContext, datasetGetDisciplinaries_maxRecords, IterationMultiplicity.Multiple, out queryResGetDisciplinaries_outParamCount, inParamStudentReference
							);
						}
						varLcDescriptionDisciplinary = ""; // DescriptionDisciplinary = ""
						varLcNewDisciplinaryStatus = ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("oeAwcE7ZG02l3othZaYk6Q")).ssId; // NewDisciplinaryStatus = Stage1
						// Refresh Widget (wtDisciplinaryRaise)
						ssDisciplinary_ListListDoDataBind = true;
						((OSPageViewState) Page).AjaxRefresh(wtDisciplinaryRaise, "None", StoreViewState);
						// Refresh Widget (wtDisciplinaryList)
						ssDisciplinary_ListListDoDataBind = true;
						((OSPageViewState) Page).AjaxRefresh(wtDisciplinaryList, "None", StoreViewState);
						// Refresh Widget (wtDisciplinaryLog)
						ssGetDisciplinaryLog_ListListDoDataBind = true;
						((OSPageViewState) Page).AjaxRefresh(wtDisciplinaryLog, "None", StoreViewState);
						// Update Screen
						return true;

					}

				}
			} // try

			catch (System.Threading.ThreadAbortException) {
				return false;
			}
			catch (Exception exception) {
				ErrorLog.LogApplicationError(exception, heContext, "");
				Global.App.OsContext.Session["ExceptionMessage"] = exception.Message;
				heContext.LastException = exception;
				// Error Handler
				DatabaseAccess.RollbackAllTransactions();
				// ExceptionFeedbackMessage
				Actions.ActionFeedback_Message(heContext, ((string) Global.App.OsContext.Session["ExceptionMessage"]), ENMessageTypeEntity.GetRecordByKey(ObjectKey.Parse("htKb+xw1b0eZ4Wacii2S8w")).ssId);
				// Update Screen
				return true;
			} // Catch
		}
		/// <summary>
		/// wt_WebBlockInstance110 Functions
		/// </summary>
		public void webBlck_WebBlockInstance110_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout widget = (ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsLayout) sender;
			widget.inParamStudentReference = inParamStudentReference;
			widget.inParamCategoryId = BuiltInFunction.NullIdentifier();
			widget.inParamOfferingCode = "";
			widget.inParamShowUnit = false;
			widget.inParamShowTarget = false;
			widget.inParamActiveLearnerDetailMenu = ENLearnerDetailMenuEntity.GetRecordByKey(ObjectKey.Parse("2g94gmPpP0uRcGB6URHhlg")).ssMenu;
			widget.inParamSessionId = inParamSessionID;
			widget.inParamCourseCode = inParamCourseCode;
			widget.inParamFromLearnerList = inParamFromLearnerList;
			widget.inParamActiveTab = ENTabsEntity.GetRecordByKey(ObjectKey.Parse("avXIv1WG4UWcoRPTcOjaOw")).ssId;
		}
		/// <summary>
		/// wtDisciplinaryRaise Functions
		/// </summary>
		public void cntDisciplinaryRaise_onDataBinding(object sender, System.EventArgs e) {
			cntDisciplinaryRaise_setInlineAttributes(sender, e);
		}
		public string cntDisciplinaryRaise_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntDisciplinaryRaise_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtDisciplinaryRaise)
		/// </summary>
		/// <returns>The Visible State of wtDisciplinaryRaise</returns>
		public bool cntDisciplinaryRaise_isVisible() {
			return true;
		}

		/// <summary>
		/// wtDisciplinary Functions
		/// </summary>
		public void cntDisciplinary_onDataBinding(object sender, System.EventArgs e) {
			cntDisciplinary_setInlineAttributes(sender, e);
		}
		public string cntDisciplinary_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntDisciplinary_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtDisciplinary)
		/// </summary>
		/// <returns>The Visible State of wtDisciplinary</returns>
		public bool cntDisciplinary_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container89 Functions
		/// </summary>
		public void cnt_Container89_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container89_setInlineAttributes(sender, e);
		}
		public string cnt_Container89_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container89_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container89)
		/// </summary>
		/// <returns>The Visible State of wt_Container89</returns>
		public bool cnt_Container89_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container62 Functions
		/// </summary>
		public void cnt_Container62_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container62_setInlineAttributes(sender, e);
		}
		public string cnt_Container62_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-bottom:2px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container62_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container62)
		/// </summary>
		/// <returns>The Visible State of wt_Container62</returns>
		public bool cnt_Container62_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If136 Functions
		/// </summary>
		bool if_wt_If136_hasRun=false;
		bool if_wt_If136_evalResult;
		public bool if_wt_If136() {
			if (if_wt_If136_hasRun) {
				if_wt_If136_hasRun = false;
				return if_wt_If136_evalResult;
			}
			if_wt_If136_hasRun = true;
			if_wt_If136_evalResult = (resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId);
			return if_wt_If136_evalResult;
		}

		/// <summary>
		/// wt_Container63 Functions
		/// </summary>
		public void cnt_Container63_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container63_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container63_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "float:right;margin-top: -4px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container63_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container63
		/// </summary>
		public void cnt_Container63_AjaxClick(object sender, System.EventArgs e) {
			if (CommandOpenEditDisciplinary(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container63)
		/// </summary>
		/// <returns>The Visible State of wt_Container63</returns>
		public bool cnt_Container63_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container172 Functions
		/// </summary>
		public void cnt_Container172_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container172_setInlineAttributes(sender, e);
		}
		public string cnt_Container172_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container172_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container172)
		/// </summary>
		/// <returns>The Visible State of wt_Container172</returns>
		public bool cnt_Container172_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance114 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance114_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EdAx1MS_gkWfsLiHNqAN4g")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wtRaiseDisciplinary Functions
		/// </summary>
		public void cntRaiseDisciplinary_onDataBinding(object sender, System.EventArgs e) {
			cntRaiseDisciplinary_setInlineAttributes(sender, e);
		}
		public string cntRaiseDisciplinary_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin:21px;color:#757575;font-size: 12px;text-align: left;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntRaiseDisciplinary_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtRaiseDisciplinary)
		/// </summary>
		/// <returns>The Visible State of wtRaiseDisciplinary</returns>
		public bool cntRaiseDisciplinary_isVisible() {
			return varLcVisible;
		}

		/// <summary>
		/// wt_Container140 Functions
		/// </summary>
		public void cnt_Container140_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container140_setInlineAttributes(sender, e);
		}
		public string cnt_Container140_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container140_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container140)
		/// </summary>
		/// <returns>The Visible State of wt_Container140</returns>
		public bool cnt_Container140_isVisible() {
			return true;
		}

		/// <summary>
		/// wtReason Functions
		/// </summary>
		public void cntReason_onDataBinding(object sender, System.EventArgs e) {
			cntReason_setInlineAttributes(sender, e);
		}
		public string cntReason_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight: bold;width:300px;margin-left:5px;margin-top:0;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntReason_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtReason)
		/// </summary>
		/// <returns>The Visible State of wtReason</returns>
		public bool cntReason_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text111 Functions
		/// </summary>
		public void wt_Text111_onDataBinding(object sender, System.EventArgs e) {
			wt_Text111_setInlineAttributes(sender, e);
		}
		public string wt_Text111_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight: bold;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container157 Functions
		/// </summary>
		public void cnt_Container157_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container157_setInlineAttributes(sender, e);
		}
		public string cnt_Container157_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container157_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container157)
		/// </summary>
		/// <returns>The Visible State of wt_Container157</returns>
		public bool cnt_Container157_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container117 Functions
		/// </summary>
		public void cnt_Container117_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container117_setInlineAttributes(sender, e);
		}
		public string cnt_Container117_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container117_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container117)
		/// </summary>
		/// <returns>The Visible State of wt_Container117</returns>
		public bool cnt_Container117_isVisible() {
			return true;
		}

		/// <summary>
		/// wtResponsible2 Functions
		/// </summary>
		public void cntResponsible2_onDataBinding(object sender, System.EventArgs e) {
			cntResponsible2_setInlineAttributes(sender, e);
		}
		public string cntResponsible2_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntResponsible2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtResponsible2)
		/// </summary>
		/// <returns>The Visible State of wtResponsible2</returns>
		public bool cntResponsible2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container150 Functions
		/// </summary>
		public void cnt_Container150_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container150_setInlineAttributes(sender, e);
		}
		public string cnt_Container150_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container150_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container150)
		/// </summary>
		/// <returns>The Visible State of wt_Container150</returns>
		public bool cnt_Container150_isVisible() {
			return true;
		}

		/// <summary>
		/// wtDisciplinaryInput Functions
		/// </summary>
		public void inputwtDisciplinaryInput_onDataBinding(object sender, System.EventArgs e) {
			inputwtDisciplinaryInput_setInlineAttributes(sender, e);
		}
		public string inputwtDisciplinaryInput_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: #6F6A6A;font-size: 15px;padding: 1px 6px;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtDisciplinaryInput_input_value() {
			if (("" !=varLcDescriptionDisciplinary)) {
				return varLcDescriptionDisciplinary;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) this.FindControl("wtDisciplinaryInput");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return varLcDescriptionDisciplinary;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtDisciplinaryInput_input_onTextChanged(object sender, EventArgs e) {
			try {
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					varLcDescriptionDisciplinary = ""; 
				} else {
					varLcDescriptionDisciplinary = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				varLcDescriptionDisciplinary = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtDisciplinaryInput)
		/// </summary>
		/// <returns>The Visible State of wtDisciplinaryInput</returns>
		public bool inputwtDisciplinaryInput_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtDisciplinaryInput)
		/// </summary>
		/// <returns>The Enabled State of wtDisciplinaryInput</returns>
		public bool inputwtDisciplinaryInput_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtDisciplinaryInput)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtDisciplinaryInput</returns>
		public bool inputwtDisciplinaryInput_isMandatory() {
			return false;
		}

		/// <summary>
		/// wtWarapperSelectRAG Functions
		/// </summary>
		public void cntWarapperSelectRAG_onDataBinding(object sender, System.EventArgs e) {
			cntWarapperSelectRAG_setInlineAttributes(sender, e);
		}
		public string cntWarapperSelectRAG_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inlinemargin-top:15px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWarapperSelectRAG_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWarapperSelectRAG)
		/// </summary>
		/// <returns>The Visible State of wtWarapperSelectRAG</returns>
		public bool cntWarapperSelectRAG_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container1 Functions
		/// </summary>
		public void cnt_Container1_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container1_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container1_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcNewDisciplinaryStatus==ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("oeAwcE7ZG02l3othZaYk6Q")).ssId)) ?("RAGSelectRed"):("RAG_RaisedUnselect"));
			if (!cnt_Container1_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container1
		/// </summary>
		public void cnt_Container1_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedDisciplinary(heContext
			, ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("oeAwcE7ZG02l3othZaYk6Q")).ssId, true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container1)
		/// </summary>
		/// <returns>The Visible State of wt_Container1</returns>
		public bool cnt_Container1_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance75 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance75_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression159 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 5NXT3GdoGkyy0p_QAnuwSg) Expression: "Stage 1"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression159() {
			return "Stage 1";
		}
		/// <summary>
		/// wt_Container141 Functions
		/// </summary>
		public void cnt_Container141_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container141_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container141_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcNewDisciplinaryStatus==ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("a7dVS8c4z0Cn4+1QMrzpsA")).ssId)) ?("RAGSelectRed"):("RAG_RaisedUnselect"));
			if (!cnt_Container141_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container141
		/// </summary>
		public void cnt_Container141_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedDisciplinary(heContext
			, ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("a7dVS8c4z0Cn4+1QMrzpsA")).ssId, true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container141)
		/// </summary>
		/// <returns>The Visible State of wt_Container141</returns>
		public bool cnt_Container141_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance102 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance102_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression156 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 9HPe2cOQokSUzLclgONu9A) Expression: "Stage 2"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression156() {
			return "Stage 2";
		}
		/// <summary>
		/// wt_Container166 Functions
		/// </summary>
		public void cnt_Container166_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container166_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container166_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcNewDisciplinaryStatus==ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("FcpivOt16E6N_v_HBw60uQ")).ssId)) ?("RAGSelectRed"):("RAG_RaisedUnselect"));
			if (!cnt_Container166_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container166
		/// </summary>
		public void cnt_Container166_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedDisciplinary(heContext
			, ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("FcpivOt16E6N_v_HBw60uQ")).ssId, true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container166)
		/// </summary>
		/// <returns>The Visible State of wt_Container166</returns>
		public bool cnt_Container166_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance84 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance84_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression56 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = Vcy5QpxxMku_27b8wO6c8Q) Expression: "Stage 3"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression56() {
			return "Stage 3";
		}
		/// <summary>
		/// wt_Container53 Functions
		/// </summary>
		public void cnt_Container53_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container53_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container53_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcNewDisciplinaryStatus==ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("PvV+sf3s10q_l85eLAb+hA")).ssId)) ?("RAGSelectRed"):("RAG_RaisedUnselect"));
			if (!cnt_Container53_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container53
		/// </summary>
		public void cnt_Container53_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedDisciplinary(heContext
			, ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("PvV+sf3s10q_l85eLAb+hA")).ssId, true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container53)
		/// </summary>
		/// <returns>The Visible State of wt_Container53</returns>
		public bool cnt_Container53_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance106 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance106_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container80 Functions
		/// </summary>
		public void cnt_Container80_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container80_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container80_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcNewDisciplinaryStatus==ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("bkL3peHjGky94lrDLRVvqA")).ssId)) ?("RAGSelectRed"):("RAG_RaisedUnselect"));
			if (!cnt_Container80_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container80
		/// </summary>
		public void cnt_Container80_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedDisciplinary(heContext
			, ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("bkL3peHjGky94lrDLRVvqA")).ssId, true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container80)
		/// </summary>
		/// <returns>The Visible State of wt_Container80</returns>
		public bool cnt_Container80_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance10 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance10_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_If86 Functions
		/// </summary>
		bool if_wt_If86_hasRun=false;
		bool if_wt_If86_evalResult;
		public bool if_wt_If86() {
			if (if_wt_If86_hasRun) {
				if_wt_If86_hasRun = false;
				return if_wt_If86_evalResult;
			}
			if_wt_If86_hasRun = true;
			if_wt_If86_evalResult = (resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId);
			return if_wt_If86_evalResult;
		}

		/// <summary>
		/// wt_Container6 Functions
		/// </summary>
		public void cnt_Container6_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container6_setInlineAttributes(sender, e);
		}
		public string cnt_Container6_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:371px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container6_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container6)
		/// </summary>
		/// <returns>The Visible State of wt_Container6</returns>
		public bool cnt_Container6_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container139 Functions
		/// </summary>
		public void cnt_Container139_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container139_setInlineAttributes(sender, e);
		}
		public string cnt_Container139_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container139_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container139)
		/// </summary>
		/// <returns>The Visible State of wt_Container139</returns>
		public bool cnt_Container139_isVisible() {
			return true;
		}

		/// <summary>
		/// Hunspell_wt_WebBlockInstance25 Functions
		/// </summary>
		public void Hunspell_webBlck_WebBlockInstance25_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink widget = (proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink) sender;
			widget.inParamTextInputId = this.FindControl("wtDisciplinaryInput").ClientID;
			widget.inParamExtraStyle = "";
			widget.inParamInPopupWindow = true;
		}
		/// <summary>
		/// wt_Container115 Functions
		/// </summary>
		public void cnt_Container115_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container115_setInlineAttributes(sender, e);
		}
		public string cnt_Container115_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container115_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container115)
		/// </summary>
		/// <returns>The Visible State of wt_Container115</returns>
		public bool cnt_Container115_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance182 Functions
		/// </summary>
		public void webBlck_WebBlockInstance182_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon widget = (ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon) sender;
			widget.inParamTextInputId = this.FindControl("wtDisciplinaryInput").ClientID;
			widget.inParamAutoCompleteType = ENAutoCompleteBankTypeEntity.GetRecordByKey(ObjectKey.Parse("mnZwQ_RDH0Kyxq3kWf7_8A")).ssId;
		}
		/// <summary>
		/// wtAttachedDocuments Functions
		/// </summary>
		public void cntAttachedDocuments_onDataBinding(object sender, System.EventArgs e) {
			cntAttachedDocuments_setInlineAttributes(sender, e);
		}
		public string cntAttachedDocuments_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntAttachedDocuments_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtAttachedDocuments)
		/// </summary>
		/// <returns>The Visible State of wtAttachedDocuments</returns>
		public bool cntAttachedDocuments_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance41 Functions
		/// </summary>
		public void webBlck_WebBlockInstance41_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsDisciplinaryAttachedDocs widget = (ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsDisciplinaryAttachedDocs) sender;
			widget.inParamDisciplinaryID = varLcRaisedDisciplinary.ssENDisciplinary.ssId;
			widget.inParamReadOnly = false;
			widget.inParamDisciplinary = varLcRaisedDisciplinary;
		}
		/// <summary>
		/// AjaxNotify event handler for widget wt_WebBlockInstance41
		/// </summary>
		public void webBlck_WebBlockInstance41_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOnRaisedDisciplinaryNotify(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wt_Container93 Functions
		/// </summary>
		public void cnt_Container93_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container93_setInlineAttributes(sender, e);
		}
		public string cnt_Container93_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container93_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container93)
		/// </summary>
		/// <returns>The Visible State of wt_Container93</returns>
		public bool cnt_Container93_isVisible() {
			return true;
		}

		/// <summary>
		/// wtButton_CauseForConcern Functions
		/// </summary>
		public void cntButton_CauseForConcern_onDataBinding(object sender, System.EventArgs e) {
			cntButton_CauseForConcern_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cntButton_CauseForConcern_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntButton_CauseForConcern_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wtButton_CauseForConcern
		/// </summary>
		public void cntButton_CauseForConcern_AjaxClick(object sender, System.EventArgs e) {
			if (CommandRaiseDisciplinary(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wtButton_CauseForConcern)
		/// </summary>
		/// <returns>The Visible State of wtButton_CauseForConcern</returns>
		public bool cntButton_CauseForConcern_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance96 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance96_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EdAx1MS_gkWfsLiHNqAN4g")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container180 Functions
		/// </summary>
		public void cnt_Container180_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container180_setInlineAttributes(sender, e);
		}
		public string cnt_Container180_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-top: 7px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container180_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container180)
		/// </summary>
		/// <returns>The Visible State of wt_Container180</returns>
		public bool cnt_Container180_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link99 Functions
		/// </summary>
		public void lnk_Link99_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link99_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandCancel(heContext, true)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link99)
		/// </summary>
		/// <returns>title of the Link (wt_Link99)</returns>
		public string
		lnk_Link99_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link99)
		/// </summary>
		/// <returns>The Visible State of wt_Link99</returns>
		public bool lnk_Link99_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link99)
		/// </summary>
		/// <returns>The Enabled State of wt_Link99</returns>
		public bool lnk_Link99_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wtEditRecordDisciplinary Functions
		/// </summary>
		public void wtEditRecordDisciplinary_onDataBinding(object sender, System.EventArgs e) {
			wtEditRecordDisciplinary_setInlineAttributes(sender, e);
		}
		public string wtEditRecordDisciplinary_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:none;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		public void wtEditRecordDisciplinary_onDataBindingDataSource(object sender, System.EventArgs e) {
		}
		/// <summary>
		/// wtDisciplinaryList Functions
		/// </summary>
		public void cntDisciplinaryList_onDataBinding(object sender, System.EventArgs e) {
			cntDisciplinaryList_setInlineAttributes(sender, e);
		}
		public string cntDisciplinaryList_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "border-top: solid 1px #dadada;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntDisciplinaryList_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtDisciplinaryList)
		/// </summary>
		/// <returns>The Visible State of wtDisciplinaryList</returns>
		public bool cntDisciplinaryList_isVisible() {
			return true;
		}

		/// <summary>
		/// wtDisciplinary_List Functions
		/// </summary>
		public void recListDisciplinary_List_onDataBinding(object sender, System.EventArgs e) {
			// widget wtDisciplinary_List
			ssDisciplinary_ListList = queryResGetDisciplinaries_outParamList;
			ssDisciplinary_ListListDoDataBind = false;
			ssDisciplinary_ListListDataBound = true;
		}
		public void recListDisciplinary_List_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssDisciplinary_ListList.Length > 0) {
					ssDisciplinary_ListList.CurrentRec = ssDisciplinary_ListList[ssDisciplinary_ListList.CurrentRowNumber];
				}
				if (ssDisciplinary_ListList.Length > e.SelectedIndex) {
					ssDisciplinary_ListList.CurrentRec = ssDisciplinary_ListList[e.SelectedIndex];
					ssDisciplinary_ListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListDisciplinary_List_Store(object dataItem, int index) {
			RCStudentUserBooleanDisciplinaryDisciplinaryTypeRecord tmprec = (RCStudentUserBooleanDisciplinaryDisciplinaryTypeRecord) dataItem;
			ArrayList tmpFields = new ArrayList();
			tmpFields.Add(tmprec.ssENUser.ssName == "" ?(object) null: tmprec.ssENUser.ssName);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENUser.ChangedAttributes, new BitArray(new bool[] {
				false, false, true, false, false, false, false, false, false, false, false
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENUser.OptimizedAttributes, new BitArray(new bool[] {
				true, true, false, true, true, true, true, true, true, true, true
			}
			))));
			tmpFields.Add(tmprec.ssSTBoolean.ssValue == false?(object) null: tmprec.ssSTBoolean.ssValue);
			tmpFields.Add(tmprec.ssENDisciplinary.ssId == 0?(object) null: tmprec.ssENDisciplinary.ssId);
			tmpFields.Add(tmprec.ssENDisciplinary.ssStudentReference == "" ?(object) null: tmprec.ssENDisciplinary.ssStudentReference);
			tmpFields.Add(tmprec.ssENDisciplinary.ssDisciplinaryType == "" ?(object) null: tmprec.ssENDisciplinary.ssDisciplinaryType);
			tmpFields.Add(tmprec.ssENDisciplinary.ssDescription == "" ?(object) null: tmprec.ssENDisciplinary.ssDescription);
			tmpFields.Add(tmprec.ssENDisciplinary.ssCreatedBy == 0?(object) null: tmprec.ssENDisciplinary.ssCreatedBy);
			tmpFields.Add(tmprec.ssENDisciplinary.ssCreatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: tmprec.ssENDisciplinary.ssCreatedAt);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENDisciplinary.ChangedAttributes, new BitArray(new bool[] {
				true, true, true, true, true, true
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENDisciplinary.OptimizedAttributes, new BitArray(new bool[] {
				false, false, false, false, false, false
			}
			))));
			tmpFields.Add(tmprec.ssENDisciplinaryType.ssLabel == "" ?(object) null: tmprec.ssENDisciplinaryType.ssLabel);
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(tmprec.ssENDisciplinaryType.ChangedAttributes, new BitArray(new bool[] {
				false, true, false, false
			}
			))));
			tmpFields.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(tmprec.ssENDisciplinaryType.OptimizedAttributes, new BitArray(new bool[] {
				true, false, true, true
			}
			))));
			if (index < wtDisciplinary_List_storage.Count) {
				wtDisciplinary_List_storage[index] = tmpFields;
			} else {
				wtDisciplinary_List_storage.Add(tmpFields);
			}
			return "";
		}
		public void recListDisciplinary_List_Restore() {

			#region fetch ssDisciplinary_ListList.

			// Read the needed fields of ssDisciplinary_ListList from storewtDisciplinary_List_list
			ssDisciplinary_ListList = new RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList();
			ArrayList storewtDisciplinary_List_list;
			storewtDisciplinary_List_list = (ArrayList) ViewStateAttributes.GetFromViewState("wtDisciplinary_List_list", null);
			if (storewtDisciplinary_List_list == null) {
				return;
			} else {

				foreach(ArrayList tmpFieldswtDisciplinary_List_list in storewtDisciplinary_List_list) {
					if (tmpFieldswtDisciplinary_List_list != null) {
						// Aux current record variable
						RCStudentUserBooleanDisciplinaryDisciplinaryTypeRecord tmpAuxCurrentRecordwtDisciplinary_List_list = new RCStudentUserBooleanDisciplinaryDisciplinaryTypeRecord(null);
						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENUser.ssName = (string) (tmpFieldswtDisciplinary_List_list[0] == null ? "": tmpFieldswtDisciplinary_List_list[0]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENUser.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtDisciplinary_List_list[1]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENUser.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtDisciplinary_List_list[2]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssSTBoolean.ssValue = (bool) (tmpFieldswtDisciplinary_List_list[3] == null ? false: tmpFieldswtDisciplinary_List_list[3]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENDisciplinary.ssId = (int) (tmpFieldswtDisciplinary_List_list[4] == null ? 0: tmpFieldswtDisciplinary_List_list[4]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENDisciplinary.ssStudentReference = (string) (tmpFieldswtDisciplinary_List_list[5] == null ? "": tmpFieldswtDisciplinary_List_list[5]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENDisciplinary.ssDisciplinaryType = (string) (tmpFieldswtDisciplinary_List_list[6] == null ? "": tmpFieldswtDisciplinary_List_list[6]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENDisciplinary.ssDescription = (string) (tmpFieldswtDisciplinary_List_list[7] == null ? "": tmpFieldswtDisciplinary_List_list[7]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENDisciplinary.ssCreatedBy = (int) (tmpFieldswtDisciplinary_List_list[8] == null ? 0: tmpFieldswtDisciplinary_List_list[8]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENDisciplinary.ssCreatedAt = (DateTime) (tmpFieldswtDisciplinary_List_list[9] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldswtDisciplinary_List_list[9]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENDisciplinary.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtDisciplinary_List_list[10]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENDisciplinary.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtDisciplinary_List_list[11]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENDisciplinaryType.ssLabel = (string) (tmpFieldswtDisciplinary_List_list[12] == null ? "": tmpFieldswtDisciplinary_List_list[12]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENDisciplinaryType.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtDisciplinary_List_list[13]);

						tmpAuxCurrentRecordwtDisciplinary_List_list.ssENDisciplinaryType.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldswtDisciplinary_List_list[14]);

						ssDisciplinary_ListList.Append(tmpAuxCurrentRecordwtDisciplinary_List_list);
					}
				}
			}
			ssDisciplinary_ListList.CurrentRowNumber = -1;
			#endregion


			#region fetch ssDisciplinary_ListList runtime properties state.


			if (storewtDisciplinary_List_list.Count > 0) {
				ssDisciplinary_ListList.RestoreRecordListState(storewtDisciplinary_List_list.Count - 1, false);
			} else {
				ssDisciplinary_ListList.CurrentRowNumber = 0;
			}

			#endregion

			wtDisciplinary_List_storage = storewtDisciplinary_List_list;
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListDisciplinary_List_Clear(object sender, EventArgs e) {
			wtDisciplinary_List_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListDisciplinary_List_Rebuild(int startIndex, int lineCount) {
			if (ssDisciplinary_ListList.Length != -1) {
				wtDisciplinary_List_storage.Clear();
				for (int i=startIndex; i<ssDisciplinary_ListList.Data.Count && i<startIndex+lineCount; i++) {
					recListDisciplinary_List_Store(ssDisciplinary_ListList.Data[i], wtDisciplinary_List_storage.Count);
				}
			}
		}
		public void recListDisciplinary_List_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtDisciplinary_List widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList getWtDisciplinary_ListList() {
			if (ssDisciplinary_ListListDoDataBind) {
				recListDisciplinary_List_onDataBinding(this, null);
			}

			return ssDisciplinary_ListList;
		}
		/// <summary>
		/// wtDisciplinaryCurrent Functions
		/// </summary>
		public void cntDisciplinaryCurrent_onDataBinding(object sender, System.EventArgs e) {
			cntDisciplinaryCurrent_setInlineAttributes(sender, e);
		}
		public string cntDisciplinaryCurrent_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntDisciplinaryCurrent_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtDisciplinaryCurrent)
		/// </summary>
		/// <returns>The Visible State of wtDisciplinaryCurrent</returns>
		public bool cntDisciplinaryCurrent_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If129 Functions
		/// </summary>
		bool if_wt_If129_hasRun=false;
		bool if_wt_If129_evalResult;
		public bool if_wt_If129() {
			if (if_wt_If129_hasRun) {
				if_wt_If129_hasRun = false;
				return if_wt_If129_evalResult;
			}
			if_wt_If129_hasRun = true;
			if_wt_If129_evalResult = (!getWtDisciplinary_ListList().CurrentRec.ssSTBoolean.ssValue);
			return if_wt_If129_evalResult;
		}

		/// <summary>
		/// wtViewDisciplinary Functions
		/// </summary>
		public void cntViewDisciplinary_onDataBinding(object sender, System.EventArgs e) {
			cntViewDisciplinary_setInlineAttributes(sender, e);
		}
		public string cntViewDisciplinary_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin: 21px 0px 21px 21px;color:#757575;font-size: 12px;text-align: left;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntViewDisciplinary_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtViewDisciplinary)
		/// </summary>
		/// <returns>The Visible State of wtViewDisciplinary</returns>
		public bool cntViewDisciplinary_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container128 Functions
		/// </summary>
		public void cnt_Container128_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container128_setInlineAttributes(sender, e);
		}
		public string cnt_Container128_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container128_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container128)
		/// </summary>
		/// <returns>The Visible State of wt_Container128</returns>
		public bool cnt_Container128_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_If121 Functions
		/// </summary>
		bool if_wt_If121_hasRun=false;
		bool if_wt_If121_evalResult;
		public bool if_wt_If121() {
			if (if_wt_If121_hasRun) {
				if_wt_If121_hasRun = false;
				return if_wt_If121_evalResult;
			}
			if_wt_If121_hasRun = true;
			if_wt_If121_evalResult = ((getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDisciplinaryType!=BuiltInFunction.NullTextIdentifier()) && (getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDisciplinaryType!=ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("bkL3peHjGky94lrDLRVvqA")).ssId));
			return if_wt_If121_evalResult;
		}

		/// <summary>
		/// wt_If69 Functions
		/// </summary>
		bool if_wt_If69_hasRun=false;
		bool if_wt_If69_evalResult;
		public bool if_wt_If69() {
			if (if_wt_If69_hasRun) {
				if_wt_If69_hasRun = false;
				return if_wt_If69_evalResult;
			}
			if_wt_If69_hasRun = true;
			if_wt_If69_evalResult = (getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDisciplinaryType==ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("bkL3peHjGky94lrDLRVvqA")).ssId);
			return if_wt_If69_evalResult;
		}

		/// <summary>
		/// wt_Container54 Functions
		/// </summary>
		public void cnt_Container54_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container54_setInlineAttributes(sender, e);
		}
		public string cnt_Container54_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-size:13px;margin-top: 2px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container54_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container54)
		/// </summary>
		/// <returns>The Visible State of wt_Container54</returns>
		public bool cnt_Container54_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression73 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = SVz_YU5kxkiIWi2tnQrhiw) Expression:
		///  Disciplinary_List.List.Current.DisciplinaryType.Label
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression73() {
			return getWtDisciplinary_ListList().CurrentRec.ssENDisciplinaryType.ssLabel;
		}
		/// <summary>
		/// wt_Container94 Functions
		/// </summary>
		public void cnt_Container94_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container94_setInlineAttributes(sender, e);
		}
		public string cnt_Container94_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container94_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container94)
		/// </summary>
		/// <returns>The Visible State of wt_Container94</returns>
		public bool cnt_Container94_isVisible() {
			return true;
		}

		/// <summary>
		/// wtResponsible4 Functions
		/// </summary>
		public void cntResponsible4_onDataBinding(object sender, System.EventArgs e) {
			cntResponsible4_setInlineAttributes(sender, e);
		}
		public string cntResponsible4_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntResponsible4_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtResponsible4)
		/// </summary>
		/// <returns>The Visible State of wtResponsible4</returns>
		public bool cntResponsible4_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container107 Functions
		/// </summary>
		public void cnt_Container107_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container107_setInlineAttributes(sender, e);
		}
		public string cnt_Container107_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline-block;width:300px;height:70px;border:1px solid #E8E8E8;padding: 2px 5px; color: #6F6A6A;font-size: 13px;overflow-y: auto;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container107_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container107)
		/// </summary>
		/// <returns>The Visible State of wt_Container107</returns>
		public bool cnt_Container107_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression45 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 4YFnNxYe4kW4Bi1enhbfKA) Expression:
		///  Disciplinary_List.List.Current.Disciplinary.Description
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression45() {
			return getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDescription;
		}
		/// <summary>
		/// wt_Container79 Functions
		/// </summary>
		public void cnt_Container79_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container79_setInlineAttributes(sender, e);
		}
		public string cnt_Container79_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container79_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container79)
		/// </summary>
		/// <returns>The Visible State of wt_Container79</returns>
		public bool cnt_Container79_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression72 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = YpUqYJ3h9kCvOhDIul9dLQ) Expression: "by " +
		///  Disciplinary_List.List.Current.User.Name + " on "
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression72() {
			return (("by " +getWtDisciplinary_ListList().CurrentRec.ssENUser.ssName) + " on ");
		}
		/// <summary>
		/// wt_WebBlockInstance8 Functions
		/// </summary>
		public void webBlck_WebBlockInstance8_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
			widget.inParamDate = Convert.ToDateTime(getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssCreatedAt.ToString("yyyy-M-d"));
		}
		/// <summary>
		/// wt_Container49 Functions
		/// </summary>
		public void cnt_Container49_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container49_setInlineAttributes(sender, e);
		}
		public string cnt_Container49_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:310px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container49_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container49)
		/// </summary>
		/// <returns>The Visible State of wt_Container49</returns>
		public bool cnt_Container49_isVisible() {
			return true;
		}

		/// <summary>
		/// wtAttachedDocuments2 Functions
		/// </summary>
		public void webBlckAttachedDocuments2_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsDisciplinaryAttachedDocs widget = (ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsDisciplinaryAttachedDocs) sender;
			widget.inParamDisciplinaryID = getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssId;
			widget.inParamReadOnly = true;
			widget.inParamDisciplinary = ((RCDisciplinaryRecord) getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary);
		}
		/// <summary>
		/// AjaxNotify event handler for widget wtAttachedDocuments2
		/// </summary>
		public void webBlckAttachedDocuments2_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOnEditChangeNotify(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wt_If176 Functions
		/// </summary>
		bool if_wt_If176_hasRun=false;
		bool if_wt_If176_evalResult;
		public bool if_wt_If176() {
			if (if_wt_If176_hasRun) {
				if_wt_If176_hasRun = false;
				return if_wt_If176_evalResult;
			}
			if_wt_If176_hasRun = true;
			if_wt_If176_evalResult = (resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId);
			return if_wt_If176_evalResult;
		}

		/// <summary>
		/// wt_Container9 Functions
		/// </summary>
		public void cnt_Container9_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container9_setInlineAttributes(sender, e);
		}
		public string cnt_Container9_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:310px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container9_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container9)
		/// </summary>
		/// <returns>The Visible State of wt_Container9</returns>
		public bool cnt_Container9_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container48 Functions
		/// </summary>
		public void cnt_Container48_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container48_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container48_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container48_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container48
		/// </summary>
		public void cnt_Container48_AjaxClick(object sender, System.EventArgs e) {
			if (CommandEdit(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container48)
		/// </summary>
		/// <returns>The Visible State of wt_Container48</returns>
		public bool cnt_Container48_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance20 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance20_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("jA5F7R9HAUWaOlj0y8fkDA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wtEditCauseForConcern Functions
		/// </summary>
		public void cntEditCauseForConcern_onDataBinding(object sender, System.EventArgs e) {
			cntEditCauseForConcern_setInlineAttributes(sender, e);
		}
		public string cntEditCauseForConcern_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin: 21px 0px 21px 21px;color:#757575;font-size: 12px;text-align: left;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntEditCauseForConcern_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtEditCauseForConcern)
		/// </summary>
		/// <returns>The Visible State of wtEditCauseForConcern</returns>
		public bool cntEditCauseForConcern_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container113 Functions
		/// </summary>
		public void cnt_Container113_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container113_setInlineAttributes(sender, e);
		}
		public string cnt_Container113_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container113_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container113)
		/// </summary>
		/// <returns>The Visible State of wt_Container113</returns>
		public bool cnt_Container113_isVisible() {
			return true;
		}

		/// <summary>
		/// wtReason2 Functions
		/// </summary>
		public void cntReason2_onDataBinding(object sender, System.EventArgs e) {
			cntReason2_setInlineAttributes(sender, e);
		}
		public string cntReason2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight: bold;width:300px;margin-left:5px;margin-top:0;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntReason2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtReason2)
		/// </summary>
		/// <returns>The Visible State of wtReason2</returns>
		public bool cntReason2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Text44 Functions
		/// </summary>
		public void wt_Text44_onDataBinding(object sender, System.EventArgs e) {
			wt_Text44_setInlineAttributes(sender, e);
		}
		public string wt_Text44_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight: bold;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container83 Functions
		/// </summary>
		public void cnt_Container83_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container83_setInlineAttributes(sender, e);
		}
		public string cnt_Container83_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container83_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container83)
		/// </summary>
		/// <returns>The Visible State of wt_Container83</returns>
		public bool cnt_Container83_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container112 Functions
		/// </summary>
		public void cnt_Container112_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container112_setInlineAttributes(sender, e);
		}
		public string cnt_Container112_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container112_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container112)
		/// </summary>
		/// <returns>The Visible State of wt_Container112</returns>
		public bool cnt_Container112_isVisible() {
			return true;
		}

		/// <summary>
		/// wtResponsible3 Functions
		/// </summary>
		public void cntResponsible3_onDataBinding(object sender, System.EventArgs e) {
			cntResponsible3_setInlineAttributes(sender, e);
		}
		public string cntResponsible3_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntResponsible3_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtResponsible3)
		/// </summary>
		/// <returns>The Visible State of wtResponsible3</returns>
		public bool cntResponsible3_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container158 Functions
		/// </summary>
		public void cnt_Container158_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container158_setInlineAttributes(sender, e);
		}
		public string cnt_Container158_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inline;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container158_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container158)
		/// </summary>
		/// <returns>The Visible State of wt_Container158</returns>
		public bool cnt_Container158_isVisible() {
			return true;
		}

		/// <summary>
		/// wtDisciplinaryEditInput Functions
		/// </summary>
		public void inputwtDisciplinaryEditInput_onDataBinding(object sender, System.EventArgs e) {
			inputwtDisciplinaryEditInput_setInlineAttributes(sender, e);
		}
		public string inputwtDisciplinaryEditInput_setInlineAttributes(object sender, System.EventArgs e) {
			((IViewStateAttributes) sender).ViewStateAttributes.InheritInlineAttributes();
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: #6F6A6A;font-size: 13px;padding: 1px 6px;";
				oldstyledef = ((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"];
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = oldstyledef + newstyledef;
				} else {
					((IViewStateAttributes) sender).ViewStateAttributes.InlineAttributes["style"] = newstyledef;
				}
			}
			return "";
		}
		/// <summary>
		/// Function to calculate the value to be displayed
		/// </summary>
		/// <returns>The string value to be displayed</returns>
		public string inputwtDisciplinaryEditInput_input_value() {
			if (("" !=getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDescription)) {
				return getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDescription;
			} else {
				string parentEditRecord= "";
				bool validate = false;
				OutSystems.HubEdition.WebWidgets.TextBox widget = (OutSystems.HubEdition.WebWidgets.TextBox) Utils.getSelectedControlInRecordWidget(wtDisciplinary_List, "wtDisciplinaryEditInput");

				if (ValidationUtils.ValidateInput(widget, parentEditRecord, ValidationUtils.validateTrue, validate)) {
					return getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDescription;
				} else {
					return widget.TypedValue;
				}
			}
		}
		/// <summary>
		/// Function Called on Input widget value change
		/// </summary>
		/// <param name="sender"> Widget with the value changed</param>
		/// <param name="e"> Event Arguments</param>
		public void inputwtDisciplinaryEditInput_input_onTextChanged(object sender, EventArgs e) {
			try {
				Control parentControl = (Control) sender;
				while (parentControl != null) {
					if (parentControl is IIteratorItem)break;
					parentControl = parentControl.Parent;
				}
				int parentControlIndex = ((IIteratorItem) parentControl).ItemIndex;
				if (ssDisciplinary_ListList.Length > parentControlIndex && parentControlIndex > -1) {
					ssDisciplinary_ListList.SetPosition(parentControlIndex);
				} else {
					return;
				}
				if ("" == ((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text) {
					getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDescription = ""; 
				} else {
					getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDescription = Convert.ToString(((OutSystems.HubEdition.WebWidgets.TextBox) sender).Text); 
				}

			} catch (Exception) {
				getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssDescription = ""; 
			}

		}
		/// <summary>
		/// Gets the visible state of component (wtDisciplinaryEditInput)
		/// </summary>
		/// <returns>The Visible State of wtDisciplinaryEditInput</returns>
		public bool inputwtDisciplinaryEditInput_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wtDisciplinaryEditInput)
		/// </summary>
		/// <returns>The Enabled State of wtDisciplinaryEditInput</returns>
		public bool inputwtDisciplinaryEditInput_isEnabled() {
			return true; 
		}

		/// <summary>
		/// Gets the mandatory value of component (inputwtDisciplinaryEditInput)
		/// </summary>
		/// <returns>The Mandatory Value of inputwtDisciplinaryEditInput</returns>
		public bool inputwtDisciplinaryEditInput_isMandatory() {
			return false;
		}

		/// <summary>
		/// wtWarapperSelectRAG2 Functions
		/// </summary>
		public void cntWarapperSelectRAG2_onDataBinding(object sender, System.EventArgs e) {
			cntWarapperSelectRAG2_setInlineAttributes(sender, e);
		}
		public string cntWarapperSelectRAG2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "display:inlinemargin-top:15px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWarapperSelectRAG2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWarapperSelectRAG2)
		/// </summary>
		/// <returns>The Visible State of wtWarapperSelectRAG2</returns>
		public bool cntWarapperSelectRAG2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container101 Functions
		/// </summary>
		public void cnt_Container101_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container101_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container101_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcCurrentSelectDisciplinary==ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("oeAwcE7ZG02l3othZaYk6Q")).ssId)) ?("RAGSelectRed"):("RAG_RaisedUnselect"));
			if (!cnt_Container101_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container101
		/// </summary>
		public void cnt_Container101_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedDisciplinary(heContext
			, ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("oeAwcE7ZG02l3othZaYk6Q")).ssId, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container101)
		/// </summary>
		/// <returns>The Visible State of wt_Container101</returns>
		public bool cnt_Container101_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance37 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance37_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression92 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = wgrWgTb_TUCpjjJMfkWGLQ) Expression: "Stage 1"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression92() {
			return "Stage 1";
		}
		/// <summary>
		/// wt_Container98 Functions
		/// </summary>
		public void cnt_Container98_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container98_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container98_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcCurrentSelectDisciplinary==ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("a7dVS8c4z0Cn4+1QMrzpsA")).ssId)) ?("RAGSelectRed"):("RAG_RaisedUnselect"));
			if (!cnt_Container98_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container98
		/// </summary>
		public void cnt_Container98_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedDisciplinary(heContext
			, ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("a7dVS8c4z0Cn4+1QMrzpsA")).ssId, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container98)
		/// </summary>
		/// <returns>The Visible State of wt_Container98</returns>
		public bool cnt_Container98_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance5 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance5_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression119 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = bAekoZmns0O05DLcseEpdA) Expression: "Stage 2"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression119() {
			return "Stage 2";
		}
		/// <summary>
		/// wt_Container175 Functions
		/// </summary>
		public void cnt_Container175_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container175_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container175_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcCurrentSelectDisciplinary==ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("FcpivOt16E6N_v_HBw60uQ")).ssId)) ?("RAGSelectRed"):("RAG_RaisedUnselect"));
			if (!cnt_Container175_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container175
		/// </summary>
		public void cnt_Container175_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedDisciplinary(heContext
			, ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("FcpivOt16E6N_v_HBw60uQ")).ssId, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container175)
		/// </summary>
		/// <returns>The Visible State of wt_Container175</returns>
		public bool cnt_Container175_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance118 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance118_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_InlineExpression126 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = V9vtrTZIqk+5Xzxb2aL3jg) Expression: "Stage 3"
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression126() {
			return "Stage 3";
		}
		/// <summary>
		/// wt_Container144 Functions
		/// </summary>
		public void cnt_Container144_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container144_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container144_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcCurrentSelectDisciplinary==ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("PvV+sf3s10q_l85eLAb+hA")).ssId)) ?("RAGSelectRed"):("RAG_RaisedUnselect"));
			if (!cnt_Container144_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container144
		/// </summary>
		public void cnt_Container144_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedDisciplinary(heContext
			, ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("PvV+sf3s10q_l85eLAb+hA")).ssId, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container144)
		/// </summary>
		/// <returns>The Visible State of wt_Container144</returns>
		public bool cnt_Container144_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance149 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance149_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container12 Functions
		/// </summary>
		public void cnt_Container12_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container12_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container12_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = " width: 100px;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			((WebControl) sender).CssClass = (((varLcCurrentSelectDisciplinary==ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("bkL3peHjGky94lrDLRVvqA")).ssId)) ?("RAGSelectRed"):("RAG_RaisedUnselect"));
			if (!cnt_Container12_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container12
		/// </summary>
		public void cnt_Container12_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeSelectedDisciplinary(heContext
			, ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("bkL3peHjGky94lrDLRVvqA")).ssId, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container12)
		/// </summary>
		/// <returns>The Visible State of wt_Container12</returns>
		public bool cnt_Container12_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance21 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance21_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("EmJVQJfx1EmIQJX13PApow")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container152 Functions
		/// </summary>
		public void cnt_Container152_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container152_setInlineAttributes(sender, e);
		}
		public string cnt_Container152_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container152_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container152)
		/// </summary>
		/// <returns>The Visible State of wt_Container152</returns>
		public bool cnt_Container152_isVisible() {
			return true;
		}

		/// <summary>
		/// wtAttachedDocuments3 Functions
		/// </summary>
		public void webBlckAttachedDocuments3_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxNotify, null);
			ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsDisciplinaryAttachedDocs widget = (ssCaseConferencing.Flows.FlowLearnerView.WBlkLearnerDetailsDisciplinaryAttachedDocs) sender;
			widget.inParamDisciplinaryID = getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary.ssId;
			widget.inParamReadOnly = false;
			widget.inParamDisciplinary = ((RCDisciplinaryRecord) getWtDisciplinary_ListList().CurrentRec.ssENDisciplinary);
		}
		/// <summary>
		/// AjaxNotify event handler for widget wtAttachedDocuments3
		/// </summary>
		public void webBlckAttachedDocuments3_AjaxNotify(object sender, System.EventArgs e) {
			if (CommandOnEditChangeNotify(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// wt_If131 Functions
		/// </summary>
		bool if_wt_If131_hasRun=false;
		bool if_wt_If131_evalResult;
		public bool if_wt_If131() {
			if (if_wt_If131_hasRun) {
				if_wt_If131_hasRun = false;
				return if_wt_If131_evalResult;
			}
			if_wt_If131_hasRun = true;
			if_wt_If131_evalResult = (resUserCheck_outParamPermissionType==ENPermissionTypeEntity.GetRecordByKey(ObjectKey.Parse("dcWAPDTdmEyjDYQI2aRLZw")).ssId);
			return if_wt_If131_evalResult;
		}

		/// <summary>
		/// wt_Container61 Functions
		/// </summary>
		public void cnt_Container61_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container61_setInlineAttributes(sender, e);
		}
		public string cnt_Container61_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "width:320px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container61_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container61)
		/// </summary>
		/// <returns>The Visible State of wt_Container61</returns>
		public bool cnt_Container61_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container162 Functions
		/// </summary>
		public void cnt_Container162_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container162_setInlineAttributes(sender, e);
		}
		public string cnt_Container162_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container162_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container162)
		/// </summary>
		/// <returns>The Visible State of wt_Container162</returns>
		public bool cnt_Container162_isVisible() {
			return true;
		}

		/// <summary>
		/// Hunspell_wt_WebBlockInstance153 Functions
		/// </summary>
		public void Hunspell_webBlck_WebBlockInstance153_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink widget = (proxy_CaseConferencing_Hunspell.Flows.FlowHunSpell.WBlkSpellcheckerLink) sender;
			widget.inParamTextInputId = Utils.getControlInRecordWidget(wtDisciplinary_List, "wtDisciplinaryEditInput").ClientID;
			widget.inParamExtraStyle = "";
			widget.inParamInPopupWindow = true;
		}
		/// <summary>
		/// wt_Container51 Functions
		/// </summary>
		public void cnt_Container51_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container51_setInlineAttributes(sender, e);
		}
		public string cnt_Container51_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container51_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container51)
		/// </summary>
		/// <returns>The Visible State of wt_Container51</returns>
		public bool cnt_Container51_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_WebBlockInstance34 Functions
		/// </summary>
		public void webBlck_WebBlockInstance34_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon widget = (ssCaseConferencing.Flows.FlowAutoComplete_Bank.WBlkAutoComplete_Icon) sender;
			widget.inParamTextInputId = Utils.getControlInRecordWidget(wtDisciplinary_List, "wtDisciplinaryEditInput").ClientID;
			widget.inParamAutoCompleteType = ENAutoCompleteBankTypeEntity.GetRecordByKey(ObjectKey.Parse("mnZwQ_RDH0Kyxq3kWf7_8A")).ssId;
		}
		/// <summary>
		/// wt_Container124 Functions
		/// </summary>
		public void cnt_Container124_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container124_setInlineAttributes(sender, e);
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		public string cnt_Container124_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container124_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// AjaxClick event handler for widget wt_Container124
		/// </summary>
		public void cnt_Container124_AjaxClick(object sender, System.EventArgs e) {
			if (CommandChangeDisciplinary(heContext
			)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container124)
		/// </summary>
		/// <returns>The Visible State of wt_Container124</returns>
		public bool cnt_Container124_isVisible() {
			return true;
		}

		/// <summary>
		/// RichWidgets_wt_WebBlockInstance123 Functions
		/// </summary>
		public void RichWidgets_webBlck_WebBlockInstance123_onDataBinding(object sender, System.EventArgs e) {
			proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon widget = (proxy_CaseConferencing_RichWidgets.Flows.FlowRichWidgets.WBlkIcon) sender;
			widget.inParamName = ENIconNameEntity.GetRecordByKey(ObjectKey.Parse("jA5F7R9HAUWaOlj0y8fkDA")).ssClass;
			widget.inParamSize = "";
		}
		/// <summary>
		/// wt_Container147 Functions
		/// </summary>
		public void cnt_Container147_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container147_setInlineAttributes(sender, e);
		}
		public string cnt_Container147_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin-top:7px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container147_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container147)
		/// </summary>
		/// <returns>The Visible State of wt_Container147</returns>
		public bool cnt_Container147_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Link105 Functions
		/// </summary>
		public void lnk_Link105_onDataBinding(object sender, System.EventArgs e) {
			((IAjaxHandler) sender).RegisterAjaxEvent(AjaxEventType.onAjaxClick, null);
		}
		/// <summary>
		/// Action to be taken at a Link submit action)
		/// </summary>
		/// <param name="sender"> The associated sender components</param>
		/// <param name="e"> The associated event arguments</param>
		public void wt_Link105_Click(object sender, System.EventArgs e) {
			((IWebScreen) ((System.Web.UI.Control) sender).Page).OnSubmit(((IParentEditRecordProp) sender).GetParentEditRecordClientId(), false);
			if (CommandCancel(heContext, false)) {
				doAJAXRefreshScreen(heContext);
			}
		}
		/// <summary>
		/// Gets the title of the link (wt_Link105)
		/// </summary>
		/// <returns>title of the Link (wt_Link105)</returns>
		public string
		lnk_Link105_getTitle() {
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Link105)
		/// </summary>
		/// <returns>The Visible State of wt_Link105</returns>
		public bool lnk_Link105_isVisible() {
			return true;
		}

		/// <summary>
		/// Gets the enabled state of component (wt_Link105)
		/// </summary>
		/// <returns>The Enabled State of wt_Link105</returns>
		public bool lnk_Link105_isEnabled() {
			return true; 
		}
		/// <summary>
		/// wtDisciplinaryLog Functions
		/// </summary>
		public void cntDisciplinaryLog_onDataBinding(object sender, System.EventArgs e) {
			cntDisciplinaryLog_setInlineAttributes(sender, e);
		}
		public string cntDisciplinaryLog_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cntDisciplinaryLog_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtDisciplinaryLog)
		/// </summary>
		/// <returns>The Visible State of wtDisciplinaryLog</returns>
		public bool cntDisciplinaryLog_isVisible() {
			return (((queryResGetStudentLogsByStudentReference_outParamList.Empty==false)) ?(true):(false));
		}

		/// <summary>
		/// wt_Container60 Functions
		/// </summary>
		public void cnt_Container60_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container60_setInlineAttributes(sender, e);
		}
		public string cnt_Container60_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding: 15px; font-size: 18px;text-shadow: 0px 1px 2px #dadada;color:#666;border-bottom: solid 1px #dadada;cursor:pointer;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container60_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container60)
		/// </summary>
		/// <returns>The Visible State of wt_Container60</returns>
		public bool cnt_Container60_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Container27 Functions
		/// </summary>
		public void cnt_Container27_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container27_setInlineAttributes(sender, e);
		}
		public string cnt_Container27_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container27_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container27)
		/// </summary>
		/// <returns>The Visible State of wt_Container27</returns>
		public bool cnt_Container27_isVisible() {
			return true;
		}

		/// <summary>
		/// wtGetDisciplinaryLog_List Functions
		/// </summary>
		public void recListGetDisciplinaryLog_List_onDataBinding(object sender, System.EventArgs e) {
			// widget wtGetDisciplinaryLog_List
			ssGetDisciplinaryLog_ListList = queryResGetStudentLogsByStudentReference_outParamList;
			ssGetDisciplinaryLog_ListListDoDataBind = false;
			ssGetDisciplinaryLog_ListListDataBound = true;
		}
		public void recListGetDisciplinaryLog_List_Select(object sender, IteratorCommandEventArgs e) {
			if (e.SelectedIndex != -1) {
				if (ssGetDisciplinaryLog_ListList.Length > 0) {
					ssGetDisciplinaryLog_ListList.CurrentRec = ssGetDisciplinaryLog_ListList[ssGetDisciplinaryLog_ListList.CurrentRowNumber];
				}
				if (ssGetDisciplinaryLog_ListList.Length > e.SelectedIndex) {
					ssGetDisciplinaryLog_ListList.CurrentRec = ssGetDisciplinaryLog_ListList[e.SelectedIndex];
					ssGetDisciplinaryLog_ListList.CurrentRowNumber = e.SelectedIndex;
				}
			}
			if (e is IteratorCommandAjaxEventArgs) {
				((IteratorCommandAjaxEventArgs) e).InvokeHandler();
			} else {
				var owner = Utils.GetOwnerOfControl((Control) e.CommandSource);
				owner.GetType().GetMethod(((WebControl) e.CommandSource).ID + "_Click").Invoke(owner, new Object[2] {
					e.CommandSource, new CommandEventArgs("", this)
				}
				);
			}
		}
		/// <summary>
		/// Function to Prepare Widget information to be stored in view State
		/// </summary>
		/// <param name="dataItem"> Item to be stored in view state</param>
		/// <param name="index"> Record list index of the item to be stored</param>
		public string recListGetDisciplinaryLog_List_Store(object dataItem, int index) {
			return "";
		}
		public void recListGetDisciplinaryLog_List_Restore() {
		}
		/// <summary>
		/// Function to clear current widget information to be stored in view state
		/// </summary>
		public void recListGetDisciplinaryLog_List_Clear(object sender, EventArgs e) {
			wtGetDisciplinaryLog_List_storage.Clear();
		}
		/// <summary>
		/// Function to rebuild storage widget information from a list in the viewstate
		/// </summary>
		public void recListGetDisciplinaryLog_List_Rebuild(int startIndex, int lineCount) {
			if (ssGetDisciplinaryLog_ListList.Length != -1) {
				wtGetDisciplinaryLog_List_storage.Clear();
				for (int i=startIndex; i<ssGetDisciplinaryLog_ListList.Data.Count && i<startIndex+lineCount; i++) {
					recListGetDisciplinaryLog_List_Store(ssGetDisciplinaryLog_ListList.Data[i], wtGetDisciplinaryLog_List_storage.Count);
				}
			}
		}
		public void recListGetDisciplinaryLog_List_ListRefreshDataBind(object sender, EventArgs e) {
		}
		/// <summary>
		/// Function that returns the list of the wtGetDisciplinaryLog_List widget
		/// </summary>
		/// <returns>The list associated with the widget</returns>
		public RLUserStudentLogStudentLogTypeRecordList getWtGetDisciplinaryLog_ListList() {
			if (ssGetDisciplinaryLog_ListListDoDataBind) {
				recListGetDisciplinaryLog_List_onDataBinding(this, null);
			}

			return ssGetDisciplinaryLog_ListList;
		}
		/// <summary>
		/// wtWrapperList2 Functions
		/// </summary>
		public void cntWrapperList2_onDataBinding(object sender, System.EventArgs e) {
			cntWrapperList2_setInlineAttributes(sender, e);
		}
		public string cntWrapperList2_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = ((((BuiltInFunction.Mod(getWtGetDisciplinaryLog_ListList().CurrentRowNumber, 2M) ==0M)) ?("background-color:#F8F8F8;"):("")) + (((getWtGetDisciplinaryLog_ListList().CurrentRowNumber==0)) ?("border-top: solid 1px #dadada;"):("")));
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cntWrapperList2_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wtWrapperList2)
		/// </summary>
		/// <returns>The Visible State of wtWrapperList2</returns>
		public bool cntWrapperList2_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_Table108 Functions
		/// </summary>
		public void wt_Table108_onDataBinding(object sender, System.EventArgs e) {
			wt_Table108_setInlineAttributes(sender, e);
		}
		public string wt_Table108_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "margin:2px;padding: 4px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_TableCell127 Functions
		/// </summary>
		public void wt_TableCell127_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell127_setInlineAttributes(sender, e);
		}
		public string wt_TableCell127_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_TableCell161 Functions
		/// </summary>
		public void wt_TableCell161_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell161_setInlineAttributes(sender, e);
		}
		public string wt_TableCell161_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container59 Functions
		/// </summary>
		public void cnt_Container59_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container59_setInlineAttributes(sender, e);
		}
		public string cnt_Container59_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight:700;line-height:16px;font-size: 13px;color: #575555;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container59_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container59)
		/// </summary>
		/// <returns>The Visible State of wt_Container59</returns>
		public bool cnt_Container59_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression32 Functions
		/// </summary>
		public void expression_InlineExpression32_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression32_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression32_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "style";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = p5UvJSqgyE2eZG_gpzGPAA) Expression:
		///  GetDisciplinaryLog_List.List.Current.StudentLog.Description
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression32() {
			return getWtGetDisciplinaryLog_ListList().CurrentRec.ssENStudentLog.ssDescription;
		}
		/// <summary>
		/// wt_TableCell43 Functions
		/// </summary>
		public void wt_TableCell43_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell43_setInlineAttributes(sender, e);
		}
		public string wt_TableCell43_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "vertical-align: middle";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container33 Functions
		/// </summary>
		public void cnt_Container33_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container33_setInlineAttributes(sender, e);
		}
		public string cnt_Container33_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "font-weight:500;line-height:16px;font-size: 13px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container33_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container33)
		/// </summary>
		/// <returns>The Visible State of wt_Container33</returns>
		public bool cnt_Container33_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression171 Functions
		/// </summary>
		public void expression_InlineExpression171_onDataBinding(object sender, System.EventArgs e) {
			expression_InlineExpression171_setInlineAttributes(sender, e);
		}
		public string expression_InlineExpression171_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "color: #6F6A6A;font-size: 13px;font-weight:600;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Function to dump expression (Key = X1hy5mOpG0eY58LVVG8f7A) Expression:
		///  GetDisciplinaryLog_List.List.Current.StudentLog.UserDescription
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression171() {
			return getWtGetDisciplinaryLog_ListList().CurrentRec.ssENStudentLog.ssUserDescription;
		}
		/// <summary>
		/// wt_TableCell13 Functions
		/// </summary>
		public void wt_TableCell13_onDataBinding(object sender, System.EventArgs e) {
			wt_TableCell13_setInlineAttributes(sender, e);
		}
		public string wt_TableCell13_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "min-width: 200px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// wt_Container65 Functions
		/// </summary>
		public void cnt_Container65_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container65_setInlineAttributes(sender, e);
		}
		public string cnt_Container65_setInlineAttributes(object sender, System.EventArgs e) {
			{
				string newstyledef;
				string oldstyledef;
				newstyledef = "padding-right: 15px;float:right;color:#C2C2C2;font-size: 12px;margin-right: 5px;";
				oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
				if (oldstyledef != null) {
					if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
					((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
				} else {
					((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
				}
			}
			if (!cnt_Container65_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container65)
		/// </summary>
		/// <returns>The Visible State of wt_Container65</returns>
		public bool cnt_Container65_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression163 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = YApj4XwXQkSTjcJsnkkagw) Expression:
		///  GetDisciplinaryLog_List.List.Current.User.Name
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression163() {
			return getWtGetDisciplinaryLog_ListList().CurrentRec.ssENUser.ssName;
		}
		/// <summary>
		/// wt_Container68 Functions
		/// </summary>
		public void cnt_Container68_onDataBinding(object sender, System.EventArgs e) {
			cnt_Container68_setInlineAttributes(sender, e);
		}
		public string cnt_Container68_setInlineAttributes(object sender, System.EventArgs e) {
			if (!cnt_Container68_isVisible()) {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				{
					string newstyledef;
					string oldstyledef;
					newstyledef = stylevalue + ((stylevalue!=null && !stylevalue.TrimEnd().EndsWith(";")) ? ";": "") + "display:none";
					oldstyledef = ((IAttributeAccessor) sender).GetAttribute("style");
					if (oldstyledef != null) {
						if (!oldstyledef.TrimEnd().EndsWith(";")) newstyledef = ";" + newstyledef;
						((IAttributeAccessor) sender).SetAttribute("style", oldstyledef + newstyledef.ToString());
					} else {
						((IAttributeAccessor) sender).SetAttribute("style", newstyledef.ToString());
					}
				}
			} else {
				string stylevalue = ((IAttributeAccessor) sender).GetAttribute("style");
				if (stylevalue != null) {
					((IAttributeAccessor) sender).SetAttribute("style", stylevalue.Replace("display:none;", "").Replace("display:none", "").ToString());
				}
			}
			return "";
		}
		/// <summary>
		/// Gets the visible state of component (wt_Container68)
		/// </summary>
		/// <returns>The Visible State of wt_Container68</returns>
		public bool cnt_Container68_isVisible() {
			return true;
		}

		/// <summary>
		/// wt_InlineExpression55 Functions
		/// </summary>
		/// <summary>
		/// Function to dump expression (Key = 90Z1QZCoyUSHt6zgUz9tgA) Expression: " on "
		/// </summary>
		/// <returns>Returns the value of the Expression</returns>
		public string expression_InlineExpression55() {
			return " on ";
		}
		/// <summary>
		/// wt_WebBlockInstance67 Functions
		/// </summary>
		public void webBlck_WebBlockInstance67_onDataBinding(object sender, System.EventArgs e) {
			ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted widget = (ssCaseConferencing.Flows.FlowCommon.WBlkDateFormatted) sender;
			widget.inParamDate = Convert.ToDateTime(getWtGetDisciplinaryLog_ListList().CurrentRec.ssENStudentLog.ssDateTime.ToString("yyyy-M-d"));
		}


		public static class FuncCommandOnEditChangeNotify {
		}
		public static class FuncCommandOpenEditDisciplinary {
		}
		public static class FuncCommandOnRaisedDisciplinaryNotify {
		}
		public static class FuncCommandChangeDisciplinary {
		}
		public static class FuncCommandEdit {
		}
		public static class FuncCommandCancel {
		}
		public static class FuncCommandChangeSelectedDisciplinary {
		}
		public static class FuncCommandRaiseDisciplinary {
		}
		public static class FuncssPreparation {

			private static void datasetGetStudentLogsByStudentReferenceReadDB(ref RCUserStudentLogStudentLogTypeRecord rec, IDataReader r) {
				int index = 0;
				rec.ssENStudentLog.Read(r, ref index);
				rec.ssENStudentLogType.Read(r, ref index);
				rec.ssENUser.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetStudentLogsByStudentReference" of Action "Preparation"
			/// </summary>
			public static RLUserStudentLogStudentLogTypeRecordList datasetGetStudentLogsByStudentReference(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Multiple {GetDisciplinaryLog_List}
				// Refresh Query T95IFeaumkSIM8BsyPuz9A Iterations: Multiple {GetDisciplinaryLog_List}
				// Refresh Query mjNho9IaaEy0ky4laIuM3w Iterations: Multiple {GetDisciplinaryLog_List}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, NULL o2, ENStudentLog.[DATETIME] o3, NULL o4, ENStudentLog.[DESCRIPTION] o5, ENStudentLog.[USERDESCRIPTION] o6, NULL o7, NULL o8, NULL o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27, NULL o28, NULL o29, NULL o30, NULL o31, NULL o32, NULL o33, NULL o34, NULL o35, NULL o36, NULL o37, NULL o38, NULL o39, ENStudentLog.[DISCIPLINARYTYPE] o40, NULL o41, NULL o42, NULL o43, NULL o44, NULL o45, NULL o46, NULL o47, NULL o48, ENUser.[NAME] o49, NULL o50, NULL o51, NULL o52, NULL o53, NULL o54, NULL o55, NULL o56, NULL o57");
				fromBuilder.Append(" FROM (({StudentLog} ENStudentLog Left JOIN {StudentLogType} ENStudentLogType ON (ENStudentLog.[STUDENTLOGTYPE] = ENStudentLogType.[LOGTYPE]))  Left JOIN {User} ENUser ON (ENStudentLog.[EVENTBY] = ENUser.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudentLog.[STUDENTREFERENCE] = @qpstP) AND (ENStudentLog.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudentLog.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (ENStudentLog.[STUDENTLOGTYPE] = ");
				whereBuilder.Append("'" + ENStudentLogTypeEntity.GetRecordByKey(ObjectKey.Parse("aGSfFjqLSUS2nhXSX5OjdA")).ssLogType.Replace("'", "''") + "'");
				whereBuilder.Append(")");
				orderByBuilder.Append(" ORDER BY ENStudentLog.[DATETIME] DESC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLUserStudentLogStudentLogTypeRecordList outParamList = new RLUserStudentLogStudentLogTypeRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetStudentLogsByStudentReferenceReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[3];
				opt[0] = new BitArray(new bool[] {
					false, true, false, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					true, true, false, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					true, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLUserStudentLogStudentLogTypeRecordList _tmp = new RLUserStudentLogStudentLogTypeRecordList();
					_tmp.AlternateReadDBMethod = datasetGetStudentLogsByStudentReferenceReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsDisciplinary.Preparation.GetStudentLogsByStudentReference.List");
						outParamList = (RLUserStudentLogStudentLogTypeRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsDisciplinary.Preparation.GetStudentLogsByStudentReference.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLUserStudentLogStudentLogTypeRecordList _tmp = new RLUserStudentLogStudentLogTypeRecordList();
						_tmp.AlternateReadDBMethod = datasetGetStudentLogsByStudentReferenceReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsDisciplinary.Preparation.GetStudentLogsByStudentReference.List");
							outParamList = (RLUserStudentLogStudentLogTypeRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsDisciplinary.Preparation.GetStudentLogsByStudentReference.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}

			private static void datasetGetDisciplinariesReadDB(ref RCStudentUserBooleanDisciplinaryDisciplinaryTypeRecord rec, IDataReader r) {
				int index = 0;
				rec.ssSTBoolean.Read(r, ref index);
				rec.ssENDisciplinary.Read(r, ref index);
				rec.ssENDisciplinaryType.Read(r, ref index);
				rec.ssENStudent.Read(r, ref index);
				rec.ssENUser.Read(r, ref index);
			}
			/// <summary>
			/// Query Function "GetDisciplinaries" of Action "Preparation"
			/// </summary>
			public static RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList datasetGetDisciplinaries(HeContext heContext, int maxRecords, IterationMultiplicity multiplicity, out int outParamCount, string qpstP) {
				// Query Iterations: Multiple {Disciplinary_List}
				// Refresh Query V1amwrZifUKSlfDn4fe33Q Iterations: Multiple {Disciplinary_List}
				// Refresh Query andfz4zdpUaqXocyzA+n8w Iterations: Multiple {Disciplinary_List}
				// Uses binary data: False
				if (multiplicity == IterationMultiplicity.Never) {
					maxRecords = 1;
				}
				outParamCount = -1;
				bool useMainTransaction = (multiplicity != IterationMultiplicity.Single || (maxRecords > 0 && maxRecords <= 150));
				Transaction trans = useMainTransaction? DatabaseAccess.ForCurrentDatabase.GetRequestTransaction(): DatabaseAccess.ForCurrentDatabase.GetReadOnlyTransaction();
				Command sqlCmd = trans.CreateCommand();
				string sql = "";
				StringBuilder selectBuilder = new StringBuilder();
				StringBuilder fromBuilder = new StringBuilder();
				StringBuilder whereBuilder = new StringBuilder();
				StringBuilder orderByBuilder = new StringBuilder();
				StringBuilder groupByBuilder = new StringBuilder();
				StringBuilder havingBuilder = new StringBuilder();
				selectBuilder.Append("SELECT ");
				if (maxRecords > 0) {
					selectBuilder.Append("TOP (");
					selectBuilder.Append(maxRecords);
					selectBuilder.Append(") ");
				}
				selectBuilder.Append("NULL o1, ENDisciplinary.[ID] o2, ENDisciplinary.[STUDENTREFERENCE] o3, ENDisciplinary.[DISCIPLINARYTYPE] o4, ENDisciplinary.[DESCRIPTION] o5, ENDisciplinary.[CREATEDBY] o6, ENDisciplinary.[CREATEDAT] o7, NULL o8, ENDisciplinaryType.[LABEL] o9, NULL o10, NULL o11, NULL o12, NULL o13, NULL o14, NULL o15, NULL o16, NULL o17, NULL o18, NULL o19, NULL o20, NULL o21, NULL o22, NULL o23, NULL o24, NULL o25, NULL o26, NULL o27, NULL o28, NULL o29, NULL o30, NULL o31, NULL o32, NULL o33, NULL o34, NULL o35, NULL o36, NULL o37, NULL o38, NULL o39, ENUser.[NAME] o40, NULL o41, NULL o42, NULL o43, NULL o44, NULL o45, NULL o46, NULL o47, NULL o48");
				fromBuilder.Append(" FROM ((({User} ENUser Inner JOIN {Disciplinary} ENDisciplinary ON (ENDisciplinary.[CREATEDBY] = ENUser.[ID]))  Left JOIN {Student} ENStudent ON (ENDisciplinary.[STUDENTREFERENCE] = ENStudent.[STUDENTREFERENCE]))  Left JOIN {DisciplinaryType} ENDisciplinaryType ON (ENDisciplinary.[DISCIPLINARYTYPE] = ENDisciplinaryType.[ID])) ");
				whereBuilder.Append(" WHERE ");
				if (qpstP.Trim() != "") {
					whereBuilder.Append("((ENStudent.[STUDENTREFERENCE] = @qpstP) AND (ENStudent.[STUDENTREFERENCE] IS NOT NULL))");
					sqlCmd.CreateParameterWithoutReplacements("@qpstP", DbType.String, qpstP);
				} else {
					whereBuilder.Append("(ENStudent.[STUDENTREFERENCE] IS NULL)");
				}
				whereBuilder.Append(" AND (ENDisciplinary.[DISCIPLINARYTYPE] <> ");
				whereBuilder.Append("'" + ENDisciplinaryTypeEntity.GetRecordByKey(ObjectKey.Parse("bkL3peHjGky94lrDLRVvqA")).ssId.Replace("'", "''") + "'");
				whereBuilder.Append(")");
				orderByBuilder.Append(" ORDER BY ENDisciplinary.[DISCIPLINARYTYPE] ASC ");

				sql = selectBuilder.ToString() + fromBuilder.ToString() + whereBuilder.ToString() + groupByBuilder.ToString() + havingBuilder.ToString() + orderByBuilder.ToString();
				string advSql = sql;
				sql = AppUtils.Instance.ReplaceEntityReferences(heContext, advSql);
				sqlCmd.CommandText = sql;
				RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList outParamList = new RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList();
				if (multiplicity != IterationMultiplicity.Multiple) {
					outParamList.AlternateReadDBMethod = datasetGetDisciplinariesReadDB;
				}
				outParamList.Transaction = trans;
				BitArray[] opt = new BitArray[5];
				opt[0] = new BitArray(new bool[] {
					true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
				}
				);
				opt[1] = new BitArray(new bool[] {
					false, true, false, true, true, true, true, true, true, true, true
				}
				);
				opt[2] = new BitArray(new bool[] {
					false
				}
				);
				opt[3] = new BitArray(new bool[] {
					false, false, false, false, false, false
				}
				);
				opt[4] = new BitArray(new bool[] {
					true, false, true, true
				}
				);
				outParamList.AllOptimizedAttributes = opt;
				if (multiplicity == IterationMultiplicity.Multiple) {
					RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList _tmp = new RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList();
					_tmp.AlternateReadDBMethod = datasetGetDisciplinariesReadDB;
					_tmp.Transaction = trans;
					_tmp.AllOptimizedAttributes = opt;
					_tmp.MaxRecords = maxRecords;
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsDisciplinary.Preparation.GetDisciplinaries.List");
						outParamList = (RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList) _tmp.Duplicate();
						_tmp.CloseDataReader();
						return outParamList;
					} finally {
						_tmp.CloseDataReader();
					}
				} else if (multiplicity == IterationMultiplicity.Never) {
					try {
						DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsDisciplinary.Preparation.GetDisciplinaries.List");
						outParamList.MaxRecords = maxRecords;
						return outParamList;
					} finally {
						outParamList.CloseDataReader();
					}
				} else {
					if (maxRecords > 0 && maxRecords <= 150) {
						RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList _tmp = new RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList();
						_tmp.AlternateReadDBMethod = datasetGetDisciplinariesReadDB;
						_tmp.Transaction = trans;
						_tmp.AllOptimizedAttributes = opt;
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, _tmp, "Query LearnerView.LearnerDetailsDisciplinary.Preparation.GetDisciplinaries.List");
							outParamList = (RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList) _tmp.Duplicate();
							outParamList.AllOptimizedAttributes = opt;
							_tmp.CloseDataReader();
							return outParamList;
						} finally {
							_tmp.CloseDataReader();
						}
					} else {
						try {
							DatabaseAccess.ForCurrentDatabase.ExecuteQuery(sqlCmd, outParamList, "Query LearnerView.LearnerDetailsDisciplinary.Preparation.GetDisciplinaries.List");
							outParamList.MaxRecords = maxRecords;
							return outParamList;
						} finally {
							if (maxRecords == 1) {
								outParamList.CloseDataReader();
							}
						}
					}
				}
			}
		}



		protected static string GetString(string key, string defaultValue) {
			return Global.GetStringResource(key, defaultValue);
		}


		public LocalState PushStack() {
			return null;
		}

		public void doRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				Preparation(heContext);

				Title = "LearnerDetailsDisciplinary"; ssDisciplinary_ListListDoDataBind = true;
				ssGetDisciplinaryLog_ListListDoDataBind = true;
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerDetailsDisciplinary", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Screen", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}

		public void doAJAXRefreshScreen(HeContext heContext) {
			int oldCurrentESpaceId = heContext.CurrentESpaceId;
			try {
				heContext.CurrentESpaceId = ssCaseConferencing.Global.eSpaceId;
				// Perform the partial databind
				Page.DataBind();
				if (!heContext.AppInfo.SelectiveLoggingEnabled || heContext.AppInfo.Properties.AllowLogging) {
					ScreenLog.StaticWrite(heContext.StartInstant, (int) ((TimeSpan) (DateTime.Now-heContext.StartInstant)).TotalMilliseconds, "LearnerDetailsDisciplinary", heContext.Session.SessionID, heContext.AppInfo.eSpaceId, heContext.AppInfo.Tenant.Id, heContext.Session.UserId, (string) heContext.Session["MSISDN"], "WEB", "Ajax", Environment.MachineName, RuntimePlatformUtils.GetViewstateSize(), RuntimePlatformUtils.GetRetrievedSessionSize(), RuntimePlatformUtils.GetRetrievedSessionRequests());
				}
			} finally {
				heContext.CurrentESpaceId = oldCurrentESpaceId;
			}

		}



		/// <summary>
		/// Store widget and variable data in the viewstate
		/// </summary>
		protected override void StoreViewState() {
			base.StoreViewState();
			ViewStateAttributes.SetInViewState("resUserCheck_outParamPermissionType", resUserCheck_outParamPermissionType, 0);

			#region store queryResGetStudentLogsByStudentReference_outParamList.

			int tmpcurrentrownumberqueryResGetStudentLogsByStudentReference_outParamList = queryResGetStudentLogsByStudentReference_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetStudentLogsByStudentReference_outParamList = queryResGetStudentLogsByStudentReference_outParamList.Eof;
			ArrayList storequeryResGetStudentLogsByStudentReference_outParamList = new ArrayList();

			// Write the needed fields of queryResGetStudentLogsByStudentReference_outParamList to the storequeryResGetStudentLogsByStudentReference_outParamList
			if (!queryResGetStudentLogsByStudentReference_outParamList.Empty) {
				try {
					queryResGetStudentLogsByStudentReference_outParamList.StartIteration();

					while (!queryResGetStudentLogsByStudentReference_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList = new ArrayList();
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENUser.ssName == "" ?(object) null: queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENUser.ssName);
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENUser.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENUser.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssDateTime == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssDateTime);
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssDescription == "" ?(object) null: queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssDescription);
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssUserDescription == "" ?(object) null: queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ssUserDescription);
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetStudentLogsByStudentReference_outParamList.CurrentRec.ssENStudentLog.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
						}
						))));
						storequeryResGetStudentLogsByStudentReference_outParamList.Add(tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList);
						queryResGetStudentLogsByStudentReference_outParamList.Advance();
					}
				} finally {
					queryResGetStudentLogsByStudentReference_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetStudentLogsByStudentReference_outParamList", storequeryResGetStudentLogsByStudentReference_outParamList, null);

			#endregion


			#region store queryResGetStudentLogsByStudentReference_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetStudentLogsByStudentReference_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetStudentLogsByStudentReference_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetStudentLogsByStudentReference_outParamList_eof", tmpeofqueryResGetStudentLogsByStudentReference_outParamList, false);
			queryResGetStudentLogsByStudentReference_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentLogsByStudentReference_outParamList, tmpeofqueryResGetStudentLogsByStudentReference_outParamList);

			#endregion


			#region store queryResGetDisciplinaries_outParamList.

			int tmpcurrentrownumberqueryResGetDisciplinaries_outParamList = queryResGetDisciplinaries_outParamList.CurrentRowNumber;
			bool tmpeofqueryResGetDisciplinaries_outParamList = queryResGetDisciplinaries_outParamList.Eof;
			ArrayList storequeryResGetDisciplinaries_outParamList = new ArrayList();

			// Write the needed fields of queryResGetDisciplinaries_outParamList to the storequeryResGetDisciplinaries_outParamList
			if (!queryResGetDisciplinaries_outParamList.Empty) {
				try {
					queryResGetDisciplinaries_outParamList.StartIteration();

					while (!queryResGetDisciplinaries_outParamList.Eof) {
						ArrayList tmpFieldsqueryResGetDisciplinaries_outParamList = new ArrayList();
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(queryResGetDisciplinaries_outParamList.CurrentRec.ssENUser.ssName == "" ?(object) null: queryResGetDisciplinaries_outParamList.CurrentRec.ssENUser.ssName);
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetDisciplinaries_outParamList.CurrentRec.ssENUser.ChangedAttributes, new BitArray(new bool[] {
							false, false, true, false, false, false, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetDisciplinaries_outParamList.CurrentRec.ssENUser.OptimizedAttributes, new BitArray(new bool[] {
							true, true, false, true, true, true, true, true, true, true, true
						}
						))));
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(queryResGetDisciplinaries_outParamList.CurrentRec.ssSTBoolean.ssValue == false?(object) null: queryResGetDisciplinaries_outParamList.CurrentRec.ssSTBoolean.ssValue);
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.ssId == 0?(object) null: queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.ssId);
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.ssStudentReference == "" ?(object) null: queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.ssStudentReference);
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.ssDisciplinaryType == "" ?(object) null: queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.ssDisciplinaryType);
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.ssDescription == "" ?(object) null: queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.ssDescription);
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.ssCreatedBy == 0?(object) null: queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.ssCreatedBy);
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.ssCreatedAt == new DateTime(1900, 1, 1, 0, 0, 0) ?(object) null: queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.ssCreatedAt);
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.ChangedAttributes, new BitArray(new bool[] {
							true, true, true, true, true, true
						}
						))));
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinary.OptimizedAttributes, new BitArray(new bool[] {
							false, false, false, false, false, false
						}
						))));
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinaryType.ssLabel == "" ?(object) null: queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinaryType.ssLabel);
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeAnd(queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinaryType.ChangedAttributes, new BitArray(new bool[] {
							false, true, false, false
						}
						))));
						tmpFieldsqueryResGetDisciplinaries_outParamList.Add(BitArrayUtils.EncodeBitArray(BitArrayUtils.SafeOr(queryResGetDisciplinaries_outParamList.CurrentRec.ssENDisciplinaryType.OptimizedAttributes, new BitArray(new bool[] {
							true, false, true, true
						}
						))));
						storequeryResGetDisciplinaries_outParamList.Add(tmpFieldsqueryResGetDisciplinaries_outParamList);
						queryResGetDisciplinaries_outParamList.Advance();
					}
				} finally {
					queryResGetDisciplinaries_outParamList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("queryResGetDisciplinaries_outParamList", storequeryResGetDisciplinaries_outParamList, null);

			#endregion


			#region store queryResGetDisciplinaries_outParamList runtime properties state.

			ViewStateAttributes.SetInViewState("queryResGetDisciplinaries_outParamList_currentrownumber", tmpcurrentrownumberqueryResGetDisciplinaries_outParamList, 0);
			ViewStateAttributes.SetInViewState("queryResGetDisciplinaries_outParamList_eof", tmpeofqueryResGetDisciplinaries_outParamList, false);
			queryResGetDisciplinaries_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetDisciplinaries_outParamList, tmpeofqueryResGetDisciplinaries_outParamList);

			#endregion

			ViewStateAttributes.SetInViewState("inParamStudentReference", inParamStudentReference, "");
			ViewStateAttributes.SetInViewState("inParamSessionID", inParamSessionID, 0);
			ViewStateAttributes.SetInViewState("inParamCourseCode", inParamCourseCode, "");
			ViewStateAttributes.SetInViewState("inParamFromLearnerList", inParamFromLearnerList, false);
			ViewStateAttributes.SetInViewState("varLcCurrentSelectDisciplinary", varLcCurrentSelectDisciplinary, "");
			ViewStateAttributes.SetInViewState("varLcVisible", varLcVisible, false);
			ViewStateAttributes.SetInViewState("varLcDescriptionDisciplinary", varLcDescriptionDisciplinary, "");
			ViewStateAttributes.SetInViewState("varLcNewDisciplinaryStatus", varLcNewDisciplinaryStatus, "");
			ViewStateAttributes.SetInViewState("varLcOldDisciplinaryStatus", varLcOldDisciplinaryStatus, "");

			#region store varLcDocumentsIDList.

			int tmpcurrentrownumbervarLcDocumentsIDList = varLcDocumentsIDList.CurrentRowNumber;
			bool tmpeofvarLcDocumentsIDList = varLcDocumentsIDList.Eof;
			ArrayList storevarLcDocumentsIDList = new ArrayList();

			// Write the needed fields of varLcDocumentsIDList to the storevarLcDocumentsIDList
			if (!varLcDocumentsIDList.Empty) {
				try {
					varLcDocumentsIDList.StartIteration();

					while (!varLcDocumentsIDList.Eof) {
						ArrayList tmpFieldsvarLcDocumentsIDList = new ArrayList();
						tmpFieldsvarLcDocumentsIDList.Add(varLcDocumentsIDList.CurrentRec.ssSTInt.ssValue == 0?(object) null: varLcDocumentsIDList.CurrentRec.ssSTInt.ssValue);
						storevarLcDocumentsIDList.Add(tmpFieldsvarLcDocumentsIDList);
						varLcDocumentsIDList.Advance();
					}
				} finally {
					varLcDocumentsIDList.EndIteration();
				}
			}

			ViewStateAttributes.SetInViewState("varLcDocumentsIDList", storevarLcDocumentsIDList, null);

			#endregion


			#region store varLcDocumentsIDList runtime properties state.

			ViewStateAttributes.SetInViewState("varLcDocumentsIDList_currentrownumber", tmpcurrentrownumbervarLcDocumentsIDList, 0);
			ViewStateAttributes.SetInViewState("varLcDocumentsIDList_eof", tmpeofvarLcDocumentsIDList, false);
			varLcDocumentsIDList.RestoreRecordListState(tmpcurrentrownumbervarLcDocumentsIDList, tmpeofvarLcDocumentsIDList);

			#endregion

			ViewStateAttributes.SetInViewState("varLcRaisedDisciplinary_ssENDisciplinary_ssId", varLcRaisedDisciplinary.ssENDisciplinary.ssId, 0);
			ViewStateAttributes.SetInViewState("varLcRaisedDisciplinary_ssENDisciplinary_ssStudentReference", varLcRaisedDisciplinary.ssENDisciplinary.ssStudentReference, "");
			ViewStateAttributes.SetInViewState("varLcRaisedDisciplinary_ssENDisciplinary_ssDisciplinaryType", varLcRaisedDisciplinary.ssENDisciplinary.ssDisciplinaryType, "");
			ViewStateAttributes.SetInViewState("varLcRaisedDisciplinary_ssENDisciplinary_ssDescription", varLcRaisedDisciplinary.ssENDisciplinary.ssDescription, "");
			ViewStateAttributes.SetInViewState("varLcRaisedDisciplinary_ssENDisciplinary_ssCreatedBy", varLcRaisedDisciplinary.ssENDisciplinary.ssCreatedBy, 0);
			ViewStateAttributes.SetInViewState("varLcRaisedDisciplinary_ssENDisciplinary_ssCreatedAt", varLcRaisedDisciplinary.ssENDisciplinary.ssCreatedAt, new DateTime(1900, 1, 1, 0, 0, 0));
			ViewStateAttributes.SetInViewState("varLcRaisedDisciplinary_ssENDisciplinary_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(varLcRaisedDisciplinary.ssENDisciplinary.ChangedAttributes, new BitArray(new bool[] {
				true, true, true, true, true, true
			}
			)))), null);
			ViewStateAttributes.SetInViewState("varLcRaisedDisciplinary_ssENDisciplinary_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(varLcRaisedDisciplinary.ssENDisciplinary.OptimizedAttributes, new BitArray(new bool[] {
				false, false, false, false, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("varLcDisciplinaryDocument_ssENDisciplinaryDocuments_ssId", varLcDisciplinaryDocument.ssENDisciplinaryDocuments.ssId, 0);
			ViewStateAttributes.SetInViewState("varLcDisciplinaryDocument_ssENDisciplinaryDocuments_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(varLcDisciplinaryDocument.ssENDisciplinaryDocuments.ChangedAttributes, new BitArray(new bool[] {
				true, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("varLcDisciplinaryDocument_ssENDisciplinaryDocuments_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(varLcDisciplinaryDocument.ssENDisciplinaryDocuments.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true
			}
			)))), null);
			ViewStateAttributes.SetInViewState("wtDisciplinaryInput_Mandatory", ((IWidgetRuntimeProperties) this.FindControl("wtDisciplinaryInput")).Mandatory, false);
			ViewStateAttributes.SetInViewState("wtEditRecordDisciplinary_record_ssENDisciplinary_ssId", ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssId, 0);
			ViewStateAttributes.SetInViewState("wtEditRecordDisciplinary_record_ssENDisciplinary_ChangedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeAnd(ssEditRecordDisciplinaryRecord.ssENDisciplinary.ChangedAttributes, new BitArray(new bool[] {
				true, false, false, false, false, false
			}
			)))), null);
			ViewStateAttributes.SetInViewState("wtEditRecordDisciplinary_record_ssENDisciplinary_OptimizedAttributes", BitArrayUtils.EncodeBitArray((BitArray) (BitArrayUtils.SafeOr(ssEditRecordDisciplinaryRecord.ssENDisciplinary.OptimizedAttributes, new BitArray(new bool[] {
				false, true, true, true, true, true
			}
			)))), null);
			if (IsAjaxRequest) {
				recListDisciplinary_List_Rebuild((ssDisciplinary_ListListDataBound ? wtDisciplinary_List.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtDisciplinary_List.LineCount);
			}
			ViewStateAttributes.SetInViewState("wtDisciplinary_List_list", wtDisciplinary_List_storage, null);
			if (IsAjaxRequest) {
				recListGetDisciplinaryLog_List_Rebuild((ssGetDisciplinaryLog_ListListDataBound ? wtGetDisciplinaryLog_List.StartIndexLastEvaluation.GetValueOrDefault(): 0), wtGetDisciplinaryLog_List.LineCount);
			}
		}
		/// <summary>
		/// Restore widget and variable data from the viewstate
		/// </summary>
		protected override void FetchViewState() {
			base.FetchViewState();
			try {
				resUserCheck_outParamPermissionType = (int) ViewStateAttributes.GetFromViewState("resUserCheck_outParamPermissionType", 0);

				#region fetch queryResGetStudentLogsByStudentReference_outParamList.

				// Read the needed fields of queryResGetStudentLogsByStudentReference_outParamList from storequeryResGetStudentLogsByStudentReference_outParamList
				queryResGetStudentLogsByStudentReference_outParamList = new RLUserStudentLogStudentLogTypeRecordList();
				ArrayList storequeryResGetStudentLogsByStudentReference_outParamList;
				storequeryResGetStudentLogsByStudentReference_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetStudentLogsByStudentReference_outParamList", null);
				if (storequeryResGetStudentLogsByStudentReference_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList in storequeryResGetStudentLogsByStudentReference_outParamList) {
						if (tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList != null) {
							// Aux current record variable
							RCUserStudentLogStudentLogTypeRecord tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList = new RCUserStudentLogStudentLogTypeRecord(null);
							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENUser.ssName = (string) (tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[0] == null ? "": tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENUser.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENUser.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENStudentLog.ssDateTime = (DateTime) (tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[3] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[3]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENStudentLog.ssDescription = (string) (tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[4] == null ? "": tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[4]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENStudentLog.ssUserDescription = (string) (tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[5] == null ? "": tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[5]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENStudentLog.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[6]);

							tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList.ssENStudentLog.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetStudentLogsByStudentReference_outParamList[7]);

							queryResGetStudentLogsByStudentReference_outParamList.Append(tmpAuxCurrentRecordqueryResGetStudentLogsByStudentReference_outParamList);
						}
					}
				}
				queryResGetStudentLogsByStudentReference_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetStudentLogsByStudentReference_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetStudentLogsByStudentReference_outParamList;
				tmpcurrentrownumberqueryResGetStudentLogsByStudentReference_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetStudentLogsByStudentReference_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetStudentLogsByStudentReference_outParamList;
				tmpeofqueryResGetStudentLogsByStudentReference_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetStudentLogsByStudentReference_outParamList_eof", false);
				queryResGetStudentLogsByStudentReference_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetStudentLogsByStudentReference_outParamList, tmpeofqueryResGetStudentLogsByStudentReference_outParamList);

				#endregion


				#region fetch queryResGetDisciplinaries_outParamList.

				// Read the needed fields of queryResGetDisciplinaries_outParamList from storequeryResGetDisciplinaries_outParamList
				queryResGetDisciplinaries_outParamList = new RLStudentUserBooleanDisciplinaryDisciplinaryTypeRecordList();
				ArrayList storequeryResGetDisciplinaries_outParamList;
				storequeryResGetDisciplinaries_outParamList = (ArrayList) ViewStateAttributes.GetFromViewState("queryResGetDisciplinaries_outParamList", null);
				if (storequeryResGetDisciplinaries_outParamList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsqueryResGetDisciplinaries_outParamList in storequeryResGetDisciplinaries_outParamList) {
						if (tmpFieldsqueryResGetDisciplinaries_outParamList != null) {
							// Aux current record variable
							RCStudentUserBooleanDisciplinaryDisciplinaryTypeRecord tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList = new RCStudentUserBooleanDisciplinaryDisciplinaryTypeRecord(null);
							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENUser.ssName = (string) (tmpFieldsqueryResGetDisciplinaries_outParamList[0] == null ? "": tmpFieldsqueryResGetDisciplinaries_outParamList[0]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENUser.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetDisciplinaries_outParamList[1]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENUser.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetDisciplinaries_outParamList[2]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssSTBoolean.ssValue = (bool) (tmpFieldsqueryResGetDisciplinaries_outParamList[3] == null ? false: tmpFieldsqueryResGetDisciplinaries_outParamList[3]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENDisciplinary.ssId = (int) (tmpFieldsqueryResGetDisciplinaries_outParamList[4] == null ? 0: tmpFieldsqueryResGetDisciplinaries_outParamList[4]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENDisciplinary.ssStudentReference = (string) (tmpFieldsqueryResGetDisciplinaries_outParamList[5] == null ? "": tmpFieldsqueryResGetDisciplinaries_outParamList[5]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENDisciplinary.ssDisciplinaryType = (string) (tmpFieldsqueryResGetDisciplinaries_outParamList[6] == null ? "": tmpFieldsqueryResGetDisciplinaries_outParamList[6]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENDisciplinary.ssDescription = (string) (tmpFieldsqueryResGetDisciplinaries_outParamList[7] == null ? "": tmpFieldsqueryResGetDisciplinaries_outParamList[7]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENDisciplinary.ssCreatedBy = (int) (tmpFieldsqueryResGetDisciplinaries_outParamList[8] == null ? 0: tmpFieldsqueryResGetDisciplinaries_outParamList[8]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENDisciplinary.ssCreatedAt = (DateTime) (tmpFieldsqueryResGetDisciplinaries_outParamList[9] == null ? new DateTime(1900, 1, 1, 0, 0, 0): tmpFieldsqueryResGetDisciplinaries_outParamList[9]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENDisciplinary.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetDisciplinaries_outParamList[10]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENDisciplinary.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetDisciplinaries_outParamList[11]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENDisciplinaryType.ssLabel = (string) (tmpFieldsqueryResGetDisciplinaries_outParamList[12] == null ? "": tmpFieldsqueryResGetDisciplinaries_outParamList[12]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENDisciplinaryType.ChangedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetDisciplinaries_outParamList[13]);

							tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList.ssENDisciplinaryType.OptimizedAttributes = BitArrayUtils.DecodeBitArray(tmpFieldsqueryResGetDisciplinaries_outParamList[14]);

							queryResGetDisciplinaries_outParamList.Append(tmpAuxCurrentRecordqueryResGetDisciplinaries_outParamList);
						}
					}
				}
				queryResGetDisciplinaries_outParamList.CurrentRowNumber = -1;
				#endregion


				#region fetch queryResGetDisciplinaries_outParamList runtime properties state.

				int tmpcurrentrownumberqueryResGetDisciplinaries_outParamList;
				tmpcurrentrownumberqueryResGetDisciplinaries_outParamList = (int) ViewStateAttributes.GetFromViewState("queryResGetDisciplinaries_outParamList_currentrownumber", 0);
				bool tmpeofqueryResGetDisciplinaries_outParamList;
				tmpeofqueryResGetDisciplinaries_outParamList = (bool) ViewStateAttributes.GetFromViewState("queryResGetDisciplinaries_outParamList_eof", false);
				queryResGetDisciplinaries_outParamList.RestoreRecordListState(tmpcurrentrownumberqueryResGetDisciplinaries_outParamList, tmpeofqueryResGetDisciplinaries_outParamList);

				#endregion

				inParamStudentReference = (string) ViewStateAttributes.GetFromViewState("inParamStudentReference", "");
				inParamSessionID = (int) ViewStateAttributes.GetFromViewState("inParamSessionID", 0);
				inParamCourseCode = (string) ViewStateAttributes.GetFromViewState("inParamCourseCode", "");
				inParamFromLearnerList = (bool) ViewStateAttributes.GetFromViewState("inParamFromLearnerList", false);
				varLcCurrentSelectDisciplinary = (string) ViewStateAttributes.GetFromViewState("varLcCurrentSelectDisciplinary", "");
				varLcVisible = (bool) ViewStateAttributes.GetFromViewState("varLcVisible", false);
				varLcDescriptionDisciplinary = (string) ViewStateAttributes.GetFromViewState("varLcDescriptionDisciplinary", "");
				varLcNewDisciplinaryStatus = (string) ViewStateAttributes.GetFromViewState("varLcNewDisciplinaryStatus", "");
				varLcOldDisciplinaryStatus = (string) ViewStateAttributes.GetFromViewState("varLcOldDisciplinaryStatus", "");

				#region fetch varLcDocumentsIDList.

				// Read the needed fields of varLcDocumentsIDList from storevarLcDocumentsIDList
				varLcDocumentsIDList = new RLIntRecordList();
				ArrayList storevarLcDocumentsIDList;
				storevarLcDocumentsIDList = (ArrayList) ViewStateAttributes.GetFromViewState("varLcDocumentsIDList", null);
				if (storevarLcDocumentsIDList == null) {
					return;
				} else {

					foreach(ArrayList tmpFieldsvarLcDocumentsIDList in storevarLcDocumentsIDList) {
						if (tmpFieldsvarLcDocumentsIDList != null) {
							// Aux current record variable
							RCIntRecord tmpAuxCurrentRecordvarLcDocumentsIDList = new RCIntRecord(null);
							tmpAuxCurrentRecordvarLcDocumentsIDList.ssSTInt.ssValue = (int) (tmpFieldsvarLcDocumentsIDList[0] == null ? 0: tmpFieldsvarLcDocumentsIDList[0]);

							varLcDocumentsIDList.Append(tmpAuxCurrentRecordvarLcDocumentsIDList);
						}
					}
				}
				varLcDocumentsIDList.CurrentRowNumber = -1;
				#endregion


				#region fetch varLcDocumentsIDList runtime properties state.

				int tmpcurrentrownumbervarLcDocumentsIDList;
				tmpcurrentrownumbervarLcDocumentsIDList = (int) ViewStateAttributes.GetFromViewState("varLcDocumentsIDList_currentrownumber", 0);
				bool tmpeofvarLcDocumentsIDList;
				tmpeofvarLcDocumentsIDList = (bool) ViewStateAttributes.GetFromViewState("varLcDocumentsIDList_eof", false);
				varLcDocumentsIDList.RestoreRecordListState(tmpcurrentrownumbervarLcDocumentsIDList, tmpeofvarLcDocumentsIDList);

				#endregion

				varLcRaisedDisciplinary.ssENDisciplinary.ssId = (int) ViewStateAttributes.GetFromViewState("varLcRaisedDisciplinary_ssENDisciplinary_ssId", 0);
				varLcRaisedDisciplinary.ssENDisciplinary.ssStudentReference = (string) ViewStateAttributes.GetFromViewState("varLcRaisedDisciplinary_ssENDisciplinary_ssStudentReference", "");
				varLcRaisedDisciplinary.ssENDisciplinary.ssDisciplinaryType = (string) ViewStateAttributes.GetFromViewState("varLcRaisedDisciplinary_ssENDisciplinary_ssDisciplinaryType", "");
				varLcRaisedDisciplinary.ssENDisciplinary.ssDescription = (string) ViewStateAttributes.GetFromViewState("varLcRaisedDisciplinary_ssENDisciplinary_ssDescription", "");
				varLcRaisedDisciplinary.ssENDisciplinary.ssCreatedBy = (int) ViewStateAttributes.GetFromViewState("varLcRaisedDisciplinary_ssENDisciplinary_ssCreatedBy", 0);
				varLcRaisedDisciplinary.ssENDisciplinary.ssCreatedAt = (DateTime) ViewStateAttributes.GetFromViewState("varLcRaisedDisciplinary_ssENDisciplinary_ssCreatedAt", new DateTime(1900, 1, 1, 0, 0, 0));
				varLcRaisedDisciplinary.ssENDisciplinary.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("varLcRaisedDisciplinary_ssENDisciplinary_ChangedAttributes", null));
				varLcRaisedDisciplinary.ssENDisciplinary.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("varLcRaisedDisciplinary_ssENDisciplinary_OptimizedAttributes", null));
				varLcDisciplinaryDocument.ssENDisciplinaryDocuments.ssId = (int) ViewStateAttributes.GetFromViewState("varLcDisciplinaryDocument_ssENDisciplinaryDocuments_ssId", 0);
				varLcDisciplinaryDocument.ssENDisciplinaryDocuments.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("varLcDisciplinaryDocument_ssENDisciplinaryDocuments_ChangedAttributes", null));
				varLcDisciplinaryDocument.ssENDisciplinaryDocuments.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("varLcDisciplinaryDocument_ssENDisciplinaryDocuments_OptimizedAttributes", null));
				((IWidgetRuntimeProperties) this.FindControl("wtDisciplinaryInput")).Mandatory = (bool) ViewStateAttributes.GetFromViewState("wtDisciplinaryInput_Mandatory", false);
				ssEditRecordDisciplinaryRecord.ssENDisciplinary.ssId = (int) ViewStateAttributes.GetFromViewState("wtEditRecordDisciplinary_record_ssENDisciplinary_ssId", 0);
				ssEditRecordDisciplinaryRecord.ssENDisciplinary.ChangedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecordDisciplinary_record_ssENDisciplinary_ChangedAttributes", null));
				ssEditRecordDisciplinaryRecord.ssENDisciplinary.OptimizedAttributes = BitArrayUtils.DecodeBitArray(ViewStateAttributes.GetFromViewState("wtEditRecordDisciplinary_record_ssENDisciplinary_OptimizedAttributes", null));
				recListDisciplinary_List_Restore();
				recListGetDisciplinaryLog_List_Restore();
			} catch (Exception e) {
				throw new Exception("Error Deserializing ViewState", e); 
			}
		}


		/// <summary>
		/// This method is called when there is a submit. So it should validate input values and call the
		///  correct system event user action if needed
		/// </summary>
		public void OnSubmit(string parentEditRecord, bool validate) {
			ValidationUtils.ValidateInput(this, "wtDisciplinaryInput", parentEditRecord, ValidationUtils.validateTrue, validate);
			ValidationUtils.ValidateInput(FindControl("wtDisciplinary_List"), "wtDisciplinaryEditInput", parentEditRecord, ValidationUtils.validateTrue, validate);
			CallOnSubmitOnChildren(Controls, parentEditRecord, validate);
		}


		public void CallOnSubmitOnChildren(ControlCollection children, string parentEditRecord, bool validate) {
			foreach(Control ctrl in children) {
				IWebScreen screen = ctrl as IWebScreen;

				if (screen != null) {
					screen.OnSubmit(parentEditRecord, validate);
				} else {
					CallOnSubmitOnChildren(ctrl.Controls, parentEditRecord, validate);
				}
			}
		}

		public String BreakpointHook(String breakpointId) {
			return "";
		}

		public String BreakpointHook(String breakpointId, bool isExpressionlessWidget) {
			return "";
		}

		public String PageStartHook() {
			Page_Load(null, null); this.Load -= new System.EventHandler(this.Page_Load);
			return "";
		}
		public String PageEndHook() {
			return "";
		}


		public override void DataBind() {
			base.DataBind();
			StoreViewState();
			OutSystems.HubEdition.WebWidgets.Utils.addValidationScriptsToPage(this);
		}



	}




}
